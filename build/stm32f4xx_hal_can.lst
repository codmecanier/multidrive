ARM GAS  /tmp/ccpEJ30p.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_hal_can.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_CAN_MspInit,"ax",%progbits
  18              		.align	1
  19              		.weak	HAL_CAN_MspInit
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	HAL_CAN_MspInit:
  27              	.LVL0:
  28              	.LFB241:
  29              		.file 1 "stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c"
   1:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** /**
   2:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   ******************************************************************************
   3:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @file    stm32f4xx_hal_can.c
   4:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @author  MCD Application Team
   5:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @brief   CAN HAL module driver.
   6:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *          This file provides firmware functions to manage the following
   7:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *          functionalities of the Controller Area Network (CAN) peripheral:
   8:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *           + Initialization and de-initialization functions
   9:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *           + Configuration functions
  10:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *           + Control functions
  11:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *           + Interrupts management
  12:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *           + Callbacks functions
  13:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *           + Peripheral State and Error functions
  14:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *
  15:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   ******************************************************************************
  16:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @attention
  17:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *
  18:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * Copyright (c) 2016 STMicroelectronics.
  19:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * All rights reserved.
  20:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *
  21:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * This software is licensed under terms that can be found in the LICENSE file
  22:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * in the root directory of this software component.
  23:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  24:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *
  25:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   ******************************************************************************
  26:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   @verbatim
  27:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   ==============================================================================
  28:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****                         ##### How to use this driver #####
  29:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   ==============================================================================
ARM GAS  /tmp/ccpEJ30p.s 			page 2


  30:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     [..]
  31:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       (#) Initialize the CAN low level resources by implementing the
  32:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****           HAL_CAN_MspInit():
  33:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****          (++) Enable the CAN interface clock using __HAL_RCC_CANx_CLK_ENABLE()
  34:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****          (++) Configure CAN pins
  35:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****              (+++) Enable the clock for the CAN GPIOs
  36:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****              (+++) Configure CAN pins as alternate function
  37:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****          (++) In case of using interrupts (e.g. HAL_CAN_ActivateNotification())
  38:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****              (+++) Configure the CAN interrupt priority using
  39:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****                    HAL_NVIC_SetPriority()
  40:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****              (+++) Enable the CAN IRQ handler using HAL_NVIC_EnableIRQ()
  41:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****              (+++) In CAN IRQ handler, call HAL_CAN_IRQHandler()
  42:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
  43:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       (#) Initialize the CAN peripheral using HAL_CAN_Init() function. This
  44:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****           function resorts to HAL_CAN_MspInit() for low-level initialization.
  45:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
  46:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       (#) Configure the reception filters using the following configuration
  47:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****           functions:
  48:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****             (++) HAL_CAN_ConfigFilter()
  49:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
  50:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       (#) Start the CAN module using HAL_CAN_Start() function. At this level
  51:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****           the node is active on the bus: it receive messages, and can send
  52:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****           messages.
  53:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
  54:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       (#) To manage messages transmission, the following Tx control functions
  55:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****           can be used:
  56:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****             (++) HAL_CAN_AddTxMessage() to request transmission of a new
  57:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****                  message.
  58:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****             (++) HAL_CAN_AbortTxRequest() to abort transmission of a pending
  59:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****                  message.
  60:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****             (++) HAL_CAN_GetTxMailboxesFreeLevel() to get the number of free Tx
  61:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****                  mailboxes.
  62:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****             (++) HAL_CAN_IsTxMessagePending() to check if a message is pending
  63:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****                  in a Tx mailbox.
  64:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****             (++) HAL_CAN_GetTxTimestamp() to get the timestamp of Tx message
  65:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****                  sent, if time triggered communication mode is enabled.
  66:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
  67:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       (#) When a message is received into the CAN Rx FIFOs, it can be retrieved
  68:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****           using the HAL_CAN_GetRxMessage() function. The function
  69:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****           HAL_CAN_GetRxFifoFillLevel() allows to know how many Rx message are
  70:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****           stored in the Rx Fifo.
  71:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
  72:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       (#) Calling the HAL_CAN_Stop() function stops the CAN module.
  73:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
  74:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       (#) The deinitialization is achieved with HAL_CAN_DeInit() function.
  75:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
  76:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
  77:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       *** Polling mode operation ***
  78:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       ==============================
  79:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     [..]
  80:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       (#) Reception:
  81:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****             (++) Monitor reception of message using HAL_CAN_GetRxFifoFillLevel()
  82:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****                  until at least one message is received.
  83:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****             (++) Then get the message using HAL_CAN_GetRxMessage().
  84:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
  85:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       (#) Transmission:
  86:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****             (++) Monitor the Tx mailboxes availability until at least one Tx
ARM GAS  /tmp/ccpEJ30p.s 			page 3


  87:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****                  mailbox is free, using HAL_CAN_GetTxMailboxesFreeLevel().
  88:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****             (++) Then request transmission of a message using
  89:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****                  HAL_CAN_AddTxMessage().
  90:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
  91:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
  92:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       *** Interrupt mode operation ***
  93:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       ================================
  94:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     [..]
  95:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       (#) Notifications are activated using HAL_CAN_ActivateNotification()
  96:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****           function. Then, the process can be controlled through the
  97:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****           available user callbacks: HAL_CAN_xxxCallback(), using same APIs
  98:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****           HAL_CAN_GetRxMessage() and HAL_CAN_AddTxMessage().
  99:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 100:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       (#) Notifications can be deactivated using
 101:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****           HAL_CAN_DeactivateNotification() function.
 102:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 103:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       (#) Special care should be taken for CAN_IT_RX_FIFO0_MSG_PENDING and
 104:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****           CAN_IT_RX_FIFO1_MSG_PENDING notifications. These notifications trig
 105:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****           the callbacks HAL_CAN_RxFIFO0MsgPendingCallback() and
 106:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****           HAL_CAN_RxFIFO1MsgPendingCallback(). User has two possible options
 107:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****           here.
 108:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****             (++) Directly get the Rx message in the callback, using
 109:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****                  HAL_CAN_GetRxMessage().
 110:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****             (++) Or deactivate the notification in the callback without
 111:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****                  getting the Rx message. The Rx message can then be got later
 112:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****                  using HAL_CAN_GetRxMessage(). Once the Rx message have been
 113:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****                  read, the notification can be activated again.
 114:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 115:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 116:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       *** Sleep mode ***
 117:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       ==================
 118:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     [..]
 119:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       (#) The CAN peripheral can be put in sleep mode (low power), using
 120:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****           HAL_CAN_RequestSleep(). The sleep mode will be entered as soon as the
 121:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****           current CAN activity (transmission or reception of a CAN frame) will
 122:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****           be completed.
 123:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 124:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       (#) A notification can be activated to be informed when the sleep mode
 125:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****           will be entered.
 126:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 127:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       (#) It can be checked if the sleep mode is entered using
 128:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****           HAL_CAN_IsSleepActive().
 129:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****           Note that the CAN state (accessible from the API HAL_CAN_GetState())
 130:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****           is HAL_CAN_STATE_SLEEP_PENDING as soon as the sleep mode request is
 131:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****           submitted (the sleep mode is not yet entered), and become
 132:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****           HAL_CAN_STATE_SLEEP_ACTIVE when the sleep mode is effective.
 133:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 134:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       (#) The wake-up from sleep mode can be triggered by two ways:
 135:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****             (++) Using HAL_CAN_WakeUp(). When returning from this function,
 136:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****                  the sleep mode is exited (if return status is HAL_OK).
 137:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****             (++) When a start of Rx CAN frame is detected by the CAN peripheral,
 138:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****                  if automatic wake up mode is enabled.
 139:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 140:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *** Callback registration ***
 141:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   =============================================
 142:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 143:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   The compilation define  USE_HAL_CAN_REGISTER_CALLBACKS when set to 1
ARM GAS  /tmp/ccpEJ30p.s 			page 4


 144:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   allows the user to configure dynamically the driver callbacks.
 145:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   Use Function HAL_CAN_RegisterCallback() to register an interrupt callback.
 146:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 147:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   Function HAL_CAN_RegisterCallback() allows to register following callbacks:
 148:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     (+) TxMailbox0CompleteCallback   : Tx Mailbox 0 Complete Callback.
 149:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     (+) TxMailbox1CompleteCallback   : Tx Mailbox 1 Complete Callback.
 150:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     (+) TxMailbox2CompleteCallback   : Tx Mailbox 2 Complete Callback.
 151:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     (+) TxMailbox0AbortCallback      : Tx Mailbox 0 Abort Callback.
 152:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     (+) TxMailbox1AbortCallback      : Tx Mailbox 1 Abort Callback.
 153:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     (+) TxMailbox2AbortCallback      : Tx Mailbox 2 Abort Callback.
 154:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     (+) RxFifo0MsgPendingCallback    : Rx Fifo 0 Message Pending Callback.
 155:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     (+) RxFifo0FullCallback          : Rx Fifo 0 Full Callback.
 156:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     (+) RxFifo1MsgPendingCallback    : Rx Fifo 1 Message Pending Callback.
 157:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     (+) RxFifo1FullCallback          : Rx Fifo 1 Full Callback.
 158:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     (+) SleepCallback                : Sleep Callback.
 159:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     (+) WakeUpFromRxMsgCallback      : Wake Up From Rx Message Callback.
 160:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     (+) ErrorCallback                : Error Callback.
 161:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     (+) MspInitCallback              : CAN MspInit.
 162:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     (+) MspDeInitCallback            : CAN MspDeInit.
 163:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   This function takes as parameters the HAL peripheral handle, the Callback ID
 164:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   and a pointer to the user callback function.
 165:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 166:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   Use function HAL_CAN_UnRegisterCallback() to reset a callback to the default
 167:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   weak function.
 168:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_UnRegisterCallback takes as parameters the HAL peripheral handle,
 169:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   and the Callback ID.
 170:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   This function allows to reset following callbacks:
 171:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     (+) TxMailbox0CompleteCallback   : Tx Mailbox 0 Complete Callback.
 172:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     (+) TxMailbox1CompleteCallback   : Tx Mailbox 1 Complete Callback.
 173:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     (+) TxMailbox2CompleteCallback   : Tx Mailbox 2 Complete Callback.
 174:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     (+) TxMailbox0AbortCallback      : Tx Mailbox 0 Abort Callback.
 175:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     (+) TxMailbox1AbortCallback      : Tx Mailbox 1 Abort Callback.
 176:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     (+) TxMailbox2AbortCallback      : Tx Mailbox 2 Abort Callback.
 177:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     (+) RxFifo0MsgPendingCallback    : Rx Fifo 0 Message Pending Callback.
 178:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     (+) RxFifo0FullCallback          : Rx Fifo 0 Full Callback.
 179:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     (+) RxFifo1MsgPendingCallback    : Rx Fifo 1 Message Pending Callback.
 180:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     (+) RxFifo1FullCallback          : Rx Fifo 1 Full Callback.
 181:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     (+) SleepCallback                : Sleep Callback.
 182:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     (+) WakeUpFromRxMsgCallback      : Wake Up From Rx Message Callback.
 183:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     (+) ErrorCallback                : Error Callback.
 184:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     (+) MspInitCallback              : CAN MspInit.
 185:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     (+) MspDeInitCallback            : CAN MspDeInit.
 186:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 187:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   By default, after the HAL_CAN_Init() and when the state is HAL_CAN_STATE_RESET,
 188:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   all callbacks are set to the corresponding weak functions:
 189:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   example HAL_CAN_ErrorCallback().
 190:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   Exception done for MspInit and MspDeInit functions that are
 191:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   reset to the legacy weak function in the HAL_CAN_Init()/ HAL_CAN_DeInit() only when
 192:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   these callbacks are null (not registered beforehand).
 193:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   if not, MspInit or MspDeInit are not null, the HAL_CAN_Init()/ HAL_CAN_DeInit()
 194:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   keep and use the user MspInit/MspDeInit callbacks (registered beforehand)
 195:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 196:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   Callbacks can be registered/unregistered in HAL_CAN_STATE_READY state only.
 197:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   Exception done MspInit/MspDeInit that can be registered/unregistered
 198:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   in HAL_CAN_STATE_READY or HAL_CAN_STATE_RESET state,
 199:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   thus registered (user) MspInit/DeInit callbacks can be used during the Init/DeInit.
 200:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   In that case first register the MspInit/MspDeInit user callbacks
ARM GAS  /tmp/ccpEJ30p.s 			page 5


 201:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   using HAL_CAN_RegisterCallback() before calling HAL_CAN_DeInit()
 202:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   or HAL_CAN_Init() function.
 203:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 204:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   When The compilation define USE_HAL_CAN_REGISTER_CALLBACKS is set to 0 or
 205:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   not defined, the callback registration feature is not available and all callbacks
 206:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   are set to the corresponding weak functions.
 207:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 208:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   @endverbatim
 209:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   ******************************************************************************
 210:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   */
 211:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 212:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** /* Includes ------------------------------------------------------------------*/
 213:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** #include "stm32f4xx_hal.h"
 214:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 215:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** /** @addtogroup STM32F4xx_HAL_Driver
 216:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @{
 217:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   */
 218:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 219:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** #if defined(CAN1)
 220:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 221:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** /** @defgroup CAN CAN
 222:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @brief CAN driver modules
 223:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @{
 224:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   */
 225:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 226:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** #ifdef HAL_CAN_MODULE_ENABLED
 227:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 228:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** #ifdef HAL_CAN_LEGACY_MODULE_ENABLED
 229:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** #error "The CAN driver cannot be used with its legacy, Please enable only one CAN module at once"
 230:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** #endif /* HAL_CAN_LEGACY_MODULE_ENABLED */
 231:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 232:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** /* Private typedef -----------------------------------------------------------*/
 233:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** /* Private define ------------------------------------------------------------*/
 234:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** /** @defgroup CAN_Private_Constants CAN Private Constants
 235:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @{
 236:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   */
 237:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** #define CAN_TIMEOUT_VALUE 10U
 238:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** #define CAN_WAKEUP_TIMEOUT_COUNTER 1000000U
 239:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** /**
 240:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @}
 241:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   */
 242:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** /* Private macro -------------------------------------------------------------*/
 243:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** /* Private variables ---------------------------------------------------------*/
 244:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** /* Private function prototypes -----------------------------------------------*/
 245:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** /* Exported functions --------------------------------------------------------*/
 246:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 247:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** /** @defgroup CAN_Exported_Functions CAN Exported Functions
 248:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @{
 249:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   */
 250:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 251:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group1 Initialization and de-initialization functions
 252:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @brief    Initialization and Configuration functions
 253:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *
 254:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** @verbatim
 255:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   ==============================================================================
 256:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****               ##### Initialization and de-initialization functions #####
 257:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   ==============================================================================
ARM GAS  /tmp/ccpEJ30p.s 			page 6


 258:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     [..]  This section provides functions allowing to:
 259:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_Init                       : Initialize and configure the CAN.
 260:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_DeInit                     : De-initialize the CAN.
 261:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_MspInit                    : Initialize the CAN MSP.
 262:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_MspDeInit                  : DeInitialize the CAN MSP.
 263:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 264:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** @endverbatim
 265:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @{
 266:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   */
 267:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 268:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** /**
 269:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @brief  Initializes the CAN peripheral according to the specified
 270:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *         parameters in the CAN_InitStruct.
 271:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 272:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
 273:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @retval HAL status
 274:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   */
 275:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_Init(CAN_HandleTypeDef *hcan)
 276:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** {
 277:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   uint32_t tickstart;
 278:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 279:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   /* Check CAN handle */
 280:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   if (hcan == NULL)
 281:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
 282:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     return HAL_ERROR;
 283:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
 284:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 285:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   /* Check the parameters */
 286:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_ALL_INSTANCE(hcan->Instance));
 287:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.TimeTriggeredMode));
 288:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.AutoBusOff));
 289:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.AutoWakeUp));
 290:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.AutoRetransmission));
 291:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.ReceiveFifoLocked));
 292:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.TransmitFifoPriority));
 293:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_MODE(hcan->Init.Mode));
 294:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_SJW(hcan->Init.SyncJumpWidth));
 295:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_BS1(hcan->Init.TimeSeg1));
 296:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_BS2(hcan->Init.TimeSeg2));
 297:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_PRESCALER(hcan->Init.Prescaler));
 298:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 299:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
 300:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   if (hcan->State == HAL_CAN_STATE_RESET)
 301:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
 302:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     /* Reset callbacks to legacy functions */
 303:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     hcan->RxFifo0MsgPendingCallback  =  HAL_CAN_RxFifo0MsgPendingCallback;  /* Legacy weak RxFifo0M
 304:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     hcan->RxFifo0FullCallback        =  HAL_CAN_RxFifo0FullCallback;        /* Legacy weak RxFifo0F
 305:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     hcan->RxFifo1MsgPendingCallback  =  HAL_CAN_RxFifo1MsgPendingCallback;  /* Legacy weak RxFifo1M
 306:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     hcan->RxFifo1FullCallback        =  HAL_CAN_RxFifo1FullCallback;        /* Legacy weak RxFifo1F
 307:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     hcan->TxMailbox0CompleteCallback =  HAL_CAN_TxMailbox0CompleteCallback; /* Legacy weak TxMailbo
 308:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     hcan->TxMailbox1CompleteCallback =  HAL_CAN_TxMailbox1CompleteCallback; /* Legacy weak TxMailbo
 309:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     hcan->TxMailbox2CompleteCallback =  HAL_CAN_TxMailbox2CompleteCallback; /* Legacy weak TxMailbo
 310:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     hcan->TxMailbox0AbortCallback    =  HAL_CAN_TxMailbox0AbortCallback;    /* Legacy weak TxMailbo
 311:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     hcan->TxMailbox1AbortCallback    =  HAL_CAN_TxMailbox1AbortCallback;    /* Legacy weak TxMailbo
 312:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     hcan->TxMailbox2AbortCallback    =  HAL_CAN_TxMailbox2AbortCallback;    /* Legacy weak TxMailbo
 313:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     hcan->SleepCallback              =  HAL_CAN_SleepCallback;              /* Legacy weak SleepCal
 314:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     hcan->WakeUpFromRxMsgCallback    =  HAL_CAN_WakeUpFromRxMsgCallback;    /* Legacy weak WakeUpFr
ARM GAS  /tmp/ccpEJ30p.s 			page 7


 315:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCallback              =  HAL_CAN_ErrorCallback;              /* Legacy weak ErrorCal
 316:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 317:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     if (hcan->MspInitCallback == NULL)
 318:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 319:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       hcan->MspInitCallback = HAL_CAN_MspInit; /* Legacy weak MspInit */
 320:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
 321:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 322:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     /* Init the low level hardware: CLOCK, NVIC */
 323:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     hcan->MspInitCallback(hcan);
 324:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
 325:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 326:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** #else
 327:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   if (hcan->State == HAL_CAN_STATE_RESET)
 328:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
 329:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     /* Init the low level hardware: CLOCK, NVIC */
 330:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     HAL_CAN_MspInit(hcan);
 331:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
 332:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 333:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 334:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   /* Request initialisation */
 335:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   SET_BIT(hcan->Instance->MCR, CAN_MCR_INRQ);
 336:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 337:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   /* Get tick */
 338:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   tickstart = HAL_GetTick();
 339:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 340:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   /* Wait initialisation acknowledge */
 341:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   while ((hcan->Instance->MSR & CAN_MSR_INAK) == 0U)
 342:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
 343:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     if ((HAL_GetTick() - tickstart) > CAN_TIMEOUT_VALUE)
 344:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 345:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       /* Update error code */
 346:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       hcan->ErrorCode |= HAL_CAN_ERROR_TIMEOUT;
 347:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 348:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       /* Change CAN state */
 349:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       hcan->State = HAL_CAN_STATE_ERROR;
 350:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 351:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       return HAL_ERROR;
 352:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
 353:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
 354:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 355:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   /* Exit from sleep mode */
 356:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_SLEEP);
 357:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 358:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   /* Get tick */
 359:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   tickstart = HAL_GetTick();
 360:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 361:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   /* Check Sleep mode leave acknowledge */
 362:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   while ((hcan->Instance->MSR & CAN_MSR_SLAK) != 0U)
 363:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
 364:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     if ((HAL_GetTick() - tickstart) > CAN_TIMEOUT_VALUE)
 365:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 366:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       /* Update error code */
 367:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       hcan->ErrorCode |= HAL_CAN_ERROR_TIMEOUT;
 368:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 369:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       /* Change CAN state */
 370:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       hcan->State = HAL_CAN_STATE_ERROR;
 371:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
ARM GAS  /tmp/ccpEJ30p.s 			page 8


 372:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       return HAL_ERROR;
 373:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
 374:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
 375:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 376:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   /* Set the time triggered communication mode */
 377:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   if (hcan->Init.TimeTriggeredMode == ENABLE)
 378:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
 379:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_TTCM);
 380:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
 381:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   else
 382:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
 383:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_TTCM);
 384:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
 385:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 386:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   /* Set the automatic bus-off management */
 387:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   if (hcan->Init.AutoBusOff == ENABLE)
 388:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
 389:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_ABOM);
 390:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
 391:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   else
 392:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
 393:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_ABOM);
 394:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
 395:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 396:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   /* Set the automatic wake-up mode */
 397:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   if (hcan->Init.AutoWakeUp == ENABLE)
 398:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
 399:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_AWUM);
 400:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
 401:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   else
 402:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
 403:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_AWUM);
 404:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
 405:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 406:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   /* Set the automatic retransmission */
 407:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   if (hcan->Init.AutoRetransmission == ENABLE)
 408:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
 409:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_NART);
 410:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
 411:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   else
 412:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
 413:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_NART);
 414:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
 415:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 416:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   /* Set the receive FIFO locked mode */
 417:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   if (hcan->Init.ReceiveFifoLocked == ENABLE)
 418:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
 419:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_RFLM);
 420:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
 421:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   else
 422:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
 423:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_RFLM);
 424:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
 425:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 426:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   /* Set the transmit FIFO priority */
 427:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   if (hcan->Init.TransmitFifoPriority == ENABLE)
 428:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
ARM GAS  /tmp/ccpEJ30p.s 			page 9


 429:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_TXFP);
 430:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
 431:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   else
 432:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
 433:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_TXFP);
 434:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
 435:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 436:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   /* Set the bit timing register */
 437:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   WRITE_REG(hcan->Instance->BTR, (uint32_t)(hcan->Init.Mode           |
 438:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****                                             hcan->Init.SyncJumpWidth  |
 439:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****                                             hcan->Init.TimeSeg1       |
 440:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****                                             hcan->Init.TimeSeg2       |
 441:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****                                             (hcan->Init.Prescaler - 1U)));
 442:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 443:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   /* Initialize the error code */
 444:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   hcan->ErrorCode = HAL_CAN_ERROR_NONE;
 445:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 446:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   /* Initialize the CAN state */
 447:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   hcan->State = HAL_CAN_STATE_READY;
 448:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 449:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   /* Return function status */
 450:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   return HAL_OK;
 451:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** }
 452:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 453:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** /**
 454:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @brief  Deinitializes the CAN peripheral registers to their default
 455:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *         reset values.
 456:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 457:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
 458:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @retval HAL status
 459:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   */
 460:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_DeInit(CAN_HandleTypeDef *hcan)
 461:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** {
 462:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   /* Check CAN handle */
 463:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   if (hcan == NULL)
 464:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
 465:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     return HAL_ERROR;
 466:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
 467:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 468:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   /* Check the parameters */
 469:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_ALL_INSTANCE(hcan->Instance));
 470:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 471:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   /* Stop the CAN module */
 472:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   (void)HAL_CAN_Stop(hcan);
 473:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 474:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
 475:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   if (hcan->MspDeInitCallback == NULL)
 476:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
 477:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     hcan->MspDeInitCallback = HAL_CAN_MspDeInit; /* Legacy weak MspDeInit */
 478:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
 479:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 480:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   /* DeInit the low level hardware: CLOCK, NVIC */
 481:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   hcan->MspDeInitCallback(hcan);
 482:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 483:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** #else
 484:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   /* DeInit the low level hardware: CLOCK, NVIC */
 485:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_MspDeInit(hcan);
ARM GAS  /tmp/ccpEJ30p.s 			page 10


 486:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 487:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 488:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   /* Reset the CAN peripheral */
 489:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   SET_BIT(hcan->Instance->MCR, CAN_MCR_RESET);
 490:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 491:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   /* Reset the CAN ErrorCode */
 492:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   hcan->ErrorCode = HAL_CAN_ERROR_NONE;
 493:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 494:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   /* Change CAN state */
 495:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   hcan->State = HAL_CAN_STATE_RESET;
 496:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 497:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   /* Return function status */
 498:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   return HAL_OK;
 499:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** }
 500:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 501:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** /**
 502:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @brief  Initializes the CAN MSP.
 503:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 504:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
 505:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @retval None
 506:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   */
 507:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** __weak void HAL_CAN_MspInit(CAN_HandleTypeDef *hcan)
 508:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** {
  30              		.loc 1 508 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
 509:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
 510:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   UNUSED(hcan);
  35              		.loc 1 510 3 view .LVU1
 511:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 512:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 513:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****             the HAL_CAN_MspInit could be implemented in the user file
 514:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****    */
 515:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** }
  36              		.loc 1 515 1 is_stmt 0 view .LVU2
  37 0000 7047     		bx	lr
  38              		.cfi_endproc
  39              	.LFE241:
  41              		.section	.text.HAL_CAN_Init,"ax",%progbits
  42              		.align	1
  43              		.global	HAL_CAN_Init
  44              		.syntax unified
  45              		.thumb
  46              		.thumb_func
  47              		.fpu fpv4-sp-d16
  49              	HAL_CAN_Init:
  50              	.LVL1:
  51              	.LFB239:
 276:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   uint32_t tickstart;
  52              		.loc 1 276 1 is_stmt 1 view -0
  53              		.cfi_startproc
  54              		@ args = 0, pretend = 0, frame = 0
  55              		@ frame_needed = 0, uses_anonymous_args = 0
 277:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
  56              		.loc 1 277 3 view .LVU4
ARM GAS  /tmp/ccpEJ30p.s 			page 11


 280:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
  57              		.loc 1 280 3 view .LVU5
 280:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
  58              		.loc 1 280 6 is_stmt 0 view .LVU6
  59 0000 0028     		cmp	r0, #0
  60 0002 00F0A180 		beq	.L21
 276:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   uint32_t tickstart;
  61              		.loc 1 276 1 view .LVU7
  62 0006 38B5     		push	{r3, r4, r5, lr}
  63              	.LCFI0:
  64              		.cfi_def_cfa_offset 16
  65              		.cfi_offset 3, -16
  66              		.cfi_offset 4, -12
  67              		.cfi_offset 5, -8
  68              		.cfi_offset 14, -4
  69 0008 0446     		mov	r4, r0
 286:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.TimeTriggeredMode));
  70              		.loc 1 286 3 is_stmt 1 view .LVU8
 287:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.AutoBusOff));
  71              		.loc 1 287 3 view .LVU9
 288:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.AutoWakeUp));
  72              		.loc 1 288 3 view .LVU10
 289:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.AutoRetransmission));
  73              		.loc 1 289 3 view .LVU11
 290:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.ReceiveFifoLocked));
  74              		.loc 1 290 3 view .LVU12
 291:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.TransmitFifoPriority));
  75              		.loc 1 291 3 view .LVU13
 292:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_MODE(hcan->Init.Mode));
  76              		.loc 1 292 3 view .LVU14
 293:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_SJW(hcan->Init.SyncJumpWidth));
  77              		.loc 1 293 3 view .LVU15
 294:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_BS1(hcan->Init.TimeSeg1));
  78              		.loc 1 294 3 view .LVU16
 295:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_BS2(hcan->Init.TimeSeg2));
  79              		.loc 1 295 3 view .LVU17
 296:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_PRESCALER(hcan->Init.Prescaler));
  80              		.loc 1 296 3 view .LVU18
 297:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
  81              		.loc 1 297 3 view .LVU19
 327:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
  82              		.loc 1 327 3 view .LVU20
 327:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
  83              		.loc 1 327 11 is_stmt 0 view .LVU21
  84 000a 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 327:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
  85              		.loc 1 327 6 view .LVU22
  86 000e D3B1     		cbz	r3, .L26
  87              	.LVL2:
  88              	.L4:
 335:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
  89              		.loc 1 335 3 is_stmt 1 view .LVU23
  90 0010 2268     		ldr	r2, [r4]
  91 0012 1368     		ldr	r3, [r2]
  92 0014 43F00103 		orr	r3, r3, #1
  93 0018 1360     		str	r3, [r2]
 338:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
ARM GAS  /tmp/ccpEJ30p.s 			page 12


  94              		.loc 1 338 3 view .LVU24
 338:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
  95              		.loc 1 338 15 is_stmt 0 view .LVU25
  96 001a FFF7FEFF 		bl	HAL_GetTick
  97              	.LVL3:
  98 001e 0546     		mov	r5, r0
  99              	.LVL4:
 341:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
 100              		.loc 1 341 3 is_stmt 1 view .LVU26
 101              	.L5:
 341:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
 102              		.loc 1 341 9 view .LVU27
 341:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
 103              		.loc 1 341 15 is_stmt 0 view .LVU28
 104 0020 2368     		ldr	r3, [r4]
 341:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
 105              		.loc 1 341 25 view .LVU29
 106 0022 5A68     		ldr	r2, [r3, #4]
 341:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
 107              		.loc 1 341 9 view .LVU30
 108 0024 12F0010F 		tst	r2, #1
 109 0028 10D1     		bne	.L27
 343:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 110              		.loc 1 343 5 is_stmt 1 view .LVU31
 343:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 111              		.loc 1 343 10 is_stmt 0 view .LVU32
 112 002a FFF7FEFF 		bl	HAL_GetTick
 113              	.LVL5:
 343:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 114              		.loc 1 343 24 view .LVU33
 115 002e 401B     		subs	r0, r0, r5
 343:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 116              		.loc 1 343 8 view .LVU34
 117 0030 0A28     		cmp	r0, #10
 118 0032 F5D9     		bls	.L5
 346:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 119              		.loc 1 346 7 is_stmt 1 view .LVU35
 346:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 120              		.loc 1 346 23 is_stmt 0 view .LVU36
 121 0034 636A     		ldr	r3, [r4, #36]
 122 0036 43F40033 		orr	r3, r3, #131072
 123 003a 6362     		str	r3, [r4, #36]
 349:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 124              		.loc 1 349 7 is_stmt 1 view .LVU37
 349:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 125              		.loc 1 349 19 is_stmt 0 view .LVU38
 126 003c 0523     		movs	r3, #5
 127 003e 84F82030 		strb	r3, [r4, #32]
 351:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
 128              		.loc 1 351 7 is_stmt 1 view .LVU39
 351:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
 129              		.loc 1 351 14 is_stmt 0 view .LVU40
 130 0042 0120     		movs	r0, #1
 131              	.L3:
 451:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 132              		.loc 1 451 1 view .LVU41
 133 0044 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  /tmp/ccpEJ30p.s 			page 13


 134              	.LVL6:
 135              	.L26:
 330:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
 136              		.loc 1 330 5 is_stmt 1 view .LVU42
 137 0046 FFF7FEFF 		bl	HAL_CAN_MspInit
 138              	.LVL7:
 330:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
 139              		.loc 1 330 5 is_stmt 0 view .LVU43
 140 004a E1E7     		b	.L4
 141              	.LVL8:
 142              	.L27:
 356:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 143              		.loc 1 356 3 is_stmt 1 view .LVU44
 144 004c 1A68     		ldr	r2, [r3]
 145 004e 22F00202 		bic	r2, r2, #2
 146 0052 1A60     		str	r2, [r3]
 359:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 147              		.loc 1 359 3 view .LVU45
 359:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 148              		.loc 1 359 15 is_stmt 0 view .LVU46
 149 0054 FFF7FEFF 		bl	HAL_GetTick
 150              	.LVL9:
 151 0058 0546     		mov	r5, r0
 152              	.LVL10:
 362:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
 153              		.loc 1 362 3 is_stmt 1 view .LVU47
 154              	.L7:
 362:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
 155              		.loc 1 362 9 view .LVU48
 362:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
 156              		.loc 1 362 15 is_stmt 0 view .LVU49
 157 005a 2368     		ldr	r3, [r4]
 362:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
 158              		.loc 1 362 25 view .LVU50
 159 005c 5A68     		ldr	r2, [r3, #4]
 362:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
 160              		.loc 1 362 9 view .LVU51
 161 005e 12F0020F 		tst	r2, #2
 162 0062 0DD0     		beq	.L28
 364:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 163              		.loc 1 364 5 is_stmt 1 view .LVU52
 364:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 164              		.loc 1 364 10 is_stmt 0 view .LVU53
 165 0064 FFF7FEFF 		bl	HAL_GetTick
 166              	.LVL11:
 364:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 167              		.loc 1 364 24 view .LVU54
 168 0068 401B     		subs	r0, r0, r5
 364:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 169              		.loc 1 364 8 view .LVU55
 170 006a 0A28     		cmp	r0, #10
 171 006c F5D9     		bls	.L7
 367:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 172              		.loc 1 367 7 is_stmt 1 view .LVU56
 367:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 173              		.loc 1 367 23 is_stmt 0 view .LVU57
 174 006e 636A     		ldr	r3, [r4, #36]
ARM GAS  /tmp/ccpEJ30p.s 			page 14


 175 0070 43F40033 		orr	r3, r3, #131072
 176 0074 6362     		str	r3, [r4, #36]
 370:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 177              		.loc 1 370 7 is_stmt 1 view .LVU58
 370:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 178              		.loc 1 370 19 is_stmt 0 view .LVU59
 179 0076 0523     		movs	r3, #5
 180 0078 84F82030 		strb	r3, [r4, #32]
 372:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
 181              		.loc 1 372 7 is_stmt 1 view .LVU60
 372:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
 182              		.loc 1 372 14 is_stmt 0 view .LVU61
 183 007c 0120     		movs	r0, #1
 184 007e E1E7     		b	.L3
 185              	.L28:
 377:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
 186              		.loc 1 377 3 is_stmt 1 view .LVU62
 377:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
 187              		.loc 1 377 17 is_stmt 0 view .LVU63
 188 0080 227E     		ldrb	r2, [r4, #24]	@ zero_extendqisi2
 377:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
 189              		.loc 1 377 6 view .LVU64
 190 0082 012A     		cmp	r2, #1
 191 0084 3DD0     		beq	.L29
 383:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
 192              		.loc 1 383 5 is_stmt 1 view .LVU65
 193 0086 1A68     		ldr	r2, [r3]
 194 0088 22F08002 		bic	r2, r2, #128
 195 008c 1A60     		str	r2, [r3]
 196              	.L10:
 387:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
 197              		.loc 1 387 3 view .LVU66
 387:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
 198              		.loc 1 387 17 is_stmt 0 view .LVU67
 199 008e 637E     		ldrb	r3, [r4, #25]	@ zero_extendqisi2
 387:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
 200              		.loc 1 387 6 view .LVU68
 201 0090 012B     		cmp	r3, #1
 202 0092 3BD0     		beq	.L30
 393:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
 203              		.loc 1 393 5 is_stmt 1 view .LVU69
 204 0094 2268     		ldr	r2, [r4]
 205 0096 1368     		ldr	r3, [r2]
 206 0098 23F04003 		bic	r3, r3, #64
 207 009c 1360     		str	r3, [r2]
 208              	.L12:
 397:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
 209              		.loc 1 397 3 view .LVU70
 397:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
 210              		.loc 1 397 17 is_stmt 0 view .LVU71
 211 009e A37E     		ldrb	r3, [r4, #26]	@ zero_extendqisi2
 397:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
 212              		.loc 1 397 6 view .LVU72
 213 00a0 012B     		cmp	r3, #1
 214 00a2 39D0     		beq	.L31
 403:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
 215              		.loc 1 403 5 is_stmt 1 view .LVU73
ARM GAS  /tmp/ccpEJ30p.s 			page 15


 216 00a4 2268     		ldr	r2, [r4]
 217 00a6 1368     		ldr	r3, [r2]
 218 00a8 23F02003 		bic	r3, r3, #32
 219 00ac 1360     		str	r3, [r2]
 220              	.L14:
 407:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
 221              		.loc 1 407 3 view .LVU74
 407:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
 222              		.loc 1 407 17 is_stmt 0 view .LVU75
 223 00ae E37E     		ldrb	r3, [r4, #27]	@ zero_extendqisi2
 407:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
 224              		.loc 1 407 6 view .LVU76
 225 00b0 012B     		cmp	r3, #1
 226 00b2 37D0     		beq	.L32
 413:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
 227              		.loc 1 413 5 is_stmt 1 view .LVU77
 228 00b4 2268     		ldr	r2, [r4]
 229 00b6 1368     		ldr	r3, [r2]
 230 00b8 43F01003 		orr	r3, r3, #16
 231 00bc 1360     		str	r3, [r2]
 232              	.L16:
 417:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
 233              		.loc 1 417 3 view .LVU78
 417:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
 234              		.loc 1 417 17 is_stmt 0 view .LVU79
 235 00be 237F     		ldrb	r3, [r4, #28]	@ zero_extendqisi2
 417:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
 236              		.loc 1 417 6 view .LVU80
 237 00c0 012B     		cmp	r3, #1
 238 00c2 35D0     		beq	.L33
 423:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
 239              		.loc 1 423 5 is_stmt 1 view .LVU81
 240 00c4 2268     		ldr	r2, [r4]
 241 00c6 1368     		ldr	r3, [r2]
 242 00c8 23F00803 		bic	r3, r3, #8
 243 00cc 1360     		str	r3, [r2]
 244              	.L18:
 427:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
 245              		.loc 1 427 3 view .LVU82
 427:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
 246              		.loc 1 427 17 is_stmt 0 view .LVU83
 247 00ce 637F     		ldrb	r3, [r4, #29]	@ zero_extendqisi2
 427:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
 248              		.loc 1 427 6 view .LVU84
 249 00d0 012B     		cmp	r3, #1
 250 00d2 33D0     		beq	.L34
 433:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
 251              		.loc 1 433 5 is_stmt 1 view .LVU85
 252 00d4 2268     		ldr	r2, [r4]
 253 00d6 1368     		ldr	r3, [r2]
 254 00d8 23F00403 		bic	r3, r3, #4
 255 00dc 1360     		str	r3, [r2]
 256              	.L20:
 437:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****                                             hcan->Init.SyncJumpWidth  |
 257              		.loc 1 437 3 view .LVU86
 258 00de A368     		ldr	r3, [r4, #8]
 259 00e0 E268     		ldr	r2, [r4, #12]
ARM GAS  /tmp/ccpEJ30p.s 			page 16


 260 00e2 1343     		orrs	r3, r3, r2
 261 00e4 2269     		ldr	r2, [r4, #16]
 262 00e6 1343     		orrs	r3, r3, r2
 263 00e8 6269     		ldr	r2, [r4, #20]
 264 00ea 1343     		orrs	r3, r3, r2
 265 00ec 6268     		ldr	r2, [r4, #4]
 266 00ee 013A     		subs	r2, r2, #1
 267 00f0 2168     		ldr	r1, [r4]
 268 00f2 1343     		orrs	r3, r3, r2
 269 00f4 CB61     		str	r3, [r1, #28]
 444:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 270              		.loc 1 444 3 view .LVU87
 444:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 271              		.loc 1 444 19 is_stmt 0 view .LVU88
 272 00f6 0020     		movs	r0, #0
 273 00f8 6062     		str	r0, [r4, #36]
 447:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 274              		.loc 1 447 3 is_stmt 1 view .LVU89
 447:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 275              		.loc 1 447 15 is_stmt 0 view .LVU90
 276 00fa 0123     		movs	r3, #1
 277 00fc 84F82030 		strb	r3, [r4, #32]
 450:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** }
 278              		.loc 1 450 3 is_stmt 1 view .LVU91
 450:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** }
 279              		.loc 1 450 10 is_stmt 0 view .LVU92
 280 0100 A0E7     		b	.L3
 281              	.L29:
 379:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
 282              		.loc 1 379 5 is_stmt 1 view .LVU93
 283 0102 1A68     		ldr	r2, [r3]
 284 0104 42F08002 		orr	r2, r2, #128
 285 0108 1A60     		str	r2, [r3]
 286 010a C0E7     		b	.L10
 287              	.L30:
 389:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
 288              		.loc 1 389 5 view .LVU94
 289 010c 2268     		ldr	r2, [r4]
 290 010e 1368     		ldr	r3, [r2]
 291 0110 43F04003 		orr	r3, r3, #64
 292 0114 1360     		str	r3, [r2]
 293 0116 C2E7     		b	.L12
 294              	.L31:
 399:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
 295              		.loc 1 399 5 view .LVU95
 296 0118 2268     		ldr	r2, [r4]
 297 011a 1368     		ldr	r3, [r2]
 298 011c 43F02003 		orr	r3, r3, #32
 299 0120 1360     		str	r3, [r2]
 300 0122 C4E7     		b	.L14
 301              	.L32:
 409:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
 302              		.loc 1 409 5 view .LVU96
 303 0124 2268     		ldr	r2, [r4]
 304 0126 1368     		ldr	r3, [r2]
 305 0128 23F01003 		bic	r3, r3, #16
 306 012c 1360     		str	r3, [r2]
ARM GAS  /tmp/ccpEJ30p.s 			page 17


 307 012e C6E7     		b	.L16
 308              	.L33:
 419:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
 309              		.loc 1 419 5 view .LVU97
 310 0130 2268     		ldr	r2, [r4]
 311 0132 1368     		ldr	r3, [r2]
 312 0134 43F00803 		orr	r3, r3, #8
 313 0138 1360     		str	r3, [r2]
 314 013a C8E7     		b	.L18
 315              	.L34:
 429:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
 316              		.loc 1 429 5 view .LVU98
 317 013c 2268     		ldr	r2, [r4]
 318 013e 1368     		ldr	r3, [r2]
 319 0140 43F00403 		orr	r3, r3, #4
 320 0144 1360     		str	r3, [r2]
 321 0146 CAE7     		b	.L20
 322              	.LVL12:
 323              	.L21:
 324              	.LCFI1:
 325              		.cfi_def_cfa_offset 0
 326              		.cfi_restore 3
 327              		.cfi_restore 4
 328              		.cfi_restore 5
 329              		.cfi_restore 14
 282:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
 330              		.loc 1 282 12 is_stmt 0 view .LVU99
 331 0148 0120     		movs	r0, #1
 332              	.LVL13:
 451:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 333              		.loc 1 451 1 view .LVU100
 334 014a 7047     		bx	lr
 335              		.cfi_endproc
 336              	.LFE239:
 338              		.section	.text.HAL_CAN_MspDeInit,"ax",%progbits
 339              		.align	1
 340              		.weak	HAL_CAN_MspDeInit
 341              		.syntax unified
 342              		.thumb
 343              		.thumb_func
 344              		.fpu fpv4-sp-d16
 346              	HAL_CAN_MspDeInit:
 347              	.LVL14:
 348              	.LFB242:
 516:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 517:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** /**
 518:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @brief  DeInitializes the CAN MSP.
 519:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 520:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
 521:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @retval None
 522:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   */
 523:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** __weak void HAL_CAN_MspDeInit(CAN_HandleTypeDef *hcan)
 524:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** {
 349              		.loc 1 524 1 is_stmt 1 view -0
 350              		.cfi_startproc
 351              		@ args = 0, pretend = 0, frame = 0
 352              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccpEJ30p.s 			page 18


 353              		@ link register save eliminated.
 525:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
 526:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   UNUSED(hcan);
 354              		.loc 1 526 3 view .LVU102
 527:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 528:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 529:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****             the HAL_CAN_MspDeInit could be implemented in the user file
 530:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****    */
 531:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** }
 355              		.loc 1 531 1 is_stmt 0 view .LVU103
 356 0000 7047     		bx	lr
 357              		.cfi_endproc
 358              	.LFE242:
 360              		.section	.text.HAL_CAN_ConfigFilter,"ax",%progbits
 361              		.align	1
 362              		.global	HAL_CAN_ConfigFilter
 363              		.syntax unified
 364              		.thumb
 365              		.thumb_func
 366              		.fpu fpv4-sp-d16
 368              	HAL_CAN_ConfigFilter:
 369              	.LVL15:
 370              	.LFB243:
 532:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 533:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
 534:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** /**
 535:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @brief  Register a CAN CallBack.
 536:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *         To be used instead of the weak predefined callback
 537:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 538:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for CAN module
 539:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @param  CallbackID ID of the callback to be registered
 540:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *         This parameter can be one of the following values:
 541:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX0_COMPLETE_CB_ID Tx Mailbox 0 Complete callback ID
 542:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX1_COMPLETE_CB_ID Tx Mailbox 1 Complete callback ID
 543:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX2_COMPLETE_CB_ID Tx Mailbox 2 Complete callback ID
 544:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX0_ABORT_CB_ID Tx Mailbox 0 Abort callback ID
 545:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX1_ABORT_CB_ID Tx Mailbox 1 Abort callback ID
 546:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX2_ABORT_CB_ID Tx Mailbox 2 Abort callback ID
 547:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO0_MSG_PENDING_CB_ID Rx Fifo 0 message pending callback ID
 548:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO0_FULL_CB_ID Rx Fifo 0 full callback ID
 549:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO1_MSG_PENDING_CB_ID Rx Fifo 1 message pending callback ID
 550:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO1_FULL_CB_ID Rx Fifo 1 full callback ID
 551:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_SLEEP_CB_ID Sleep callback ID
 552:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_WAKEUP_FROM_RX_MSG_CB_ID Wake Up from Rx message callback ID
 553:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_ERROR_CB_ID Error callback ID
 554:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_MSPINIT_CB_ID MspInit callback ID
 555:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_MSPDEINIT_CB_ID MspDeInit callback ID
 556:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @param  pCallback pointer to the Callback function
 557:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @retval HAL status
 558:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   */
 559:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_RegisterCallback(CAN_HandleTypeDef *hcan, HAL_CAN_CallbackIDTypeDef Callb
 560:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****                                            void (* pCallback)(CAN_HandleTypeDef *_hcan))
 561:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** {
 562:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   HAL_StatusTypeDef status = HAL_OK;
 563:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 564:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   if (pCallback == NULL)
 565:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
ARM GAS  /tmp/ccpEJ30p.s 			page 19


 566:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     /* Update the error code */
 567:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_INVALID_CALLBACK;
 568:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 569:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     return HAL_ERROR;
 570:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
 571:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 572:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   if (hcan->State == HAL_CAN_STATE_READY)
 573:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
 574:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     switch (CallbackID)
 575:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 576:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX0_COMPLETE_CB_ID :
 577:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         hcan->TxMailbox0CompleteCallback = pCallback;
 578:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         break;
 579:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 580:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX1_COMPLETE_CB_ID :
 581:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         hcan->TxMailbox1CompleteCallback = pCallback;
 582:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         break;
 583:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 584:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX2_COMPLETE_CB_ID :
 585:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         hcan->TxMailbox2CompleteCallback = pCallback;
 586:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         break;
 587:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 588:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX0_ABORT_CB_ID :
 589:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         hcan->TxMailbox0AbortCallback = pCallback;
 590:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         break;
 591:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 592:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX1_ABORT_CB_ID :
 593:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         hcan->TxMailbox1AbortCallback = pCallback;
 594:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         break;
 595:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 596:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX2_ABORT_CB_ID :
 597:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         hcan->TxMailbox2AbortCallback = pCallback;
 598:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         break;
 599:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 600:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_RX_FIFO0_MSG_PENDING_CB_ID :
 601:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         hcan->RxFifo0MsgPendingCallback = pCallback;
 602:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         break;
 603:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 604:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_RX_FIFO0_FULL_CB_ID :
 605:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         hcan->RxFifo0FullCallback = pCallback;
 606:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         break;
 607:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 608:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_RX_FIFO1_MSG_PENDING_CB_ID :
 609:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         hcan->RxFifo1MsgPendingCallback = pCallback;
 610:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         break;
 611:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 612:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_RX_FIFO1_FULL_CB_ID :
 613:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         hcan->RxFifo1FullCallback = pCallback;
 614:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         break;
 615:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 616:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_SLEEP_CB_ID :
 617:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         hcan->SleepCallback = pCallback;
 618:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         break;
 619:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 620:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_WAKEUP_FROM_RX_MSG_CB_ID :
 621:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         hcan->WakeUpFromRxMsgCallback = pCallback;
 622:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         break;
ARM GAS  /tmp/ccpEJ30p.s 			page 20


 623:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 624:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_ERROR_CB_ID :
 625:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         hcan->ErrorCallback = pCallback;
 626:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         break;
 627:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 628:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_MSPINIT_CB_ID :
 629:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         hcan->MspInitCallback = pCallback;
 630:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         break;
 631:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 632:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_MSPDEINIT_CB_ID :
 633:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         hcan->MspDeInitCallback = pCallback;
 634:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         break;
 635:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 636:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       default :
 637:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         /* Update the error code */
 638:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_INVALID_CALLBACK;
 639:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 640:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         /* Return error status */
 641:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         status =  HAL_ERROR;
 642:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         break;
 643:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
 644:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
 645:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   else if (hcan->State == HAL_CAN_STATE_RESET)
 646:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
 647:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     switch (CallbackID)
 648:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 649:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_MSPINIT_CB_ID :
 650:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         hcan->MspInitCallback = pCallback;
 651:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         break;
 652:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 653:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_MSPDEINIT_CB_ID :
 654:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         hcan->MspDeInitCallback = pCallback;
 655:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         break;
 656:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 657:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       default :
 658:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         /* Update the error code */
 659:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_INVALID_CALLBACK;
 660:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 661:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         /* Return error status */
 662:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         status =  HAL_ERROR;
 663:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         break;
 664:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
 665:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
 666:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   else
 667:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
 668:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     /* Update the error code */
 669:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_INVALID_CALLBACK;
 670:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 671:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     /* Return error status */
 672:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     status =  HAL_ERROR;
 673:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
 674:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 675:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   return status;
 676:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** }
 677:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 678:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** /**
 679:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @brief  Unregister a CAN CallBack.
ARM GAS  /tmp/ccpEJ30p.s 			page 21


 680:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *         CAN callback is redirected to the weak predefined callback
 681:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 682:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for CAN module
 683:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @param  CallbackID ID of the callback to be unregistered
 684:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *         This parameter can be one of the following values:
 685:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX0_COMPLETE_CB_ID Tx Mailbox 0 Complete callback ID
 686:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX1_COMPLETE_CB_ID Tx Mailbox 1 Complete callback ID
 687:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX2_COMPLETE_CB_ID Tx Mailbox 2 Complete callback ID
 688:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX0_ABORT_CB_ID Tx Mailbox 0 Abort callback ID
 689:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX1_ABORT_CB_ID Tx Mailbox 1 Abort callback ID
 690:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX2_ABORT_CB_ID Tx Mailbox 2 Abort callback ID
 691:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO0_MSG_PENDING_CB_ID Rx Fifo 0 message pending callback ID
 692:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO0_FULL_CB_ID Rx Fifo 0 full callback ID
 693:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO1_MSG_PENDING_CB_ID Rx Fifo 1 message pending callback ID
 694:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO1_FULL_CB_ID Rx Fifo 1 full callback ID
 695:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_SLEEP_CB_ID Sleep callback ID
 696:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_WAKEUP_FROM_RX_MSG_CB_ID Wake Up from Rx message callback ID
 697:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_ERROR_CB_ID Error callback ID
 698:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_MSPINIT_CB_ID MspInit callback ID
 699:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_MSPDEINIT_CB_ID MspDeInit callback ID
 700:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @retval HAL status
 701:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   */
 702:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_UnRegisterCallback(CAN_HandleTypeDef *hcan, HAL_CAN_CallbackIDTypeDef Cal
 703:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** {
 704:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   HAL_StatusTypeDef status = HAL_OK;
 705:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 706:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   if (hcan->State == HAL_CAN_STATE_READY)
 707:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
 708:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     switch (CallbackID)
 709:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 710:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX0_COMPLETE_CB_ID :
 711:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         hcan->TxMailbox0CompleteCallback = HAL_CAN_TxMailbox0CompleteCallback;
 712:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         break;
 713:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 714:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX1_COMPLETE_CB_ID :
 715:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         hcan->TxMailbox1CompleteCallback = HAL_CAN_TxMailbox1CompleteCallback;
 716:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         break;
 717:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 718:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX2_COMPLETE_CB_ID :
 719:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         hcan->TxMailbox2CompleteCallback = HAL_CAN_TxMailbox2CompleteCallback;
 720:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         break;
 721:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 722:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX0_ABORT_CB_ID :
 723:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         hcan->TxMailbox0AbortCallback = HAL_CAN_TxMailbox0AbortCallback;
 724:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         break;
 725:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 726:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX1_ABORT_CB_ID :
 727:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         hcan->TxMailbox1AbortCallback = HAL_CAN_TxMailbox1AbortCallback;
 728:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         break;
 729:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 730:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX2_ABORT_CB_ID :
 731:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         hcan->TxMailbox2AbortCallback = HAL_CAN_TxMailbox2AbortCallback;
 732:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         break;
 733:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 734:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_RX_FIFO0_MSG_PENDING_CB_ID :
 735:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         hcan->RxFifo0MsgPendingCallback = HAL_CAN_RxFifo0MsgPendingCallback;
 736:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         break;
ARM GAS  /tmp/ccpEJ30p.s 			page 22


 737:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 738:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_RX_FIFO0_FULL_CB_ID :
 739:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         hcan->RxFifo0FullCallback = HAL_CAN_RxFifo0FullCallback;
 740:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         break;
 741:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 742:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_RX_FIFO1_MSG_PENDING_CB_ID :
 743:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         hcan->RxFifo1MsgPendingCallback = HAL_CAN_RxFifo1MsgPendingCallback;
 744:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         break;
 745:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 746:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_RX_FIFO1_FULL_CB_ID :
 747:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         hcan->RxFifo1FullCallback = HAL_CAN_RxFifo1FullCallback;
 748:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         break;
 749:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 750:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_SLEEP_CB_ID :
 751:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         hcan->SleepCallback = HAL_CAN_SleepCallback;
 752:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         break;
 753:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 754:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_WAKEUP_FROM_RX_MSG_CB_ID :
 755:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         hcan->WakeUpFromRxMsgCallback = HAL_CAN_WakeUpFromRxMsgCallback;
 756:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         break;
 757:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 758:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_ERROR_CB_ID :
 759:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         hcan->ErrorCallback = HAL_CAN_ErrorCallback;
 760:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         break;
 761:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 762:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_MSPINIT_CB_ID :
 763:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         hcan->MspInitCallback = HAL_CAN_MspInit;
 764:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         break;
 765:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 766:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_MSPDEINIT_CB_ID :
 767:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         hcan->MspDeInitCallback = HAL_CAN_MspDeInit;
 768:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         break;
 769:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 770:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       default :
 771:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         /* Update the error code */
 772:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_INVALID_CALLBACK;
 773:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 774:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         /* Return error status */
 775:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         status =  HAL_ERROR;
 776:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         break;
 777:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
 778:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
 779:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   else if (hcan->State == HAL_CAN_STATE_RESET)
 780:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
 781:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     switch (CallbackID)
 782:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 783:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_MSPINIT_CB_ID :
 784:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         hcan->MspInitCallback = HAL_CAN_MspInit;
 785:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         break;
 786:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 787:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_MSPDEINIT_CB_ID :
 788:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         hcan->MspDeInitCallback = HAL_CAN_MspDeInit;
 789:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         break;
 790:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 791:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       default :
 792:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         /* Update the error code */
 793:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_INVALID_CALLBACK;
ARM GAS  /tmp/ccpEJ30p.s 			page 23


 794:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 795:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         /* Return error status */
 796:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         status =  HAL_ERROR;
 797:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         break;
 798:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
 799:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
 800:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   else
 801:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
 802:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     /* Update the error code */
 803:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_INVALID_CALLBACK;
 804:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 805:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     /* Return error status */
 806:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     status =  HAL_ERROR;
 807:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
 808:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 809:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   return status;
 810:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** }
 811:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 812:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 813:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** /**
 814:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @}
 815:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   */
 816:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 817:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group2 Configuration functions
 818:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @brief    Configuration functions.
 819:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *
 820:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** @verbatim
 821:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   ==============================================================================
 822:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****               ##### Configuration functions #####
 823:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   ==============================================================================
 824:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     [..]  This section provides functions allowing to:
 825:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_ConfigFilter            : Configure the CAN reception filters
 826:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 827:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** @endverbatim
 828:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @{
 829:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   */
 830:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 831:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** /**
 832:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @brief  Configures the CAN reception filter according to the specified
 833:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *         parameters in the CAN_FilterInitStruct.
 834:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 835:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
 836:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @param  sFilterConfig pointer to a CAN_FilterTypeDef structure that
 837:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *         contains the filter configuration information.
 838:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @retval None
 839:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   */
 840:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_ConfigFilter(CAN_HandleTypeDef *hcan, const CAN_FilterTypeDef *sFilterCon
 841:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** {
 371              		.loc 1 841 1 is_stmt 1 view -0
 372              		.cfi_startproc
 373              		@ args = 0, pretend = 0, frame = 0
 374              		@ frame_needed = 0, uses_anonymous_args = 0
 375              		@ link register save eliminated.
 842:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   uint32_t filternbrbitpos;
 376              		.loc 1 842 3 view .LVU105
 843:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   CAN_TypeDef *can_ip;
 377              		.loc 1 843 3 view .LVU106
ARM GAS  /tmp/ccpEJ30p.s 			page 24


 844:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 378              		.loc 1 844 3 view .LVU107
 379              		.loc 1 844 24 is_stmt 0 view .LVU108
 380 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 381              	.LVL16:
 845:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 846:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 382              		.loc 1 846 3 is_stmt 1 view .LVU109
 383              		.loc 1 846 38 is_stmt 0 view .LVU110
 384 0004 013B     		subs	r3, r3, #1
 385              	.LVL17:
 386              		.loc 1 846 38 view .LVU111
 387 0006 DBB2     		uxtb	r3, r3
 388              		.loc 1 846 6 view .LVU112
 389 0008 012B     		cmp	r3, #1
 390 000a 05D9     		bls	.L50
 847:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 848:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
 849:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     /* Check the parameters */
 850:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ID_HALFWORD(sFilterConfig->FilterIdHigh));
 851:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ID_HALFWORD(sFilterConfig->FilterIdLow));
 852:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ID_HALFWORD(sFilterConfig->FilterMaskIdHigh));
 853:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ID_HALFWORD(sFilterConfig->FilterMaskIdLow));
 854:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_MODE(sFilterConfig->FilterMode));
 855:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_SCALE(sFilterConfig->FilterScale));
 856:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_FIFO(sFilterConfig->FilterFIFOAssignment));
 857:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ACTIVATION(sFilterConfig->FilterActivation));
 858:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 859:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** #if defined(CAN3)
 860:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     /* Check the CAN instance */
 861:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     if (hcan->Instance == CAN3)
 862:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 863:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       /* CAN3 is single instance with 14 dedicated filters banks */
 864:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       can_ip = hcan->Instance;
 865:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 866:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       /* Check the parameters */
 867:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       assert_param(IS_CAN_FILTER_BANK_SINGLE(sFilterConfig->FilterBank));
 868:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
 869:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     else
 870:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 871:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       /* CAN1 and CAN2 are dual instances with 28 common filters banks */
 872:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       /* Select master instance to access the filter banks */
 873:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       can_ip = CAN1;
 874:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 875:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       /* Check the parameters */
 876:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       assert_param(IS_CAN_FILTER_BANK_DUAL(sFilterConfig->FilterBank));
 877:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       assert_param(IS_CAN_FILTER_BANK_DUAL(sFilterConfig->SlaveStartFilterBank));
 878:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
 879:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** #elif defined(CAN2)
 880:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     /* CAN1 and CAN2 are dual instances with 28 common filters banks */
 881:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     /* Select master instance to access the filter banks */
 882:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     can_ip = CAN1;
 883:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 884:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     /* Check the parameters */
 885:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_BANK_DUAL(sFilterConfig->FilterBank));
 886:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_BANK_DUAL(sFilterConfig->SlaveStartFilterBank));
 887:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** #else
ARM GAS  /tmp/ccpEJ30p.s 			page 25


 888:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     /* CAN1 is single instance with 14 dedicated filters banks */
 889:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     can_ip = hcan->Instance;
 890:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 891:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     /* Check the parameters */
 892:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_BANK_SINGLE(sFilterConfig->FilterBank));
 893:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** #endif /* CAN3 */
 894:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 895:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     /* Initialisation mode for the filter */
 896:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     SET_BIT(can_ip->FMR, CAN_FMR_FINIT);
 897:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 898:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** #if defined(CAN3)
 899:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     /* Check the CAN instance */
 900:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     if (can_ip == CAN1)
 901:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 902:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       /* Select the start filter number of CAN2 slave instance */
 903:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       CLEAR_BIT(can_ip->FMR, CAN_FMR_CAN2SB);
 904:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       SET_BIT(can_ip->FMR, sFilterConfig->SlaveStartFilterBank << CAN_FMR_CAN2SB_Pos);
 905:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
 906:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 907:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** #elif defined(CAN2)
 908:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     /* Select the start filter number of CAN2 slave instance */
 909:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     CLEAR_BIT(can_ip->FMR, CAN_FMR_CAN2SB);
 910:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     SET_BIT(can_ip->FMR, sFilterConfig->SlaveStartFilterBank << CAN_FMR_CAN2SB_Pos);
 911:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 912:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** #endif /* CAN3 */
 913:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     /* Convert filter number into bit position */
 914:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     filternbrbitpos = (uint32_t)1 << (sFilterConfig->FilterBank & 0x1FU);
 915:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 916:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     /* Filter Deactivation */
 917:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     CLEAR_BIT(can_ip->FA1R, filternbrbitpos);
 918:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 919:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     /* Filter Scale */
 920:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     if (sFilterConfig->FilterScale == CAN_FILTERSCALE_16BIT)
 921:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 922:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       /* 16-bit scale for the filter */
 923:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       CLEAR_BIT(can_ip->FS1R, filternbrbitpos);
 924:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 925:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       /* First 16-bit identifier and First 16-bit mask */
 926:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       /* Or First 16-bit identifier and Second 16-bit identifier */
 927:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       can_ip->sFilterRegister[sFilterConfig->FilterBank].FR1 =
 928:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow) << 16U) |
 929:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdLow);
 930:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 931:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       /* Second 16-bit identifier and Second 16-bit mask */
 932:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       /* Or Third 16-bit identifier and Fourth 16-bit identifier */
 933:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       can_ip->sFilterRegister[sFilterConfig->FilterBank].FR2 =
 934:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 935:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh);
 936:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
 937:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 938:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     if (sFilterConfig->FilterScale == CAN_FILTERSCALE_32BIT)
 939:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 940:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       /* 32-bit scale for the filter */
 941:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       SET_BIT(can_ip->FS1R, filternbrbitpos);
 942:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 943:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       /* 32-bit identifier or First 32-bit identifier */
 944:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       can_ip->sFilterRegister[sFilterConfig->FilterBank].FR1 =
ARM GAS  /tmp/ccpEJ30p.s 			page 26


 945:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh) << 16U) |
 946:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdLow);
 947:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 948:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       /* 32-bit mask or Second 32-bit identifier */
 949:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       can_ip->sFilterRegister[sFilterConfig->FilterBank].FR2 =
 950:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 951:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow);
 952:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
 953:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 954:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     /* Filter Mode */
 955:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     if (sFilterConfig->FilterMode == CAN_FILTERMODE_IDMASK)
 956:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 957:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       /* Id/Mask mode for the filter*/
 958:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       CLEAR_BIT(can_ip->FM1R, filternbrbitpos);
 959:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
 960:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     else /* CAN_FilterInitStruct->CAN_FilterMode == CAN_FilterMode_IdList */
 961:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 962:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       /* Identifier list mode for the filter*/
 963:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       SET_BIT(can_ip->FM1R, filternbrbitpos);
 964:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
 965:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 966:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     /* Filter FIFO assignment */
 967:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     if (sFilterConfig->FilterFIFOAssignment == CAN_FILTER_FIFO0)
 968:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 969:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       /* FIFO 0 assignation for the filter */
 970:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       CLEAR_BIT(can_ip->FFA1R, filternbrbitpos);
 971:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
 972:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     else
 973:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 974:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       /* FIFO 1 assignation for the filter */
 975:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       SET_BIT(can_ip->FFA1R, filternbrbitpos);
 976:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
 977:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 978:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     /* Filter activation */
 979:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     if (sFilterConfig->FilterActivation == CAN_FILTER_ENABLE)
 980:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 981:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       SET_BIT(can_ip->FA1R, filternbrbitpos);
 982:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
 983:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 984:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     /* Leave the initialisation mode for the filter */
 985:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     CLEAR_BIT(can_ip->FMR, CAN_FMR_FINIT);
 986:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 987:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     /* Return function status */
 988:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     return HAL_OK;
 989:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
 990:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   else
 991:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
 992:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     /* Update error code */
 993:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 391              		.loc 1 993 5 is_stmt 1 view .LVU113
 392              		.loc 1 993 21 is_stmt 0 view .LVU114
 393 000c 436A     		ldr	r3, [r0, #36]
 394 000e 43F48023 		orr	r3, r3, #262144
 395 0012 4362     		str	r3, [r0, #36]
 994:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 995:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     return HAL_ERROR;
 396              		.loc 1 995 5 is_stmt 1 view .LVU115
ARM GAS  /tmp/ccpEJ30p.s 			page 27


 397              		.loc 1 995 12 is_stmt 0 view .LVU116
 398 0014 0120     		movs	r0, #1
 399              	.LVL18:
 996:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
 997:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** }
 400              		.loc 1 997 1 view .LVU117
 401 0016 7047     		bx	lr
 402              	.LVL19:
 403              	.L50:
 841:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   uint32_t filternbrbitpos;
 404              		.loc 1 841 1 view .LVU118
 405 0018 70B4     		push	{r4, r5, r6}
 406              	.LCFI2:
 407              		.cfi_def_cfa_offset 12
 408              		.cfi_offset 4, -12
 409              		.cfi_offset 5, -8
 410              		.cfi_offset 6, -4
 850:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ID_HALFWORD(sFilterConfig->FilterIdLow));
 411              		.loc 1 850 5 is_stmt 1 view .LVU119
 851:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ID_HALFWORD(sFilterConfig->FilterMaskIdHigh));
 412              		.loc 1 851 5 view .LVU120
 852:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ID_HALFWORD(sFilterConfig->FilterMaskIdLow));
 413              		.loc 1 852 5 view .LVU121
 853:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_MODE(sFilterConfig->FilterMode));
 414              		.loc 1 853 5 view .LVU122
 854:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_SCALE(sFilterConfig->FilterScale));
 415              		.loc 1 854 5 view .LVU123
 855:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_FIFO(sFilterConfig->FilterFIFOAssignment));
 416              		.loc 1 855 5 view .LVU124
 856:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ACTIVATION(sFilterConfig->FilterActivation));
 417              		.loc 1 856 5 view .LVU125
 857:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 418              		.loc 1 857 5 view .LVU126
 882:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 419              		.loc 1 882 5 view .LVU127
 420              	.LVL20:
 885:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_BANK_DUAL(sFilterConfig->SlaveStartFilterBank));
 421              		.loc 1 885 5 view .LVU128
 886:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** #else
 422              		.loc 1 886 5 view .LVU129
 896:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 423              		.loc 1 896 5 view .LVU130
 424 001a 444B     		ldr	r3, .L53
 425 001c D3F80022 		ldr	r2, [r3, #512]
 426 0020 42F00102 		orr	r2, r2, #1
 427 0024 C3F80022 		str	r2, [r3, #512]
 909:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     SET_BIT(can_ip->FMR, sFilterConfig->SlaveStartFilterBank << CAN_FMR_CAN2SB_Pos);
 428              		.loc 1 909 5 view .LVU131
 429 0028 D3F80022 		ldr	r2, [r3, #512]
 430 002c 22F47C52 		bic	r2, r2, #16128
 431 0030 C3F80022 		str	r2, [r3, #512]
 910:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 432              		.loc 1 910 5 view .LVU132
 433 0034 D3F80022 		ldr	r2, [r3, #512]
 434 0038 486A     		ldr	r0, [r1, #36]
 435              	.LVL21:
 910:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
ARM GAS  /tmp/ccpEJ30p.s 			page 28


 436              		.loc 1 910 5 is_stmt 0 view .LVU133
 437 003a 42EA0022 		orr	r2, r2, r0, lsl #8
 438 003e C3F80022 		str	r2, [r3, #512]
 914:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 439              		.loc 1 914 5 is_stmt 1 view .LVU134
 914:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 440              		.loc 1 914 52 is_stmt 0 view .LVU135
 441 0042 4A69     		ldr	r2, [r1, #20]
 914:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 442              		.loc 1 914 65 view .LVU136
 443 0044 02F01F02 		and	r2, r2, #31
 914:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 444              		.loc 1 914 21 view .LVU137
 445 0048 0120     		movs	r0, #1
 446 004a 00FA02F2 		lsl	r2, r0, r2
 447              	.LVL22:
 917:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 448              		.loc 1 917 5 is_stmt 1 view .LVU138
 449 004e D3F81C02 		ldr	r0, [r3, #540]
 450 0052 D443     		mvns	r4, r2
 451 0054 20EA0200 		bic	r0, r0, r2
 452 0058 C3F81C02 		str	r0, [r3, #540]
 920:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 453              		.loc 1 920 5 view .LVU139
 920:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 454              		.loc 1 920 22 is_stmt 0 view .LVU140
 455 005c CB69     		ldr	r3, [r1, #28]
 920:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 456              		.loc 1 920 8 view .LVU141
 457 005e B3B9     		cbnz	r3, .L38
 923:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 458              		.loc 1 923 7 is_stmt 1 view .LVU142
 459 0060 324B     		ldr	r3, .L53
 460 0062 D3F80C02 		ldr	r0, [r3, #524]
 461 0066 2040     		ands	r0, r0, r4
 462 0068 C3F80C02 		str	r0, [r3, #524]
 927:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow) << 16U) |
 463              		.loc 1 927 7 view .LVU143
 928:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdLow);
 464              		.loc 1 928 48 is_stmt 0 view .LVU144
 465 006c CE68     		ldr	r6, [r1, #12]
 929:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 466              		.loc 1 929 22 view .LVU145
 467 006e 8D88     		ldrh	r5, [r1, #4]
 927:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow) << 16U) |
 468              		.loc 1 927 44 view .LVU146
 469 0070 4869     		ldr	r0, [r1, #20]
 928:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdLow);
 470              		.loc 1 928 75 view .LVU147
 471 0072 45EA0645 		orr	r5, r5, r6, lsl #16
 927:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow) << 16U) |
 472              		.loc 1 927 62 view .LVU148
 473 0076 4830     		adds	r0, r0, #72
 474 0078 43F83050 		str	r5, [r3, r0, lsl #3]
 933:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 475              		.loc 1 933 7 is_stmt 1 view .LVU149
 934:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh);
ARM GAS  /tmp/ccpEJ30p.s 			page 29


 476              		.loc 1 934 48 is_stmt 0 view .LVU150
 477 007c 8E68     		ldr	r6, [r1, #8]
 935:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
 478              		.loc 1 935 22 view .LVU151
 479 007e 0888     		ldrh	r0, [r1]
 933:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 480              		.loc 1 933 44 view .LVU152
 481 0080 4D69     		ldr	r5, [r1, #20]
 934:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh);
 482              		.loc 1 934 76 view .LVU153
 483 0082 40EA0640 		orr	r0, r0, r6, lsl #16
 933:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 484              		.loc 1 933 62 view .LVU154
 485 0086 4835     		adds	r5, r5, #72
 486 0088 03EBC503 		add	r3, r3, r5, lsl #3
 487 008c 5860     		str	r0, [r3, #4]
 488              	.L38:
 938:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 489              		.loc 1 938 5 is_stmt 1 view .LVU155
 938:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 490              		.loc 1 938 22 is_stmt 0 view .LVU156
 491 008e CB69     		ldr	r3, [r1, #28]
 938:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 492              		.loc 1 938 8 view .LVU157
 493 0090 012B     		cmp	r3, #1
 494 0092 1DD0     		beq	.L51
 495              	.L39:
 955:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 496              		.loc 1 955 5 is_stmt 1 view .LVU158
 955:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 497              		.loc 1 955 22 is_stmt 0 view .LVU159
 498 0094 8B69     		ldr	r3, [r1, #24]
 955:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 499              		.loc 1 955 8 view .LVU160
 500 0096 002B     		cmp	r3, #0
 501 0098 32D1     		bne	.L40
 958:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
 502              		.loc 1 958 7 is_stmt 1 view .LVU161
 503 009a 2448     		ldr	r0, .L53
 504 009c D0F80432 		ldr	r3, [r0, #516]
 505 00a0 2340     		ands	r3, r3, r4
 506 00a2 C0F80432 		str	r3, [r0, #516]
 507              	.L41:
 967:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 508              		.loc 1 967 5 view .LVU162
 967:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 509              		.loc 1 967 22 is_stmt 0 view .LVU163
 510 00a6 0B69     		ldr	r3, [r1, #16]
 967:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 511              		.loc 1 967 8 view .LVU164
 512 00a8 8BBB     		cbnz	r3, .L42
 970:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
 513              		.loc 1 970 7 is_stmt 1 view .LVU165
 514 00aa 204B     		ldr	r3, .L53
 515 00ac D3F81402 		ldr	r0, [r3, #532]
 516 00b0 0440     		ands	r4, r4, r0
 517 00b2 C3F81442 		str	r4, [r3, #532]
ARM GAS  /tmp/ccpEJ30p.s 			page 30


 518              	.L43:
 979:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 519              		.loc 1 979 5 view .LVU166
 979:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 520              		.loc 1 979 22 is_stmt 0 view .LVU167
 521 00b6 0B6A     		ldr	r3, [r1, #32]
 979:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 522              		.loc 1 979 8 view .LVU168
 523 00b8 012B     		cmp	r3, #1
 524 00ba 2FD0     		beq	.L52
 525              	.LVL23:
 526              	.L44:
 985:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 527              		.loc 1 985 5 is_stmt 1 view .LVU169
 528 00bc 1B4A     		ldr	r2, .L53
 529 00be D2F80032 		ldr	r3, [r2, #512]
 530 00c2 23F00103 		bic	r3, r3, #1
 531 00c6 C2F80032 		str	r3, [r2, #512]
 988:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
 532              		.loc 1 988 5 view .LVU170
 988:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
 533              		.loc 1 988 12 is_stmt 0 view .LVU171
 534 00ca 0020     		movs	r0, #0
 535              		.loc 1 997 1 view .LVU172
 536 00cc 70BC     		pop	{r4, r5, r6}
 537              	.LCFI3:
 538              		.cfi_remember_state
 539              		.cfi_restore 6
 540              		.cfi_restore 5
 541              		.cfi_restore 4
 542              		.cfi_def_cfa_offset 0
 543 00ce 7047     		bx	lr
 544              	.LVL24:
 545              	.L51:
 546              	.LCFI4:
 547              		.cfi_restore_state
 941:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 548              		.loc 1 941 7 is_stmt 1 view .LVU173
 549 00d0 164B     		ldr	r3, .L53
 550 00d2 D3F80C02 		ldr	r0, [r3, #524]
 551 00d6 1043     		orrs	r0, r0, r2
 552 00d8 C3F80C02 		str	r0, [r3, #524]
 944:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh) << 16U) |
 553              		.loc 1 944 7 view .LVU174
 945:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdLow);
 554              		.loc 1 945 48 is_stmt 0 view .LVU175
 555 00dc 0E68     		ldr	r6, [r1]
 946:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 556              		.loc 1 946 22 view .LVU176
 557 00de 8D88     		ldrh	r5, [r1, #4]
 944:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh) << 16U) |
 558              		.loc 1 944 44 view .LVU177
 559 00e0 4869     		ldr	r0, [r1, #20]
 945:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdLow);
 560              		.loc 1 945 72 view .LVU178
 561 00e2 45EA0645 		orr	r5, r5, r6, lsl #16
 944:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh) << 16U) |
ARM GAS  /tmp/ccpEJ30p.s 			page 31


 562              		.loc 1 944 62 view .LVU179
 563 00e6 4830     		adds	r0, r0, #72
 564 00e8 43F83050 		str	r5, [r3, r0, lsl #3]
 949:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 565              		.loc 1 949 7 is_stmt 1 view .LVU180
 950:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow);
 566              		.loc 1 950 48 is_stmt 0 view .LVU181
 567 00ec 8E68     		ldr	r6, [r1, #8]
 951:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
 568              		.loc 1 951 22 view .LVU182
 569 00ee 8889     		ldrh	r0, [r1, #12]
 949:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 570              		.loc 1 949 44 view .LVU183
 571 00f0 4D69     		ldr	r5, [r1, #20]
 950:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow);
 572              		.loc 1 950 76 view .LVU184
 573 00f2 40EA0640 		orr	r0, r0, r6, lsl #16
 949:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 574              		.loc 1 949 62 view .LVU185
 575 00f6 4835     		adds	r5, r5, #72
 576 00f8 03EBC503 		add	r3, r3, r5, lsl #3
 577 00fc 5860     		str	r0, [r3, #4]
 578 00fe C9E7     		b	.L39
 579              	.L40:
 963:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
 580              		.loc 1 963 7 is_stmt 1 view .LVU186
 581 0100 0A48     		ldr	r0, .L53
 582 0102 D0F80432 		ldr	r3, [r0, #516]
 583 0106 1343     		orrs	r3, r3, r2
 584 0108 C0F80432 		str	r3, [r0, #516]
 585 010c CBE7     		b	.L41
 586              	.L42:
 975:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
 587              		.loc 1 975 7 view .LVU187
 588 010e 0748     		ldr	r0, .L53
 589 0110 D0F81432 		ldr	r3, [r0, #532]
 590 0114 1343     		orrs	r3, r3, r2
 591 0116 C0F81432 		str	r3, [r0, #532]
 592 011a CCE7     		b	.L43
 593              	.L52:
 981:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
 594              		.loc 1 981 7 view .LVU188
 595 011c 0349     		ldr	r1, .L53
 596              	.LVL25:
 981:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
 597              		.loc 1 981 7 is_stmt 0 view .LVU189
 598 011e D1F81C32 		ldr	r3, [r1, #540]
 599 0122 1A43     		orrs	r2, r2, r3
 600              	.LVL26:
 981:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
 601              		.loc 1 981 7 view .LVU190
 602 0124 C1F81C22 		str	r2, [r1, #540]
 603 0128 C8E7     		b	.L44
 604              	.L54:
 605 012a 00BF     		.align	2
 606              	.L53:
 607 012c 00640040 		.word	1073767424
ARM GAS  /tmp/ccpEJ30p.s 			page 32


 608              		.cfi_endproc
 609              	.LFE243:
 611              		.section	.text.HAL_CAN_Start,"ax",%progbits
 612              		.align	1
 613              		.global	HAL_CAN_Start
 614              		.syntax unified
 615              		.thumb
 616              		.thumb_func
 617              		.fpu fpv4-sp-d16
 619              	HAL_CAN_Start:
 620              	.LVL27:
 621              	.LFB244:
 998:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 999:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** /**
1000:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @}
1001:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   */
1002:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1003:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group3 Control functions
1004:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @brief    Control functions
1005:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *
1006:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** @verbatim
1007:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   ==============================================================================
1008:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****                       ##### Control functions #####
1009:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   ==============================================================================
1010:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     [..]  This section provides functions allowing to:
1011:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_Start                    : Start the CAN module
1012:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_Stop                     : Stop the CAN module
1013:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_RequestSleep             : Request sleep mode entry.
1014:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_WakeUp                   : Wake up from sleep mode.
1015:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_IsSleepActive            : Check is sleep mode is active.
1016:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_AddTxMessage             : Add a message to the Tx mailboxes
1017:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****                                              and activate the corresponding
1018:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****                                              transmission request
1019:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_AbortTxRequest           : Abort transmission request
1020:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_GetTxMailboxesFreeLevel  : Return Tx mailboxes free level
1021:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_IsTxMessagePending       : Check if a transmission request is
1022:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****                                              pending on the selected Tx mailbox
1023:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_GetRxMessage             : Get a CAN frame from the Rx FIFO
1024:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_GetRxFifoFillLevel       : Return Rx FIFO fill level
1025:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1026:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** @endverbatim
1027:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @{
1028:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   */
1029:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1030:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** /**
1031:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @brief  Start the CAN module.
1032:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1033:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1034:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @retval HAL status
1035:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   */
1036:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_Start(CAN_HandleTypeDef *hcan)
1037:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** {
 622              		.loc 1 1037 1 is_stmt 1 view -0
 623              		.cfi_startproc
 624              		@ args = 0, pretend = 0, frame = 0
 625              		@ frame_needed = 0, uses_anonymous_args = 0
 626              		.loc 1 1037 1 is_stmt 0 view .LVU192
ARM GAS  /tmp/ccpEJ30p.s 			page 33


 627 0000 70B5     		push	{r4, r5, r6, lr}
 628              	.LCFI5:
 629              		.cfi_def_cfa_offset 16
 630              		.cfi_offset 4, -16
 631              		.cfi_offset 5, -12
 632              		.cfi_offset 6, -8
 633              		.cfi_offset 14, -4
 634 0002 0446     		mov	r4, r0
1038:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   uint32_t tickstart;
 635              		.loc 1 1038 3 is_stmt 1 view .LVU193
1039:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1040:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   if (hcan->State == HAL_CAN_STATE_READY)
 636              		.loc 1 1040 3 view .LVU194
 637              		.loc 1 1040 11 is_stmt 0 view .LVU195
 638 0004 90F82050 		ldrb	r5, [r0, #32]	@ zero_extendqisi2
 639 0008 EDB2     		uxtb	r5, r5
 640              		.loc 1 1040 6 view .LVU196
 641 000a 012D     		cmp	r5, #1
 642 000c 06D0     		beq	.L61
1041:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
1042:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     /* Change CAN peripheral state */
1043:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     hcan->State = HAL_CAN_STATE_LISTENING;
1044:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1045:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     /* Request leave initialisation */
1046:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_INRQ);
1047:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1048:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     /* Get tick */
1049:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     tickstart = HAL_GetTick();
1050:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1051:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     /* Wait the acknowledge */
1052:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     while ((hcan->Instance->MSR & CAN_MSR_INAK) != 0U)
1053:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
1054:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       /* Check for the Timeout */
1055:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       if ((HAL_GetTick() - tickstart) > CAN_TIMEOUT_VALUE)
1056:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       {
1057:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         /* Update error code */
1058:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_TIMEOUT;
1059:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1060:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         /* Change CAN state */
1061:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_ERROR;
1062:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1063:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         return HAL_ERROR;
1064:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       }
1065:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
1066:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1067:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     /* Reset the CAN ErrorCode */
1068:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCode = HAL_CAN_ERROR_NONE;
1069:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1070:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     /* Return function status */
1071:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     return HAL_OK;
1072:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
1073:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   else
1074:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
1075:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     /* Update error code */
1076:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_READY;
 643              		.loc 1 1076 5 is_stmt 1 view .LVU197
 644              		.loc 1 1076 21 is_stmt 0 view .LVU198
ARM GAS  /tmp/ccpEJ30p.s 			page 34


 645 000e 436A     		ldr	r3, [r0, #36]
 646 0010 43F40023 		orr	r3, r3, #524288
 647 0014 4362     		str	r3, [r0, #36]
1077:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1078:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     return HAL_ERROR;
 648              		.loc 1 1078 5 is_stmt 1 view .LVU199
 649              		.loc 1 1078 12 is_stmt 0 view .LVU200
 650 0016 0125     		movs	r5, #1
 651              	.LVL28:
 652              	.L58:
1079:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
1080:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** }
 653              		.loc 1 1080 1 view .LVU201
 654 0018 2846     		mov	r0, r5
 655 001a 70BD     		pop	{r4, r5, r6, pc}
 656              	.LVL29:
 657              	.L61:
1043:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 658              		.loc 1 1043 5 is_stmt 1 view .LVU202
1043:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 659              		.loc 1 1043 17 is_stmt 0 view .LVU203
 660 001c 0223     		movs	r3, #2
 661 001e 80F82030 		strb	r3, [r0, #32]
1046:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 662              		.loc 1 1046 5 is_stmt 1 view .LVU204
 663 0022 0268     		ldr	r2, [r0]
 664 0024 1368     		ldr	r3, [r2]
 665 0026 23F00103 		bic	r3, r3, #1
 666 002a 1360     		str	r3, [r2]
1049:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 667              		.loc 1 1049 5 view .LVU205
1049:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 668              		.loc 1 1049 17 is_stmt 0 view .LVU206
 669 002c FFF7FEFF 		bl	HAL_GetTick
 670              	.LVL30:
1049:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 671              		.loc 1 1049 17 view .LVU207
 672 0030 0646     		mov	r6, r0
 673              	.LVL31:
1052:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 674              		.loc 1 1052 5 is_stmt 1 view .LVU208
 675              	.L57:
1052:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 676              		.loc 1 1052 11 view .LVU209
1052:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 677              		.loc 1 1052 17 is_stmt 0 view .LVU210
 678 0032 2368     		ldr	r3, [r4]
1052:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 679              		.loc 1 1052 27 view .LVU211
 680 0034 5B68     		ldr	r3, [r3, #4]
1052:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 681              		.loc 1 1052 11 view .LVU212
 682 0036 13F0010F 		tst	r3, #1
 683 003a 0CD0     		beq	.L62
1055:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       {
 684              		.loc 1 1055 7 is_stmt 1 view .LVU213
1055:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       {
ARM GAS  /tmp/ccpEJ30p.s 			page 35


 685              		.loc 1 1055 12 is_stmt 0 view .LVU214
 686 003c FFF7FEFF 		bl	HAL_GetTick
 687              	.LVL32:
1055:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       {
 688              		.loc 1 1055 26 view .LVU215
 689 0040 831B     		subs	r3, r0, r6
1055:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       {
 690              		.loc 1 1055 10 view .LVU216
 691 0042 0A2B     		cmp	r3, #10
 692 0044 F5D9     		bls	.L57
1058:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 693              		.loc 1 1058 9 is_stmt 1 view .LVU217
1058:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 694              		.loc 1 1058 25 is_stmt 0 view .LVU218
 695 0046 636A     		ldr	r3, [r4, #36]
 696 0048 43F40033 		orr	r3, r3, #131072
 697 004c 6362     		str	r3, [r4, #36]
1061:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 698              		.loc 1 1061 9 is_stmt 1 view .LVU219
1061:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 699              		.loc 1 1061 21 is_stmt 0 view .LVU220
 700 004e 0523     		movs	r3, #5
 701 0050 84F82030 		strb	r3, [r4, #32]
1063:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       }
 702              		.loc 1 1063 9 is_stmt 1 view .LVU221
1063:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       }
 703              		.loc 1 1063 16 is_stmt 0 view .LVU222
 704 0054 E0E7     		b	.L58
 705              	.L62:
1068:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 706              		.loc 1 1068 5 is_stmt 1 view .LVU223
1068:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 707              		.loc 1 1068 21 is_stmt 0 view .LVU224
 708 0056 0025     		movs	r5, #0
 709 0058 6562     		str	r5, [r4, #36]
1071:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
 710              		.loc 1 1071 5 is_stmt 1 view .LVU225
1071:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
 711              		.loc 1 1071 12 is_stmt 0 view .LVU226
 712 005a DDE7     		b	.L58
 713              		.cfi_endproc
 714              	.LFE244:
 716              		.section	.text.HAL_CAN_Stop,"ax",%progbits
 717              		.align	1
 718              		.global	HAL_CAN_Stop
 719              		.syntax unified
 720              		.thumb
 721              		.thumb_func
 722              		.fpu fpv4-sp-d16
 724              	HAL_CAN_Stop:
 725              	.LVL33:
 726              	.LFB245:
1081:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1082:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** /**
1083:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @brief  Stop the CAN module and enable access to configuration registers.
1084:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1085:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
ARM GAS  /tmp/ccpEJ30p.s 			page 36


1086:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @retval HAL status
1087:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   */
1088:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_Stop(CAN_HandleTypeDef *hcan)
1089:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** {
 727              		.loc 1 1089 1 is_stmt 1 view -0
 728              		.cfi_startproc
 729              		@ args = 0, pretend = 0, frame = 0
 730              		@ frame_needed = 0, uses_anonymous_args = 0
 731              		.loc 1 1089 1 is_stmt 0 view .LVU228
 732 0000 38B5     		push	{r3, r4, r5, lr}
 733              	.LCFI6:
 734              		.cfi_def_cfa_offset 16
 735              		.cfi_offset 3, -16
 736              		.cfi_offset 4, -12
 737              		.cfi_offset 5, -8
 738              		.cfi_offset 14, -4
 739 0002 0446     		mov	r4, r0
1090:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   uint32_t tickstart;
 740              		.loc 1 1090 3 is_stmt 1 view .LVU229
1091:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1092:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   if (hcan->State == HAL_CAN_STATE_LISTENING)
 741              		.loc 1 1092 3 view .LVU230
 742              		.loc 1 1092 11 is_stmt 0 view .LVU231
 743 0004 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 744 0008 DBB2     		uxtb	r3, r3
 745              		.loc 1 1092 6 view .LVU232
 746 000a 022B     		cmp	r3, #2
 747 000c 05D0     		beq	.L69
1093:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
1094:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     /* Request initialisation */
1095:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_INRQ);
1096:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1097:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     /* Get tick */
1098:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     tickstart = HAL_GetTick();
1099:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1100:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     /* Wait the acknowledge */
1101:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     while ((hcan->Instance->MSR & CAN_MSR_INAK) == 0U)
1102:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
1103:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       /* Check for the Timeout */
1104:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       if ((HAL_GetTick() - tickstart) > CAN_TIMEOUT_VALUE)
1105:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       {
1106:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         /* Update error code */
1107:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_TIMEOUT;
1108:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1109:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         /* Change CAN state */
1110:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_ERROR;
1111:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1112:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         return HAL_ERROR;
1113:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       }
1114:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
1115:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1116:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     /* Exit from sleep mode */
1117:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_SLEEP);
1118:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1119:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     /* Change CAN peripheral state */
1120:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     hcan->State = HAL_CAN_STATE_READY;
1121:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
ARM GAS  /tmp/ccpEJ30p.s 			page 37


1122:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     /* Return function status */
1123:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     return HAL_OK;
1124:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
1125:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   else
1126:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
1127:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     /* Update error code */
1128:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_STARTED;
 748              		.loc 1 1128 5 is_stmt 1 view .LVU233
 749              		.loc 1 1128 21 is_stmt 0 view .LVU234
 750 000e 436A     		ldr	r3, [r0, #36]
 751 0010 43F48013 		orr	r3, r3, #1048576
 752 0014 4362     		str	r3, [r0, #36]
1129:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1130:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     return HAL_ERROR;
 753              		.loc 1 1130 5 is_stmt 1 view .LVU235
 754              		.loc 1 1130 12 is_stmt 0 view .LVU236
 755 0016 0120     		movs	r0, #1
 756              	.LVL34:
 757              	.L66:
1131:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
1132:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** }
 758              		.loc 1 1132 1 view .LVU237
 759 0018 38BD     		pop	{r3, r4, r5, pc}
 760              	.LVL35:
 761              	.L69:
1095:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 762              		.loc 1 1095 5 is_stmt 1 view .LVU238
 763 001a 0268     		ldr	r2, [r0]
 764 001c 1368     		ldr	r3, [r2]
 765 001e 43F00103 		orr	r3, r3, #1
 766 0022 1360     		str	r3, [r2]
1098:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 767              		.loc 1 1098 5 view .LVU239
1098:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 768              		.loc 1 1098 17 is_stmt 0 view .LVU240
 769 0024 FFF7FEFF 		bl	HAL_GetTick
 770              	.LVL36:
1098:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 771              		.loc 1 1098 17 view .LVU241
 772 0028 0546     		mov	r5, r0
 773              	.LVL37:
1101:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 774              		.loc 1 1101 5 is_stmt 1 view .LVU242
 775              	.L65:
1101:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 776              		.loc 1 1101 11 view .LVU243
1101:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 777              		.loc 1 1101 17 is_stmt 0 view .LVU244
 778 002a 2368     		ldr	r3, [r4]
1101:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 779              		.loc 1 1101 27 view .LVU245
 780 002c 5A68     		ldr	r2, [r3, #4]
1101:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 781              		.loc 1 1101 11 view .LVU246
 782 002e 12F0010F 		tst	r2, #1
 783 0032 0DD1     		bne	.L70
1104:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       {
ARM GAS  /tmp/ccpEJ30p.s 			page 38


 784              		.loc 1 1104 7 is_stmt 1 view .LVU247
1104:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       {
 785              		.loc 1 1104 12 is_stmt 0 view .LVU248
 786 0034 FFF7FEFF 		bl	HAL_GetTick
 787              	.LVL38:
1104:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       {
 788              		.loc 1 1104 26 view .LVU249
 789 0038 431B     		subs	r3, r0, r5
1104:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       {
 790              		.loc 1 1104 10 view .LVU250
 791 003a 0A2B     		cmp	r3, #10
 792 003c F5D9     		bls	.L65
1107:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 793              		.loc 1 1107 9 is_stmt 1 view .LVU251
1107:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 794              		.loc 1 1107 25 is_stmt 0 view .LVU252
 795 003e 636A     		ldr	r3, [r4, #36]
 796 0040 43F40033 		orr	r3, r3, #131072
 797 0044 6362     		str	r3, [r4, #36]
1110:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 798              		.loc 1 1110 9 is_stmt 1 view .LVU253
1110:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 799              		.loc 1 1110 21 is_stmt 0 view .LVU254
 800 0046 0523     		movs	r3, #5
 801 0048 84F82030 		strb	r3, [r4, #32]
1112:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       }
 802              		.loc 1 1112 9 is_stmt 1 view .LVU255
1112:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       }
 803              		.loc 1 1112 16 is_stmt 0 view .LVU256
 804 004c 0120     		movs	r0, #1
 805 004e E3E7     		b	.L66
 806              	.L70:
1117:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 807              		.loc 1 1117 5 is_stmt 1 view .LVU257
 808 0050 1A68     		ldr	r2, [r3]
 809 0052 22F00202 		bic	r2, r2, #2
 810 0056 1A60     		str	r2, [r3]
1120:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 811              		.loc 1 1120 5 view .LVU258
1120:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 812              		.loc 1 1120 17 is_stmt 0 view .LVU259
 813 0058 0123     		movs	r3, #1
 814 005a 84F82030 		strb	r3, [r4, #32]
1123:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
 815              		.loc 1 1123 5 is_stmt 1 view .LVU260
1123:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
 816              		.loc 1 1123 12 is_stmt 0 view .LVU261
 817 005e 0020     		movs	r0, #0
 818 0060 DAE7     		b	.L66
 819              		.cfi_endproc
 820              	.LFE245:
 822              		.section	.text.HAL_CAN_DeInit,"ax",%progbits
 823              		.align	1
 824              		.global	HAL_CAN_DeInit
 825              		.syntax unified
 826              		.thumb
 827              		.thumb_func
ARM GAS  /tmp/ccpEJ30p.s 			page 39


 828              		.fpu fpv4-sp-d16
 830              	HAL_CAN_DeInit:
 831              	.LVL39:
 832              	.LFB240:
 461:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   /* Check CAN handle */
 833              		.loc 1 461 1 is_stmt 1 view -0
 834              		.cfi_startproc
 835              		@ args = 0, pretend = 0, frame = 0
 836              		@ frame_needed = 0, uses_anonymous_args = 0
 463:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
 837              		.loc 1 463 3 view .LVU263
 463:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
 838              		.loc 1 463 6 is_stmt 0 view .LVU264
 839 0000 80B1     		cbz	r0, .L73
 461:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   /* Check CAN handle */
 840              		.loc 1 461 1 view .LVU265
 841 0002 10B5     		push	{r4, lr}
 842              	.LCFI7:
 843              		.cfi_def_cfa_offset 8
 844              		.cfi_offset 4, -8
 845              		.cfi_offset 14, -4
 846 0004 0446     		mov	r4, r0
 469:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 847              		.loc 1 469 3 is_stmt 1 view .LVU266
 472:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 848              		.loc 1 472 3 view .LVU267
 472:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 849              		.loc 1 472 9 is_stmt 0 view .LVU268
 850 0006 FFF7FEFF 		bl	HAL_CAN_Stop
 851              	.LVL40:
 485:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 852              		.loc 1 485 3 is_stmt 1 view .LVU269
 853 000a 2046     		mov	r0, r4
 854 000c FFF7FEFF 		bl	HAL_CAN_MspDeInit
 855              	.LVL41:
 489:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 856              		.loc 1 489 3 view .LVU270
 857 0010 2268     		ldr	r2, [r4]
 858 0012 1368     		ldr	r3, [r2]
 859 0014 43F40043 		orr	r3, r3, #32768
 860 0018 1360     		str	r3, [r2]
 492:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 861              		.loc 1 492 3 view .LVU271
 492:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 862              		.loc 1 492 19 is_stmt 0 view .LVU272
 863 001a 0020     		movs	r0, #0
 864 001c 6062     		str	r0, [r4, #36]
 495:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 865              		.loc 1 495 3 is_stmt 1 view .LVU273
 495:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 866              		.loc 1 495 15 is_stmt 0 view .LVU274
 867 001e 84F82000 		strb	r0, [r4, #32]
 498:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** }
 868              		.loc 1 498 3 is_stmt 1 view .LVU275
 499:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 869              		.loc 1 499 1 is_stmt 0 view .LVU276
 870 0022 10BD     		pop	{r4, pc}
ARM GAS  /tmp/ccpEJ30p.s 			page 40


 871              	.LVL42:
 872              	.L73:
 873              	.LCFI8:
 874              		.cfi_def_cfa_offset 0
 875              		.cfi_restore 4
 876              		.cfi_restore 14
 465:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
 877              		.loc 1 465 12 view .LVU277
 878 0024 0120     		movs	r0, #1
 879              	.LVL43:
 499:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 880              		.loc 1 499 1 view .LVU278
 881 0026 7047     		bx	lr
 882              		.cfi_endproc
 883              	.LFE240:
 885              		.section	.text.HAL_CAN_RequestSleep,"ax",%progbits
 886              		.align	1
 887              		.global	HAL_CAN_RequestSleep
 888              		.syntax unified
 889              		.thumb
 890              		.thumb_func
 891              		.fpu fpv4-sp-d16
 893              	HAL_CAN_RequestSleep:
 894              	.LVL44:
 895              	.LFB246:
1133:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1134:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** /**
1135:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @brief  Request the sleep mode (low power) entry.
1136:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *         When returning from this function, Sleep mode will be entered
1137:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *         as soon as the current CAN activity (transmission or reception
1138:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *         of a CAN frame) has been completed.
1139:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1140:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1141:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @retval HAL status.
1142:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   */
1143:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_RequestSleep(CAN_HandleTypeDef *hcan)
1144:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** {
 896              		.loc 1 1144 1 is_stmt 1 view -0
 897              		.cfi_startproc
 898              		@ args = 0, pretend = 0, frame = 0
 899              		@ frame_needed = 0, uses_anonymous_args = 0
 900              		@ link register save eliminated.
1145:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 901              		.loc 1 1145 3 view .LVU280
 902              		.loc 1 1145 24 is_stmt 0 view .LVU281
 903 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 904              	.LVL45:
1146:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1147:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 905              		.loc 1 1147 3 is_stmt 1 view .LVU282
 906              		.loc 1 1147 38 is_stmt 0 view .LVU283
 907 0004 013B     		subs	r3, r3, #1
 908              	.LVL46:
 909              		.loc 1 1147 38 view .LVU284
 910 0006 DBB2     		uxtb	r3, r3
 911              		.loc 1 1147 6 view .LVU285
 912 0008 012B     		cmp	r3, #1
ARM GAS  /tmp/ccpEJ30p.s 			page 41


 913 000a 05D9     		bls	.L81
1148:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1149:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
1150:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     /* Request Sleep mode */
1151:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_SLEEP);
1152:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1153:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     /* Return function status */
1154:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     return HAL_OK;
1155:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
1156:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   else
1157:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
1158:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     /* Update error code */
1159:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 914              		.loc 1 1159 5 is_stmt 1 view .LVU286
 915              		.loc 1 1159 21 is_stmt 0 view .LVU287
 916 000c 436A     		ldr	r3, [r0, #36]
 917 000e 43F48023 		orr	r3, r3, #262144
 918 0012 4362     		str	r3, [r0, #36]
1160:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1161:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     /* Return function status */
1162:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     return HAL_ERROR;
 919              		.loc 1 1162 5 is_stmt 1 view .LVU288
 920              		.loc 1 1162 12 is_stmt 0 view .LVU289
 921 0014 0120     		movs	r0, #1
 922              	.LVL47:
1163:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
1164:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** }
 923              		.loc 1 1164 1 view .LVU290
 924 0016 7047     		bx	lr
 925              	.LVL48:
 926              	.L81:
1151:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 927              		.loc 1 1151 5 is_stmt 1 view .LVU291
 928 0018 0268     		ldr	r2, [r0]
 929 001a 1368     		ldr	r3, [r2]
 930 001c 43F00203 		orr	r3, r3, #2
 931 0020 1360     		str	r3, [r2]
1154:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
 932              		.loc 1 1154 5 view .LVU292
1154:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
 933              		.loc 1 1154 12 is_stmt 0 view .LVU293
 934 0022 0020     		movs	r0, #0
 935              	.LVL49:
1154:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
 936              		.loc 1 1154 12 view .LVU294
 937 0024 7047     		bx	lr
 938              		.cfi_endproc
 939              	.LFE246:
 941              		.section	.text.HAL_CAN_WakeUp,"ax",%progbits
 942              		.align	1
 943              		.global	HAL_CAN_WakeUp
 944              		.syntax unified
 945              		.thumb
 946              		.thumb_func
 947              		.fpu fpv4-sp-d16
 949              	HAL_CAN_WakeUp:
 950              	.LVL50:
ARM GAS  /tmp/ccpEJ30p.s 			page 42


 951              	.LFB247:
1165:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1166:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** /**
1167:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @brief  Wake up from sleep mode.
1168:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *         When returning with HAL_OK status from this function, Sleep mode
1169:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *         is exited.
1170:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1171:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1172:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @retval HAL status.
1173:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   */
1174:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_WakeUp(CAN_HandleTypeDef *hcan)
1175:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** {
 952              		.loc 1 1175 1 is_stmt 1 view -0
 953              		.cfi_startproc
 954              		@ args = 0, pretend = 0, frame = 8
 955              		@ frame_needed = 0, uses_anonymous_args = 0
 956              		@ link register save eliminated.
 957              		.loc 1 1175 1 is_stmt 0 view .LVU296
 958 0000 82B0     		sub	sp, sp, #8
 959              	.LCFI9:
 960              		.cfi_def_cfa_offset 8
1176:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   __IO uint32_t count = 0;
 961              		.loc 1 1176 3 is_stmt 1 view .LVU297
 962              		.loc 1 1176 17 is_stmt 0 view .LVU298
 963 0002 0023     		movs	r3, #0
 964 0004 0193     		str	r3, [sp, #4]
1177:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 965              		.loc 1 1177 3 is_stmt 1 view .LVU299
 966              		.loc 1 1177 24 is_stmt 0 view .LVU300
 967 0006 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 968              	.LVL51:
1178:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1179:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 969              		.loc 1 1179 3 is_stmt 1 view .LVU301
 970              		.loc 1 1179 38 is_stmt 0 view .LVU302
 971 000a 013B     		subs	r3, r3, #1
 972              	.LVL52:
 973              		.loc 1 1179 38 view .LVU303
 974 000c DBB2     		uxtb	r3, r3
 975              		.loc 1 1179 6 view .LVU304
 976 000e 012B     		cmp	r3, #1
 977 0010 18D8     		bhi	.L83
1180:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1181:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
1182:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     /* Wake up request */
1183:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_SLEEP);
 978              		.loc 1 1183 5 is_stmt 1 view .LVU305
 979 0012 0268     		ldr	r2, [r0]
 980 0014 1368     		ldr	r3, [r2]
 981 0016 23F00203 		bic	r3, r3, #2
 982 001a 1360     		str	r3, [r2]
 983              	.L86:
1184:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1185:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     /* Wait sleep mode is exited */
1186:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     do
 984              		.loc 1 1186 5 view .LVU306
1187:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
ARM GAS  /tmp/ccpEJ30p.s 			page 43


1188:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       /* Increment counter */
1189:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       count++;
 985              		.loc 1 1189 7 view .LVU307
 986              		.loc 1 1189 12 is_stmt 0 view .LVU308
 987 001c 019B     		ldr	r3, [sp, #4]
 988 001e 0133     		adds	r3, r3, #1
 989 0020 0193     		str	r3, [sp, #4]
1190:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1191:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       /* Check if timeout is reached */
1192:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       if (count > CAN_WAKEUP_TIMEOUT_COUNTER)
 990              		.loc 1 1192 7 is_stmt 1 view .LVU309
 991              		.loc 1 1192 17 is_stmt 0 view .LVU310
 992 0022 019A     		ldr	r2, [sp, #4]
 993              		.loc 1 1192 10 view .LVU311
 994 0024 0B4B     		ldr	r3, .L89
 995 0026 9A42     		cmp	r2, r3
 996 0028 06D8     		bhi	.L88
1193:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       {
1194:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         /* Update error code */
1195:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_TIMEOUT;
1196:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1197:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         return HAL_ERROR;
1198:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       }
1199:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     } while ((hcan->Instance->MSR & CAN_MSR_SLAK) != 0U);
 997              		.loc 1 1199 13 is_stmt 1 view .LVU312
 998              		.loc 1 1199 19 is_stmt 0 view .LVU313
 999 002a 0368     		ldr	r3, [r0]
 1000              		.loc 1 1199 29 view .LVU314
 1001 002c 5B68     		ldr	r3, [r3, #4]
 1002              		.loc 1 1199 5 view .LVU315
 1003 002e 13F0020F 		tst	r3, #2
 1004 0032 F3D1     		bne	.L86
1200:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1201:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     /* Return function status */
1202:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     return HAL_OK;
 1005              		.loc 1 1202 12 view .LVU316
 1006 0034 0020     		movs	r0, #0
 1007              	.LVL53:
 1008              		.loc 1 1202 12 view .LVU317
 1009 0036 0AE0     		b	.L85
 1010              	.LVL54:
 1011              	.L88:
1195:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 1012              		.loc 1 1195 9 is_stmt 1 view .LVU318
1195:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 1013              		.loc 1 1195 25 is_stmt 0 view .LVU319
 1014 0038 436A     		ldr	r3, [r0, #36]
 1015 003a 43F40033 		orr	r3, r3, #131072
 1016 003e 4362     		str	r3, [r0, #36]
1197:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       }
 1017              		.loc 1 1197 9 is_stmt 1 view .LVU320
1197:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       }
 1018              		.loc 1 1197 16 is_stmt 0 view .LVU321
 1019 0040 0120     		movs	r0, #1
 1020              	.LVL55:
1197:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       }
 1021              		.loc 1 1197 16 view .LVU322
ARM GAS  /tmp/ccpEJ30p.s 			page 44


 1022 0042 04E0     		b	.L85
 1023              	.LVL56:
 1024              	.L83:
1203:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
1204:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   else
1205:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
1206:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     /* Update error code */
1207:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 1025              		.loc 1 1207 5 is_stmt 1 view .LVU323
 1026              		.loc 1 1207 21 is_stmt 0 view .LVU324
 1027 0044 436A     		ldr	r3, [r0, #36]
 1028 0046 43F48023 		orr	r3, r3, #262144
 1029 004a 4362     		str	r3, [r0, #36]
1208:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1209:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     return HAL_ERROR;
 1030              		.loc 1 1209 5 is_stmt 1 view .LVU325
 1031              		.loc 1 1209 12 is_stmt 0 view .LVU326
 1032 004c 0120     		movs	r0, #1
 1033              	.LVL57:
 1034              	.L85:
1210:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
1211:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** }
 1035              		.loc 1 1211 1 view .LVU327
 1036 004e 02B0     		add	sp, sp, #8
 1037              	.LCFI10:
 1038              		.cfi_def_cfa_offset 0
 1039              		@ sp needed
 1040 0050 7047     		bx	lr
 1041              	.L90:
 1042 0052 00BF     		.align	2
 1043              	.L89:
 1044 0054 40420F00 		.word	1000000
 1045              		.cfi_endproc
 1046              	.LFE247:
 1048              		.section	.text.HAL_CAN_IsSleepActive,"ax",%progbits
 1049              		.align	1
 1050              		.global	HAL_CAN_IsSleepActive
 1051              		.syntax unified
 1052              		.thumb
 1053              		.thumb_func
 1054              		.fpu fpv4-sp-d16
 1056              	HAL_CAN_IsSleepActive:
 1057              	.LVL58:
 1058              	.LFB248:
1212:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1213:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** /**
1214:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @brief  Check is sleep mode is active.
1215:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1216:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1217:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @retval Status
1218:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *          - 0 : Sleep mode is not active.
1219:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *          - 1 : Sleep mode is active.
1220:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   */
1221:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** uint32_t HAL_CAN_IsSleepActive(const CAN_HandleTypeDef *hcan)
1222:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** {
 1059              		.loc 1 1222 1 is_stmt 1 view -0
 1060              		.cfi_startproc
ARM GAS  /tmp/ccpEJ30p.s 			page 45


 1061              		@ args = 0, pretend = 0, frame = 0
 1062              		@ frame_needed = 0, uses_anonymous_args = 0
 1063              		@ link register save eliminated.
1223:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   uint32_t status = 0U;
 1064              		.loc 1 1223 3 view .LVU329
1224:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1065              		.loc 1 1224 3 view .LVU330
 1066              		.loc 1 1224 24 is_stmt 0 view .LVU331
 1067 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1068              	.LVL59:
1225:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1226:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1069              		.loc 1 1226 3 is_stmt 1 view .LVU332
 1070              		.loc 1 1226 38 is_stmt 0 view .LVU333
 1071 0004 013B     		subs	r3, r3, #1
 1072              	.LVL60:
 1073              		.loc 1 1226 38 view .LVU334
 1074 0006 DBB2     		uxtb	r3, r3
 1075              		.loc 1 1226 6 view .LVU335
 1076 0008 012B     		cmp	r3, #1
 1077 000a 01D9     		bls	.L95
1223:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1078              		.loc 1 1223 12 view .LVU336
 1079 000c 0020     		movs	r0, #0
 1080              	.LVL61:
1223:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1081              		.loc 1 1223 12 view .LVU337
 1082 000e 7047     		bx	lr
 1083              	.LVL62:
 1084              	.L95:
1227:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1228:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
1229:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     /* Check Sleep mode */
1230:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     if ((hcan->Instance->MSR & CAN_MSR_SLAK) != 0U)
 1085              		.loc 1 1230 5 is_stmt 1 view .LVU338
 1086              		.loc 1 1230 14 is_stmt 0 view .LVU339
 1087 0010 0368     		ldr	r3, [r0]
 1088              		.loc 1 1230 24 view .LVU340
 1089 0012 5868     		ldr	r0, [r3, #4]
 1090              	.LVL63:
 1091              		.loc 1 1230 8 view .LVU341
 1092 0014 10F00200 		ands	r0, r0, #2
 1093 0018 00D1     		bne	.L94
 1094 001a 7047     		bx	lr
 1095              	.L94:
1231:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
1232:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       status = 1U;
 1096              		.loc 1 1232 14 view .LVU342
 1097 001c 0120     		movs	r0, #1
 1098              	.LVL64:
1233:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
1234:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
1235:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1236:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   /* Return function status */
1237:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   return status;
 1099              		.loc 1 1237 3 is_stmt 1 view .LVU343
1238:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** }
ARM GAS  /tmp/ccpEJ30p.s 			page 46


 1100              		.loc 1 1238 1 is_stmt 0 view .LVU344
 1101 001e 7047     		bx	lr
 1102              		.cfi_endproc
 1103              	.LFE248:
 1105              		.section	.text.HAL_CAN_AddTxMessage,"ax",%progbits
 1106              		.align	1
 1107              		.global	HAL_CAN_AddTxMessage
 1108              		.syntax unified
 1109              		.thumb
 1110              		.thumb_func
 1111              		.fpu fpv4-sp-d16
 1113              	HAL_CAN_AddTxMessage:
 1114              	.LVL65:
 1115              	.LFB249:
1239:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1240:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** /**
1241:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @brief  Add a message to the first free Tx mailbox and activate the
1242:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *         corresponding transmission request.
1243:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1244:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1245:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @param  pHeader pointer to a CAN_TxHeaderTypeDef structure.
1246:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @param  aData array containing the payload of the Tx frame.
1247:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @param  pTxMailbox pointer to a variable where the function will return
1248:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *         the TxMailbox used to store the Tx message.
1249:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *         This parameter can be a value of @arg CAN_Tx_Mailboxes.
1250:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @retval HAL status
1251:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   */
1252:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_AddTxMessage(CAN_HandleTypeDef *hcan, const CAN_TxHeaderTypeDef *pHeader,
1253:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****                                        const uint8_t aData[], uint32_t *pTxMailbox)
1254:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** {
 1116              		.loc 1 1254 1 is_stmt 1 view -0
 1117              		.cfi_startproc
 1118              		@ args = 0, pretend = 0, frame = 0
 1119              		@ frame_needed = 0, uses_anonymous_args = 0
 1120              		@ link register save eliminated.
 1121              		.loc 1 1254 1 is_stmt 0 view .LVU346
 1122 0000 70B4     		push	{r4, r5, r6}
 1123              	.LCFI11:
 1124              		.cfi_def_cfa_offset 12
 1125              		.cfi_offset 4, -12
 1126              		.cfi_offset 5, -8
 1127              		.cfi_offset 6, -4
1255:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   uint32_t transmitmailbox;
 1128              		.loc 1 1255 3 is_stmt 1 view .LVU347
1256:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1129              		.loc 1 1256 3 view .LVU348
 1130              		.loc 1 1256 24 is_stmt 0 view .LVU349
 1131 0002 90F82040 		ldrb	r4, [r0, #32]	@ zero_extendqisi2
 1132              	.LVL66:
1257:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   uint32_t tsr = READ_REG(hcan->Instance->TSR);
 1133              		.loc 1 1257 3 is_stmt 1 view .LVU350
 1134              		.loc 1 1257 18 is_stmt 0 view .LVU351
 1135 0006 0568     		ldr	r5, [r0]
 1136              		.loc 1 1257 12 view .LVU352
 1137 0008 AD68     		ldr	r5, [r5, #8]
 1138              	.LVL67:
1258:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
ARM GAS  /tmp/ccpEJ30p.s 			page 47


1259:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   /* Check the parameters */
1260:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_IDTYPE(pHeader->IDE));
 1139              		.loc 1 1260 3 is_stmt 1 view .LVU353
1261:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_RTR(pHeader->RTR));
 1140              		.loc 1 1261 3 view .LVU354
1262:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_DLC(pHeader->DLC));
 1141              		.loc 1 1262 3 view .LVU355
1263:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   if (pHeader->IDE == CAN_ID_STD)
 1142              		.loc 1 1263 3 view .LVU356
1264:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
1265:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     assert_param(IS_CAN_STDID(pHeader->StdId));
1266:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
1267:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   else
1268:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
1269:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     assert_param(IS_CAN_EXTID(pHeader->ExtId));
 1143              		.loc 1 1269 5 view .LVU357
1270:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
1271:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(pHeader->TransmitGlobalTime));
 1144              		.loc 1 1271 3 view .LVU358
1272:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1273:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1145              		.loc 1 1273 3 view .LVU359
 1146              		.loc 1 1273 38 is_stmt 0 view .LVU360
 1147 000a 013C     		subs	r4, r4, #1
 1148              	.LVL68:
 1149              		.loc 1 1273 38 view .LVU361
 1150 000c E4B2     		uxtb	r4, r4
 1151              		.loc 1 1273 6 view .LVU362
 1152 000e 012C     		cmp	r4, #1
 1153 0010 5DD8     		bhi	.L97
1274:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1275:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
1276:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     /* Check that all the Tx mailboxes are not full */
1277:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     if (((tsr & CAN_TSR_TME0) != 0U) ||
 1154              		.loc 1 1277 5 is_stmt 1 view .LVU363
 1155              		.loc 1 1277 8 is_stmt 0 view .LVU364
 1156 0012 15F0E05F 		tst	r5, #469762048
 1157 0016 54D0     		beq	.L98
1278:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         ((tsr & CAN_TSR_TME1) != 0U) ||
1279:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         ((tsr & CAN_TSR_TME2) != 0U))
1280:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
1281:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       /* Select an empty transmit mailbox */
1282:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       transmitmailbox = (tsr & CAN_TSR_CODE) >> CAN_TSR_CODE_Pos;
 1158              		.loc 1 1282 7 is_stmt 1 view .LVU365
 1159              		.loc 1 1282 23 is_stmt 0 view .LVU366
 1160 0018 C5F30164 		ubfx	r4, r5, #24, #2
 1161              	.LVL69:
1283:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1284:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       /* Store the Tx mailbox */
1285:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       *pTxMailbox = (uint32_t)1 << transmitmailbox;
 1162              		.loc 1 1285 7 is_stmt 1 view .LVU367
 1163              		.loc 1 1285 33 is_stmt 0 view .LVU368
 1164 001c 0125     		movs	r5, #1
 1165              	.LVL70:
 1166              		.loc 1 1285 33 view .LVU369
 1167 001e A540     		lsls	r5, r5, r4
 1168              		.loc 1 1285 19 view .LVU370
ARM GAS  /tmp/ccpEJ30p.s 			page 48


 1169 0020 1D60     		str	r5, [r3]
1286:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1287:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       /* Set up the Id */
1288:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       if (pHeader->IDE == CAN_ID_STD)
 1170              		.loc 1 1288 7 is_stmt 1 view .LVU371
 1171              		.loc 1 1288 18 is_stmt 0 view .LVU372
 1172 0022 8B68     		ldr	r3, [r1, #8]
 1173              	.LVL71:
 1174              		.loc 1 1288 10 view .LVU373
 1175 0024 002B     		cmp	r3, #0
 1176 0026 39D1     		bne	.L99
1289:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       {
1290:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         hcan->Instance->sTxMailBox[transmitmailbox].TIR = ((pHeader->StdId << CAN_TI0R_STID_Pos) |
 1177              		.loc 1 1290 9 is_stmt 1 view .LVU374
 1178              		.loc 1 1290 68 is_stmt 0 view .LVU375
 1179 0028 0E68     		ldr	r6, [r1]
1291:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****                                                            pHeader->RTR);
 1180              		.loc 1 1291 67 view .LVU376
 1181 002a CB68     		ldr	r3, [r1, #12]
1290:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****                                                            pHeader->RTR);
 1182              		.loc 1 1290 13 view .LVU377
 1183 002c 0568     		ldr	r5, [r0]
1290:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****                                                            pHeader->RTR);
 1184              		.loc 1 1290 98 view .LVU378
 1185 002e 43EA4656 		orr	r6, r3, r6, lsl #21
1290:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****                                                            pHeader->RTR);
 1186              		.loc 1 1290 57 view .LVU379
 1187 0032 04F11803 		add	r3, r4, #24
 1188 0036 1B01     		lsls	r3, r3, #4
 1189 0038 EE50     		str	r6, [r5, r3]
 1190              	.L100:
1292:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       }
1293:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       else
1294:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       {
1295:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         hcan->Instance->sTxMailBox[transmitmailbox].TIR = ((pHeader->ExtId << CAN_TI0R_EXID_Pos) |
1296:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****                                                            pHeader->IDE |
1297:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****                                                            pHeader->RTR);
1298:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       }
1299:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1300:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       /* Set up the DLC */
1301:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       hcan->Instance->sTxMailBox[transmitmailbox].TDTR = (pHeader->DLC);
 1191              		.loc 1 1301 7 is_stmt 1 view .LVU380
 1192              		.loc 1 1301 11 is_stmt 0 view .LVU381
 1193 003a 0368     		ldr	r3, [r0]
 1194              		.loc 1 1301 66 view .LVU382
 1195 003c 0D69     		ldr	r5, [r1, #16]
 1196              		.loc 1 1301 56 view .LVU383
 1197 003e 04F11806 		add	r6, r4, #24
 1198 0042 03EB0613 		add	r3, r3, r6, lsl #4
 1199 0046 5D60     		str	r5, [r3, #4]
1302:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1303:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       /* Set up the Transmit Global Time mode */
1304:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       if (pHeader->TransmitGlobalTime == ENABLE)
 1200              		.loc 1 1304 7 is_stmt 1 view .LVU384
 1201              		.loc 1 1304 18 is_stmt 0 view .LVU385
 1202 0048 0B7D     		ldrb	r3, [r1, #20]	@ zero_extendqisi2
 1203              		.loc 1 1304 10 view .LVU386
ARM GAS  /tmp/ccpEJ30p.s 			page 49


 1204 004a 012B     		cmp	r3, #1
 1205 004c 31D0     		beq	.L104
 1206              	.LVL72:
 1207              	.L101:
1305:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       {
1306:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         SET_BIT(hcan->Instance->sTxMailBox[transmitmailbox].TDTR, CAN_TDT0R_TGT);
1307:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       }
1308:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1309:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       /* Set up the data field */
1310:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       WRITE_REG(hcan->Instance->sTxMailBox[transmitmailbox].TDHR,
 1208              		.loc 1 1310 7 is_stmt 1 view .LVU387
 1209 004e D179     		ldrb	r1, [r2, #7]	@ zero_extendqisi2
 1210 0050 9379     		ldrb	r3, [r2, #6]	@ zero_extendqisi2
 1211 0052 1B04     		lsls	r3, r3, #16
 1212 0054 43EA0163 		orr	r3, r3, r1, lsl #24
 1213 0058 5179     		ldrb	r1, [r2, #5]	@ zero_extendqisi2
 1214 005a 43EA0123 		orr	r3, r3, r1, lsl #8
 1215 005e 1579     		ldrb	r5, [r2, #4]	@ zero_extendqisi2
 1216 0060 0168     		ldr	r1, [r0]
 1217 0062 2B43     		orrs	r3, r3, r5
 1218 0064 01EB0411 		add	r1, r1, r4, lsl #4
 1219 0068 C1F88C31 		str	r3, [r1, #396]
1311:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****                 ((uint32_t)aData[7] << CAN_TDH0R_DATA7_Pos) |
1312:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****                 ((uint32_t)aData[6] << CAN_TDH0R_DATA6_Pos) |
1313:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****                 ((uint32_t)aData[5] << CAN_TDH0R_DATA5_Pos) |
1314:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****                 ((uint32_t)aData[4] << CAN_TDH0R_DATA4_Pos));
1315:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       WRITE_REG(hcan->Instance->sTxMailBox[transmitmailbox].TDLR,
 1220              		.loc 1 1315 7 view .LVU388
 1221 006c D178     		ldrb	r1, [r2, #3]	@ zero_extendqisi2
 1222 006e 9378     		ldrb	r3, [r2, #2]	@ zero_extendqisi2
 1223 0070 1B04     		lsls	r3, r3, #16
 1224 0072 43EA0163 		orr	r3, r3, r1, lsl #24
 1225 0076 5178     		ldrb	r1, [r2, #1]	@ zero_extendqisi2
 1226 0078 43EA0123 		orr	r3, r3, r1, lsl #8
 1227 007c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1228 007e 0268     		ldr	r2, [r0]
 1229              	.LVL73:
 1230              		.loc 1 1315 7 is_stmt 0 view .LVU389
 1231 0080 0B43     		orrs	r3, r3, r1
 1232 0082 02EB0412 		add	r2, r2, r4, lsl #4
 1233 0086 C2F88831 		str	r3, [r2, #392]
1316:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****                 ((uint32_t)aData[3] << CAN_TDL0R_DATA3_Pos) |
1317:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****                 ((uint32_t)aData[2] << CAN_TDL0R_DATA2_Pos) |
1318:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****                 ((uint32_t)aData[1] << CAN_TDL0R_DATA1_Pos) |
1319:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****                 ((uint32_t)aData[0] << CAN_TDL0R_DATA0_Pos));
1320:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1321:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       /* Request transmission */
1322:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       SET_BIT(hcan->Instance->sTxMailBox[transmitmailbox].TIR, CAN_TI0R_TXRQ);
 1234              		.loc 1 1322 7 is_stmt 1 view .LVU390
 1235 008a 0268     		ldr	r2, [r0]
 1236 008c 1834     		adds	r4, r4, #24
 1237              	.LVL74:
 1238              		.loc 1 1322 7 is_stmt 0 view .LVU391
 1239 008e 2401     		lsls	r4, r4, #4
 1240 0090 1359     		ldr	r3, [r2, r4]
 1241 0092 43F00103 		orr	r3, r3, #1
 1242 0096 1351     		str	r3, [r2, r4]
ARM GAS  /tmp/ccpEJ30p.s 			page 50


1323:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1324:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       /* Return function status */
1325:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       return HAL_OK;
 1243              		.loc 1 1325 7 is_stmt 1 view .LVU392
 1244              		.loc 1 1325 14 is_stmt 0 view .LVU393
 1245 0098 0020     		movs	r0, #0
 1246              	.LVL75:
 1247              		.loc 1 1325 14 view .LVU394
 1248 009a 1DE0     		b	.L102
 1249              	.LVL76:
 1250              	.L99:
1295:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****                                                            pHeader->IDE |
 1251              		.loc 1 1295 9 is_stmt 1 view .LVU395
1295:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****                                                            pHeader->IDE |
 1252              		.loc 1 1295 68 is_stmt 0 view .LVU396
 1253 009c 4D68     		ldr	r5, [r1, #4]
1295:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****                                                            pHeader->IDE |
 1254              		.loc 1 1295 98 view .LVU397
 1255 009e 43EAC503 		orr	r3, r3, r5, lsl #3
1297:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       }
 1256              		.loc 1 1297 67 view .LVU398
 1257 00a2 CD68     		ldr	r5, [r1, #12]
1295:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****                                                            pHeader->IDE |
 1258              		.loc 1 1295 13 view .LVU399
 1259 00a4 0668     		ldr	r6, [r0]
1296:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****                                                            pHeader->RTR);
 1260              		.loc 1 1296 73 view .LVU400
 1261 00a6 2B43     		orrs	r3, r3, r5
1295:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****                                                            pHeader->IDE |
 1262              		.loc 1 1295 57 view .LVU401
 1263 00a8 04F11805 		add	r5, r4, #24
 1264 00ac 2D01     		lsls	r5, r5, #4
 1265 00ae 7351     		str	r3, [r6, r5]
 1266 00b0 C3E7     		b	.L100
 1267              	.L104:
1306:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       }
 1268              		.loc 1 1306 9 is_stmt 1 view .LVU402
 1269 00b2 0368     		ldr	r3, [r0]
 1270 00b4 03EB0613 		add	r3, r3, r6, lsl #4
 1271 00b8 5968     		ldr	r1, [r3, #4]
 1272              	.LVL77:
1306:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       }
 1273              		.loc 1 1306 9 is_stmt 0 view .LVU403
 1274 00ba 41F48071 		orr	r1, r1, #256
 1275 00be 5960     		str	r1, [r3, #4]
 1276 00c0 C5E7     		b	.L101
 1277              	.LVL78:
 1278              	.L98:
1326:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
1327:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     else
1328:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
1329:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       /* Update error code */
1330:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       hcan->ErrorCode |= HAL_CAN_ERROR_PARAM;
 1279              		.loc 1 1330 7 is_stmt 1 view .LVU404
 1280              		.loc 1 1330 23 is_stmt 0 view .LVU405
 1281 00c2 436A     		ldr	r3, [r0, #36]
 1282              	.LVL79:
ARM GAS  /tmp/ccpEJ30p.s 			page 51


 1283              		.loc 1 1330 23 view .LVU406
 1284 00c4 43F40013 		orr	r3, r3, #2097152
 1285 00c8 4362     		str	r3, [r0, #36]
1331:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1332:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       return HAL_ERROR;
 1286              		.loc 1 1332 7 is_stmt 1 view .LVU407
 1287              		.loc 1 1332 14 is_stmt 0 view .LVU408
 1288 00ca 0120     		movs	r0, #1
 1289              	.LVL80:
 1290              		.loc 1 1332 14 view .LVU409
 1291 00cc 04E0     		b	.L102
 1292              	.LVL81:
 1293              	.L97:
1333:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
1334:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
1335:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   else
1336:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
1337:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     /* Update error code */
1338:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 1294              		.loc 1 1338 5 is_stmt 1 view .LVU410
 1295              		.loc 1 1338 21 is_stmt 0 view .LVU411
 1296 00ce 436A     		ldr	r3, [r0, #36]
 1297              	.LVL82:
 1298              		.loc 1 1338 21 view .LVU412
 1299 00d0 43F48023 		orr	r3, r3, #262144
 1300 00d4 4362     		str	r3, [r0, #36]
1339:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1340:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     return HAL_ERROR;
 1301              		.loc 1 1340 5 is_stmt 1 view .LVU413
 1302              		.loc 1 1340 12 is_stmt 0 view .LVU414
 1303 00d6 0120     		movs	r0, #1
 1304              	.LVL83:
 1305              	.L102:
1341:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
1342:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** }
 1306              		.loc 1 1342 1 view .LVU415
 1307 00d8 70BC     		pop	{r4, r5, r6}
 1308              	.LCFI12:
 1309              		.cfi_restore 6
 1310              		.cfi_restore 5
 1311              		.cfi_restore 4
 1312              		.cfi_def_cfa_offset 0
 1313 00da 7047     		bx	lr
 1314              		.cfi_endproc
 1315              	.LFE249:
 1317              		.section	.text.HAL_CAN_AbortTxRequest,"ax",%progbits
 1318              		.align	1
 1319              		.global	HAL_CAN_AbortTxRequest
 1320              		.syntax unified
 1321              		.thumb
 1322              		.thumb_func
 1323              		.fpu fpv4-sp-d16
 1325              	HAL_CAN_AbortTxRequest:
 1326              	.LVL84:
 1327              	.LFB250:
1343:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1344:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** /**
ARM GAS  /tmp/ccpEJ30p.s 			page 52


1345:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @brief  Abort transmission requests
1346:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1347:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1348:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @param  TxMailboxes List of the Tx Mailboxes to abort.
1349:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *         This parameter can be any combination of @arg CAN_Tx_Mailboxes.
1350:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @retval HAL status
1351:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   */
1352:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_AbortTxRequest(CAN_HandleTypeDef *hcan, uint32_t TxMailboxes)
1353:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** {
 1328              		.loc 1 1353 1 is_stmt 1 view -0
 1329              		.cfi_startproc
 1330              		@ args = 0, pretend = 0, frame = 0
 1331              		@ frame_needed = 0, uses_anonymous_args = 0
 1332              		@ link register save eliminated.
1354:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1333              		.loc 1 1354 3 view .LVU417
 1334              		.loc 1 1354 24 is_stmt 0 view .LVU418
 1335 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1336              	.LVL85:
1355:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1356:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   /* Check function parameters */
1357:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_TX_MAILBOX_LIST(TxMailboxes));
 1337              		.loc 1 1357 3 is_stmt 1 view .LVU419
1358:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1359:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1338              		.loc 1 1359 3 view .LVU420
 1339              		.loc 1 1359 38 is_stmt 0 view .LVU421
 1340 0004 013B     		subs	r3, r3, #1
 1341              	.LVL86:
 1342              		.loc 1 1359 38 view .LVU422
 1343 0006 DBB2     		uxtb	r3, r3
 1344              		.loc 1 1359 6 view .LVU423
 1345 0008 012B     		cmp	r3, #1
 1346 000a 05D9     		bls	.L111
1360:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1361:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
1362:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     /* Check Tx Mailbox 0 */
1363:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     if ((TxMailboxes & CAN_TX_MAILBOX0) != 0U)
1364:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
1365:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       /* Add cancellation request for Tx Mailbox 0 */
1366:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       SET_BIT(hcan->Instance->TSR, CAN_TSR_ABRQ0);
1367:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
1368:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1369:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     /* Check Tx Mailbox 1 */
1370:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     if ((TxMailboxes & CAN_TX_MAILBOX1) != 0U)
1371:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
1372:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       /* Add cancellation request for Tx Mailbox 1 */
1373:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       SET_BIT(hcan->Instance->TSR, CAN_TSR_ABRQ1);
1374:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
1375:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1376:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     /* Check Tx Mailbox 2 */
1377:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     if ((TxMailboxes & CAN_TX_MAILBOX2) != 0U)
1378:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
1379:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       /* Add cancellation request for Tx Mailbox 2 */
1380:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       SET_BIT(hcan->Instance->TSR, CAN_TSR_ABRQ2);
1381:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
1382:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
ARM GAS  /tmp/ccpEJ30p.s 			page 53


1383:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     /* Return function status */
1384:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     return HAL_OK;
1385:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
1386:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   else
1387:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
1388:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     /* Update error code */
1389:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 1347              		.loc 1 1389 5 is_stmt 1 view .LVU424
 1348              		.loc 1 1389 21 is_stmt 0 view .LVU425
 1349 000c 436A     		ldr	r3, [r0, #36]
 1350 000e 43F48023 		orr	r3, r3, #262144
 1351 0012 4362     		str	r3, [r0, #36]
1390:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1391:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     return HAL_ERROR;
 1352              		.loc 1 1391 5 is_stmt 1 view .LVU426
 1353              		.loc 1 1391 12 is_stmt 0 view .LVU427
 1354 0014 0120     		movs	r0, #1
 1355              	.LVL87:
1392:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
1393:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** }
 1356              		.loc 1 1393 1 view .LVU428
 1357 0016 7047     		bx	lr
 1358              	.LVL88:
 1359              	.L111:
1363:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 1360              		.loc 1 1363 5 is_stmt 1 view .LVU429
1363:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 1361              		.loc 1 1363 8 is_stmt 0 view .LVU430
 1362 0018 11F0010F 		tst	r1, #1
 1363 001c 04D0     		beq	.L107
1366:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
 1364              		.loc 1 1366 7 is_stmt 1 view .LVU431
 1365 001e 0268     		ldr	r2, [r0]
 1366 0020 9368     		ldr	r3, [r2, #8]
 1367 0022 43F08003 		orr	r3, r3, #128
 1368 0026 9360     		str	r3, [r2, #8]
 1369              	.L107:
1370:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 1370              		.loc 1 1370 5 view .LVU432
1370:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 1371              		.loc 1 1370 8 is_stmt 0 view .LVU433
 1372 0028 11F0020F 		tst	r1, #2
 1373 002c 04D0     		beq	.L108
1373:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
 1374              		.loc 1 1373 7 is_stmt 1 view .LVU434
 1375 002e 0268     		ldr	r2, [r0]
 1376 0030 9368     		ldr	r3, [r2, #8]
 1377 0032 43F40043 		orr	r3, r3, #32768
 1378 0036 9360     		str	r3, [r2, #8]
 1379              	.L108:
1377:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 1380              		.loc 1 1377 5 view .LVU435
1377:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 1381              		.loc 1 1377 8 is_stmt 0 view .LVU436
 1382 0038 11F0040F 		tst	r1, #4
 1383 003c 04D0     		beq	.L109
1380:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
ARM GAS  /tmp/ccpEJ30p.s 			page 54


 1384              		.loc 1 1380 7 is_stmt 1 view .LVU437
 1385 003e 0268     		ldr	r2, [r0]
 1386 0040 9368     		ldr	r3, [r2, #8]
 1387 0042 43F40003 		orr	r3, r3, #8388608
 1388 0046 9360     		str	r3, [r2, #8]
 1389              	.L109:
1384:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
 1390              		.loc 1 1384 5 view .LVU438
1384:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
 1391              		.loc 1 1384 12 is_stmt 0 view .LVU439
 1392 0048 0020     		movs	r0, #0
 1393              	.LVL89:
1384:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
 1394              		.loc 1 1384 12 view .LVU440
 1395 004a 7047     		bx	lr
 1396              		.cfi_endproc
 1397              	.LFE250:
 1399              		.section	.text.HAL_CAN_GetTxMailboxesFreeLevel,"ax",%progbits
 1400              		.align	1
 1401              		.global	HAL_CAN_GetTxMailboxesFreeLevel
 1402              		.syntax unified
 1403              		.thumb
 1404              		.thumb_func
 1405              		.fpu fpv4-sp-d16
 1407              	HAL_CAN_GetTxMailboxesFreeLevel:
 1408              	.LVL90:
 1409              	.LFB251:
1394:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1395:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** /**
1396:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @brief  Return Tx Mailboxes free level: number of free Tx Mailboxes.
1397:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1398:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1399:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @retval Number of free Tx Mailboxes.
1400:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   */
1401:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** uint32_t HAL_CAN_GetTxMailboxesFreeLevel(const CAN_HandleTypeDef *hcan)
1402:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** {
 1410              		.loc 1 1402 1 is_stmt 1 view -0
 1411              		.cfi_startproc
 1412              		@ args = 0, pretend = 0, frame = 0
 1413              		@ frame_needed = 0, uses_anonymous_args = 0
 1414              		@ link register save eliminated.
1403:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   uint32_t freelevel = 0U;
 1415              		.loc 1 1403 3 view .LVU442
1404:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1416              		.loc 1 1404 3 view .LVU443
 1417              		.loc 1 1404 24 is_stmt 0 view .LVU444
 1418 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1419              	.LVL91:
1405:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1406:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1420              		.loc 1 1406 3 is_stmt 1 view .LVU445
 1421              		.loc 1 1406 38 is_stmt 0 view .LVU446
 1422 0004 013B     		subs	r3, r3, #1
 1423              	.LVL92:
 1424              		.loc 1 1406 38 view .LVU447
 1425 0006 DBB2     		uxtb	r3, r3
 1426              		.loc 1 1406 6 view .LVU448
ARM GAS  /tmp/ccpEJ30p.s 			page 55


 1427 0008 012B     		cmp	r3, #1
 1428 000a 01D9     		bls	.L118
1403:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1429              		.loc 1 1403 12 view .LVU449
 1430 000c 0020     		movs	r0, #0
 1431              	.LVL93:
1407:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1408:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
1409:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     /* Check Tx Mailbox 0 status */
1410:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     if ((hcan->Instance->TSR & CAN_TSR_TME0) != 0U)
1411:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
1412:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       freelevel++;
1413:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
1414:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1415:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     /* Check Tx Mailbox 1 status */
1416:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     if ((hcan->Instance->TSR & CAN_TSR_TME1) != 0U)
1417:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
1418:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       freelevel++;
1419:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
1420:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1421:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     /* Check Tx Mailbox 2 status */
1422:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     if ((hcan->Instance->TSR & CAN_TSR_TME2) != 0U)
1423:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
1424:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       freelevel++;
1425:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
1426:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
1427:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1428:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   /* Return Tx Mailboxes free level */
1429:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   return freelevel;
 1432              		.loc 1 1429 3 is_stmt 1 view .LVU450
 1433              	.L112:
1430:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** }
 1434              		.loc 1 1430 1 is_stmt 0 view .LVU451
 1435 000e 7047     		bx	lr
 1436              	.LVL94:
 1437              	.L118:
1410:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 1438              		.loc 1 1410 5 is_stmt 1 view .LVU452
1410:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 1439              		.loc 1 1410 14 is_stmt 0 view .LVU453
 1440 0010 0368     		ldr	r3, [r0]
1410:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 1441              		.loc 1 1410 24 view .LVU454
 1442 0012 9868     		ldr	r0, [r3, #8]
 1443              	.LVL95:
1410:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 1444              		.loc 1 1410 8 view .LVU455
 1445 0014 10F08060 		ands	r0, r0, #67108864
 1446 0018 00D0     		beq	.L114
1412:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
 1447              		.loc 1 1412 16 view .LVU456
 1448 001a 0120     		movs	r0, #1
 1449              	.L114:
 1450              	.LVL96:
1416:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 1451              		.loc 1 1416 5 is_stmt 1 view .LVU457
1416:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
ARM GAS  /tmp/ccpEJ30p.s 			page 56


 1452              		.loc 1 1416 24 is_stmt 0 view .LVU458
 1453 001c 9A68     		ldr	r2, [r3, #8]
1416:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 1454              		.loc 1 1416 8 view .LVU459
 1455 001e 12F0006F 		tst	r2, #134217728
 1456 0022 00D0     		beq	.L115
1418:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
 1457              		.loc 1 1418 7 is_stmt 1 view .LVU460
1418:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
 1458              		.loc 1 1418 16 is_stmt 0 view .LVU461
 1459 0024 0130     		adds	r0, r0, #1
 1460              	.LVL97:
 1461              	.L115:
1422:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 1462              		.loc 1 1422 5 is_stmt 1 view .LVU462
1422:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 1463              		.loc 1 1422 24 is_stmt 0 view .LVU463
 1464 0026 9B68     		ldr	r3, [r3, #8]
1422:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 1465              		.loc 1 1422 8 view .LVU464
 1466 0028 13F0805F 		tst	r3, #268435456
 1467 002c EFD0     		beq	.L112
1424:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
 1468              		.loc 1 1424 7 is_stmt 1 view .LVU465
1424:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
 1469              		.loc 1 1424 16 is_stmt 0 view .LVU466
 1470 002e 0130     		adds	r0, r0, #1
 1471              	.LVL98:
1424:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
 1472              		.loc 1 1424 16 view .LVU467
 1473 0030 7047     		bx	lr
 1474              		.cfi_endproc
 1475              	.LFE251:
 1477              		.section	.text.HAL_CAN_IsTxMessagePending,"ax",%progbits
 1478              		.align	1
 1479              		.global	HAL_CAN_IsTxMessagePending
 1480              		.syntax unified
 1481              		.thumb
 1482              		.thumb_func
 1483              		.fpu fpv4-sp-d16
 1485              	HAL_CAN_IsTxMessagePending:
 1486              	.LVL99:
 1487              	.LFB252:
1431:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1432:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** /**
1433:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @brief  Check if a transmission request is pending on the selected Tx
1434:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *         Mailboxes.
1435:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1436:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1437:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @param  TxMailboxes List of Tx Mailboxes to check.
1438:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *         This parameter can be any combination of @arg CAN_Tx_Mailboxes.
1439:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @retval Status
1440:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *          - 0 : No pending transmission request on any selected Tx Mailboxes.
1441:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *          - 1 : Pending transmission request on at least one of the selected
1442:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *                Tx Mailbox.
1443:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   */
1444:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** uint32_t HAL_CAN_IsTxMessagePending(const CAN_HandleTypeDef *hcan, uint32_t TxMailboxes)
ARM GAS  /tmp/ccpEJ30p.s 			page 57


1445:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** {
 1488              		.loc 1 1445 1 is_stmt 1 view -0
 1489              		.cfi_startproc
 1490              		@ args = 0, pretend = 0, frame = 0
 1491              		@ frame_needed = 0, uses_anonymous_args = 0
 1492              		@ link register save eliminated.
1446:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   uint32_t status = 0U;
 1493              		.loc 1 1446 3 view .LVU469
1447:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1494              		.loc 1 1447 3 view .LVU470
 1495              		.loc 1 1447 24 is_stmt 0 view .LVU471
 1496 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1497              	.LVL100:
1448:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1449:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   /* Check function parameters */
1450:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_TX_MAILBOX_LIST(TxMailboxes));
 1498              		.loc 1 1450 3 is_stmt 1 view .LVU472
1451:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1452:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1499              		.loc 1 1452 3 view .LVU473
 1500              		.loc 1 1452 38 is_stmt 0 view .LVU474
 1501 0004 013B     		subs	r3, r3, #1
 1502              	.LVL101:
 1503              		.loc 1 1452 38 view .LVU475
 1504 0006 DBB2     		uxtb	r3, r3
 1505              		.loc 1 1452 6 view .LVU476
 1506 0008 012B     		cmp	r3, #1
 1507 000a 01D9     		bls	.L123
1446:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1508              		.loc 1 1446 12 view .LVU477
 1509 000c 0020     		movs	r0, #0
 1510              	.LVL102:
1446:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1511              		.loc 1 1446 12 view .LVU478
 1512 000e 7047     		bx	lr
 1513              	.LVL103:
 1514              	.L123:
1453:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1454:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
1455:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     /* Check pending transmission request on the selected Tx Mailboxes */
1456:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     if ((hcan->Instance->TSR & (TxMailboxes << CAN_TSR_TME0_Pos)) != (TxMailboxes << CAN_TSR_TME0_P
 1515              		.loc 1 1456 5 is_stmt 1 view .LVU479
 1516              		.loc 1 1456 14 is_stmt 0 view .LVU480
 1517 0010 0368     		ldr	r3, [r0]
 1518              		.loc 1 1456 24 view .LVU481
 1519 0012 9B68     		ldr	r3, [r3, #8]
 1520              		.loc 1 1456 30 view .LVU482
 1521 0014 03EA8163 		and	r3, r3, r1, lsl #26
 1522              		.loc 1 1456 8 view .LVU483
 1523 0018 B3EB816F 		cmp	r3, r1, lsl #26
 1524 001c 01D0     		beq	.L124
1457:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
1458:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       status = 1U;
 1525              		.loc 1 1458 14 view .LVU484
 1526 001e 0120     		movs	r0, #1
 1527              	.LVL104:
1459:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
ARM GAS  /tmp/ccpEJ30p.s 			page 58


1460:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
1461:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1462:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   /* Return status */
1463:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   return status;
 1528              		.loc 1 1463 3 is_stmt 1 view .LVU485
1464:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** }
 1529              		.loc 1 1464 1 is_stmt 0 view .LVU486
 1530 0020 7047     		bx	lr
 1531              	.LVL105:
 1532              	.L124:
1446:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1533              		.loc 1 1446 12 view .LVU487
 1534 0022 0020     		movs	r0, #0
 1535              	.LVL106:
1446:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1536              		.loc 1 1446 12 view .LVU488
 1537 0024 7047     		bx	lr
 1538              		.cfi_endproc
 1539              	.LFE252:
 1541              		.section	.text.HAL_CAN_GetTxTimestamp,"ax",%progbits
 1542              		.align	1
 1543              		.global	HAL_CAN_GetTxTimestamp
 1544              		.syntax unified
 1545              		.thumb
 1546              		.thumb_func
 1547              		.fpu fpv4-sp-d16
 1549              	HAL_CAN_GetTxTimestamp:
 1550              	.LVL107:
 1551              	.LFB253:
1465:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1466:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** /**
1467:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @brief  Return timestamp of Tx message sent, if time triggered communication
1468:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****             mode is enabled.
1469:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1470:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1471:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @param  TxMailbox Tx Mailbox where the timestamp of message sent will be
1472:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *         read.
1473:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *         This parameter can be one value of @arg CAN_Tx_Mailboxes.
1474:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @retval Timestamp of message sent from Tx Mailbox.
1475:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   */
1476:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** uint32_t HAL_CAN_GetTxTimestamp(const CAN_HandleTypeDef *hcan, uint32_t TxMailbox)
1477:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** {
 1552              		.loc 1 1477 1 is_stmt 1 view -0
 1553              		.cfi_startproc
 1554              		@ args = 0, pretend = 0, frame = 0
 1555              		@ frame_needed = 0, uses_anonymous_args = 0
 1556              		@ link register save eliminated.
1478:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   uint32_t timestamp = 0U;
 1557              		.loc 1 1478 3 view .LVU490
1479:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   uint32_t transmitmailbox;
 1558              		.loc 1 1479 3 view .LVU491
1480:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1559              		.loc 1 1480 3 view .LVU492
 1560              		.loc 1 1480 24 is_stmt 0 view .LVU493
 1561 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1562              	.LVL108:
1481:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
ARM GAS  /tmp/ccpEJ30p.s 			page 59


1482:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   /* Check function parameters */
1483:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_TX_MAILBOX(TxMailbox));
 1563              		.loc 1 1483 3 is_stmt 1 view .LVU494
1484:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1485:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1564              		.loc 1 1485 3 view .LVU495
 1565              		.loc 1 1485 38 is_stmt 0 view .LVU496
 1566 0004 013B     		subs	r3, r3, #1
 1567              	.LVL109:
 1568              		.loc 1 1485 38 view .LVU497
 1569 0006 DBB2     		uxtb	r3, r3
 1570              		.loc 1 1485 6 view .LVU498
 1571 0008 012B     		cmp	r3, #1
 1572 000a 01D9     		bls	.L130
1478:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   uint32_t transmitmailbox;
 1573              		.loc 1 1478 12 view .LVU499
 1574 000c 0020     		movs	r0, #0
 1575              	.LVL110:
1486:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1487:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
1488:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     /* Select the Tx mailbox */
1489:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     transmitmailbox = POSITION_VAL(TxMailbox);
1490:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1491:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     /* Get timestamp */
1492:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     timestamp = (hcan->Instance->sTxMailBox[transmitmailbox].TDTR & CAN_TDT0R_TIME) >> CAN_TDT0R_TI
1493:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
1494:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1495:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   /* Return the timestamp */
1496:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   return timestamp;
 1576              		.loc 1 1496 3 is_stmt 1 view .LVU500
1497:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** }
 1577              		.loc 1 1497 1 is_stmt 0 view .LVU501
 1578 000e 7047     		bx	lr
 1579              	.LVL111:
 1580              	.L130:
1489:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 1581              		.loc 1 1489 5 is_stmt 1 view .LVU502
 1582              	.LBB6:
 1583              	.LBI6:
 1584              		.file 2 "CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h"
   1:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  * @version  V5.4.2
   5:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  * @date     17. December 2022
   6:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /*
   8:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  *
  10:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  *
  12:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  *
  16:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  *
ARM GAS  /tmp/ccpEJ30p.s 			page 60


  18:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  * limitations under the License.
  23:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
  24:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
  25:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
  28:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
  34:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  38:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
  39:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  43:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  46:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  49:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  52:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  55:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __USED
  56:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  58:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  61:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  64:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  67:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  70:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
ARM GAS  /tmp/ccpEJ30p.s 			page 61


  75:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  78:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  86:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  94:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 102:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 110:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 113:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 116:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 119:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __NO_INIT
 120:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __NO_INIT                              __attribute__ ((section (".bss.noinit")))
 121:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 122:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __ALIAS
 123:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ALIAS(x)                             __attribute__ ((alias(x)))
 124:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 125:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 126:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 127:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 128:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 129:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 130:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 131:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
ARM GAS  /tmp/ccpEJ30p.s 			page 62


 132:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 133:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 134:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****            in the used linker script.
 135:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 136:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 137:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 138:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 139:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 140:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 141:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   typedef struct __copy_table {
 142:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t const* src;
 143:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t* dest;
 144:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t  wlen;
 145:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   } __copy_table_t;
 146:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 147:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   typedef struct __zero_table {
 148:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t* dest;
 149:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t  wlen;
 150:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   } __zero_table_t;
 151:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 152:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 153:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 154:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 155:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 156:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 157:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 158:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 160:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     }
 161:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   }
 162:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 163:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 164:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 165:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 166:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     }
 167:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   }
 168:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 169:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   _start();
 170:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 171:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 172:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 173:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 174:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 175:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 176:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 177:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 178:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 179:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 180:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 181:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 182:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 183:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 184:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 185:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 186:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 187:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 188:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
ARM GAS  /tmp/ccpEJ30p.s 			page 63


 189:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 190:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 191:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 192:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 193:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 194:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 195:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 196:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 197:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 198:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 199:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 200:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 201:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 202:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 203:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 204:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 205:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 206:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 207:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 208:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 209:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 210:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 211:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 212:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 213:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   Access to dedicated instructions
 214:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   @{
 215:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** */
 216:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 217:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 218:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 219:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 220:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 221:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 222:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 223:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 224:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #else
 225:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 226:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 227:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 228:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 229:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 230:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 231:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   No Operation
 232:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 233:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 234:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 235:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 236:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 237:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 238:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 239:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 240:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 241:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 242:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 243:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 244:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Wait For Event
 245:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
ARM GAS  /tmp/ccpEJ30p.s 			page 64


 246:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 247:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 248:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 249:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 250:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 251:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 252:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Send Event
 253:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 254:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 255:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 256:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 257:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 258:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 259:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 260:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 261:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 262:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****            after the instruction has been completed.
 263:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 264:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 265:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 266:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 267:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 268:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 269:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 270:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 271:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 272:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 273:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 274:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 275:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 276:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 277:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 278:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 279:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 280:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 281:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 282:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 283:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 284:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 285:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 286:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 287:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 288:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 289:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 290:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 291:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 292:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 293:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 294:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 295:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 296:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Reversed value
 297:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 298:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 299:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 300:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 301:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 302:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #else
ARM GAS  /tmp/ccpEJ30p.s 			page 65


 303:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 304:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 305:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 306:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 307:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 308:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 309:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 310:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 311:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 312:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 313:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 314:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 315:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Reversed value
 316:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 317:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 318:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 319:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 320:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 321:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 322:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 323:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 324:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 325:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 326:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 327:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 328:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 329:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 330:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Reversed value
 331:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 332:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 333:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 334:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 335:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 336:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #else
 337:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   int16_t result;
 338:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 339:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 340:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 341:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 342:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 343:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 344:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 345:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 346:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 347:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 348:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 349:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 350:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Rotated value
 351:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 352:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 353:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 354:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   op2 %= 32U;
 355:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   if (op2 == 0U)
 356:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   {
 357:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     return op1;
 358:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   }
 359:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
ARM GAS  /tmp/ccpEJ30p.s 			page 66


 360:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 361:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 362:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 363:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 364:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Breakpoint
 365:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 366:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 367:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 368:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 369:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 370:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 371:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 372:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 373:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 374:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 375:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 376:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 377:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Reversed value
 378:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 379:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 1585              		.loc 2 379 31 view .LVU503
 1586              	.LBB7:
 380:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 381:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 1587              		.loc 2 381 3 view .LVU504
 382:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 383:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 384:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 385:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 386:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 1588              		.loc 2 386 4 view .LVU505
 1589              		.syntax unified
 1590              	@ 386 "CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h" 1
 1591 0010 91FAA1F1 		rbit r1, r1
 1592              	@ 0 "" 2
 1593              	.LVL112:
 387:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #else
 388:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 389:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 390:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 391:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 392:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   {
 393:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     result <<= 1U;
 394:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     result |= value & 1U;
 395:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     s--;
 396:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   }
 397:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 398:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 399:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 1594              		.loc 2 399 3 view .LVU506
 1595              		.loc 2 399 3 is_stmt 0 view .LVU507
 1596              		.thumb
 1597              		.syntax unified
 1598              	.LBE7:
 1599              	.LBE6:
 1600              	.LBB8:
 1601              	.LBI8:
ARM GAS  /tmp/ccpEJ30p.s 			page 67


 400:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 401:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 402:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 403:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 404:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 405:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 406:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 407:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 408:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 409:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 1602              		.loc 2 409 30 is_stmt 1 view .LVU508
 1603              	.LBB9:
 410:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 411:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 412:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 413:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 414:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 415:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 416:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****      is non-zero".
 417:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 418:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****      single CLZ instruction.
 419:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    */
 420:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   if (value == 0U)
 1604              		.loc 2 420 3 view .LVU509
 1605              		.loc 2 420 6 is_stmt 0 view .LVU510
 1606 0014 41B1     		cbz	r1, .L129
 421:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   {
 422:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     return 32U;
 423:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   }
 424:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 1607              		.loc 2 424 3 is_stmt 1 view .LVU511
 1608              		.loc 2 424 10 is_stmt 0 view .LVU512
 1609 0016 B1FA81F1 		clz	r1, r1
 1610              	.LVL113:
 1611              	.L127:
 1612              		.loc 2 424 10 view .LVU513
 1613              	.LBE9:
 1614              	.LBE8:
1492:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
 1615              		.loc 1 1492 5 is_stmt 1 view .LVU514
1492:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
 1616              		.loc 1 1492 22 is_stmt 0 view .LVU515
 1617 001a 0368     		ldr	r3, [r0]
1492:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
 1618              		.loc 1 1492 61 view .LVU516
 1619 001c 1831     		adds	r1, r1, #24
 1620              	.LVL114:
1492:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
 1621              		.loc 1 1492 61 view .LVU517
 1622 001e 03EB0111 		add	r1, r3, r1, lsl #4
 1623              	.LVL115:
1492:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
 1624              		.loc 1 1492 61 view .LVU518
 1625 0022 4868     		ldr	r0, [r1, #4]
 1626              	.LVL116:
1492:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
 1627              		.loc 1 1492 85 view .LVU519
ARM GAS  /tmp/ccpEJ30p.s 			page 68


 1628 0024 000C     		lsrs	r0, r0, #16
 1629              	.LVL117:
1492:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
 1630              		.loc 1 1492 85 view .LVU520
 1631 0026 7047     		bx	lr
 1632              	.LVL118:
 1633              	.L129:
 1634              	.LBB11:
 1635              	.LBB10:
 422:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   }
 1636              		.loc 2 422 12 view .LVU521
 1637 0028 2021     		movs	r1, #32
 1638              	.LVL119:
 422:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   }
 1639              		.loc 2 422 12 view .LVU522
 1640 002a F6E7     		b	.L127
 1641              	.LBE10:
 1642              	.LBE11:
 1643              		.cfi_endproc
 1644              	.LFE253:
 1646              		.section	.text.HAL_CAN_GetRxMessage,"ax",%progbits
 1647              		.align	1
 1648              		.global	HAL_CAN_GetRxMessage
 1649              		.syntax unified
 1650              		.thumb
 1651              		.thumb_func
 1652              		.fpu fpv4-sp-d16
 1654              	HAL_CAN_GetRxMessage:
 1655              	.LVL120:
 1656              	.LFB254:
1498:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1499:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** /**
1500:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @brief  Get an CAN frame from the Rx FIFO zone into the message RAM.
1501:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1502:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1503:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @param  RxFifo Fifo number of the received message to be read.
1504:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *         This parameter can be a value of @arg CAN_receive_FIFO_number.
1505:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @param  pHeader pointer to a CAN_RxHeaderTypeDef structure where the header
1506:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *         of the Rx frame will be stored.
1507:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @param  aData array where the payload of the Rx frame will be stored.
1508:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @retval HAL status
1509:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   */
1510:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_GetRxMessage(CAN_HandleTypeDef *hcan, uint32_t RxFifo,
1511:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****                                        CAN_RxHeaderTypeDef *pHeader, uint8_t aData[])
1512:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** {
 1657              		.loc 1 1512 1 is_stmt 1 view -0
 1658              		.cfi_startproc
 1659              		@ args = 0, pretend = 0, frame = 0
 1660              		@ frame_needed = 0, uses_anonymous_args = 0
 1661              		@ link register save eliminated.
 1662              		.loc 1 1512 1 is_stmt 0 view .LVU524
 1663 0000 70B4     		push	{r4, r5, r6}
 1664              	.LCFI13:
 1665              		.cfi_def_cfa_offset 12
 1666              		.cfi_offset 4, -12
 1667              		.cfi_offset 5, -8
 1668              		.cfi_offset 6, -4
ARM GAS  /tmp/ccpEJ30p.s 			page 69


1513:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1669              		.loc 1 1513 3 is_stmt 1 view .LVU525
 1670              		.loc 1 1513 24 is_stmt 0 view .LVU526
 1671 0002 90F82040 		ldrb	r4, [r0, #32]	@ zero_extendqisi2
 1672              	.LVL121:
1514:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1515:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_RX_FIFO(RxFifo));
 1673              		.loc 1 1515 3 is_stmt 1 view .LVU527
1516:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1517:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1674              		.loc 1 1517 3 view .LVU528
 1675              		.loc 1 1517 38 is_stmt 0 view .LVU529
 1676 0006 013C     		subs	r4, r4, #1
 1677              	.LVL122:
 1678              		.loc 1 1517 38 view .LVU530
 1679 0008 E4B2     		uxtb	r4, r4
 1680              		.loc 1 1517 6 view .LVU531
 1681 000a 012C     		cmp	r4, #1
 1682 000c 00F2A080 		bhi	.L132
1518:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1519:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
1520:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     /* Check the Rx FIFO */
1521:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     if (RxFifo == CAN_RX_FIFO0) /* Rx element is assigned to Rx FIFO 0 */
 1683              		.loc 1 1521 5 is_stmt 1 view .LVU532
 1684              		.loc 1 1521 8 is_stmt 0 view .LVU533
 1685 0010 51B9     		cbnz	r1, .L133
1522:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
1523:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       /* Check that the Rx FIFO 0 is not empty */
1524:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       if ((hcan->Instance->RF0R & CAN_RF0R_FMP0) == 0U)
 1686              		.loc 1 1524 7 is_stmt 1 view .LVU534
 1687              		.loc 1 1524 16 is_stmt 0 view .LVU535
 1688 0012 0468     		ldr	r4, [r0]
 1689              		.loc 1 1524 26 view .LVU536
 1690 0014 E468     		ldr	r4, [r4, #12]
 1691              		.loc 1 1524 10 view .LVU537
 1692 0016 14F0030F 		tst	r4, #3
 1693 001a 10D1     		bne	.L134
1525:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       {
1526:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         /* Update error code */
1527:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_PARAM;
 1694              		.loc 1 1527 9 is_stmt 1 view .LVU538
 1695              		.loc 1 1527 25 is_stmt 0 view .LVU539
 1696 001c 436A     		ldr	r3, [r0, #36]
 1697              	.LVL123:
 1698              		.loc 1 1527 25 view .LVU540
 1699 001e 43F40013 		orr	r3, r3, #2097152
 1700 0022 4362     		str	r3, [r0, #36]
1528:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1529:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         return HAL_ERROR;
 1701              		.loc 1 1529 9 is_stmt 1 view .LVU541
 1702              		.loc 1 1529 16 is_stmt 0 view .LVU542
 1703 0024 0120     		movs	r0, #1
 1704              	.LVL124:
 1705              		.loc 1 1529 16 view .LVU543
 1706 0026 98E0     		b	.L135
 1707              	.LVL125:
 1708              	.L133:
ARM GAS  /tmp/ccpEJ30p.s 			page 70


1530:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       }
1531:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
1532:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     else /* Rx element is assigned to Rx FIFO 1 */
1533:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
1534:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       /* Check that the Rx FIFO 1 is not empty */
1535:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       if ((hcan->Instance->RF1R & CAN_RF1R_FMP1) == 0U)
 1709              		.loc 1 1535 7 is_stmt 1 view .LVU544
 1710              		.loc 1 1535 16 is_stmt 0 view .LVU545
 1711 0028 0468     		ldr	r4, [r0]
 1712              		.loc 1 1535 26 view .LVU546
 1713 002a 2469     		ldr	r4, [r4, #16]
 1714              		.loc 1 1535 10 view .LVU547
 1715 002c 14F0030F 		tst	r4, #3
 1716 0030 05D1     		bne	.L134
1536:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       {
1537:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         /* Update error code */
1538:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_PARAM;
 1717              		.loc 1 1538 9 is_stmt 1 view .LVU548
 1718              		.loc 1 1538 25 is_stmt 0 view .LVU549
 1719 0032 436A     		ldr	r3, [r0, #36]
 1720              	.LVL126:
 1721              		.loc 1 1538 25 view .LVU550
 1722 0034 43F40013 		orr	r3, r3, #2097152
 1723 0038 4362     		str	r3, [r0, #36]
1539:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1540:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         return HAL_ERROR;
 1724              		.loc 1 1540 9 is_stmt 1 view .LVU551
 1725              		.loc 1 1540 16 is_stmt 0 view .LVU552
 1726 003a 0120     		movs	r0, #1
 1727              	.LVL127:
 1728              		.loc 1 1540 16 view .LVU553
 1729 003c 8DE0     		b	.L135
 1730              	.LVL128:
 1731              	.L134:
1541:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       }
1542:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
1543:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1544:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     /* Get the header */
1545:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     pHeader->IDE = CAN_RI0R_IDE & hcan->Instance->sFIFOMailBox[RxFifo].RIR;
 1732              		.loc 1 1545 5 is_stmt 1 view .LVU554
 1733              		.loc 1 1545 39 is_stmt 0 view .LVU555
 1734 003e 0568     		ldr	r5, [r0]
 1735              		.loc 1 1545 71 view .LVU556
 1736 0040 01F11B04 		add	r4, r1, #27
 1737 0044 2401     		lsls	r4, r4, #4
 1738 0046 2C59     		ldr	r4, [r5, r4]
 1739              		.loc 1 1545 33 view .LVU557
 1740 0048 04F00404 		and	r4, r4, #4
 1741              		.loc 1 1545 18 view .LVU558
 1742 004c 9460     		str	r4, [r2, #8]
1546:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     if (pHeader->IDE == CAN_ID_STD)
 1743              		.loc 1 1546 5 is_stmt 1 view .LVU559
 1744              		.loc 1 1546 8 is_stmt 0 view .LVU560
 1745 004e 002C     		cmp	r4, #0
 1746 0050 67D1     		bne	.L136
1547:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
1548:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       pHeader->StdId = (CAN_RI0R_STID & hcan->Instance->sFIFOMailBox[RxFifo].RIR) >> CAN_TI0R_STID_
ARM GAS  /tmp/ccpEJ30p.s 			page 71


 1747              		.loc 1 1548 7 is_stmt 1 view .LVU561
 1748              		.loc 1 1548 45 is_stmt 0 view .LVU562
 1749 0052 0568     		ldr	r5, [r0]
 1750              		.loc 1 1548 77 view .LVU563
 1751 0054 01F11B04 		add	r4, r1, #27
 1752 0058 2401     		lsls	r4, r4, #4
 1753 005a 2C59     		ldr	r4, [r5, r4]
 1754              		.loc 1 1548 83 view .LVU564
 1755 005c 640D     		lsrs	r4, r4, #21
 1756              		.loc 1 1548 22 view .LVU565
 1757 005e 1460     		str	r4, [r2]
 1758              	.L137:
1549:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
1550:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     else
1551:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
1552:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       pHeader->ExtId = ((CAN_RI0R_EXID | CAN_RI0R_STID) &
1553:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****                         hcan->Instance->sFIFOMailBox[RxFifo].RIR) >> CAN_RI0R_EXID_Pos;
1554:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
1555:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     pHeader->RTR = (CAN_RI0R_RTR & hcan->Instance->sFIFOMailBox[RxFifo].RIR);
 1759              		.loc 1 1555 5 is_stmt 1 view .LVU566
 1760              		.loc 1 1555 40 is_stmt 0 view .LVU567
 1761 0060 0568     		ldr	r5, [r0]
 1762              		.loc 1 1555 72 view .LVU568
 1763 0062 01F11B04 		add	r4, r1, #27
 1764 0066 2401     		lsls	r4, r4, #4
 1765 0068 2D59     		ldr	r5, [r5, r4]
 1766              		.loc 1 1555 34 view .LVU569
 1767 006a 05F00205 		and	r5, r5, #2
 1768              		.loc 1 1555 18 view .LVU570
 1769 006e D560     		str	r5, [r2, #12]
1556:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     if (((CAN_RDT0R_DLC & hcan->Instance->sFIFOMailBox[RxFifo].RDTR) >> CAN_RDT0R_DLC_Pos) >= 8U)
 1770              		.loc 1 1556 5 is_stmt 1 view .LVU571
 1771              		.loc 1 1556 31 is_stmt 0 view .LVU572
 1772 0070 0568     		ldr	r5, [r0]
 1773              		.loc 1 1556 63 view .LVU573
 1774 0072 2C44     		add	r4, r4, r5
 1775 0074 6468     		ldr	r4, [r4, #4]
 1776              		.loc 1 1556 8 view .LVU574
 1777 0076 14F0080F 		tst	r4, #8
 1778 007a 5AD0     		beq	.L138
1557:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
1558:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       /* Truncate DLC to 8 if received field is over range */
1559:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       pHeader->DLC = 8U;
 1779              		.loc 1 1559 7 is_stmt 1 view .LVU575
 1780              		.loc 1 1559 20 is_stmt 0 view .LVU576
 1781 007c 0824     		movs	r4, #8
 1782 007e 1461     		str	r4, [r2, #16]
 1783              	.L139:
1560:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
1561:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     else
1562:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
1563:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       pHeader->DLC = (CAN_RDT0R_DLC & hcan->Instance->sFIFOMailBox[RxFifo].RDTR) >> CAN_RDT0R_DLC_P
1564:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
1565:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     pHeader->FilterMatchIndex = (CAN_RDT0R_FMI & hcan->Instance->sFIFOMailBox[RxFifo].RDTR) >> CAN_
 1784              		.loc 1 1565 5 is_stmt 1 view .LVU577
 1785              		.loc 1 1565 54 is_stmt 0 view .LVU578
 1786 0080 0568     		ldr	r5, [r0]
ARM GAS  /tmp/ccpEJ30p.s 			page 72


 1787              		.loc 1 1565 86 view .LVU579
 1788 0082 01F11B06 		add	r6, r1, #27
 1789 0086 05EB0615 		add	r5, r5, r6, lsl #4
 1790 008a 6D68     		ldr	r5, [r5, #4]
 1791              		.loc 1 1565 93 view .LVU580
 1792 008c C5F30725 		ubfx	r5, r5, #8, #8
 1793              		.loc 1 1565 31 view .LVU581
 1794 0090 9561     		str	r5, [r2, #24]
1566:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     pHeader->Timestamp = (CAN_RDT0R_TIME & hcan->Instance->sFIFOMailBox[RxFifo].RDTR) >> CAN_RDT0R_
 1795              		.loc 1 1566 5 is_stmt 1 view .LVU582
 1796              		.loc 1 1566 48 is_stmt 0 view .LVU583
 1797 0092 0468     		ldr	r4, [r0]
 1798              		.loc 1 1566 80 view .LVU584
 1799 0094 04EB0614 		add	r4, r4, r6, lsl #4
 1800 0098 6468     		ldr	r4, [r4, #4]
 1801              		.loc 1 1566 87 view .LVU585
 1802 009a 240C     		lsrs	r4, r4, #16
 1803              		.loc 1 1566 24 view .LVU586
 1804 009c 5461     		str	r4, [r2, #20]
1567:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1568:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     /* Get the data */
1569:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     aData[0] = (uint8_t)((CAN_RDL0R_DATA0 & hcan->Instance->sFIFOMailBox[RxFifo].RDLR) >> CAN_RDL0R
 1805              		.loc 1 1569 5 is_stmt 1 view .LVU587
 1806              		.loc 1 1569 49 is_stmt 0 view .LVU588
 1807 009e 0268     		ldr	r2, [r0]
 1808              	.LVL129:
 1809              		.loc 1 1569 81 view .LVU589
 1810 00a0 02EB0112 		add	r2, r2, r1, lsl #4
 1811 00a4 D2F8B821 		ldr	r2, [r2, #440]
 1812              		.loc 1 1569 14 view .LVU590
 1813 00a8 1A70     		strb	r2, [r3]
1570:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     aData[1] = (uint8_t)((CAN_RDL0R_DATA1 & hcan->Instance->sFIFOMailBox[RxFifo].RDLR) >> CAN_RDL0R
 1814              		.loc 1 1570 5 is_stmt 1 view .LVU591
 1815              		.loc 1 1570 49 is_stmt 0 view .LVU592
 1816 00aa 0268     		ldr	r2, [r0]
 1817              		.loc 1 1570 81 view .LVU593
 1818 00ac 02EB0112 		add	r2, r2, r1, lsl #4
 1819 00b0 D2F8B821 		ldr	r2, [r2, #440]
 1820              		.loc 1 1570 16 view .LVU594
 1821 00b4 C2F30722 		ubfx	r2, r2, #8, #8
 1822              		.loc 1 1570 14 view .LVU595
 1823 00b8 5A70     		strb	r2, [r3, #1]
1571:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     aData[2] = (uint8_t)((CAN_RDL0R_DATA2 & hcan->Instance->sFIFOMailBox[RxFifo].RDLR) >> CAN_RDL0R
 1824              		.loc 1 1571 5 is_stmt 1 view .LVU596
 1825              		.loc 1 1571 49 is_stmt 0 view .LVU597
 1826 00ba 0268     		ldr	r2, [r0]
 1827              		.loc 1 1571 81 view .LVU598
 1828 00bc 02EB0112 		add	r2, r2, r1, lsl #4
 1829 00c0 D2F8B821 		ldr	r2, [r2, #440]
 1830              		.loc 1 1571 16 view .LVU599
 1831 00c4 C2F30742 		ubfx	r2, r2, #16, #8
 1832              		.loc 1 1571 14 view .LVU600
 1833 00c8 9A70     		strb	r2, [r3, #2]
1572:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     aData[3] = (uint8_t)((CAN_RDL0R_DATA3 & hcan->Instance->sFIFOMailBox[RxFifo].RDLR) >> CAN_RDL0R
 1834              		.loc 1 1572 5 is_stmt 1 view .LVU601
 1835              		.loc 1 1572 49 is_stmt 0 view .LVU602
 1836 00ca 0268     		ldr	r2, [r0]
ARM GAS  /tmp/ccpEJ30p.s 			page 73


 1837              		.loc 1 1572 81 view .LVU603
 1838 00cc 02EB0112 		add	r2, r2, r1, lsl #4
 1839 00d0 D2F8B821 		ldr	r2, [r2, #440]
 1840              		.loc 1 1572 16 view .LVU604
 1841 00d4 120E     		lsrs	r2, r2, #24
 1842              		.loc 1 1572 14 view .LVU605
 1843 00d6 DA70     		strb	r2, [r3, #3]
1573:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     aData[4] = (uint8_t)((CAN_RDH0R_DATA4 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
 1844              		.loc 1 1573 5 is_stmt 1 view .LVU606
 1845              		.loc 1 1573 49 is_stmt 0 view .LVU607
 1846 00d8 0268     		ldr	r2, [r0]
 1847              		.loc 1 1573 81 view .LVU608
 1848 00da 02EB0112 		add	r2, r2, r1, lsl #4
 1849 00de D2F8BC21 		ldr	r2, [r2, #444]
 1850              		.loc 1 1573 14 view .LVU609
 1851 00e2 1A71     		strb	r2, [r3, #4]
1574:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     aData[5] = (uint8_t)((CAN_RDH0R_DATA5 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
 1852              		.loc 1 1574 5 is_stmt 1 view .LVU610
 1853              		.loc 1 1574 49 is_stmt 0 view .LVU611
 1854 00e4 0268     		ldr	r2, [r0]
 1855              		.loc 1 1574 81 view .LVU612
 1856 00e6 02EB0112 		add	r2, r2, r1, lsl #4
 1857 00ea D2F8BC21 		ldr	r2, [r2, #444]
 1858              		.loc 1 1574 16 view .LVU613
 1859 00ee C2F30722 		ubfx	r2, r2, #8, #8
 1860              		.loc 1 1574 14 view .LVU614
 1861 00f2 5A71     		strb	r2, [r3, #5]
1575:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     aData[6] = (uint8_t)((CAN_RDH0R_DATA6 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
 1862              		.loc 1 1575 5 is_stmt 1 view .LVU615
 1863              		.loc 1 1575 49 is_stmt 0 view .LVU616
 1864 00f4 0268     		ldr	r2, [r0]
 1865              		.loc 1 1575 81 view .LVU617
 1866 00f6 02EB0112 		add	r2, r2, r1, lsl #4
 1867 00fa D2F8BC21 		ldr	r2, [r2, #444]
 1868              		.loc 1 1575 16 view .LVU618
 1869 00fe C2F30742 		ubfx	r2, r2, #16, #8
 1870              		.loc 1 1575 14 view .LVU619
 1871 0102 9A71     		strb	r2, [r3, #6]
1576:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     aData[7] = (uint8_t)((CAN_RDH0R_DATA7 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
 1872              		.loc 1 1576 5 is_stmt 1 view .LVU620
 1873              		.loc 1 1576 49 is_stmt 0 view .LVU621
 1874 0104 0268     		ldr	r2, [r0]
 1875              		.loc 1 1576 81 view .LVU622
 1876 0106 02EB0112 		add	r2, r2, r1, lsl #4
 1877 010a D2F8BC21 		ldr	r2, [r2, #444]
 1878              		.loc 1 1576 16 view .LVU623
 1879 010e 120E     		lsrs	r2, r2, #24
 1880              		.loc 1 1576 14 view .LVU624
 1881 0110 DA71     		strb	r2, [r3, #7]
1577:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1578:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     /* Release the FIFO */
1579:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     if (RxFifo == CAN_RX_FIFO0) /* Rx element is assigned to Rx FIFO 0 */
 1882              		.loc 1 1579 5 is_stmt 1 view .LVU625
 1883              		.loc 1 1579 8 is_stmt 0 view .LVU626
 1884 0112 B9B9     		cbnz	r1, .L140
1580:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
1581:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       /* Release RX FIFO 0 */
ARM GAS  /tmp/ccpEJ30p.s 			page 74


1582:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       SET_BIT(hcan->Instance->RF0R, CAN_RF0R_RFOM0);
 1885              		.loc 1 1582 7 is_stmt 1 view .LVU627
 1886 0114 0268     		ldr	r2, [r0]
 1887 0116 D368     		ldr	r3, [r2, #12]
 1888              	.LVL130:
 1889              		.loc 1 1582 7 is_stmt 0 view .LVU628
 1890 0118 43F02003 		orr	r3, r3, #32
 1891 011c D360     		str	r3, [r2, #12]
 1892              	.L141:
1583:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
1584:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     else /* Rx element is assigned to Rx FIFO 1 */
1585:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
1586:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       /* Release RX FIFO 1 */
1587:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       SET_BIT(hcan->Instance->RF1R, CAN_RF1R_RFOM1);
1588:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
1589:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1590:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     /* Return function status */
1591:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     return HAL_OK;
 1893              		.loc 1 1591 5 is_stmt 1 view .LVU629
 1894              		.loc 1 1591 12 is_stmt 0 view .LVU630
 1895 011e 0020     		movs	r0, #0
 1896              	.LVL131:
 1897              		.loc 1 1591 12 view .LVU631
 1898 0120 1BE0     		b	.L135
 1899              	.LVL132:
 1900              	.L136:
1552:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****                         hcan->Instance->sFIFOMailBox[RxFifo].RIR) >> CAN_RI0R_EXID_Pos;
 1901              		.loc 1 1552 7 is_stmt 1 view .LVU632
1553:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
 1902              		.loc 1 1553 29 is_stmt 0 view .LVU633
 1903 0122 0568     		ldr	r5, [r0]
1553:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
 1904              		.loc 1 1553 61 view .LVU634
 1905 0124 01F11B04 		add	r4, r1, #27
 1906 0128 2401     		lsls	r4, r4, #4
 1907 012a 2C59     		ldr	r4, [r5, r4]
1553:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
 1908              		.loc 1 1553 67 view .LVU635
 1909 012c E408     		lsrs	r4, r4, #3
1552:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****                         hcan->Instance->sFIFOMailBox[RxFifo].RIR) >> CAN_RI0R_EXID_Pos;
 1910              		.loc 1 1552 22 view .LVU636
 1911 012e 5460     		str	r4, [r2, #4]
 1912 0130 96E7     		b	.L137
 1913              	.L138:
1563:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
 1914              		.loc 1 1563 7 is_stmt 1 view .LVU637
1563:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
 1915              		.loc 1 1563 75 is_stmt 0 view .LVU638
 1916 0132 01F11B04 		add	r4, r1, #27
 1917 0136 05EB0415 		add	r5, r5, r4, lsl #4
 1918 013a 6C68     		ldr	r4, [r5, #4]
1563:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
 1919              		.loc 1 1563 82 view .LVU639
 1920 013c 04F00F04 		and	r4, r4, #15
1563:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
 1921              		.loc 1 1563 20 view .LVU640
 1922 0140 1461     		str	r4, [r2, #16]
ARM GAS  /tmp/ccpEJ30p.s 			page 75


 1923 0142 9DE7     		b	.L139
 1924              	.LVL133:
 1925              	.L140:
1587:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
 1926              		.loc 1 1587 7 is_stmt 1 view .LVU641
 1927 0144 0268     		ldr	r2, [r0]
 1928 0146 1369     		ldr	r3, [r2, #16]
 1929              	.LVL134:
1587:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
 1930              		.loc 1 1587 7 is_stmt 0 view .LVU642
 1931 0148 43F02003 		orr	r3, r3, #32
 1932 014c 1361     		str	r3, [r2, #16]
 1933 014e E6E7     		b	.L141
 1934              	.LVL135:
 1935              	.L132:
1592:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
1593:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   else
1594:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
1595:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     /* Update error code */
1596:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 1936              		.loc 1 1596 5 is_stmt 1 view .LVU643
 1937              		.loc 1 1596 21 is_stmt 0 view .LVU644
 1938 0150 436A     		ldr	r3, [r0, #36]
 1939              	.LVL136:
 1940              		.loc 1 1596 21 view .LVU645
 1941 0152 43F48023 		orr	r3, r3, #262144
 1942 0156 4362     		str	r3, [r0, #36]
1597:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1598:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     return HAL_ERROR;
 1943              		.loc 1 1598 5 is_stmt 1 view .LVU646
 1944              		.loc 1 1598 12 is_stmt 0 view .LVU647
 1945 0158 0120     		movs	r0, #1
 1946              	.LVL137:
 1947              	.L135:
1599:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
1600:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** }
 1948              		.loc 1 1600 1 view .LVU648
 1949 015a 70BC     		pop	{r4, r5, r6}
 1950              	.LCFI14:
 1951              		.cfi_restore 6
 1952              		.cfi_restore 5
 1953              		.cfi_restore 4
 1954              		.cfi_def_cfa_offset 0
 1955 015c 7047     		bx	lr
 1956              		.cfi_endproc
 1957              	.LFE254:
 1959              		.section	.text.HAL_CAN_GetRxFifoFillLevel,"ax",%progbits
 1960              		.align	1
 1961              		.global	HAL_CAN_GetRxFifoFillLevel
 1962              		.syntax unified
 1963              		.thumb
 1964              		.thumb_func
 1965              		.fpu fpv4-sp-d16
 1967              	HAL_CAN_GetRxFifoFillLevel:
 1968              	.LVL138:
 1969              	.LFB255:
1601:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
ARM GAS  /tmp/ccpEJ30p.s 			page 76


1602:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** /**
1603:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @brief  Return Rx FIFO fill level.
1604:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1605:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1606:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @param  RxFifo Rx FIFO.
1607:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *         This parameter can be a value of @arg CAN_receive_FIFO_number.
1608:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @retval Number of messages available in Rx FIFO.
1609:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   */
1610:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** uint32_t HAL_CAN_GetRxFifoFillLevel(const CAN_HandleTypeDef *hcan, uint32_t RxFifo)
1611:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** {
 1970              		.loc 1 1611 1 is_stmt 1 view -0
 1971              		.cfi_startproc
 1972              		@ args = 0, pretend = 0, frame = 0
 1973              		@ frame_needed = 0, uses_anonymous_args = 0
 1974              		@ link register save eliminated.
1612:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   uint32_t filllevel = 0U;
 1975              		.loc 1 1612 3 view .LVU650
1613:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1976              		.loc 1 1613 3 view .LVU651
 1977              		.loc 1 1613 24 is_stmt 0 view .LVU652
 1978 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1979              	.LVL139:
1614:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1615:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   /* Check function parameters */
1616:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_RX_FIFO(RxFifo));
 1980              		.loc 1 1616 3 is_stmt 1 view .LVU653
1617:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1618:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1981              		.loc 1 1618 3 view .LVU654
 1982              		.loc 1 1618 38 is_stmt 0 view .LVU655
 1983 0004 013B     		subs	r3, r3, #1
 1984              	.LVL140:
 1985              		.loc 1 1618 38 view .LVU656
 1986 0006 DBB2     		uxtb	r3, r3
 1987              		.loc 1 1618 6 view .LVU657
 1988 0008 012B     		cmp	r3, #1
 1989 000a 01D9     		bls	.L147
1612:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1990              		.loc 1 1612 12 view .LVU658
 1991 000c 0020     		movs	r0, #0
 1992              	.LVL141:
1619:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1620:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
1621:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     if (RxFifo == CAN_RX_FIFO0)
1622:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
1623:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       filllevel = hcan->Instance->RF0R & CAN_RF0R_FMP0;
1624:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
1625:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     else /* RxFifo == CAN_RX_FIFO1 */
1626:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
1627:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       filllevel = hcan->Instance->RF1R & CAN_RF1R_FMP1;
1628:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
1629:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
1630:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1631:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   /* Return Rx FIFO fill level */
1632:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   return filllevel;
 1993              		.loc 1 1632 3 is_stmt 1 view .LVU659
1633:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** }
ARM GAS  /tmp/ccpEJ30p.s 			page 77


 1994              		.loc 1 1633 1 is_stmt 0 view .LVU660
 1995 000e 7047     		bx	lr
 1996              	.LVL142:
 1997              	.L147:
1621:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 1998              		.loc 1 1621 5 is_stmt 1 view .LVU661
1621:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 1999              		.loc 1 1621 8 is_stmt 0 view .LVU662
 2000 0010 21B9     		cbnz	r1, .L145
1623:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
 2001              		.loc 1 1623 7 is_stmt 1 view .LVU663
1623:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
 2002              		.loc 1 1623 23 is_stmt 0 view .LVU664
 2003 0012 0368     		ldr	r3, [r0]
1623:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
 2004              		.loc 1 1623 33 view .LVU665
 2005 0014 D868     		ldr	r0, [r3, #12]
 2006              	.LVL143:
1623:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
 2007              		.loc 1 1623 17 view .LVU666
 2008 0016 00F00300 		and	r0, r0, #3
 2009              	.LVL144:
1623:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
 2010              		.loc 1 1623 17 view .LVU667
 2011 001a 7047     		bx	lr
 2012              	.LVL145:
 2013              	.L145:
1627:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
 2014              		.loc 1 1627 7 is_stmt 1 view .LVU668
1627:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
 2015              		.loc 1 1627 23 is_stmt 0 view .LVU669
 2016 001c 0368     		ldr	r3, [r0]
1627:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
 2017              		.loc 1 1627 33 view .LVU670
 2018 001e 1869     		ldr	r0, [r3, #16]
 2019              	.LVL146:
1627:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
 2020              		.loc 1 1627 17 view .LVU671
 2021 0020 00F00300 		and	r0, r0, #3
 2022              	.LVL147:
1627:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
 2023              		.loc 1 1627 17 view .LVU672
 2024 0024 7047     		bx	lr
 2025              		.cfi_endproc
 2026              	.LFE255:
 2028              		.section	.text.HAL_CAN_ActivateNotification,"ax",%progbits
 2029              		.align	1
 2030              		.global	HAL_CAN_ActivateNotification
 2031              		.syntax unified
 2032              		.thumb
 2033              		.thumb_func
 2034              		.fpu fpv4-sp-d16
 2036              	HAL_CAN_ActivateNotification:
 2037              	.LVL148:
 2038              	.LFB256:
1634:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1635:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** /**
ARM GAS  /tmp/ccpEJ30p.s 			page 78


1636:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @}
1637:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   */
1638:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1639:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group4 Interrupts management
1640:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @brief    Interrupts management
1641:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *
1642:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** @verbatim
1643:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   ==============================================================================
1644:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****                        ##### Interrupts management #####
1645:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   ==============================================================================
1646:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     [..]  This section provides functions allowing to:
1647:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_ActivateNotification      : Enable interrupts
1648:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_DeactivateNotification    : Disable interrupts
1649:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_IRQHandler                : Handles CAN interrupt request
1650:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1651:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** @endverbatim
1652:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @{
1653:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   */
1654:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1655:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** /**
1656:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @brief  Enable interrupts.
1657:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1658:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1659:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @param  ActiveITs indicates which interrupts will be enabled.
1660:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *         This parameter can be any combination of @arg CAN_Interrupts.
1661:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @retval HAL status
1662:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   */
1663:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_ActivateNotification(CAN_HandleTypeDef *hcan, uint32_t ActiveITs)
1664:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** {
 2039              		.loc 1 1664 1 is_stmt 1 view -0
 2040              		.cfi_startproc
 2041              		@ args = 0, pretend = 0, frame = 0
 2042              		@ frame_needed = 0, uses_anonymous_args = 0
 2043              		@ link register save eliminated.
1665:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 2044              		.loc 1 1665 3 view .LVU674
 2045              		.loc 1 1665 24 is_stmt 0 view .LVU675
 2046 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 2047              	.LVL149:
1666:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1667:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   /* Check function parameters */
1668:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_IT(ActiveITs));
 2048              		.loc 1 1668 3 is_stmt 1 view .LVU676
1669:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1670:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 2049              		.loc 1 1670 3 view .LVU677
 2050              		.loc 1 1670 38 is_stmt 0 view .LVU678
 2051 0004 013B     		subs	r3, r3, #1
 2052              	.LVL150:
 2053              		.loc 1 1670 38 view .LVU679
 2054 0006 DBB2     		uxtb	r3, r3
 2055              		.loc 1 1670 6 view .LVU680
 2056 0008 012B     		cmp	r3, #1
 2057 000a 05D9     		bls	.L151
1671:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1672:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
1673:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     /* Enable the selected interrupts */
ARM GAS  /tmp/ccpEJ30p.s 			page 79


1674:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     __HAL_CAN_ENABLE_IT(hcan, ActiveITs);
1675:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1676:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     /* Return function status */
1677:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     return HAL_OK;
1678:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
1679:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   else
1680:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
1681:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     /* Update error code */
1682:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 2058              		.loc 1 1682 5 is_stmt 1 view .LVU681
 2059              		.loc 1 1682 21 is_stmt 0 view .LVU682
 2060 000c 436A     		ldr	r3, [r0, #36]
 2061 000e 43F48023 		orr	r3, r3, #262144
 2062 0012 4362     		str	r3, [r0, #36]
1683:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1684:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     return HAL_ERROR;
 2063              		.loc 1 1684 5 is_stmt 1 view .LVU683
 2064              		.loc 1 1684 12 is_stmt 0 view .LVU684
 2065 0014 0120     		movs	r0, #1
 2066              	.LVL151:
1685:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
1686:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** }
 2067              		.loc 1 1686 1 view .LVU685
 2068 0016 7047     		bx	lr
 2069              	.LVL152:
 2070              	.L151:
1674:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 2071              		.loc 1 1674 5 is_stmt 1 view .LVU686
 2072 0018 0268     		ldr	r2, [r0]
 2073 001a 5369     		ldr	r3, [r2, #20]
 2074 001c 1943     		orrs	r1, r1, r3
 2075              	.LVL153:
1674:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 2076              		.loc 1 1674 5 is_stmt 0 view .LVU687
 2077 001e 5161     		str	r1, [r2, #20]
1677:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
 2078              		.loc 1 1677 5 is_stmt 1 view .LVU688
1677:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
 2079              		.loc 1 1677 12 is_stmt 0 view .LVU689
 2080 0020 0020     		movs	r0, #0
 2081              	.LVL154:
1677:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
 2082              		.loc 1 1677 12 view .LVU690
 2083 0022 7047     		bx	lr
 2084              		.cfi_endproc
 2085              	.LFE256:
 2087              		.section	.text.HAL_CAN_DeactivateNotification,"ax",%progbits
 2088              		.align	1
 2089              		.global	HAL_CAN_DeactivateNotification
 2090              		.syntax unified
 2091              		.thumb
 2092              		.thumb_func
 2093              		.fpu fpv4-sp-d16
 2095              	HAL_CAN_DeactivateNotification:
 2096              	.LVL155:
 2097              	.LFB257:
1687:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
ARM GAS  /tmp/ccpEJ30p.s 			page 80


1688:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** /**
1689:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @brief  Disable interrupts.
1690:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1691:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1692:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @param  InactiveITs indicates which interrupts will be disabled.
1693:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *         This parameter can be any combination of @arg CAN_Interrupts.
1694:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @retval HAL status
1695:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   */
1696:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_DeactivateNotification(CAN_HandleTypeDef *hcan, uint32_t InactiveITs)
1697:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** {
 2098              		.loc 1 1697 1 is_stmt 1 view -0
 2099              		.cfi_startproc
 2100              		@ args = 0, pretend = 0, frame = 0
 2101              		@ frame_needed = 0, uses_anonymous_args = 0
 2102              		@ link register save eliminated.
1698:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 2103              		.loc 1 1698 3 view .LVU692
 2104              		.loc 1 1698 24 is_stmt 0 view .LVU693
 2105 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 2106              	.LVL156:
1699:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1700:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   /* Check function parameters */
1701:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_IT(InactiveITs));
 2107              		.loc 1 1701 3 is_stmt 1 view .LVU694
1702:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1703:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 2108              		.loc 1 1703 3 view .LVU695
 2109              		.loc 1 1703 38 is_stmt 0 view .LVU696
 2110 0004 013B     		subs	r3, r3, #1
 2111              	.LVL157:
 2112              		.loc 1 1703 38 view .LVU697
 2113 0006 DBB2     		uxtb	r3, r3
 2114              		.loc 1 1703 6 view .LVU698
 2115 0008 012B     		cmp	r3, #1
 2116 000a 05D9     		bls	.L155
1704:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1705:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
1706:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     /* Disable the selected interrupts */
1707:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     __HAL_CAN_DISABLE_IT(hcan, InactiveITs);
1708:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1709:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     /* Return function status */
1710:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     return HAL_OK;
1711:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
1712:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   else
1713:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
1714:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     /* Update error code */
1715:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 2117              		.loc 1 1715 5 is_stmt 1 view .LVU699
 2118              		.loc 1 1715 21 is_stmt 0 view .LVU700
 2119 000c 436A     		ldr	r3, [r0, #36]
 2120 000e 43F48023 		orr	r3, r3, #262144
 2121 0012 4362     		str	r3, [r0, #36]
1716:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1717:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     return HAL_ERROR;
 2122              		.loc 1 1717 5 is_stmt 1 view .LVU701
 2123              		.loc 1 1717 12 is_stmt 0 view .LVU702
 2124 0014 0120     		movs	r0, #1
ARM GAS  /tmp/ccpEJ30p.s 			page 81


 2125              	.LVL158:
1718:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
1719:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** }
 2126              		.loc 1 1719 1 view .LVU703
 2127 0016 7047     		bx	lr
 2128              	.LVL159:
 2129              	.L155:
1707:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 2130              		.loc 1 1707 5 is_stmt 1 view .LVU704
 2131 0018 0268     		ldr	r2, [r0]
 2132 001a 5369     		ldr	r3, [r2, #20]
 2133 001c 23EA0101 		bic	r1, r3, r1
 2134              	.LVL160:
1707:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 2135              		.loc 1 1707 5 is_stmt 0 view .LVU705
 2136 0020 5161     		str	r1, [r2, #20]
1710:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
 2137              		.loc 1 1710 5 is_stmt 1 view .LVU706
1710:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
 2138              		.loc 1 1710 12 is_stmt 0 view .LVU707
 2139 0022 0020     		movs	r0, #0
 2140              	.LVL161:
1710:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
 2141              		.loc 1 1710 12 view .LVU708
 2142 0024 7047     		bx	lr
 2143              		.cfi_endproc
 2144              	.LFE257:
 2146              		.section	.text.HAL_CAN_TxMailbox0CompleteCallback,"ax",%progbits
 2147              		.align	1
 2148              		.weak	HAL_CAN_TxMailbox0CompleteCallback
 2149              		.syntax unified
 2150              		.thumb
 2151              		.thumb_func
 2152              		.fpu fpv4-sp-d16
 2154              	HAL_CAN_TxMailbox0CompleteCallback:
 2155              	.LVL162:
 2156              	.LFB259:
1720:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1721:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** /**
1722:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @brief  Handles CAN interrupt request
1723:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1724:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1725:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @retval None
1726:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   */
1727:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** void HAL_CAN_IRQHandler(CAN_HandleTypeDef *hcan)
1728:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** {
1729:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   uint32_t errorcode = HAL_CAN_ERROR_NONE;
1730:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   uint32_t interrupts = READ_REG(hcan->Instance->IER);
1731:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   uint32_t msrflags = READ_REG(hcan->Instance->MSR);
1732:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   uint32_t tsrflags = READ_REG(hcan->Instance->TSR);
1733:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   uint32_t rf0rflags = READ_REG(hcan->Instance->RF0R);
1734:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   uint32_t rf1rflags = READ_REG(hcan->Instance->RF1R);
1735:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   uint32_t esrflags = READ_REG(hcan->Instance->ESR);
1736:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1737:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   /* Transmit Mailbox empty interrupt management *****************************/
1738:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   if ((interrupts & CAN_IT_TX_MAILBOX_EMPTY) != 0U)
1739:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
ARM GAS  /tmp/ccpEJ30p.s 			page 82


1740:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     /* Transmit Mailbox 0 management *****************************************/
1741:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     if ((tsrflags & CAN_TSR_RQCP0) != 0U)
1742:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
1743:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       /* Clear the Transmission Complete flag (and TXOK0,ALST0,TERR0 bits) */
1744:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_RQCP0);
1745:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1746:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       if ((tsrflags & CAN_TSR_TXOK0) != 0U)
1747:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       {
1748:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         /* Transmission Mailbox 0 complete callback */
1749:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1750:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         /* Call registered callback*/
1751:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         hcan->TxMailbox0CompleteCallback(hcan);
1752:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** #else
1753:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         /* Call weak (surcharged) callback */
1754:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         HAL_CAN_TxMailbox0CompleteCallback(hcan);
1755:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1756:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       }
1757:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       else
1758:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       {
1759:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         if ((tsrflags & CAN_TSR_ALST0) != 0U)
1760:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         {
1761:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****           /* Update error code */
1762:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****           errorcode |= HAL_CAN_ERROR_TX_ALST0;
1763:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         }
1764:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         else if ((tsrflags & CAN_TSR_TERR0) != 0U)
1765:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         {
1766:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****           /* Update error code */
1767:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****           errorcode |= HAL_CAN_ERROR_TX_TERR0;
1768:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         }
1769:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         else
1770:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         {
1771:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****           /* Transmission Mailbox 0 abort callback */
1772:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1773:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****           /* Call registered callback*/
1774:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****           hcan->TxMailbox0AbortCallback(hcan);
1775:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** #else
1776:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****           /* Call weak (surcharged) callback */
1777:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****           HAL_CAN_TxMailbox0AbortCallback(hcan);
1778:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1779:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         }
1780:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       }
1781:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
1782:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1783:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     /* Transmit Mailbox 1 management *****************************************/
1784:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     if ((tsrflags & CAN_TSR_RQCP1) != 0U)
1785:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
1786:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       /* Clear the Transmission Complete flag (and TXOK1,ALST1,TERR1 bits) */
1787:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_RQCP1);
1788:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1789:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       if ((tsrflags & CAN_TSR_TXOK1) != 0U)
1790:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       {
1791:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         /* Transmission Mailbox 1 complete callback */
1792:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1793:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         /* Call registered callback*/
1794:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         hcan->TxMailbox1CompleteCallback(hcan);
1795:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** #else
1796:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         /* Call weak (surcharged) callback */
ARM GAS  /tmp/ccpEJ30p.s 			page 83


1797:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         HAL_CAN_TxMailbox1CompleteCallback(hcan);
1798:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1799:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       }
1800:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       else
1801:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       {
1802:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         if ((tsrflags & CAN_TSR_ALST1) != 0U)
1803:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         {
1804:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****           /* Update error code */
1805:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****           errorcode |= HAL_CAN_ERROR_TX_ALST1;
1806:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         }
1807:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         else if ((tsrflags & CAN_TSR_TERR1) != 0U)
1808:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         {
1809:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****           /* Update error code */
1810:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****           errorcode |= HAL_CAN_ERROR_TX_TERR1;
1811:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         }
1812:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         else
1813:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         {
1814:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****           /* Transmission Mailbox 1 abort callback */
1815:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1816:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****           /* Call registered callback*/
1817:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****           hcan->TxMailbox1AbortCallback(hcan);
1818:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** #else
1819:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****           /* Call weak (surcharged) callback */
1820:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****           HAL_CAN_TxMailbox1AbortCallback(hcan);
1821:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1822:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         }
1823:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       }
1824:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
1825:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1826:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     /* Transmit Mailbox 2 management *****************************************/
1827:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     if ((tsrflags & CAN_TSR_RQCP2) != 0U)
1828:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
1829:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       /* Clear the Transmission Complete flag (and TXOK2,ALST2,TERR2 bits) */
1830:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_RQCP2);
1831:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1832:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       if ((tsrflags & CAN_TSR_TXOK2) != 0U)
1833:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       {
1834:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         /* Transmission Mailbox 2 complete callback */
1835:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1836:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         /* Call registered callback*/
1837:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         hcan->TxMailbox2CompleteCallback(hcan);
1838:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** #else
1839:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         /* Call weak (surcharged) callback */
1840:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         HAL_CAN_TxMailbox2CompleteCallback(hcan);
1841:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1842:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       }
1843:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       else
1844:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       {
1845:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         if ((tsrflags & CAN_TSR_ALST2) != 0U)
1846:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         {
1847:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****           /* Update error code */
1848:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****           errorcode |= HAL_CAN_ERROR_TX_ALST2;
1849:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         }
1850:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         else if ((tsrflags & CAN_TSR_TERR2) != 0U)
1851:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         {
1852:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****           /* Update error code */
1853:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****           errorcode |= HAL_CAN_ERROR_TX_TERR2;
ARM GAS  /tmp/ccpEJ30p.s 			page 84


1854:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         }
1855:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         else
1856:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         {
1857:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****           /* Transmission Mailbox 2 abort callback */
1858:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1859:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****           /* Call registered callback*/
1860:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****           hcan->TxMailbox2AbortCallback(hcan);
1861:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** #else
1862:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****           /* Call weak (surcharged) callback */
1863:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****           HAL_CAN_TxMailbox2AbortCallback(hcan);
1864:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1865:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         }
1866:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       }
1867:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
1868:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
1869:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1870:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   /* Receive FIFO 0 overrun interrupt management *****************************/
1871:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   if ((interrupts & CAN_IT_RX_FIFO0_OVERRUN) != 0U)
1872:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
1873:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     if ((rf0rflags & CAN_RF0R_FOVR0) != 0U)
1874:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
1875:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       /* Set CAN error code to Rx Fifo 0 overrun error */
1876:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       errorcode |= HAL_CAN_ERROR_RX_FOV0;
1877:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1878:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       /* Clear FIFO0 Overrun Flag */
1879:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_FOV0);
1880:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
1881:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
1882:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1883:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   /* Receive FIFO 0 full interrupt management ********************************/
1884:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   if ((interrupts & CAN_IT_RX_FIFO0_FULL) != 0U)
1885:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
1886:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     if ((rf0rflags & CAN_RF0R_FULL0) != 0U)
1887:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
1888:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       /* Clear FIFO 0 full Flag */
1889:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_FF0);
1890:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1891:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       /* Receive FIFO 0 full Callback */
1892:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1893:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       /* Call registered callback*/
1894:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       hcan->RxFifo0FullCallback(hcan);
1895:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** #else
1896:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       /* Call weak (surcharged) callback */
1897:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       HAL_CAN_RxFifo0FullCallback(hcan);
1898:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1899:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
1900:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
1901:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1902:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   /* Receive FIFO 0 message pending interrupt management *********************/
1903:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   if ((interrupts & CAN_IT_RX_FIFO0_MSG_PENDING) != 0U)
1904:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
1905:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     /* Check if message is still pending */
1906:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     if ((hcan->Instance->RF0R & CAN_RF0R_FMP0) != 0U)
1907:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
1908:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       /* Receive FIFO 0 message pending Callback */
1909:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1910:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       /* Call registered callback*/
ARM GAS  /tmp/ccpEJ30p.s 			page 85


1911:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       hcan->RxFifo0MsgPendingCallback(hcan);
1912:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** #else
1913:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       /* Call weak (surcharged) callback */
1914:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       HAL_CAN_RxFifo0MsgPendingCallback(hcan);
1915:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1916:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
1917:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
1918:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1919:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   /* Receive FIFO 1 overrun interrupt management *****************************/
1920:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   if ((interrupts & CAN_IT_RX_FIFO1_OVERRUN) != 0U)
1921:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
1922:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     if ((rf1rflags & CAN_RF1R_FOVR1) != 0U)
1923:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
1924:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       /* Set CAN error code to Rx Fifo 1 overrun error */
1925:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       errorcode |= HAL_CAN_ERROR_RX_FOV1;
1926:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1927:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       /* Clear FIFO1 Overrun Flag */
1928:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_FOV1);
1929:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
1930:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
1931:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1932:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   /* Receive FIFO 1 full interrupt management ********************************/
1933:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   if ((interrupts & CAN_IT_RX_FIFO1_FULL) != 0U)
1934:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
1935:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     if ((rf1rflags & CAN_RF1R_FULL1) != 0U)
1936:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
1937:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       /* Clear FIFO 1 full Flag */
1938:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_FF1);
1939:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1940:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       /* Receive FIFO 1 full Callback */
1941:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1942:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       /* Call registered callback*/
1943:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       hcan->RxFifo1FullCallback(hcan);
1944:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** #else
1945:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       /* Call weak (surcharged) callback */
1946:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       HAL_CAN_RxFifo1FullCallback(hcan);
1947:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1948:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
1949:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
1950:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1951:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   /* Receive FIFO 1 message pending interrupt management *********************/
1952:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   if ((interrupts & CAN_IT_RX_FIFO1_MSG_PENDING) != 0U)
1953:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
1954:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     /* Check if message is still pending */
1955:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     if ((hcan->Instance->RF1R & CAN_RF1R_FMP1) != 0U)
1956:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
1957:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       /* Receive FIFO 1 message pending Callback */
1958:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1959:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       /* Call registered callback*/
1960:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       hcan->RxFifo1MsgPendingCallback(hcan);
1961:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** #else
1962:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       /* Call weak (surcharged) callback */
1963:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       HAL_CAN_RxFifo1MsgPendingCallback(hcan);
1964:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1965:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
1966:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
1967:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
ARM GAS  /tmp/ccpEJ30p.s 			page 86


1968:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   /* Sleep interrupt management *********************************************/
1969:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   if ((interrupts & CAN_IT_SLEEP_ACK) != 0U)
1970:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
1971:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     if ((msrflags & CAN_MSR_SLAKI) != 0U)
1972:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
1973:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       /* Clear Sleep interrupt Flag */
1974:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_SLAKI);
1975:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1976:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       /* Sleep Callback */
1977:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1978:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       /* Call registered callback*/
1979:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       hcan->SleepCallback(hcan);
1980:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** #else
1981:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       /* Call weak (surcharged) callback */
1982:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       HAL_CAN_SleepCallback(hcan);
1983:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1984:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
1985:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
1986:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1987:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   /* WakeUp interrupt management *********************************************/
1988:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   if ((interrupts & CAN_IT_WAKEUP) != 0U)
1989:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
1990:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     if ((msrflags & CAN_MSR_WKUI) != 0U)
1991:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
1992:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       /* Clear WakeUp Flag */
1993:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_WKU);
1994:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
1995:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       /* WakeUp Callback */
1996:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1997:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       /* Call registered callback*/
1998:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       hcan->WakeUpFromRxMsgCallback(hcan);
1999:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** #else
2000:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       /* Call weak (surcharged) callback */
2001:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       HAL_CAN_WakeUpFromRxMsgCallback(hcan);
2002:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
2003:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
2004:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
2005:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
2006:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   /* Error interrupts management *********************************************/
2007:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   if ((interrupts & CAN_IT_ERROR) != 0U)
2008:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
2009:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     if ((msrflags & CAN_MSR_ERRI) != 0U)
2010:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
2011:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       /* Check Error Warning Flag */
2012:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       if (((interrupts & CAN_IT_ERROR_WARNING) != 0U) &&
2013:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****           ((esrflags & CAN_ESR_EWGF) != 0U))
2014:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       {
2015:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         /* Set CAN error code to Error Warning */
2016:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         errorcode |= HAL_CAN_ERROR_EWG;
2017:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
2018:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         /* No need for clear of Error Warning Flag as read-only */
2019:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       }
2020:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
2021:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       /* Check Error Passive Flag */
2022:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       if (((interrupts & CAN_IT_ERROR_PASSIVE) != 0U) &&
2023:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****           ((esrflags & CAN_ESR_EPVF) != 0U))
2024:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       {
ARM GAS  /tmp/ccpEJ30p.s 			page 87


2025:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         /* Set CAN error code to Error Passive */
2026:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         errorcode |= HAL_CAN_ERROR_EPV;
2027:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
2028:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         /* No need for clear of Error Passive Flag as read-only */
2029:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       }
2030:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
2031:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       /* Check Bus-off Flag */
2032:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       if (((interrupts & CAN_IT_BUSOFF) != 0U) &&
2033:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****           ((esrflags & CAN_ESR_BOFF) != 0U))
2034:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       {
2035:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         /* Set CAN error code to Bus-Off */
2036:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         errorcode |= HAL_CAN_ERROR_BOF;
2037:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
2038:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         /* No need for clear of Error Bus-Off as read-only */
2039:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       }
2040:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
2041:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       /* Check Last Error Code Flag */
2042:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       if (((interrupts & CAN_IT_LAST_ERROR_CODE) != 0U) &&
2043:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****           ((esrflags & CAN_ESR_LEC) != 0U))
2044:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       {
2045:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         switch (esrflags & CAN_ESR_LEC)
2046:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         {
2047:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****           case (CAN_ESR_LEC_0):
2048:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****             /* Set CAN error code to Stuff error */
2049:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****             errorcode |= HAL_CAN_ERROR_STF;
2050:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****             break;
2051:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****           case (CAN_ESR_LEC_1):
2052:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****             /* Set CAN error code to Form error */
2053:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****             errorcode |= HAL_CAN_ERROR_FOR;
2054:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****             break;
2055:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****           case (CAN_ESR_LEC_1 | CAN_ESR_LEC_0):
2056:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****             /* Set CAN error code to Acknowledgement error */
2057:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****             errorcode |= HAL_CAN_ERROR_ACK;
2058:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****             break;
2059:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****           case (CAN_ESR_LEC_2):
2060:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****             /* Set CAN error code to Bit recessive error */
2061:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****             errorcode |= HAL_CAN_ERROR_BR;
2062:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****             break;
2063:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****           case (CAN_ESR_LEC_2 | CAN_ESR_LEC_0):
2064:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****             /* Set CAN error code to Bit Dominant error */
2065:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****             errorcode |= HAL_CAN_ERROR_BD;
2066:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****             break;
2067:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****           case (CAN_ESR_LEC_2 | CAN_ESR_LEC_1):
2068:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****             /* Set CAN error code to CRC error */
2069:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****             errorcode |= HAL_CAN_ERROR_CRC;
2070:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****             break;
2071:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****           default:
2072:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****             break;
2073:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         }
2074:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
2075:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         /* Clear Last error code Flag */
2076:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         CLEAR_BIT(hcan->Instance->ESR, CAN_ESR_LEC);
2077:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       }
2078:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
2079:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
2080:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     /* Clear ERRI Flag */
2081:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_ERRI);
ARM GAS  /tmp/ccpEJ30p.s 			page 88


2082:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
2083:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
2084:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   /* Call the Error call Back in case of Errors */
2085:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   if (errorcode != HAL_CAN_ERROR_NONE)
2086:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
2087:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     /* Update error code in handle */
2088:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCode |= errorcode;
2089:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
2090:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     /* Call Error callback function */
2091:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
2092:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     /* Call registered callback*/
2093:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCallback(hcan);
2094:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** #else
2095:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     /* Call weak (surcharged) callback */
2096:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     HAL_CAN_ErrorCallback(hcan);
2097:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
2098:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
2099:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** }
2100:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
2101:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** /**
2102:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @}
2103:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   */
2104:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
2105:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group5 Callback functions
2106:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @brief   CAN Callback functions
2107:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *
2108:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** @verbatim
2109:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   ==============================================================================
2110:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****                           ##### Callback functions #####
2111:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   ==============================================================================
2112:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     [..]
2113:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     This subsection provides the following callback functions:
2114:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_TxMailbox0CompleteCallback
2115:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_TxMailbox1CompleteCallback
2116:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_TxMailbox2CompleteCallback
2117:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_TxMailbox0AbortCallback
2118:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_TxMailbox1AbortCallback
2119:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_TxMailbox2AbortCallback
2120:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_RxFifo0MsgPendingCallback
2121:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_RxFifo0FullCallback
2122:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_RxFifo1MsgPendingCallback
2123:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_RxFifo1FullCallback
2124:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_SleepCallback
2125:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_WakeUpFromRxMsgCallback
2126:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_ErrorCallback
2127:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
2128:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** @endverbatim
2129:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @{
2130:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   */
2131:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
2132:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** /**
2133:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @brief  Transmission Mailbox 0 complete callback.
2134:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2135:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2136:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @retval None
2137:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   */
2138:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** __weak void HAL_CAN_TxMailbox0CompleteCallback(CAN_HandleTypeDef *hcan)
ARM GAS  /tmp/ccpEJ30p.s 			page 89


2139:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** {
 2157              		.loc 1 2139 1 is_stmt 1 view -0
 2158              		.cfi_startproc
 2159              		@ args = 0, pretend = 0, frame = 0
 2160              		@ frame_needed = 0, uses_anonymous_args = 0
 2161              		@ link register save eliminated.
2140:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2141:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   UNUSED(hcan);
 2162              		.loc 1 2141 3 view .LVU710
2142:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
2143:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2144:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****             the HAL_CAN_TxMailbox0CompleteCallback could be implemented in the
2145:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****             user file
2146:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****    */
2147:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** }
 2163              		.loc 1 2147 1 is_stmt 0 view .LVU711
 2164 0000 7047     		bx	lr
 2165              		.cfi_endproc
 2166              	.LFE259:
 2168              		.section	.text.HAL_CAN_TxMailbox1CompleteCallback,"ax",%progbits
 2169              		.align	1
 2170              		.weak	HAL_CAN_TxMailbox1CompleteCallback
 2171              		.syntax unified
 2172              		.thumb
 2173              		.thumb_func
 2174              		.fpu fpv4-sp-d16
 2176              	HAL_CAN_TxMailbox1CompleteCallback:
 2177              	.LVL163:
 2178              	.LFB260:
2148:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
2149:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** /**
2150:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @brief  Transmission Mailbox 1 complete callback.
2151:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2152:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2153:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @retval None
2154:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   */
2155:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** __weak void HAL_CAN_TxMailbox1CompleteCallback(CAN_HandleTypeDef *hcan)
2156:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** {
 2179              		.loc 1 2156 1 is_stmt 1 view -0
 2180              		.cfi_startproc
 2181              		@ args = 0, pretend = 0, frame = 0
 2182              		@ frame_needed = 0, uses_anonymous_args = 0
 2183              		@ link register save eliminated.
2157:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2158:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   UNUSED(hcan);
 2184              		.loc 1 2158 3 view .LVU713
2159:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
2160:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2161:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****             the HAL_CAN_TxMailbox1CompleteCallback could be implemented in the
2162:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****             user file
2163:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****    */
2164:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** }
 2185              		.loc 1 2164 1 is_stmt 0 view .LVU714
 2186 0000 7047     		bx	lr
 2187              		.cfi_endproc
 2188              	.LFE260:
 2190              		.section	.text.HAL_CAN_TxMailbox2CompleteCallback,"ax",%progbits
ARM GAS  /tmp/ccpEJ30p.s 			page 90


 2191              		.align	1
 2192              		.weak	HAL_CAN_TxMailbox2CompleteCallback
 2193              		.syntax unified
 2194              		.thumb
 2195              		.thumb_func
 2196              		.fpu fpv4-sp-d16
 2198              	HAL_CAN_TxMailbox2CompleteCallback:
 2199              	.LVL164:
 2200              	.LFB261:
2165:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
2166:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** /**
2167:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @brief  Transmission Mailbox 2 complete callback.
2168:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2169:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2170:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @retval None
2171:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   */
2172:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** __weak void HAL_CAN_TxMailbox2CompleteCallback(CAN_HandleTypeDef *hcan)
2173:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** {
 2201              		.loc 1 2173 1 is_stmt 1 view -0
 2202              		.cfi_startproc
 2203              		@ args = 0, pretend = 0, frame = 0
 2204              		@ frame_needed = 0, uses_anonymous_args = 0
 2205              		@ link register save eliminated.
2174:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2175:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   UNUSED(hcan);
 2206              		.loc 1 2175 3 view .LVU716
2176:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
2177:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2178:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****             the HAL_CAN_TxMailbox2CompleteCallback could be implemented in the
2179:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****             user file
2180:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****    */
2181:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** }
 2207              		.loc 1 2181 1 is_stmt 0 view .LVU717
 2208 0000 7047     		bx	lr
 2209              		.cfi_endproc
 2210              	.LFE261:
 2212              		.section	.text.HAL_CAN_TxMailbox0AbortCallback,"ax",%progbits
 2213              		.align	1
 2214              		.weak	HAL_CAN_TxMailbox0AbortCallback
 2215              		.syntax unified
 2216              		.thumb
 2217              		.thumb_func
 2218              		.fpu fpv4-sp-d16
 2220              	HAL_CAN_TxMailbox0AbortCallback:
 2221              	.LVL165:
 2222              	.LFB262:
2182:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
2183:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** /**
2184:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @brief  Transmission Mailbox 0 Cancellation callback.
2185:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
2186:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2187:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @retval None
2188:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   */
2189:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** __weak void HAL_CAN_TxMailbox0AbortCallback(CAN_HandleTypeDef *hcan)
2190:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** {
 2223              		.loc 1 2190 1 is_stmt 1 view -0
 2224              		.cfi_startproc
ARM GAS  /tmp/ccpEJ30p.s 			page 91


 2225              		@ args = 0, pretend = 0, frame = 0
 2226              		@ frame_needed = 0, uses_anonymous_args = 0
 2227              		@ link register save eliminated.
2191:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2192:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   UNUSED(hcan);
 2228              		.loc 1 2192 3 view .LVU719
2193:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
2194:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2195:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****             the HAL_CAN_TxMailbox0AbortCallback could be implemented in the
2196:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****             user file
2197:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****    */
2198:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** }
 2229              		.loc 1 2198 1 is_stmt 0 view .LVU720
 2230 0000 7047     		bx	lr
 2231              		.cfi_endproc
 2232              	.LFE262:
 2234              		.section	.text.HAL_CAN_TxMailbox1AbortCallback,"ax",%progbits
 2235              		.align	1
 2236              		.weak	HAL_CAN_TxMailbox1AbortCallback
 2237              		.syntax unified
 2238              		.thumb
 2239              		.thumb_func
 2240              		.fpu fpv4-sp-d16
 2242              	HAL_CAN_TxMailbox1AbortCallback:
 2243              	.LVL166:
 2244              	.LFB263:
2199:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
2200:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** /**
2201:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @brief  Transmission Mailbox 1 Cancellation callback.
2202:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
2203:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2204:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @retval None
2205:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   */
2206:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** __weak void HAL_CAN_TxMailbox1AbortCallback(CAN_HandleTypeDef *hcan)
2207:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** {
 2245              		.loc 1 2207 1 is_stmt 1 view -0
 2246              		.cfi_startproc
 2247              		@ args = 0, pretend = 0, frame = 0
 2248              		@ frame_needed = 0, uses_anonymous_args = 0
 2249              		@ link register save eliminated.
2208:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2209:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   UNUSED(hcan);
 2250              		.loc 1 2209 3 view .LVU722
2210:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
2211:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2212:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****             the HAL_CAN_TxMailbox1AbortCallback could be implemented in the
2213:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****             user file
2214:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****    */
2215:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** }
 2251              		.loc 1 2215 1 is_stmt 0 view .LVU723
 2252 0000 7047     		bx	lr
 2253              		.cfi_endproc
 2254              	.LFE263:
 2256              		.section	.text.HAL_CAN_TxMailbox2AbortCallback,"ax",%progbits
 2257              		.align	1
 2258              		.weak	HAL_CAN_TxMailbox2AbortCallback
 2259              		.syntax unified
ARM GAS  /tmp/ccpEJ30p.s 			page 92


 2260              		.thumb
 2261              		.thumb_func
 2262              		.fpu fpv4-sp-d16
 2264              	HAL_CAN_TxMailbox2AbortCallback:
 2265              	.LVL167:
 2266              	.LFB264:
2216:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
2217:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** /**
2218:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @brief  Transmission Mailbox 2 Cancellation callback.
2219:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
2220:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2221:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @retval None
2222:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   */
2223:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** __weak void HAL_CAN_TxMailbox2AbortCallback(CAN_HandleTypeDef *hcan)
2224:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** {
 2267              		.loc 1 2224 1 is_stmt 1 view -0
 2268              		.cfi_startproc
 2269              		@ args = 0, pretend = 0, frame = 0
 2270              		@ frame_needed = 0, uses_anonymous_args = 0
 2271              		@ link register save eliminated.
2225:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2226:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   UNUSED(hcan);
 2272              		.loc 1 2226 3 view .LVU725
2227:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
2228:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2229:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****             the HAL_CAN_TxMailbox2AbortCallback could be implemented in the
2230:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****             user file
2231:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****    */
2232:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** }
 2273              		.loc 1 2232 1 is_stmt 0 view .LVU726
 2274 0000 7047     		bx	lr
 2275              		.cfi_endproc
 2276              	.LFE264:
 2278              		.section	.text.HAL_CAN_RxFifo0MsgPendingCallback,"ax",%progbits
 2279              		.align	1
 2280              		.weak	HAL_CAN_RxFifo0MsgPendingCallback
 2281              		.syntax unified
 2282              		.thumb
 2283              		.thumb_func
 2284              		.fpu fpv4-sp-d16
 2286              	HAL_CAN_RxFifo0MsgPendingCallback:
 2287              	.LVL168:
 2288              	.LFB265:
2233:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
2234:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** /**
2235:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @brief  Rx FIFO 0 message pending callback.
2236:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2237:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2238:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @retval None
2239:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   */
2240:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** __weak void HAL_CAN_RxFifo0MsgPendingCallback(CAN_HandleTypeDef *hcan)
2241:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** {
 2289              		.loc 1 2241 1 is_stmt 1 view -0
 2290              		.cfi_startproc
 2291              		@ args = 0, pretend = 0, frame = 0
 2292              		@ frame_needed = 0, uses_anonymous_args = 0
 2293              		@ link register save eliminated.
ARM GAS  /tmp/ccpEJ30p.s 			page 93


2242:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2243:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   UNUSED(hcan);
 2294              		.loc 1 2243 3 view .LVU728
2244:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
2245:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2246:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****             the HAL_CAN_RxFifo0MsgPendingCallback could be implemented in the
2247:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****             user file
2248:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****    */
2249:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** }
 2295              		.loc 1 2249 1 is_stmt 0 view .LVU729
 2296 0000 7047     		bx	lr
 2297              		.cfi_endproc
 2298              	.LFE265:
 2300              		.section	.text.HAL_CAN_RxFifo0FullCallback,"ax",%progbits
 2301              		.align	1
 2302              		.weak	HAL_CAN_RxFifo0FullCallback
 2303              		.syntax unified
 2304              		.thumb
 2305              		.thumb_func
 2306              		.fpu fpv4-sp-d16
 2308              	HAL_CAN_RxFifo0FullCallback:
 2309              	.LVL169:
 2310              	.LFB266:
2250:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
2251:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** /**
2252:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @brief  Rx FIFO 0 full callback.
2253:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2254:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2255:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @retval None
2256:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   */
2257:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** __weak void HAL_CAN_RxFifo0FullCallback(CAN_HandleTypeDef *hcan)
2258:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** {
 2311              		.loc 1 2258 1 is_stmt 1 view -0
 2312              		.cfi_startproc
 2313              		@ args = 0, pretend = 0, frame = 0
 2314              		@ frame_needed = 0, uses_anonymous_args = 0
 2315              		@ link register save eliminated.
2259:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2260:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   UNUSED(hcan);
 2316              		.loc 1 2260 3 view .LVU731
2261:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
2262:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2263:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****             the HAL_CAN_RxFifo0FullCallback could be implemented in the user
2264:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****             file
2265:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****    */
2266:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** }
 2317              		.loc 1 2266 1 is_stmt 0 view .LVU732
 2318 0000 7047     		bx	lr
 2319              		.cfi_endproc
 2320              	.LFE266:
 2322              		.section	.text.HAL_CAN_RxFifo1MsgPendingCallback,"ax",%progbits
 2323              		.align	1
 2324              		.weak	HAL_CAN_RxFifo1MsgPendingCallback
 2325              		.syntax unified
 2326              		.thumb
 2327              		.thumb_func
 2328              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccpEJ30p.s 			page 94


 2330              	HAL_CAN_RxFifo1MsgPendingCallback:
 2331              	.LVL170:
 2332              	.LFB267:
2267:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
2268:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** /**
2269:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @brief  Rx FIFO 1 message pending callback.
2270:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2271:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2272:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @retval None
2273:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   */
2274:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** __weak void HAL_CAN_RxFifo1MsgPendingCallback(CAN_HandleTypeDef *hcan)
2275:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** {
 2333              		.loc 1 2275 1 is_stmt 1 view -0
 2334              		.cfi_startproc
 2335              		@ args = 0, pretend = 0, frame = 0
 2336              		@ frame_needed = 0, uses_anonymous_args = 0
 2337              		@ link register save eliminated.
2276:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2277:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   UNUSED(hcan);
 2338              		.loc 1 2277 3 view .LVU734
2278:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
2279:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2280:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****             the HAL_CAN_RxFifo1MsgPendingCallback could be implemented in the
2281:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****             user file
2282:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****    */
2283:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** }
 2339              		.loc 1 2283 1 is_stmt 0 view .LVU735
 2340 0000 7047     		bx	lr
 2341              		.cfi_endproc
 2342              	.LFE267:
 2344              		.section	.text.HAL_CAN_RxFifo1FullCallback,"ax",%progbits
 2345              		.align	1
 2346              		.weak	HAL_CAN_RxFifo1FullCallback
 2347              		.syntax unified
 2348              		.thumb
 2349              		.thumb_func
 2350              		.fpu fpv4-sp-d16
 2352              	HAL_CAN_RxFifo1FullCallback:
 2353              	.LVL171:
 2354              	.LFB268:
2284:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
2285:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** /**
2286:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @brief  Rx FIFO 1 full callback.
2287:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2288:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2289:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @retval None
2290:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   */
2291:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** __weak void HAL_CAN_RxFifo1FullCallback(CAN_HandleTypeDef *hcan)
2292:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** {
 2355              		.loc 1 2292 1 is_stmt 1 view -0
 2356              		.cfi_startproc
 2357              		@ args = 0, pretend = 0, frame = 0
 2358              		@ frame_needed = 0, uses_anonymous_args = 0
 2359              		@ link register save eliminated.
2293:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2294:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   UNUSED(hcan);
 2360              		.loc 1 2294 3 view .LVU737
ARM GAS  /tmp/ccpEJ30p.s 			page 95


2295:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
2296:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2297:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****             the HAL_CAN_RxFifo1FullCallback could be implemented in the user
2298:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****             file
2299:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****    */
2300:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** }
 2361              		.loc 1 2300 1 is_stmt 0 view .LVU738
 2362 0000 7047     		bx	lr
 2363              		.cfi_endproc
 2364              	.LFE268:
 2366              		.section	.text.HAL_CAN_SleepCallback,"ax",%progbits
 2367              		.align	1
 2368              		.weak	HAL_CAN_SleepCallback
 2369              		.syntax unified
 2370              		.thumb
 2371              		.thumb_func
 2372              		.fpu fpv4-sp-d16
 2374              	HAL_CAN_SleepCallback:
 2375              	.LVL172:
 2376              	.LFB269:
2301:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
2302:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** /**
2303:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @brief  Sleep callback.
2304:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2305:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2306:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @retval None
2307:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   */
2308:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** __weak void HAL_CAN_SleepCallback(CAN_HandleTypeDef *hcan)
2309:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** {
 2377              		.loc 1 2309 1 is_stmt 1 view -0
 2378              		.cfi_startproc
 2379              		@ args = 0, pretend = 0, frame = 0
 2380              		@ frame_needed = 0, uses_anonymous_args = 0
 2381              		@ link register save eliminated.
2310:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2311:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   UNUSED(hcan);
 2382              		.loc 1 2311 3 view .LVU740
2312:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
2313:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2314:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****             the HAL_CAN_SleepCallback could be implemented in the user file
2315:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****    */
2316:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** }
 2383              		.loc 1 2316 1 is_stmt 0 view .LVU741
 2384 0000 7047     		bx	lr
 2385              		.cfi_endproc
 2386              	.LFE269:
 2388              		.section	.text.HAL_CAN_WakeUpFromRxMsgCallback,"ax",%progbits
 2389              		.align	1
 2390              		.weak	HAL_CAN_WakeUpFromRxMsgCallback
 2391              		.syntax unified
 2392              		.thumb
 2393              		.thumb_func
 2394              		.fpu fpv4-sp-d16
 2396              	HAL_CAN_WakeUpFromRxMsgCallback:
 2397              	.LVL173:
 2398              	.LFB270:
2317:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
ARM GAS  /tmp/ccpEJ30p.s 			page 96


2318:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** /**
2319:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @brief  WakeUp from Rx message callback.
2320:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2321:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2322:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @retval None
2323:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   */
2324:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** __weak void HAL_CAN_WakeUpFromRxMsgCallback(CAN_HandleTypeDef *hcan)
2325:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** {
 2399              		.loc 1 2325 1 is_stmt 1 view -0
 2400              		.cfi_startproc
 2401              		@ args = 0, pretend = 0, frame = 0
 2402              		@ frame_needed = 0, uses_anonymous_args = 0
 2403              		@ link register save eliminated.
2326:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2327:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   UNUSED(hcan);
 2404              		.loc 1 2327 3 view .LVU743
2328:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
2329:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2330:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****             the HAL_CAN_WakeUpFromRxMsgCallback could be implemented in the
2331:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****             user file
2332:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****    */
2333:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** }
 2405              		.loc 1 2333 1 is_stmt 0 view .LVU744
 2406 0000 7047     		bx	lr
 2407              		.cfi_endproc
 2408              	.LFE270:
 2410              		.section	.text.HAL_CAN_ErrorCallback,"ax",%progbits
 2411              		.align	1
 2412              		.weak	HAL_CAN_ErrorCallback
 2413              		.syntax unified
 2414              		.thumb
 2415              		.thumb_func
 2416              		.fpu fpv4-sp-d16
 2418              	HAL_CAN_ErrorCallback:
 2419              	.LVL174:
 2420              	.LFB271:
2334:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
2335:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** /**
2336:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @brief  Error CAN callback.
2337:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2338:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2339:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @retval None
2340:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   */
2341:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** __weak void HAL_CAN_ErrorCallback(CAN_HandleTypeDef *hcan)
2342:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** {
 2421              		.loc 1 2342 1 is_stmt 1 view -0
 2422              		.cfi_startproc
 2423              		@ args = 0, pretend = 0, frame = 0
 2424              		@ frame_needed = 0, uses_anonymous_args = 0
 2425              		@ link register save eliminated.
2343:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2344:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   UNUSED(hcan);
 2426              		.loc 1 2344 3 view .LVU746
2345:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
2346:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2347:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****             the HAL_CAN_ErrorCallback could be implemented in the user file
2348:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****    */
ARM GAS  /tmp/ccpEJ30p.s 			page 97


2349:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** }
 2427              		.loc 1 2349 1 is_stmt 0 view .LVU747
 2428 0000 7047     		bx	lr
 2429              		.cfi_endproc
 2430              	.LFE271:
 2432              		.section	.text.HAL_CAN_IRQHandler,"ax",%progbits
 2433              		.align	1
 2434              		.global	HAL_CAN_IRQHandler
 2435              		.syntax unified
 2436              		.thumb
 2437              		.thumb_func
 2438              		.fpu fpv4-sp-d16
 2440              	HAL_CAN_IRQHandler:
 2441              	.LVL175:
 2442              	.LFB258:
1728:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   uint32_t errorcode = HAL_CAN_ERROR_NONE;
 2443              		.loc 1 1728 1 is_stmt 1 view -0
 2444              		.cfi_startproc
 2445              		@ args = 0, pretend = 0, frame = 0
 2446              		@ frame_needed = 0, uses_anonymous_args = 0
1728:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   uint32_t errorcode = HAL_CAN_ERROR_NONE;
 2447              		.loc 1 1728 1 is_stmt 0 view .LVU749
 2448 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2449              	.LCFI15:
 2450              		.cfi_def_cfa_offset 40
 2451              		.cfi_offset 3, -40
 2452              		.cfi_offset 4, -36
 2453              		.cfi_offset 5, -32
 2454              		.cfi_offset 6, -28
 2455              		.cfi_offset 7, -24
 2456              		.cfi_offset 8, -20
 2457              		.cfi_offset 9, -16
 2458              		.cfi_offset 10, -12
 2459              		.cfi_offset 11, -8
 2460              		.cfi_offset 14, -4
 2461 0004 0546     		mov	r5, r0
1729:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   uint32_t interrupts = READ_REG(hcan->Instance->IER);
 2462              		.loc 1 1729 3 is_stmt 1 view .LVU750
 2463              	.LVL176:
1730:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   uint32_t msrflags = READ_REG(hcan->Instance->MSR);
 2464              		.loc 1 1730 3 view .LVU751
1730:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   uint32_t msrflags = READ_REG(hcan->Instance->MSR);
 2465              		.loc 1 1730 25 is_stmt 0 view .LVU752
 2466 0006 0368     		ldr	r3, [r0]
1730:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   uint32_t msrflags = READ_REG(hcan->Instance->MSR);
 2467              		.loc 1 1730 12 view .LVU753
 2468 0008 5C69     		ldr	r4, [r3, #20]
 2469              	.LVL177:
1731:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   uint32_t tsrflags = READ_REG(hcan->Instance->TSR);
 2470              		.loc 1 1731 3 is_stmt 1 view .LVU754
1731:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   uint32_t tsrflags = READ_REG(hcan->Instance->TSR);
 2471              		.loc 1 1731 12 is_stmt 0 view .LVU755
 2472 000a D3F80480 		ldr	r8, [r3, #4]
 2473              	.LVL178:
1732:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   uint32_t rf0rflags = READ_REG(hcan->Instance->RF0R);
 2474              		.loc 1 1732 3 is_stmt 1 view .LVU756
1732:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   uint32_t rf0rflags = READ_REG(hcan->Instance->RF0R);
ARM GAS  /tmp/ccpEJ30p.s 			page 98


 2475              		.loc 1 1732 12 is_stmt 0 view .LVU757
 2476 000e 9F68     		ldr	r7, [r3, #8]
 2477              	.LVL179:
1733:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   uint32_t rf1rflags = READ_REG(hcan->Instance->RF1R);
 2478              		.loc 1 1733 3 is_stmt 1 view .LVU758
1733:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   uint32_t rf1rflags = READ_REG(hcan->Instance->RF1R);
 2479              		.loc 1 1733 12 is_stmt 0 view .LVU759
 2480 0010 D3F80CB0 		ldr	fp, [r3, #12]
 2481              	.LVL180:
1734:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   uint32_t esrflags = READ_REG(hcan->Instance->ESR);
 2482              		.loc 1 1734 3 is_stmt 1 view .LVU760
1734:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   uint32_t esrflags = READ_REG(hcan->Instance->ESR);
 2483              		.loc 1 1734 12 is_stmt 0 view .LVU761
 2484 0014 D3F810A0 		ldr	r10, [r3, #16]
 2485              	.LVL181:
1735:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 2486              		.loc 1 1735 3 is_stmt 1 view .LVU762
1735:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 2487              		.loc 1 1735 12 is_stmt 0 view .LVU763
 2488 0018 D3F81890 		ldr	r9, [r3, #24]
 2489              	.LVL182:
1738:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
 2490              		.loc 1 1738 3 is_stmt 1 view .LVU764
1738:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
 2491              		.loc 1 1738 6 is_stmt 0 view .LVU765
 2492 001c 14F00106 		ands	r6, r4, #1
 2493 0020 3BD0     		beq	.L170
1741:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 2494              		.loc 1 1741 5 is_stmt 1 view .LVU766
1741:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 2495              		.loc 1 1741 8 is_stmt 0 view .LVU767
 2496 0022 17F00106 		ands	r6, r7, #1
 2497 0026 16D0     		beq	.L171
1744:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 2498              		.loc 1 1744 7 is_stmt 1 view .LVU768
 2499 0028 0122     		movs	r2, #1
 2500 002a 9A60     		str	r2, [r3, #8]
1746:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       {
 2501              		.loc 1 1746 7 view .LVU769
1746:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       {
 2502              		.loc 1 1746 10 is_stmt 0 view .LVU770
 2503 002c 17F0020F 		tst	r7, #2
 2504 0030 08D1     		bne	.L205
1759:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         {
 2505              		.loc 1 1759 9 is_stmt 1 view .LVU771
1759:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         {
 2506              		.loc 1 1759 12 is_stmt 0 view .LVU772
 2507 0032 17F0040F 		tst	r7, #4
 2508 0036 0CD1     		bne	.L202
1764:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         {
 2509              		.loc 1 1764 14 is_stmt 1 view .LVU773
1764:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         {
 2510              		.loc 1 1764 17 is_stmt 0 view .LVU774
 2511 0038 17F00806 		ands	r6, r7, #8
 2512 003c 06D0     		beq	.L206
1767:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         }
 2513              		.loc 1 1767 21 view .LVU775
ARM GAS  /tmp/ccpEJ30p.s 			page 99


 2514 003e 4FF48056 		mov	r6, #4096
 2515 0042 08E0     		b	.L171
 2516              	.L205:
1754:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2517              		.loc 1 1754 9 is_stmt 1 view .LVU776
 2518 0044 FFF7FEFF 		bl	HAL_CAN_TxMailbox0CompleteCallback
 2519              	.LVL183:
1729:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   uint32_t interrupts = READ_REG(hcan->Instance->IER);
 2520              		.loc 1 1729 12 is_stmt 0 view .LVU777
 2521 0048 0026     		movs	r6, #0
 2522 004a 04E0     		b	.L171
 2523              	.LVL184:
 2524              	.L206:
1777:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2525              		.loc 1 1777 11 is_stmt 1 view .LVU778
 2526 004c FFF7FEFF 		bl	HAL_CAN_TxMailbox0AbortCallback
 2527              	.LVL185:
1777:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2528              		.loc 1 1777 11 is_stmt 0 view .LVU779
 2529 0050 01E0     		b	.L171
 2530              	.LVL186:
 2531              	.L202:
1762:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         }
 2532              		.loc 1 1762 21 view .LVU780
 2533 0052 4FF40066 		mov	r6, #2048
 2534              	.LVL187:
 2535              	.L171:
1784:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 2536              		.loc 1 1784 5 is_stmt 1 view .LVU781
1784:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 2537              		.loc 1 1784 8 is_stmt 0 view .LVU782
 2538 0056 17F4807F 		tst	r7, #256
 2539 005a 0DD0     		beq	.L173
1787:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 2540              		.loc 1 1787 7 is_stmt 1 view .LVU783
 2541 005c 2B68     		ldr	r3, [r5]
 2542 005e 4FF48072 		mov	r2, #256
 2543 0062 9A60     		str	r2, [r3, #8]
1789:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       {
 2544              		.loc 1 1789 7 view .LVU784
1789:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       {
 2545              		.loc 1 1789 10 is_stmt 0 view .LVU785
 2546 0064 17F4007F 		tst	r7, #512
 2547 0068 40F08680 		bne	.L207
1802:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         {
 2548              		.loc 1 1802 9 is_stmt 1 view .LVU786
1802:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         {
 2549              		.loc 1 1802 12 is_stmt 0 view .LVU787
 2550 006c 17F4806F 		tst	r7, #1024
 2551 0070 00F08680 		beq	.L175
1805:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         }
 2552              		.loc 1 1805 11 is_stmt 1 view .LVU788
1805:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         }
 2553              		.loc 1 1805 21 is_stmt 0 view .LVU789
 2554 0074 46F40056 		orr	r6, r6, #8192
 2555              	.LVL188:
 2556              	.L173:
ARM GAS  /tmp/ccpEJ30p.s 			page 100


1827:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 2557              		.loc 1 1827 5 is_stmt 1 view .LVU790
1827:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 2558              		.loc 1 1827 8 is_stmt 0 view .LVU791
 2559 0078 17F4803F 		tst	r7, #65536
 2560 007c 0DD0     		beq	.L170
1830:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 2561              		.loc 1 1830 7 is_stmt 1 view .LVU792
 2562 007e 2B68     		ldr	r3, [r5]
 2563 0080 4FF48032 		mov	r2, #65536
 2564 0084 9A60     		str	r2, [r3, #8]
1832:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       {
 2565              		.loc 1 1832 7 view .LVU793
1832:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       {
 2566              		.loc 1 1832 10 is_stmt 0 view .LVU794
 2567 0086 17F4003F 		tst	r7, #131072
 2568 008a 40F08380 		bne	.L208
1845:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         {
 2569              		.loc 1 1845 9 is_stmt 1 view .LVU795
1845:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         {
 2570              		.loc 1 1845 12 is_stmt 0 view .LVU796
 2571 008e 17F4802F 		tst	r7, #262144
 2572 0092 00F08380 		beq	.L178
1848:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         }
 2573              		.loc 1 1848 11 is_stmt 1 view .LVU797
1848:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         }
 2574              		.loc 1 1848 21 is_stmt 0 view .LVU798
 2575 0096 46F40046 		orr	r6, r6, #32768
 2576              	.LVL189:
 2577              	.L170:
1871:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
 2578              		.loc 1 1871 3 is_stmt 1 view .LVU799
1871:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
 2579              		.loc 1 1871 6 is_stmt 0 view .LVU800
 2580 009a 14F0080F 		tst	r4, #8
 2581 009e 07D0     		beq	.L180
1873:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 2582              		.loc 1 1873 5 is_stmt 1 view .LVU801
1873:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 2583              		.loc 1 1873 8 is_stmt 0 view .LVU802
 2584 00a0 1BF0100F 		tst	fp, #16
 2585 00a4 04D0     		beq	.L180
1876:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 2586              		.loc 1 1876 7 is_stmt 1 view .LVU803
1876:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 2587              		.loc 1 1876 17 is_stmt 0 view .LVU804
 2588 00a6 46F40076 		orr	r6, r6, #512
 2589              	.LVL190:
1879:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
 2590              		.loc 1 1879 7 is_stmt 1 view .LVU805
 2591 00aa 2B68     		ldr	r3, [r5]
 2592 00ac 1022     		movs	r2, #16
 2593 00ae DA60     		str	r2, [r3, #12]
 2594              	.L180:
1884:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
 2595              		.loc 1 1884 3 view .LVU806
1884:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
ARM GAS  /tmp/ccpEJ30p.s 			page 101


 2596              		.loc 1 1884 6 is_stmt 0 view .LVU807
 2597 00b0 14F0040F 		tst	r4, #4
 2598 00b4 02D0     		beq	.L181
1886:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 2599              		.loc 1 1886 5 is_stmt 1 view .LVU808
1886:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 2600              		.loc 1 1886 8 is_stmt 0 view .LVU809
 2601 00b6 1BF0080F 		tst	fp, #8
 2602 00ba 79D1     		bne	.L209
 2603              	.L181:
1903:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
 2604              		.loc 1 1903 3 is_stmt 1 view .LVU810
1903:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
 2605              		.loc 1 1903 6 is_stmt 0 view .LVU811
 2606 00bc 14F0020F 		tst	r4, #2
 2607 00c0 04D0     		beq	.L182
1906:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 2608              		.loc 1 1906 5 is_stmt 1 view .LVU812
1906:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 2609              		.loc 1 1906 14 is_stmt 0 view .LVU813
 2610 00c2 2B68     		ldr	r3, [r5]
1906:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 2611              		.loc 1 1906 24 view .LVU814
 2612 00c4 DB68     		ldr	r3, [r3, #12]
1906:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 2613              		.loc 1 1906 8 view .LVU815
 2614 00c6 13F0030F 		tst	r3, #3
 2615 00ca 78D1     		bne	.L210
 2616              	.L182:
1920:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
 2617              		.loc 1 1920 3 is_stmt 1 view .LVU816
1920:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
 2618              		.loc 1 1920 6 is_stmt 0 view .LVU817
 2619 00cc 14F0400F 		tst	r4, #64
 2620 00d0 07D0     		beq	.L183
1922:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 2621              		.loc 1 1922 5 is_stmt 1 view .LVU818
1922:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 2622              		.loc 1 1922 8 is_stmt 0 view .LVU819
 2623 00d2 1AF0100F 		tst	r10, #16
 2624 00d6 04D0     		beq	.L183
1925:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 2625              		.loc 1 1925 7 is_stmt 1 view .LVU820
1925:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 2626              		.loc 1 1925 17 is_stmt 0 view .LVU821
 2627 00d8 46F48066 		orr	r6, r6, #1024
 2628              	.LVL191:
1928:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
 2629              		.loc 1 1928 7 is_stmt 1 view .LVU822
 2630 00dc 2B68     		ldr	r3, [r5]
 2631 00de 1022     		movs	r2, #16
 2632 00e0 1A61     		str	r2, [r3, #16]
 2633              	.L183:
1933:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
 2634              		.loc 1 1933 3 view .LVU823
1933:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
 2635              		.loc 1 1933 6 is_stmt 0 view .LVU824
ARM GAS  /tmp/ccpEJ30p.s 			page 102


 2636 00e2 14F0200F 		tst	r4, #32
 2637 00e6 02D0     		beq	.L184
1935:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 2638              		.loc 1 1935 5 is_stmt 1 view .LVU825
1935:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 2639              		.loc 1 1935 8 is_stmt 0 view .LVU826
 2640 00e8 1AF0080F 		tst	r10, #8
 2641 00ec 6BD1     		bne	.L211
 2642              	.L184:
1952:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
 2643              		.loc 1 1952 3 is_stmt 1 view .LVU827
1952:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
 2644              		.loc 1 1952 6 is_stmt 0 view .LVU828
 2645 00ee 14F0100F 		tst	r4, #16
 2646 00f2 04D0     		beq	.L185
1955:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 2647              		.loc 1 1955 5 is_stmt 1 view .LVU829
1955:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 2648              		.loc 1 1955 14 is_stmt 0 view .LVU830
 2649 00f4 2B68     		ldr	r3, [r5]
1955:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 2650              		.loc 1 1955 24 view .LVU831
 2651 00f6 1B69     		ldr	r3, [r3, #16]
1955:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 2652              		.loc 1 1955 8 view .LVU832
 2653 00f8 13F0030F 		tst	r3, #3
 2654 00fc 6AD1     		bne	.L212
 2655              	.L185:
1969:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
 2656              		.loc 1 1969 3 is_stmt 1 view .LVU833
1969:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
 2657              		.loc 1 1969 6 is_stmt 0 view .LVU834
 2658 00fe 14F4003F 		tst	r4, #131072
 2659 0102 02D0     		beq	.L186
1971:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 2660              		.loc 1 1971 5 is_stmt 1 view .LVU835
1971:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 2661              		.loc 1 1971 8 is_stmt 0 view .LVU836
 2662 0104 18F0100F 		tst	r8, #16
 2663 0108 68D1     		bne	.L213
 2664              	.L186:
1988:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
 2665              		.loc 1 1988 3 is_stmt 1 view .LVU837
1988:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
 2666              		.loc 1 1988 6 is_stmt 0 view .LVU838
 2667 010a 14F4803F 		tst	r4, #65536
 2668 010e 02D0     		beq	.L187
1990:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 2669              		.loc 1 1990 5 is_stmt 1 view .LVU839
1990:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 2670              		.loc 1 1990 8 is_stmt 0 view .LVU840
 2671 0110 18F0080F 		tst	r8, #8
 2672 0114 69D1     		bne	.L214
 2673              	.L187:
2007:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
 2674              		.loc 1 2007 3 is_stmt 1 view .LVU841
2007:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
ARM GAS  /tmp/ccpEJ30p.s 			page 103


 2675              		.loc 1 2007 6 is_stmt 0 view .LVU842
 2676 0116 14F4004F 		tst	r4, #32768
 2677 011a 7AD0     		beq	.L188
2009:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 2678              		.loc 1 2009 5 is_stmt 1 view .LVU843
2009:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 2679              		.loc 1 2009 8 is_stmt 0 view .LVU844
 2680 011c 18F0040F 		tst	r8, #4
 2681 0120 74D0     		beq	.L189
2012:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****           ((esrflags & CAN_ESR_EWGF) != 0U))
 2682              		.loc 1 2012 7 is_stmt 1 view .LVU845
2012:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****           ((esrflags & CAN_ESR_EWGF) != 0U))
 2683              		.loc 1 2012 10 is_stmt 0 view .LVU846
 2684 0122 14F4807F 		tst	r4, #256
 2685 0126 04D0     		beq	.L190
2012:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****           ((esrflags & CAN_ESR_EWGF) != 0U))
 2686              		.loc 1 2012 55 discriminator 1 view .LVU847
 2687 0128 19F0010F 		tst	r9, #1
 2688 012c 01D0     		beq	.L190
2016:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 2689              		.loc 1 2016 9 is_stmt 1 view .LVU848
2016:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 2690              		.loc 1 2016 19 is_stmt 0 view .LVU849
 2691 012e 46F00106 		orr	r6, r6, #1
 2692              	.LVL192:
 2693              	.L190:
2022:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****           ((esrflags & CAN_ESR_EPVF) != 0U))
 2694              		.loc 1 2022 7 is_stmt 1 view .LVU850
2022:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****           ((esrflags & CAN_ESR_EPVF) != 0U))
 2695              		.loc 1 2022 10 is_stmt 0 view .LVU851
 2696 0132 14F4007F 		tst	r4, #512
 2697 0136 04D0     		beq	.L191
2022:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****           ((esrflags & CAN_ESR_EPVF) != 0U))
 2698              		.loc 1 2022 55 discriminator 1 view .LVU852
 2699 0138 19F0020F 		tst	r9, #2
 2700 013c 01D0     		beq	.L191
2026:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 2701              		.loc 1 2026 9 is_stmt 1 view .LVU853
2026:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 2702              		.loc 1 2026 19 is_stmt 0 view .LVU854
 2703 013e 46F00206 		orr	r6, r6, #2
 2704              	.LVL193:
 2705              	.L191:
2032:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****           ((esrflags & CAN_ESR_BOFF) != 0U))
 2706              		.loc 1 2032 7 is_stmt 1 view .LVU855
2032:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****           ((esrflags & CAN_ESR_BOFF) != 0U))
 2707              		.loc 1 2032 10 is_stmt 0 view .LVU856
 2708 0142 14F4806F 		tst	r4, #1024
 2709 0146 04D0     		beq	.L192
2032:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****           ((esrflags & CAN_ESR_BOFF) != 0U))
 2710              		.loc 1 2032 48 discriminator 1 view .LVU857
 2711 0148 19F0040F 		tst	r9, #4
 2712 014c 01D0     		beq	.L192
2036:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 2713              		.loc 1 2036 9 is_stmt 1 view .LVU858
2036:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 2714              		.loc 1 2036 19 is_stmt 0 view .LVU859
ARM GAS  /tmp/ccpEJ30p.s 			page 104


 2715 014e 46F00406 		orr	r6, r6, #4
 2716              	.LVL194:
 2717              	.L192:
2042:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****           ((esrflags & CAN_ESR_LEC) != 0U))
 2718              		.loc 1 2042 7 is_stmt 1 view .LVU860
2042:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****           ((esrflags & CAN_ESR_LEC) != 0U))
 2719              		.loc 1 2042 10 is_stmt 0 view .LVU861
 2720 0152 14F4006F 		tst	r4, #2048
 2721 0156 59D0     		beq	.L189
2042:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****           ((esrflags & CAN_ESR_LEC) != 0U))
 2722              		.loc 1 2042 57 discriminator 1 view .LVU862
 2723 0158 19F07009 		ands	r9, r9, #112
 2724              	.LVL195:
2042:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****           ((esrflags & CAN_ESR_LEC) != 0U))
 2725              		.loc 1 2042 57 discriminator 1 view .LVU863
 2726 015c 56D0     		beq	.L189
2045:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         {
 2727              		.loc 1 2045 9 is_stmt 1 view .LVU864
 2728 015e B9F1400F 		cmp	r9, #64
 2729 0162 65D0     		beq	.L193
 2730 0164 58D8     		bhi	.L194
 2731 0166 B9F1200F 		cmp	r9, #32
 2732 016a 5ED0     		beq	.L195
 2733 016c B9F1300F 		cmp	r9, #48
 2734 0170 42D1     		bne	.L215
2057:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****             break;
 2735              		.loc 1 2057 13 view .LVU865
2057:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****             break;
 2736              		.loc 1 2057 23 is_stmt 0 view .LVU866
 2737 0172 46F02006 		orr	r6, r6, #32
 2738              	.LVL196:
2058:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****           case (CAN_ESR_LEC_2):
 2739              		.loc 1 2058 13 is_stmt 1 view .LVU867
 2740 0176 44E0     		b	.L198
 2741              	.LVL197:
 2742              	.L207:
1797:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2743              		.loc 1 1797 9 view .LVU868
 2744 0178 2846     		mov	r0, r5
 2745 017a FFF7FEFF 		bl	HAL_CAN_TxMailbox1CompleteCallback
 2746              	.LVL198:
 2747 017e 7BE7     		b	.L173
 2748              	.L175:
1807:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         {
 2749              		.loc 1 1807 14 view .LVU869
1807:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         {
 2750              		.loc 1 1807 17 is_stmt 0 view .LVU870
 2751 0180 17F4006F 		tst	r7, #2048
 2752 0184 02D0     		beq	.L176
1810:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         }
 2753              		.loc 1 1810 11 is_stmt 1 view .LVU871
1810:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         }
 2754              		.loc 1 1810 21 is_stmt 0 view .LVU872
 2755 0186 46F48046 		orr	r6, r6, #16384
 2756              	.LVL199:
1810:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         }
 2757              		.loc 1 1810 21 view .LVU873
ARM GAS  /tmp/ccpEJ30p.s 			page 105


 2758 018a 75E7     		b	.L173
 2759              	.L176:
1820:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2760              		.loc 1 1820 11 is_stmt 1 view .LVU874
 2761 018c 2846     		mov	r0, r5
 2762 018e FFF7FEFF 		bl	HAL_CAN_TxMailbox1AbortCallback
 2763              	.LVL200:
 2764 0192 71E7     		b	.L173
 2765              	.L208:
1840:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2766              		.loc 1 1840 9 view .LVU875
 2767 0194 2846     		mov	r0, r5
 2768 0196 FFF7FEFF 		bl	HAL_CAN_TxMailbox2CompleteCallback
 2769              	.LVL201:
 2770 019a 7EE7     		b	.L170
 2771              	.L178:
1850:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         {
 2772              		.loc 1 1850 14 view .LVU876
1850:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         {
 2773              		.loc 1 1850 17 is_stmt 0 view .LVU877
 2774 019c 17F4002F 		tst	r7, #524288
 2775 01a0 02D0     		beq	.L179
1853:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         }
 2776              		.loc 1 1853 11 is_stmt 1 view .LVU878
1853:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         }
 2777              		.loc 1 1853 21 is_stmt 0 view .LVU879
 2778 01a2 46F48036 		orr	r6, r6, #65536
 2779              	.LVL202:
1853:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         }
 2780              		.loc 1 1853 21 view .LVU880
 2781 01a6 78E7     		b	.L170
 2782              	.L179:
1863:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2783              		.loc 1 1863 11 is_stmt 1 view .LVU881
 2784 01a8 2846     		mov	r0, r5
 2785 01aa FFF7FEFF 		bl	HAL_CAN_TxMailbox2AbortCallback
 2786              	.LVL203:
 2787 01ae 74E7     		b	.L170
 2788              	.L209:
1889:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 2789              		.loc 1 1889 7 view .LVU882
 2790 01b0 2B68     		ldr	r3, [r5]
 2791 01b2 0822     		movs	r2, #8
 2792 01b4 DA60     		str	r2, [r3, #12]
1897:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2793              		.loc 1 1897 7 view .LVU883
 2794 01b6 2846     		mov	r0, r5
 2795 01b8 FFF7FEFF 		bl	HAL_CAN_RxFifo0FullCallback
 2796              	.LVL204:
 2797 01bc 7EE7     		b	.L181
 2798              	.L210:
1914:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2799              		.loc 1 1914 7 view .LVU884
 2800 01be 2846     		mov	r0, r5
 2801 01c0 FFF7FEFF 		bl	HAL_CAN_RxFifo0MsgPendingCallback
 2802              	.LVL205:
 2803 01c4 82E7     		b	.L182
ARM GAS  /tmp/ccpEJ30p.s 			page 106


 2804              	.L211:
1938:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 2805              		.loc 1 1938 7 view .LVU885
 2806 01c6 2B68     		ldr	r3, [r5]
 2807 01c8 0822     		movs	r2, #8
 2808 01ca 1A61     		str	r2, [r3, #16]
1946:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2809              		.loc 1 1946 7 view .LVU886
 2810 01cc 2846     		mov	r0, r5
 2811 01ce FFF7FEFF 		bl	HAL_CAN_RxFifo1FullCallback
 2812              	.LVL206:
 2813 01d2 8CE7     		b	.L184
 2814              	.L212:
1963:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2815              		.loc 1 1963 7 view .LVU887
 2816 01d4 2846     		mov	r0, r5
 2817 01d6 FFF7FEFF 		bl	HAL_CAN_RxFifo1MsgPendingCallback
 2818              	.LVL207:
 2819 01da 90E7     		b	.L185
 2820              	.L213:
1974:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 2821              		.loc 1 1974 7 view .LVU888
 2822 01dc 2B68     		ldr	r3, [r5]
 2823 01de 1022     		movs	r2, #16
 2824 01e0 5A60     		str	r2, [r3, #4]
1982:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2825              		.loc 1 1982 7 view .LVU889
 2826 01e2 2846     		mov	r0, r5
 2827 01e4 FFF7FEFF 		bl	HAL_CAN_SleepCallback
 2828              	.LVL208:
 2829 01e8 8FE7     		b	.L186
 2830              	.L214:
1993:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 2831              		.loc 1 1993 7 view .LVU890
 2832 01ea 2B68     		ldr	r3, [r5]
 2833 01ec 0822     		movs	r2, #8
 2834 01ee 5A60     		str	r2, [r3, #4]
2001:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2835              		.loc 1 2001 7 view .LVU891
 2836 01f0 2846     		mov	r0, r5
 2837 01f2 FFF7FEFF 		bl	HAL_CAN_WakeUpFromRxMsgCallback
 2838              	.LVL209:
 2839 01f6 8EE7     		b	.L187
 2840              	.LVL210:
 2841              	.L215:
2045:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         {
 2842              		.loc 1 2045 9 is_stmt 0 view .LVU892
 2843 01f8 B9F1100F 		cmp	r9, #16
 2844 01fc 01D1     		bne	.L198
2049:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****             break;
 2845              		.loc 1 2049 13 is_stmt 1 view .LVU893
2049:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****             break;
 2846              		.loc 1 2049 23 is_stmt 0 view .LVU894
 2847 01fe 46F00806 		orr	r6, r6, #8
 2848              	.LVL211:
2050:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****           case (CAN_ESR_LEC_1):
 2849              		.loc 1 2050 13 is_stmt 1 view .LVU895
ARM GAS  /tmp/ccpEJ30p.s 			page 107


 2850              	.L198:
2076:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       }
 2851              		.loc 1 2076 9 view .LVU896
 2852 0202 2A68     		ldr	r2, [r5]
 2853 0204 9369     		ldr	r3, [r2, #24]
 2854 0206 23F07003 		bic	r3, r3, #112
 2855 020a 9361     		str	r3, [r2, #24]
 2856              	.L189:
2081:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
 2857              		.loc 1 2081 5 view .LVU897
 2858 020c 2B68     		ldr	r3, [r5]
 2859 020e 0422     		movs	r2, #4
 2860 0210 5A60     		str	r2, [r3, #4]
 2861              	.L188:
2085:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
 2862              		.loc 1 2085 3 view .LVU898
2085:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
 2863              		.loc 1 2085 6 is_stmt 0 view .LVU899
 2864 0212 9EB9     		cbnz	r6, .L216
 2865              	.LVL212:
 2866              	.L169:
2099:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 2867              		.loc 1 2099 1 view .LVU900
 2868 0214 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2869              	.LVL213:
 2870              	.L194:
2045:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****         {
 2871              		.loc 1 2045 9 view .LVU901
 2872 0218 B9F1500F 		cmp	r9, #80
 2873 021c 0BD0     		beq	.L199
 2874 021e B9F1600F 		cmp	r9, #96
 2875 0222 EED1     		bne	.L198
2069:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****             break;
 2876              		.loc 1 2069 13 is_stmt 1 view .LVU902
2069:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****             break;
 2877              		.loc 1 2069 23 is_stmt 0 view .LVU903
 2878 0224 46F48076 		orr	r6, r6, #256
 2879              	.LVL214:
2070:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****           default:
 2880              		.loc 1 2070 13 is_stmt 1 view .LVU904
 2881 0228 EBE7     		b	.L198
 2882              	.L195:
2053:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****             break;
 2883              		.loc 1 2053 13 view .LVU905
2053:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****             break;
 2884              		.loc 1 2053 23 is_stmt 0 view .LVU906
 2885 022a 46F01006 		orr	r6, r6, #16
 2886              	.LVL215:
2054:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****           case (CAN_ESR_LEC_1 | CAN_ESR_LEC_0):
 2887              		.loc 1 2054 13 is_stmt 1 view .LVU907
 2888 022e E8E7     		b	.L198
 2889              	.L193:
2061:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****             break;
 2890              		.loc 1 2061 13 view .LVU908
2061:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****             break;
 2891              		.loc 1 2061 23 is_stmt 0 view .LVU909
 2892 0230 46F04006 		orr	r6, r6, #64
ARM GAS  /tmp/ccpEJ30p.s 			page 108


 2893              	.LVL216:
2062:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****           case (CAN_ESR_LEC_2 | CAN_ESR_LEC_0):
 2894              		.loc 1 2062 13 is_stmt 1 view .LVU910
 2895 0234 E5E7     		b	.L198
 2896              	.L199:
2065:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****             break;
 2897              		.loc 1 2065 13 view .LVU911
2065:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****             break;
 2898              		.loc 1 2065 23 is_stmt 0 view .LVU912
 2899 0236 46F08006 		orr	r6, r6, #128
 2900              	.LVL217:
2066:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****           case (CAN_ESR_LEC_2 | CAN_ESR_LEC_1):
 2901              		.loc 1 2066 13 is_stmt 1 view .LVU913
 2902 023a E2E7     		b	.L198
 2903              	.L216:
2088:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 2904              		.loc 1 2088 5 view .LVU914
2088:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 2905              		.loc 1 2088 21 is_stmt 0 view .LVU915
 2906 023c 6B6A     		ldr	r3, [r5, #36]
 2907 023e 1E43     		orrs	r6, r6, r3
 2908              	.LVL218:
2088:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 2909              		.loc 1 2088 21 view .LVU916
 2910 0240 6E62     		str	r6, [r5, #36]
2096:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2911              		.loc 1 2096 5 is_stmt 1 view .LVU917
 2912 0242 2846     		mov	r0, r5
 2913 0244 FFF7FEFF 		bl	HAL_CAN_ErrorCallback
 2914              	.LVL219:
2099:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
 2915              		.loc 1 2099 1 is_stmt 0 view .LVU918
 2916 0248 E4E7     		b	.L169
 2917              		.cfi_endproc
 2918              	.LFE258:
 2920              		.section	.text.HAL_CAN_GetState,"ax",%progbits
 2921              		.align	1
 2922              		.global	HAL_CAN_GetState
 2923              		.syntax unified
 2924              		.thumb
 2925              		.thumb_func
 2926              		.fpu fpv4-sp-d16
 2928              	HAL_CAN_GetState:
 2929              	.LVL220:
 2930              	.LFB272:
2350:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
2351:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** /**
2352:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @}
2353:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   */
2354:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
2355:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group6 Peripheral State and Error functions
2356:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @brief   CAN Peripheral State functions
2357:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *
2358:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** @verbatim
2359:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   ==============================================================================
2360:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****             ##### Peripheral State and Error functions #####
2361:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   ==============================================================================
ARM GAS  /tmp/ccpEJ30p.s 			page 109


2362:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     [..]
2363:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     This subsection provides functions allowing to :
2364:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_GetState()  : Return the CAN state.
2365:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_GetError()  : Return the CAN error codes if any.
2366:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_ResetError(): Reset the CAN error codes if any.
2367:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
2368:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** @endverbatim
2369:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @{
2370:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   */
2371:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
2372:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** /**
2373:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @brief  Return the CAN state.
2374:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2375:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2376:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @retval HAL state
2377:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   */
2378:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** HAL_CAN_StateTypeDef HAL_CAN_GetState(const CAN_HandleTypeDef *hcan)
2379:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** {
 2931              		.loc 1 2379 1 is_stmt 1 view -0
 2932              		.cfi_startproc
 2933              		@ args = 0, pretend = 0, frame = 0
 2934              		@ frame_needed = 0, uses_anonymous_args = 0
 2935              		@ link register save eliminated.
 2936              		.loc 1 2379 1 is_stmt 0 view .LVU920
 2937 0000 0246     		mov	r2, r0
2380:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 2938              		.loc 1 2380 3 is_stmt 1 view .LVU921
 2939              		.loc 1 2380 24 is_stmt 0 view .LVU922
 2940 0002 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 2941 0006 D8B2     		uxtb	r0, r3
 2942              	.LVL221:
2381:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
2382:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 2943              		.loc 1 2382 3 is_stmt 1 view .LVU923
 2944              		.loc 1 2382 38 is_stmt 0 view .LVU924
 2945 0008 013B     		subs	r3, r3, #1
 2946 000a DBB2     		uxtb	r3, r3
 2947              		.loc 1 2382 6 view .LVU925
 2948 000c 012B     		cmp	r3, #1
 2949 000e 00D9     		bls	.L221
 2950              	.LVL222:
 2951              	.L218:
2383:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
2384:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
2385:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     /* Check sleep mode acknowledge flag */
2386:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     if ((hcan->Instance->MSR & CAN_MSR_SLAK) != 0U)
2387:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
2388:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       /* Sleep mode is active */
2389:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       state = HAL_CAN_STATE_SLEEP_ACTIVE;
2390:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
2391:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     /* Check sleep mode request flag */
2392:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     else if ((hcan->Instance->MCR & CAN_MCR_SLEEP) != 0U)
2393:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
2394:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       /* Sleep mode request is pending */
2395:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       state = HAL_CAN_STATE_SLEEP_PENDING;
2396:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
2397:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     else
ARM GAS  /tmp/ccpEJ30p.s 			page 110


2398:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
2399:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       /* Neither sleep mode request nor sleep mode acknowledge */
2400:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
 2952              		.loc 1 2400 5 is_stmt 1 view .LVU926
2401:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
2402:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
2403:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   /* Return CAN state */
2404:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   return state;
 2953              		.loc 1 2404 3 view .LVU927
2405:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** }
 2954              		.loc 1 2405 1 is_stmt 0 view .LVU928
 2955 0010 7047     		bx	lr
 2956              	.LVL223:
 2957              	.L221:
2386:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 2958              		.loc 1 2386 5 is_stmt 1 view .LVU929
2386:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 2959              		.loc 1 2386 14 is_stmt 0 view .LVU930
 2960 0012 1368     		ldr	r3, [r2]
2386:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 2961              		.loc 1 2386 24 view .LVU931
 2962 0014 5A68     		ldr	r2, [r3, #4]
 2963              	.LVL224:
2386:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 2964              		.loc 1 2386 8 view .LVU932
 2965 0016 12F0020F 		tst	r2, #2
 2966 001a 05D1     		bne	.L219
2392:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 2967              		.loc 1 2392 10 is_stmt 1 view .LVU933
2392:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 2968              		.loc 1 2392 29 is_stmt 0 view .LVU934
 2969 001c 1B68     		ldr	r3, [r3]
2392:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     {
 2970              		.loc 1 2392 13 view .LVU935
 2971 001e 13F0020F 		tst	r3, #2
 2972 0022 F5D0     		beq	.L218
2395:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
 2973              		.loc 1 2395 13 view .LVU936
 2974 0024 0320     		movs	r0, #3
 2975              	.LVL225:
2395:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
 2976              		.loc 1 2395 13 view .LVU937
 2977 0026 F3E7     		b	.L218
 2978              	.LVL226:
 2979              	.L219:
2389:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
 2980              		.loc 1 2389 13 view .LVU938
 2981 0028 0420     		movs	r0, #4
 2982              	.LVL227:
2389:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     }
 2983              		.loc 1 2389 13 view .LVU939
 2984 002a 7047     		bx	lr
 2985              		.cfi_endproc
 2986              	.LFE272:
 2988              		.section	.text.HAL_CAN_GetError,"ax",%progbits
 2989              		.align	1
 2990              		.global	HAL_CAN_GetError
ARM GAS  /tmp/ccpEJ30p.s 			page 111


 2991              		.syntax unified
 2992              		.thumb
 2993              		.thumb_func
 2994              		.fpu fpv4-sp-d16
 2996              	HAL_CAN_GetError:
 2997              	.LVL228:
 2998              	.LFB273:
2406:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
2407:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** /**
2408:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @brief  Return the CAN error code.
2409:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2410:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2411:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @retval CAN Error Code
2412:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   */
2413:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** uint32_t HAL_CAN_GetError(const CAN_HandleTypeDef *hcan)
2414:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** {
 2999              		.loc 1 2414 1 is_stmt 1 view -0
 3000              		.cfi_startproc
 3001              		@ args = 0, pretend = 0, frame = 0
 3002              		@ frame_needed = 0, uses_anonymous_args = 0
 3003              		@ link register save eliminated.
2415:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   /* Return CAN error code */
2416:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   return hcan->ErrorCode;
 3004              		.loc 1 2416 3 view .LVU941
 3005              		.loc 1 2416 14 is_stmt 0 view .LVU942
 3006 0000 406A     		ldr	r0, [r0, #36]
 3007              	.LVL229:
2417:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** }
 3008              		.loc 1 2417 1 view .LVU943
 3009 0002 7047     		bx	lr
 3010              		.cfi_endproc
 3011              	.LFE273:
 3013              		.section	.text.HAL_CAN_ResetError,"ax",%progbits
 3014              		.align	1
 3015              		.global	HAL_CAN_ResetError
 3016              		.syntax unified
 3017              		.thumb
 3018              		.thumb_func
 3019              		.fpu fpv4-sp-d16
 3021              	HAL_CAN_ResetError:
 3022              	.LVL230:
 3023              	.LFB274:
2418:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
2419:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** /**
2420:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @brief  Reset the CAN error code.
2421:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2422:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2423:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   * @retval HAL status
2424:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   */
2425:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_ResetError(CAN_HandleTypeDef *hcan)
2426:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** {
 3024              		.loc 1 2426 1 is_stmt 1 view -0
 3025              		.cfi_startproc
 3026              		@ args = 0, pretend = 0, frame = 0
 3027              		@ frame_needed = 0, uses_anonymous_args = 0
 3028              		@ link register save eliminated.
2427:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   HAL_StatusTypeDef status = HAL_OK;
ARM GAS  /tmp/ccpEJ30p.s 			page 112


 3029              		.loc 1 2427 3 view .LVU945
2428:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 3030              		.loc 1 2428 3 view .LVU946
 3031              		.loc 1 2428 24 is_stmt 0 view .LVU947
 3032 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 3033              	.LVL231:
2429:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
2430:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 3034              		.loc 1 2430 3 is_stmt 1 view .LVU948
 3035              		.loc 1 2430 38 is_stmt 0 view .LVU949
 3036 0004 013B     		subs	r3, r3, #1
 3037              	.LVL232:
 3038              		.loc 1 2430 38 view .LVU950
 3039 0006 DBB2     		uxtb	r3, r3
 3040              		.loc 1 2430 6 view .LVU951
 3041 0008 012B     		cmp	r3, #1
 3042 000a 05D9     		bls	.L226
2431:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
2432:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
2433:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     /* Reset CAN error code */
2434:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCode = 0U;
2435:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
2436:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   else
2437:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   {
2438:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     /* Update error code */
2439:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 3043              		.loc 1 2439 5 is_stmt 1 view .LVU952
 3044              		.loc 1 2439 21 is_stmt 0 view .LVU953
 3045 000c 436A     		ldr	r3, [r0, #36]
 3046 000e 43F48023 		orr	r3, r3, #262144
 3047 0012 4362     		str	r3, [r0, #36]
2440:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
2441:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****     status = HAL_ERROR;
 3048              		.loc 1 2441 5 is_stmt 1 view .LVU954
 3049              	.LVL233:
 3050              		.loc 1 2441 12 is_stmt 0 view .LVU955
 3051 0014 0120     		movs	r0, #1
 3052              	.LVL234:
2442:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
2443:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** 
2444:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   /* Return the status */
2445:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   return status;
 3053              		.loc 1 2445 3 is_stmt 1 view .LVU956
2446:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c **** }
 3054              		.loc 1 2446 1 is_stmt 0 view .LVU957
 3055 0016 7047     		bx	lr
 3056              	.LVL235:
 3057              	.L226:
2434:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
 3058              		.loc 1 2434 5 is_stmt 1 view .LVU958
2434:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   }
 3059              		.loc 1 2434 21 is_stmt 0 view .LVU959
 3060 0018 0023     		movs	r3, #0
 3061 001a 4362     		str	r3, [r0, #36]
2427:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 3062              		.loc 1 2427 21 view .LVU960
 3063 001c 1846     		mov	r0, r3
ARM GAS  /tmp/ccpEJ30p.s 			page 113


 3064              	.LVL236:
2427:stm32f4xx-hal-driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 3065              		.loc 1 2427 21 view .LVU961
 3066 001e 7047     		bx	lr
 3067              		.cfi_endproc
 3068              	.LFE274:
 3070              		.text
 3071              	.Letext0:
 3072              		.file 3 "/opt/gcc_arm/gcc-arm-none-eabi-9-2019-q4-major/arm-none-eabi/include/machine/_default_typ
 3073              		.file 4 "/opt/gcc_arm/gcc-arm-none-eabi-9-2019-q4-major/arm-none-eabi/include/sys/_stdint.h"
 3074              		.file 5 "CMSIS_5/CMSIS/Core/Include/core_cm4.h"
 3075              		.file 6 "cmsis-device-f4/Include/system_stm32f4xx.h"
 3076              		.file 7 "cmsis-device-f4/Include/stm32f407xx.h"
 3077              		.file 8 "cmsis-device-f4/Include/stm32f4xx.h"
 3078              		.file 9 "stm32f4xx-hal-driver/Inc/stm32f4xx_hal_def.h"
 3079              		.file 10 "stm32f4xx-hal-driver/Inc/stm32f4xx_hal_can.h"
 3080              		.file 11 "stm32f4xx-hal-driver/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/ccpEJ30p.s 			page 114


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_hal_can.c
     /tmp/ccpEJ30p.s:18     .text.HAL_CAN_MspInit:0000000000000000 $t
     /tmp/ccpEJ30p.s:26     .text.HAL_CAN_MspInit:0000000000000000 HAL_CAN_MspInit
     /tmp/ccpEJ30p.s:42     .text.HAL_CAN_Init:0000000000000000 $t
     /tmp/ccpEJ30p.s:49     .text.HAL_CAN_Init:0000000000000000 HAL_CAN_Init
     /tmp/ccpEJ30p.s:339    .text.HAL_CAN_MspDeInit:0000000000000000 $t
     /tmp/ccpEJ30p.s:346    .text.HAL_CAN_MspDeInit:0000000000000000 HAL_CAN_MspDeInit
     /tmp/ccpEJ30p.s:361    .text.HAL_CAN_ConfigFilter:0000000000000000 $t
     /tmp/ccpEJ30p.s:368    .text.HAL_CAN_ConfigFilter:0000000000000000 HAL_CAN_ConfigFilter
     /tmp/ccpEJ30p.s:607    .text.HAL_CAN_ConfigFilter:000000000000012c $d
     /tmp/ccpEJ30p.s:612    .text.HAL_CAN_Start:0000000000000000 $t
     /tmp/ccpEJ30p.s:619    .text.HAL_CAN_Start:0000000000000000 HAL_CAN_Start
     /tmp/ccpEJ30p.s:717    .text.HAL_CAN_Stop:0000000000000000 $t
     /tmp/ccpEJ30p.s:724    .text.HAL_CAN_Stop:0000000000000000 HAL_CAN_Stop
     /tmp/ccpEJ30p.s:823    .text.HAL_CAN_DeInit:0000000000000000 $t
     /tmp/ccpEJ30p.s:830    .text.HAL_CAN_DeInit:0000000000000000 HAL_CAN_DeInit
     /tmp/ccpEJ30p.s:886    .text.HAL_CAN_RequestSleep:0000000000000000 $t
     /tmp/ccpEJ30p.s:893    .text.HAL_CAN_RequestSleep:0000000000000000 HAL_CAN_RequestSleep
     /tmp/ccpEJ30p.s:942    .text.HAL_CAN_WakeUp:0000000000000000 $t
     /tmp/ccpEJ30p.s:949    .text.HAL_CAN_WakeUp:0000000000000000 HAL_CAN_WakeUp
     /tmp/ccpEJ30p.s:1044   .text.HAL_CAN_WakeUp:0000000000000054 $d
     /tmp/ccpEJ30p.s:1049   .text.HAL_CAN_IsSleepActive:0000000000000000 $t
     /tmp/ccpEJ30p.s:1056   .text.HAL_CAN_IsSleepActive:0000000000000000 HAL_CAN_IsSleepActive
     /tmp/ccpEJ30p.s:1106   .text.HAL_CAN_AddTxMessage:0000000000000000 $t
     /tmp/ccpEJ30p.s:1113   .text.HAL_CAN_AddTxMessage:0000000000000000 HAL_CAN_AddTxMessage
     /tmp/ccpEJ30p.s:1318   .text.HAL_CAN_AbortTxRequest:0000000000000000 $t
     /tmp/ccpEJ30p.s:1325   .text.HAL_CAN_AbortTxRequest:0000000000000000 HAL_CAN_AbortTxRequest
     /tmp/ccpEJ30p.s:1400   .text.HAL_CAN_GetTxMailboxesFreeLevel:0000000000000000 $t
     /tmp/ccpEJ30p.s:1407   .text.HAL_CAN_GetTxMailboxesFreeLevel:0000000000000000 HAL_CAN_GetTxMailboxesFreeLevel
     /tmp/ccpEJ30p.s:1478   .text.HAL_CAN_IsTxMessagePending:0000000000000000 $t
     /tmp/ccpEJ30p.s:1485   .text.HAL_CAN_IsTxMessagePending:0000000000000000 HAL_CAN_IsTxMessagePending
     /tmp/ccpEJ30p.s:1542   .text.HAL_CAN_GetTxTimestamp:0000000000000000 $t
     /tmp/ccpEJ30p.s:1549   .text.HAL_CAN_GetTxTimestamp:0000000000000000 HAL_CAN_GetTxTimestamp
     /tmp/ccpEJ30p.s:1647   .text.HAL_CAN_GetRxMessage:0000000000000000 $t
     /tmp/ccpEJ30p.s:1654   .text.HAL_CAN_GetRxMessage:0000000000000000 HAL_CAN_GetRxMessage
     /tmp/ccpEJ30p.s:1960   .text.HAL_CAN_GetRxFifoFillLevel:0000000000000000 $t
     /tmp/ccpEJ30p.s:1967   .text.HAL_CAN_GetRxFifoFillLevel:0000000000000000 HAL_CAN_GetRxFifoFillLevel
     /tmp/ccpEJ30p.s:2029   .text.HAL_CAN_ActivateNotification:0000000000000000 $t
     /tmp/ccpEJ30p.s:2036   .text.HAL_CAN_ActivateNotification:0000000000000000 HAL_CAN_ActivateNotification
     /tmp/ccpEJ30p.s:2088   .text.HAL_CAN_DeactivateNotification:0000000000000000 $t
     /tmp/ccpEJ30p.s:2095   .text.HAL_CAN_DeactivateNotification:0000000000000000 HAL_CAN_DeactivateNotification
     /tmp/ccpEJ30p.s:2147   .text.HAL_CAN_TxMailbox0CompleteCallback:0000000000000000 $t
     /tmp/ccpEJ30p.s:2154   .text.HAL_CAN_TxMailbox0CompleteCallback:0000000000000000 HAL_CAN_TxMailbox0CompleteCallback
     /tmp/ccpEJ30p.s:2169   .text.HAL_CAN_TxMailbox1CompleteCallback:0000000000000000 $t
     /tmp/ccpEJ30p.s:2176   .text.HAL_CAN_TxMailbox1CompleteCallback:0000000000000000 HAL_CAN_TxMailbox1CompleteCallback
     /tmp/ccpEJ30p.s:2191   .text.HAL_CAN_TxMailbox2CompleteCallback:0000000000000000 $t
     /tmp/ccpEJ30p.s:2198   .text.HAL_CAN_TxMailbox2CompleteCallback:0000000000000000 HAL_CAN_TxMailbox2CompleteCallback
     /tmp/ccpEJ30p.s:2213   .text.HAL_CAN_TxMailbox0AbortCallback:0000000000000000 $t
     /tmp/ccpEJ30p.s:2220   .text.HAL_CAN_TxMailbox0AbortCallback:0000000000000000 HAL_CAN_TxMailbox0AbortCallback
     /tmp/ccpEJ30p.s:2235   .text.HAL_CAN_TxMailbox1AbortCallback:0000000000000000 $t
     /tmp/ccpEJ30p.s:2242   .text.HAL_CAN_TxMailbox1AbortCallback:0000000000000000 HAL_CAN_TxMailbox1AbortCallback
     /tmp/ccpEJ30p.s:2257   .text.HAL_CAN_TxMailbox2AbortCallback:0000000000000000 $t
     /tmp/ccpEJ30p.s:2264   .text.HAL_CAN_TxMailbox2AbortCallback:0000000000000000 HAL_CAN_TxMailbox2AbortCallback
     /tmp/ccpEJ30p.s:2279   .text.HAL_CAN_RxFifo0MsgPendingCallback:0000000000000000 $t
     /tmp/ccpEJ30p.s:2286   .text.HAL_CAN_RxFifo0MsgPendingCallback:0000000000000000 HAL_CAN_RxFifo0MsgPendingCallback
     /tmp/ccpEJ30p.s:2301   .text.HAL_CAN_RxFifo0FullCallback:0000000000000000 $t
ARM GAS  /tmp/ccpEJ30p.s 			page 115


     /tmp/ccpEJ30p.s:2308   .text.HAL_CAN_RxFifo0FullCallback:0000000000000000 HAL_CAN_RxFifo0FullCallback
     /tmp/ccpEJ30p.s:2323   .text.HAL_CAN_RxFifo1MsgPendingCallback:0000000000000000 $t
     /tmp/ccpEJ30p.s:2330   .text.HAL_CAN_RxFifo1MsgPendingCallback:0000000000000000 HAL_CAN_RxFifo1MsgPendingCallback
     /tmp/ccpEJ30p.s:2345   .text.HAL_CAN_RxFifo1FullCallback:0000000000000000 $t
     /tmp/ccpEJ30p.s:2352   .text.HAL_CAN_RxFifo1FullCallback:0000000000000000 HAL_CAN_RxFifo1FullCallback
     /tmp/ccpEJ30p.s:2367   .text.HAL_CAN_SleepCallback:0000000000000000 $t
     /tmp/ccpEJ30p.s:2374   .text.HAL_CAN_SleepCallback:0000000000000000 HAL_CAN_SleepCallback
     /tmp/ccpEJ30p.s:2389   .text.HAL_CAN_WakeUpFromRxMsgCallback:0000000000000000 $t
     /tmp/ccpEJ30p.s:2396   .text.HAL_CAN_WakeUpFromRxMsgCallback:0000000000000000 HAL_CAN_WakeUpFromRxMsgCallback
     /tmp/ccpEJ30p.s:2411   .text.HAL_CAN_ErrorCallback:0000000000000000 $t
     /tmp/ccpEJ30p.s:2418   .text.HAL_CAN_ErrorCallback:0000000000000000 HAL_CAN_ErrorCallback
     /tmp/ccpEJ30p.s:2433   .text.HAL_CAN_IRQHandler:0000000000000000 $t
     /tmp/ccpEJ30p.s:2440   .text.HAL_CAN_IRQHandler:0000000000000000 HAL_CAN_IRQHandler
     /tmp/ccpEJ30p.s:2921   .text.HAL_CAN_GetState:0000000000000000 $t
     /tmp/ccpEJ30p.s:2928   .text.HAL_CAN_GetState:0000000000000000 HAL_CAN_GetState
     /tmp/ccpEJ30p.s:2989   .text.HAL_CAN_GetError:0000000000000000 $t
     /tmp/ccpEJ30p.s:2996   .text.HAL_CAN_GetError:0000000000000000 HAL_CAN_GetError
     /tmp/ccpEJ30p.s:3014   .text.HAL_CAN_ResetError:0000000000000000 $t
     /tmp/ccpEJ30p.s:3021   .text.HAL_CAN_ResetError:0000000000000000 HAL_CAN_ResetError

UNDEFINED SYMBOLS
HAL_GetTick

ARM GAS  /tmp/ccNYJXhf.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_hal_cortex.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_NVIC_SetPriorityGrouping,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_NVIC_SetPriorityGrouping
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	HAL_NVIC_SetPriorityGrouping:
  27              	.LVL0:
  28              	.LFB239:
  29              		.file 1 "stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c"
   1:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** /**
   2:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   ******************************************************************************
   3:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   * @file    stm32f4xx_hal_cortex.c
   4:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   * @author  MCD Application Team
   5:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   * @brief   CORTEX HAL module driver.
   6:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   *          This file provides firmware functions to manage the following 
   7:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   *          functionalities of the CORTEX:
   8:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   *           + Initialization and de-initialization functions
   9:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   *           + Peripheral Control functions 
  10:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   *
  11:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   @verbatim  
  12:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   ==============================================================================
  13:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****                         ##### How to use this driver #####
  14:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   ==============================================================================
  15:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** 
  16:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****     [..]  
  17:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****     *** How to configure Interrupts using CORTEX HAL driver ***
  18:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****     ===========================================================
  19:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****     [..]     
  20:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****     This section provides functions allowing to configure the NVIC interrupts (IRQ).
  21:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****     The Cortex-M4 exceptions are managed by CMSIS functions.
  22:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****    
  23:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****     (#) Configure the NVIC Priority Grouping using HAL_NVIC_SetPriorityGrouping()
  24:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****         function according to the following table.
  25:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****     (#) Configure the priority of the selected IRQ Channels using HAL_NVIC_SetPriority(). 
  26:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****     (#) Enable the selected IRQ Channels using HAL_NVIC_EnableIRQ().
  27:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****     (#) please refer to programming manual for details in how to configure priority. 
  28:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****       
  29:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****      -@- When the NVIC_PRIORITYGROUP_0 is selected, IRQ preemption is no more possible. 
ARM GAS  /tmp/ccNYJXhf.s 			page 2


  30:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****          The pending IRQ priority will be managed only by the sub priority.
  31:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****    
  32:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****      -@- IRQ priority order (sorted by highest to lowest priority):
  33:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****         (+@) Lowest preemption priority
  34:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****         (+@) Lowest sub priority
  35:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****         (+@) Lowest hardware priority (IRQ number)
  36:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****  
  37:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****     [..]  
  38:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****     *** How to configure Systick using CORTEX HAL driver ***
  39:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****     ========================================================
  40:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****     [..]
  41:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****     Setup SysTick Timer for time base.
  42:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****            
  43:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****    (+) The HAL_SYSTICK_Config() function calls the SysTick_Config() function which
  44:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****        is a CMSIS function that:
  45:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****         (++) Configures the SysTick Reload register with value passed as function parameter.
  46:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****         (++) Configures the SysTick IRQ priority to the lowest value 0x0F.
  47:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****         (++) Resets the SysTick Counter register.
  48:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****         (++) Configures the SysTick Counter clock source to be Core Clock Source (HCLK).
  49:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****         (++) Enables the SysTick Interrupt.
  50:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****         (++) Starts the SysTick Counter.
  51:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****     
  52:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****    (+) You can change the SysTick Clock source to be HCLK_Div8 by calling the macro
  53:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****        __HAL_CORTEX_SYSTICKCLK_CONFIG(SYSTICK_CLKSOURCE_HCLK_DIV8) just after the
  54:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****        HAL_SYSTICK_Config() function call. The __HAL_CORTEX_SYSTICKCLK_CONFIG() macro is defined
  55:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****        inside the stm32f4xx_hal_cortex.h file.
  56:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** 
  57:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****    (+) You can change the SysTick IRQ priority by calling the
  58:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****        HAL_NVIC_SetPriority(SysTick_IRQn,...) function just after the HAL_SYSTICK_Config() function
  59:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****        call. The HAL_NVIC_SetPriority() call the NVIC_SetPriority() function which is a CMSIS funct
  60:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** 
  61:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****    (+) To adjust the SysTick time base, use the following formula:
  62:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****                             
  63:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****        Reload Value = SysTick Counter Clock (Hz) x  Desired Time base (s)
  64:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****        (++) Reload Value is the parameter to be passed for HAL_SYSTICK_Config() function
  65:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****        (++) Reload Value should not exceed 0xFFFFFF
  66:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****    
  67:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   @endverbatim
  68:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   ******************************************************************************
  69:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   * @attention
  70:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   *
  71:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   * Copyright (c) 2017 STMicroelectronics.
  72:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   * All rights reserved.
  73:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   *
  74:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   * This software is licensed under terms that can be found in the LICENSE file in
  75:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   * the root directory of this software component.
  76:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  77:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   ******************************************************************************
  78:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   */
  79:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** 
  80:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** /* Includes ------------------------------------------------------------------*/
  81:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** #include "stm32f4xx_hal.h"
  82:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** 
  83:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** /** @addtogroup STM32F4xx_HAL_Driver
  84:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   * @{
  85:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   */
  86:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** 
ARM GAS  /tmp/ccNYJXhf.s 			page 3


  87:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** /** @defgroup CORTEX CORTEX
  88:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   * @brief CORTEX HAL module driver
  89:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   * @{
  90:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   */
  91:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** 
  92:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** #ifdef HAL_CORTEX_MODULE_ENABLED
  93:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** 
  94:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** /* Private types -------------------------------------------------------------*/
  95:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** /* Private variables ---------------------------------------------------------*/
  96:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** /* Private constants ---------------------------------------------------------*/
  97:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** /* Private macros ------------------------------------------------------------*/
  98:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** /* Private functions ---------------------------------------------------------*/
  99:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** /* Exported functions --------------------------------------------------------*/
 100:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** 
 101:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** /** @defgroup CORTEX_Exported_Functions CORTEX Exported Functions
 102:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   * @{
 103:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   */
 104:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** 
 105:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** 
 106:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** /** @defgroup CORTEX_Exported_Functions_Group1 Initialization and de-initialization functions
 107:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****  *  @brief    Initialization and Configuration functions 
 108:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****  *
 109:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** @verbatim    
 110:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   ==============================================================================
 111:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****               ##### Initialization and de-initialization functions #####
 112:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   ==============================================================================
 113:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****     [..]
 114:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****       This section provides the CORTEX HAL driver functions allowing to configure Interrupts
 115:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****       Systick functionalities 
 116:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** 
 117:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** @endverbatim
 118:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   * @{
 119:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   */
 120:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** 
 121:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** 
 122:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** /**
 123:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   * @brief  Sets the priority grouping field (preemption priority and subpriority)
 124:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   *         using the required unlock sequence.
 125:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   * @param  PriorityGroup The priority grouping bits length. 
 126:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   *         This parameter can be one of the following values:
 127:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_0: 0 bits for preemption priority
 128:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   *                                    4 bits for subpriority
 129:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_1: 1 bits for preemption priority
 130:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   *                                    3 bits for subpriority
 131:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_2: 2 bits for preemption priority
 132:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   *                                    2 bits for subpriority
 133:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_3: 3 bits for preemption priority
 134:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   *                                    1 bits for subpriority
 135:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_4: 4 bits for preemption priority
 136:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   *                                    0 bits for subpriority
 137:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible. 
 138:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   *         The pending IRQ priority will be managed only by the subpriority. 
 139:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   * @retval None
 140:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   */
 141:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
 142:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** {
  30              		.loc 1 142 1 view -0
ARM GAS  /tmp/ccNYJXhf.s 			page 4


  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
 143:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   /* Check the parameters */
 144:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  35              		.loc 1 144 3 view .LVU1
 145:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   
 146:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
 147:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   NVIC_SetPriorityGrouping(PriorityGroup);
  36              		.loc 1 147 3 view .LVU2
  37              	.LBB52:
  38              	.LBI52:
  39              		.file 2 "CMSIS_5/CMSIS/Core/Include/core_cm4.h"
   1:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**************************************************************************//**
   2:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  * @file     core_cm4.h
   3:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  * @brief    CMSIS Cortex-M4 Core Peripheral Access Layer Header File
   4:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  * @version  V5.2.0
   5:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  * @date     04. April 2023
   6:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  ******************************************************************************/
   7:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /*
   8:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  * Copyright (c) 2009-2023 Arm Limited. All rights reserved.
   9:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  *
  10:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  * SPDX-License-Identifier: Apache-2.0
  11:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  *
  12:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  * not use this file except in compliance with the License.
  14:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  * You may obtain a copy of the License at
  15:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  *
  16:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  *
  18:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  * Unless required by applicable law or agreed to in writing, software
  19:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  * See the License for the specific language governing permissions and
  22:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  * limitations under the License.
  23:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
  24:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
  25:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #if   defined ( __ICCARM__ )
  26:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #pragma system_include         /* treat file as system include file for MISRA check */
  27:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #elif defined (__clang__)
  28:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #pragma clang system_header   /* treat file as system include file */
  29:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #endif
  30:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
  31:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #ifndef __CORE_CM4_H_GENERIC
  32:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define __CORE_CM4_H_GENERIC
  33:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
  34:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #include <stdint.h>
  35:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
  36:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #ifdef __cplusplus
  37:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  extern "C" {
  38:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #endif
  39:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
  40:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
  41:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  42:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   CMSIS violates the following MISRA-C:2004 rules:
  43:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
ARM GAS  /tmp/ccNYJXhf.s 			page 5


  44:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  45:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****      Function definitions in header files are used to allow 'inlining'.
  46:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
  47:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  48:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****      Unions are used for effective representation of core registers.
  49:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
  50:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  51:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****      Function-like macros are used to allow more efficient code.
  52:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
  53:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
  54:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
  55:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /*******************************************************************************
  56:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  *                 CMSIS definitions
  57:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  ******************************************************************************/
  58:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
  59:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \ingroup Cortex_M4
  60:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   @{
  61:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
  62:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
  63:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #include "cmsis_version.h"
  64:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
  65:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* CMSIS CM4 definitions */
  66:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION_MAIN  (__CM_CMSIS_VERSION_MAIN)              /*!< \deprecated [31:16] C
  67:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION_SUB   (__CM_CMSIS_VERSION_SUB)               /*!< \deprecated [15:0]  C
  68:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION       ((__CM4_CMSIS_VERSION_MAIN << 16U) | \
  69:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****                                     __CM4_CMSIS_VERSION_SUB           )  /*!< \deprecated CMSIS HAL
  70:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
  71:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define __CORTEX_M                (4U)                                   /*!< Cortex-M Core */
  72:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
  73:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /** __FPU_USED indicates whether an FPU is used or not.
  74:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
  75:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** */
  76:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #if defined ( __CC_ARM )
  77:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #if defined __TARGET_FPU_VFP
  78:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  79:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****       #define __FPU_USED       1U
  80:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #else
  81:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
  82:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****       #define __FPU_USED       0U
  83:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #endif
  84:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #else
  85:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #define __FPU_USED         0U
  86:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #endif
  87:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
  88:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  89:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #if defined __ARM_FP
  90:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  91:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****       #define __FPU_USED       1U
  92:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #else
  93:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
  94:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****       #define __FPU_USED       0U
  95:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #endif
  96:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #else
  97:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #define __FPU_USED         0U
  98:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #endif
  99:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 100:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #elif defined (__ti__)
ARM GAS  /tmp/ccNYJXhf.s 			page 6


 101:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #if defined (__ARM_FP)
 102:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 103:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****       #define __FPU_USED       1U
 104:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #else
 105:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 106:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****       #define __FPU_USED       0U
 107:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #endif
 108:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #else
 109:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #define __FPU_USED         0U
 110:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #endif
 111:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 112:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #elif defined ( __GNUC__ )
 113:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 114:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 115:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****       #define __FPU_USED       1U
 116:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #else
 117:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 118:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****       #define __FPU_USED       0U
 119:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #endif
 120:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #else
 121:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #define __FPU_USED         0U
 122:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #endif
 123:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 124:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #elif defined ( __ICCARM__ )
 125:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #if defined __ARMVFP__
 126:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 127:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****       #define __FPU_USED       1U
 128:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #else
 129:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 130:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****       #define __FPU_USED       0U
 131:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #endif
 132:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #else
 133:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #define __FPU_USED         0U
 134:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #endif
 135:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 136:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #elif defined ( __TI_ARM__ )
 137:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #if defined __TI_VFP_SUPPORT__
 138:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 139:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****       #define __FPU_USED       1U
 140:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #else
 141:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 142:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****       #define __FPU_USED       0U
 143:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #endif
 144:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #else
 145:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #define __FPU_USED         0U
 146:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #endif
 147:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 148:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #elif defined ( __TASKING__ )
 149:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #if defined __FPU_VFP__
 150:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 151:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****       #define __FPU_USED       1U
 152:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #else
 153:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 154:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****       #define __FPU_USED       0U
 155:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #endif
 156:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #else
 157:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #define __FPU_USED         0U
ARM GAS  /tmp/ccNYJXhf.s 			page 7


 158:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #endif
 159:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 160:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #elif defined ( __CSMC__ )
 161:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #if ( __CSMC__ & 0x400U)
 162:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 163:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****       #define __FPU_USED       1U
 164:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #else
 165:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 166:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****       #define __FPU_USED       0U
 167:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #endif
 168:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #else
 169:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #define __FPU_USED         0U
 170:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #endif
 171:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 172:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #endif
 173:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 174:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #include "cmsis_compiler.h"               /* CMSIS compiler specific defines */
 175:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 176:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 177:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #ifdef __cplusplus
 178:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** }
 179:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #endif
 180:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 181:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #endif /* __CORE_CM4_H_GENERIC */
 182:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 183:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #ifndef __CMSIS_GENERIC
 184:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 185:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #ifndef __CORE_CM4_H_DEPENDANT
 186:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define __CORE_CM4_H_DEPENDANT
 187:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 188:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #ifdef __cplusplus
 189:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  extern "C" {
 190:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #endif
 191:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 192:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* check device defines and use defaults */
 193:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #if defined __CHECK_DEVICE_DEFINES
 194:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #ifndef __CM4_REV
 195:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #define __CM4_REV               0x0000U
 196:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #warning "__CM4_REV not defined in device header file; using default!"
 197:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #endif
 198:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 199:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #ifndef __FPU_PRESENT
 200:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #define __FPU_PRESENT             0U
 201:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 202:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #endif
 203:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 204:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #ifndef __MPU_PRESENT
 205:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #define __MPU_PRESENT             0U
 206:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 207:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #endif
 208:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 209:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #ifndef __VTOR_PRESENT
 210:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #define __VTOR_PRESENT             1U
 211:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #warning "__VTOR_PRESENT not defined in device header file; using default!"
 212:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #endif
 213:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 214:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #ifndef __NVIC_PRIO_BITS
ARM GAS  /tmp/ccNYJXhf.s 			page 8


 215:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #define __NVIC_PRIO_BITS          3U
 216:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 217:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #endif
 218:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 219:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #ifndef __Vendor_SysTickConfig
 220:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #define __Vendor_SysTickConfig    0U
 221:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 222:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #endif
 223:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #endif
 224:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 225:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* IO definitions (access restrictions to peripheral registers) */
 226:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
 227:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 228:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 229:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     <strong>IO Type Qualifiers</strong> are used
 230:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     \li to specify the access to peripheral variables.
 231:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     \li for automatic generation of peripheral register debug information.
 232:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** */
 233:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #ifdef __cplusplus
 234:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 235:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #else
 236:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 237:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #endif
 238:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 239:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 240:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 241:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* following defines should be used for structure members */
 242:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 243:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 244:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 245:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 246:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /*@} end of group Cortex_M4 */
 247:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 248:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 249:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 250:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /*******************************************************************************
 251:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  *                 Register Abstraction
 252:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   Core Register contain:
 253:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   - Core Register
 254:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   - Core NVIC Register
 255:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   - Core SCB Register
 256:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   - Core SysTick Register
 257:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   - Core Debug Register
 258:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   - Core MPU Register
 259:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   - Core FPU Register
 260:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  ******************************************************************************/
 261:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
 262:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 263:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 264:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** */
 265:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 266:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
 267:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
 268:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 269:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief      Core Register type definitions.
 270:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   @{
 271:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
ARM GAS  /tmp/ccNYJXhf.s 			page 9


 272:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 273:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
 274:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 275:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
 276:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** typedef union
 277:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
 278:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   struct
 279:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
 280:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved */
 281:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 282:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved */
 283:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 284:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 285:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 286:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 287:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 288:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 289:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 290:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** } APSR_Type;
 291:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 292:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* APSR Register Definitions */
 293:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 294:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 295:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 296:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 297:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 298:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 299:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 300:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 301:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 302:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 303:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 304:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 305:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 306:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 307:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 308:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define APSR_GE_Pos                        16U                                            /*!< APSR
 309:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define APSR_GE_Msk                        (0xFUL << APSR_GE_Pos)                         /*!< APSR
 310:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 311:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 312:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
 313:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 314:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
 315:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** typedef union
 316:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
 317:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   struct
 318:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
 319:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 320:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 321:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 322:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 323:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** } IPSR_Type;
 324:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 325:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* IPSR Register Definitions */
 326:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 327:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 328:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
ARM GAS  /tmp/ccNYJXhf.s 			page 10


 329:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 330:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
 331:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 332:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
 333:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** typedef union
 334:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
 335:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   struct
 336:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
 337:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 338:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     uint32_t _reserved0:1;               /*!< bit:      9  Reserved */
 339:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     uint32_t ICI_IT_1:6;                 /*!< bit: 10..15  ICI/IT part 1 */
 340:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 341:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved */
 342:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit */
 343:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     uint32_t ICI_IT_2:2;                 /*!< bit: 25..26  ICI/IT part 2 */
 344:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 345:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 346:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 347:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 348:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 349:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 350:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 351:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** } xPSR_Type;
 352:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 353:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* xPSR Register Definitions */
 354:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 355:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 356:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 357:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 358:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 359:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 360:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 361:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 362:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 363:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 364:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 365:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 366:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 367:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 368:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 369:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define xPSR_ICI_IT_2_Pos                  25U                                            /*!< xPSR
 370:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define xPSR_ICI_IT_2_Msk                  (3UL << xPSR_ICI_IT_2_Pos)                     /*!< xPSR
 371:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 372:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 373:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 374:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 375:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define xPSR_GE_Pos                        16U                                            /*!< xPSR
 376:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define xPSR_GE_Msk                        (0xFUL << xPSR_GE_Pos)                         /*!< xPSR
 377:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 378:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define xPSR_ICI_IT_1_Pos                  10U                                            /*!< xPSR
 379:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define xPSR_ICI_IT_1_Msk                  (0x3FUL << xPSR_ICI_IT_1_Pos)                  /*!< xPSR
 380:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 381:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 382:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 383:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 384:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 385:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
ARM GAS  /tmp/ccNYJXhf.s 			page 11


 386:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief  Union type to access the Control Registers (CONTROL).
 387:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
 388:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** typedef union
 389:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
 390:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   struct
 391:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
 392:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 393:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 394:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag */
 395:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved */
 396:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 397:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 398:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** } CONTROL_Type;
 399:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 400:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* CONTROL Register Definitions */
 401:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CONTROL_FPCA_Pos                    2U                                            /*!< CONT
 402:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CONTROL_FPCA_Msk                   (1UL << CONTROL_FPCA_Pos)                      /*!< CONT
 403:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 404:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 405:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 406:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 407:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 408:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 409:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 410:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /*@} end of group CMSIS_CORE */
 411:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 412:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 413:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
 414:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
 415:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 416:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief      Type definitions for the NVIC Registers
 417:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   @{
 418:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
 419:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 420:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
 421:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 422:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
 423:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** typedef struct
 424:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
 425:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 426:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED0[24U];
 427:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 428:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED1[24U];
 429:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 430:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED2[24U];
 431:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 432:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED3[24U];
 433:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 434:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED4[56U];
 435:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 436:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED5[644U];
 437:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 438:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** }  NVIC_Type;
 439:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 440:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* Software Triggered Interrupt Register Definitions */
 441:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 442:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
ARM GAS  /tmp/ccNYJXhf.s 			page 12


 443:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 444:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /*@} end of group CMSIS_NVIC */
 445:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 446:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 447:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
 448:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 449:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 450:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief    Type definitions for the System Control Block Registers
 451:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   @{
 452:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
 453:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 454:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
 455:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief  Structure type to access the System Control Block (SCB).
 456:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
 457:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** typedef struct
 458:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
 459:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 460:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 461:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 462:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 463:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 464:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 465:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint8_t  SHP[12U];               /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 466:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 467:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 468:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 469:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 470:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 471:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 472:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 473:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t PFR[2U];                /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 474:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t DFR;                    /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 475:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t ADR;                    /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 476:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t MMFR[4U];               /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 477:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t ISAR[5U];               /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 478:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED0[5U];
 479:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 480:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** } SCB_Type;
 481:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 482:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* SCB CPUID Register Definitions */
 483:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 484:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 485:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 486:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 487:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 488:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 489:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 490:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 491:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 492:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 493:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 494:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 495:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 496:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 497:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 498:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* SCB Interrupt Control State Register Definitions */
 499:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
ARM GAS  /tmp/ccNYJXhf.s 			page 13


 500:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 501:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 502:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 503:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 504:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 505:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 506:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 507:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 508:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 509:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 510:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 511:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 512:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 513:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 514:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 515:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 516:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 517:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 518:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 519:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 520:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 521:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 522:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 523:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 524:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 525:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 526:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 527:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 528:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 529:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* SCB Vector Table Offset Register Definitions */
 530:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 531:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 532:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 533:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 534:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 535:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 536:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 537:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 538:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 539:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 540:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 541:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 542:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 543:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 544:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 545:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 546:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 547:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 548:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 549:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 550:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 551:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 552:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 553:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 554:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 555:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* SCB System Control Register Definitions */
 556:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
ARM GAS  /tmp/ccNYJXhf.s 			page 14


 557:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 558:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 559:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 560:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 561:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 562:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 563:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 564:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 565:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* SCB Configuration Control Register Definitions */
 566:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 567:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 568:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 569:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 570:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 571:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 572:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 573:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 574:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 575:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 576:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 577:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 578:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 579:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 580:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 581:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 582:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 583:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 584:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* SCB System Handler Control and State Register Definitions */
 585:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 586:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 587:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 588:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 589:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 590:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 591:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 592:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 593:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 594:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 595:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 596:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 597:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 598:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 599:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 600:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 601:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 602:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 603:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 604:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 605:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 606:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 607:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 608:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 609:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 610:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 611:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 612:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 613:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
ARM GAS  /tmp/ccNYJXhf.s 			page 15


 614:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 615:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 616:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 617:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 618:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 619:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 620:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 621:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 622:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 623:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 624:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 625:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 626:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 627:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* SCB Configurable Fault Status Register Definitions */
 628:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 629:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 630:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 631:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 632:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 633:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 634:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 635:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 636:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 637:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* MemManage Fault Status Register (part of SCB Configurable Fault Status Register) */
 638:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_MMARVALID_Pos             (SCB_CFSR_MEMFAULTSR_Pos + 7U)                 /*!< SCB 
 639:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_MMARVALID_Msk             (1UL << SCB_CFSR_MMARVALID_Pos)                /*!< SCB 
 640:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 641:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_MLSPERR_Pos               (SCB_CFSR_MEMFAULTSR_Pos + 5U)                 /*!< SCB 
 642:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_MLSPERR_Msk               (1UL << SCB_CFSR_MLSPERR_Pos)                  /*!< SCB 
 643:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 644:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_MSTKERR_Pos               (SCB_CFSR_MEMFAULTSR_Pos + 4U)                 /*!< SCB 
 645:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_MSTKERR_Msk               (1UL << SCB_CFSR_MSTKERR_Pos)                  /*!< SCB 
 646:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 647:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_MUNSTKERR_Pos             (SCB_CFSR_MEMFAULTSR_Pos + 3U)                 /*!< SCB 
 648:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_MUNSTKERR_Msk             (1UL << SCB_CFSR_MUNSTKERR_Pos)                /*!< SCB 
 649:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 650:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_DACCVIOL_Pos              (SCB_CFSR_MEMFAULTSR_Pos + 1U)                 /*!< SCB 
 651:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_DACCVIOL_Msk              (1UL << SCB_CFSR_DACCVIOL_Pos)                 /*!< SCB 
 652:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 653:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_IACCVIOL_Pos              (SCB_CFSR_MEMFAULTSR_Pos + 0U)                 /*!< SCB 
 654:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_IACCVIOL_Msk              (1UL /*<< SCB_CFSR_IACCVIOL_Pos*/)             /*!< SCB 
 655:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 656:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* BusFault Status Register (part of SCB Configurable Fault Status Register) */
 657:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_BFARVALID_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 7U)                  /*!< SCB 
 658:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_BFARVALID_Msk            (1UL << SCB_CFSR_BFARVALID_Pos)                 /*!< SCB 
 659:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 660:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_LSPERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 5U)                  /*!< SCB 
 661:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_LSPERR_Msk               (1UL << SCB_CFSR_LSPERR_Pos)                    /*!< SCB 
 662:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 663:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_STKERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 4U)                  /*!< SCB 
 664:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_STKERR_Msk               (1UL << SCB_CFSR_STKERR_Pos)                    /*!< SCB 
 665:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 666:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_UNSTKERR_Pos             (SCB_CFSR_BUSFAULTSR_Pos + 3U)                  /*!< SCB 
 667:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_UNSTKERR_Msk             (1UL << SCB_CFSR_UNSTKERR_Pos)                  /*!< SCB 
 668:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 669:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_IMPRECISERR_Pos          (SCB_CFSR_BUSFAULTSR_Pos + 2U)                  /*!< SCB 
 670:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_IMPRECISERR_Msk          (1UL << SCB_CFSR_IMPRECISERR_Pos)               /*!< SCB 
ARM GAS  /tmp/ccNYJXhf.s 			page 16


 671:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 672:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_PRECISERR_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 1U)                  /*!< SCB 
 673:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_PRECISERR_Msk            (1UL << SCB_CFSR_PRECISERR_Pos)                 /*!< SCB 
 674:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 675:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_IBUSERR_Pos              (SCB_CFSR_BUSFAULTSR_Pos + 0U)                  /*!< SCB 
 676:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_IBUSERR_Msk              (1UL << SCB_CFSR_IBUSERR_Pos)                   /*!< SCB 
 677:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 678:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* UsageFault Status Register (part of SCB Configurable Fault Status Register) */
 679:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_DIVBYZERO_Pos            (SCB_CFSR_USGFAULTSR_Pos + 9U)                  /*!< SCB 
 680:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_DIVBYZERO_Msk            (1UL << SCB_CFSR_DIVBYZERO_Pos)                 /*!< SCB 
 681:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 682:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_UNALIGNED_Pos            (SCB_CFSR_USGFAULTSR_Pos + 8U)                  /*!< SCB 
 683:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_UNALIGNED_Msk            (1UL << SCB_CFSR_UNALIGNED_Pos)                 /*!< SCB 
 684:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 685:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_NOCP_Pos                 (SCB_CFSR_USGFAULTSR_Pos + 3U)                  /*!< SCB 
 686:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_NOCP_Msk                 (1UL << SCB_CFSR_NOCP_Pos)                      /*!< SCB 
 687:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 688:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_INVPC_Pos                (SCB_CFSR_USGFAULTSR_Pos + 2U)                  /*!< SCB 
 689:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_INVPC_Msk                (1UL << SCB_CFSR_INVPC_Pos)                     /*!< SCB 
 690:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 691:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_INVSTATE_Pos             (SCB_CFSR_USGFAULTSR_Pos + 1U)                  /*!< SCB 
 692:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_INVSTATE_Msk             (1UL << SCB_CFSR_INVSTATE_Pos)                  /*!< SCB 
 693:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 694:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_UNDEFINSTR_Pos           (SCB_CFSR_USGFAULTSR_Pos + 0U)                  /*!< SCB 
 695:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_UNDEFINSTR_Msk           (1UL << SCB_CFSR_UNDEFINSTR_Pos)                /*!< SCB 
 696:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 697:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* SCB Hard Fault Status Register Definitions */
 698:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 699:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 700:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 701:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 702:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 703:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 704:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 705:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 706:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 707:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* SCB Debug Fault Status Register Definitions */
 708:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 709:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 710:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 711:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 712:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 713:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 714:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 715:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 716:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 717:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 718:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 719:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 720:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 721:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 722:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 723:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /*@} end of group CMSIS_SCB */
 724:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 725:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 726:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
 727:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
ARM GAS  /tmp/ccNYJXhf.s 			page 17


 728:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 729:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 730:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   @{
 731:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
 732:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 733:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
 734:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 735:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
 736:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** typedef struct
 737:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
 738:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED0[1U];
 739:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 740:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 741:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** } SCnSCB_Type;
 742:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 743:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* Interrupt Controller Type Register Definitions */
 744:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 745:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 746:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 747:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* Auxiliary Control Register Definitions */
 748:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Pos            9U                                         /*!< ACTLR: 
 749:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Msk           (1UL << SCnSCB_ACTLR_DISOOFP_Pos)           /*!< ACTLR: 
 750:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 751:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Pos            8U                                         /*!< ACTLR: 
 752:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Msk           (1UL << SCnSCB_ACTLR_DISFPCA_Pos)           /*!< ACTLR: 
 753:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 754:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 755:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 756:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 757:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1U                                         /*!< ACTLR: 
 758:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 759:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 760:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 761:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 762:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 763:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /*@} end of group CMSIS_SCnotSCB */
 764:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 765:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 766:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
 767:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 768:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 769:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief    Type definitions for the System Timer Registers.
 770:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   @{
 771:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
 772:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 773:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
 774:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief  Structure type to access the System Timer (SysTick).
 775:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
 776:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** typedef struct
 777:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
 778:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 779:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 780:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 781:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 782:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** } SysTick_Type;
 783:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 784:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* SysTick Control / Status Register Definitions */
ARM GAS  /tmp/ccNYJXhf.s 			page 18


 785:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 786:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 787:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 788:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 789:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 790:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 791:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 792:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 793:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 794:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 795:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 796:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 797:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* SysTick Reload Register Definitions */
 798:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 799:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 800:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 801:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* SysTick Current Register Definitions */
 802:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 803:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 804:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 805:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* SysTick Calibration Register Definitions */
 806:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 807:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 808:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 809:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 810:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 811:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 812:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 813:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 814:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 815:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /*@} end of group CMSIS_SysTick */
 816:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 817:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 818:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
 819:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 820:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 821:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
 822:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   @{
 823:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
 824:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 825:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
 826:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 827:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
 828:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** typedef struct
 829:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
 830:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __OM  union
 831:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
 832:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
 833:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
 834:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
 835:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
 836:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED0[864U];
 837:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
 838:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED1[15U];
 839:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
 840:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED2[15U];
 841:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
ARM GAS  /tmp/ccNYJXhf.s 			page 19


 842:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED3[32U];
 843:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED4[43U];
 844:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
 845:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
 846:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED5[6U];
 847:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 848:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 849:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 850:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 851:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 852:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
 853:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 854:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 855:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
 856:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 857:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 858:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 859:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** } ITM_Type;
 860:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 861:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* ITM Trace Privilege Register Definitions */
 862:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
 863:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFFFFFFFFUL /*<< ITM_TPR_PRIVMASK_Pos*/)     /*!< ITM 
 864:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 865:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* ITM Trace Control Register Definitions */
 866:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
 867:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 868:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 869:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_TCR_TRACEBUSID_Pos             16U                                            /*!< ITM 
 870:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_TCR_TRACEBUSID_Msk             (0x7FUL << ITM_TCR_TRACEBUSID_Pos)             /*!< ITM 
 871:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 872:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
 873:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 874:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 875:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_TCR_TSPRESCALE_Pos              8U                                            /*!< ITM 
 876:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_TCR_TSPRESCALE_Msk             (3UL << ITM_TCR_TSPRESCALE_Pos)                /*!< ITM 
 877:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 878:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
 879:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 880:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 881:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
 882:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 883:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 884:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
 885:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 886:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 887:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
 888:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 889:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 890:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
 891:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
 892:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 893:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* ITM Lock Status Register Definitions */
 894:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_LSR_BYTEACC_Pos                 2U                                            /*!< ITM 
 895:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_LSR_BYTEACC_Msk                (1UL << ITM_LSR_BYTEACC_Pos)                   /*!< ITM 
 896:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 897:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_LSR_ACCESS_Pos                  1U                                            /*!< ITM 
 898:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_LSR_ACCESS_Msk                 (1UL << ITM_LSR_ACCESS_Pos)                    /*!< ITM 
ARM GAS  /tmp/ccNYJXhf.s 			page 20


 899:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 900:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_LSR_PRESENT_Pos                 0U                                            /*!< ITM 
 901:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_LSR_PRESENT_Msk                (1UL /*<< ITM_LSR_PRESENT_Pos*/)               /*!< ITM 
 902:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 903:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_ITM */
 904:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 905:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 906:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
 907:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 908:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 909:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
 910:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   @{
 911:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
 912:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 913:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
 914:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 915:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
 916:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** typedef struct
 917:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
 918:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
 919:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
 920:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
 921:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 922:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
 923:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
 924:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 925:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 926:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
 927:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
 928:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
 929:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED0[1U];
 930:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
 931:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
 932:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
 933:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED1[1U];
 934:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
 935:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
 936:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
 937:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED2[1U];
 938:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
 939:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
 940:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
 941:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** } DWT_Type;
 942:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 943:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* DWT Control Register Definitions */
 944:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
 945:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 946:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 947:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
 948:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 949:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 950:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
 951:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 952:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 953:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
 954:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 955:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
ARM GAS  /tmp/ccNYJXhf.s 			page 21


 956:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
 957:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 958:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 959:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
 960:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 961:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 962:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
 963:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 964:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 965:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
 966:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 967:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 968:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
 969:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 970:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 971:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
 972:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 973:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 974:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
 975:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 976:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 977:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
 978:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 979:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 980:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
 981:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 982:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 983:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
 984:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 985:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 986:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
 987:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 988:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 989:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
 990:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 991:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 992:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
 993:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 994:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 995:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
 996:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
 997:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 998:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* DWT CPI Count Register Definitions */
 999:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
1000:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
1001:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1002:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* DWT Exception Overhead Count Register Definitions */
1003:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
1004:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
1005:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1006:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* DWT Sleep Count Register Definitions */
1007:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
1008:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
1009:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1010:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* DWT LSU Count Register Definitions */
1011:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
1012:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
ARM GAS  /tmp/ccNYJXhf.s 			page 22


1013:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1014:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* DWT Folded-instruction Count Register Definitions */
1015:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
1016:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
1017:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1018:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* DWT Comparator Mask Register Definitions */
1019:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
1020:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
1021:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1022:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* DWT Comparator Function Register Definitions */
1023:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
1024:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
1025:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1026:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
1027:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
1028:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1029:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
1030:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
1031:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1032:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
1033:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
1034:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1035:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
1036:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
1037:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1038:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
1039:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
1040:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1041:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
1042:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
1043:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1044:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
1045:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
1046:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1047:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
1048:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
1049:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1050:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_DWT */
1051:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1052:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1053:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
1054:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1055:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
1056:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
1057:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   @{
1058:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
1059:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1060:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
1061:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
1062:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
1063:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** typedef struct
1064:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
1065:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
1066:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1067:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED0[2U];
1068:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
1069:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED1[55U];
ARM GAS  /tmp/ccNYJXhf.s 			page 23


1070:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1071:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED2[131U];
1072:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1073:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1074:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1075:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED3[759U];
1076:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER Register */
1077:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1078:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1079:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED4[1U];
1080:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1081:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1082:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1083:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED5[39U];
1084:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1085:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1086:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED7[8U];
1087:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1088:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1089:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** } TPI_Type;
1090:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1091:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1092:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1093:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1094:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1095:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* TPI Selected Pin Protocol Register Definitions */
1096:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1097:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1098:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1099:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* TPI Formatter and Flush Status Register Definitions */
1100:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1101:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1102:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1103:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1104:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1105:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1106:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1107:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1108:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1109:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1110:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1111:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1112:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* TPI Formatter and Flush Control Register Definitions */
1113:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1114:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1115:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1116:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1117:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1118:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1119:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* TPI TRIGGER Register Definitions */
1120:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1121:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1122:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1123:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1124:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1125:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x1UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1126:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
ARM GAS  /tmp/ccNYJXhf.s 			page 24


1127:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1128:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1129:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1130:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1131:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x1UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1132:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1133:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1134:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1135:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1136:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1137:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1138:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1139:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1140:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1141:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1142:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1143:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1144:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1145:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* TPI ITATBCTR2 Register Definitions */
1146:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY2_Pos          0U                                         /*!< TPI ITA
1147:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY2_Pos*/)   /*!< TPI ITA
1148:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1149:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY1_Pos          0U                                         /*!< TPI ITA
1150:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY1_Pos*/)   /*!< TPI ITA
1151:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1152:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1153:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1154:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x1UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1155:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1156:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1157:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1158:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1159:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1160:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x1UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1161:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1162:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1163:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1164:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1165:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1166:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1167:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1168:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1169:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1170:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1171:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1172:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1173:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1174:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* TPI ITATBCTR0 Register Definitions */
1175:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY2_Pos          0U                                         /*!< TPI ITA
1176:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY2_Pos*/)   /*!< TPI ITA
1177:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1178:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY1_Pos          0U                                         /*!< TPI ITA
1179:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY1_Pos*/)   /*!< TPI ITA
1180:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1181:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* TPI Integration Mode Control Register Definitions */
1182:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1183:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_ITCTRL_Mode_Msk                (0x3UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
ARM GAS  /tmp/ccNYJXhf.s 			page 25


1184:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1185:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* TPI DEVID Register Definitions */
1186:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1187:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1188:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1189:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1190:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1191:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1192:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1193:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1194:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1195:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1196:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1197:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1198:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1199:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1200:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1201:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1202:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1203:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1204:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* TPI DEVTYPE Register Definitions */
1205:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_DEVTYPE_SubType_Pos             4U                                         /*!< TPI DEV
1206:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1207:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1208:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Pos           0U                                         /*!< TPI DEV
1209:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1210:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1211:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_TPI */
1212:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1213:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1214:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1215:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
1216:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1217:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1218:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1219:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   @{
1220:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
1221:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1222:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
1223:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1224:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
1225:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** typedef struct
1226:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
1227:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1228:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1229:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1230:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1231:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1232:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1233:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1234:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1235:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1236:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1237:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1238:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** } MPU_Type;
1239:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1240:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_TYPE_RALIASES                  4U
ARM GAS  /tmp/ccNYJXhf.s 			page 26


1241:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1242:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* MPU Type Register Definitions */
1243:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1244:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1245:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1246:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1247:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1248:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1249:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1250:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1251:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1252:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* MPU Control Register Definitions */
1253:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1254:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1255:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1256:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1257:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1258:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1259:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1260:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1261:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1262:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* MPU Region Number Register Definitions */
1263:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1264:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1265:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1266:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* MPU Region Base Address Register Definitions */
1267:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1268:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1269:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1270:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1271:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1272:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1273:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1274:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1275:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1276:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* MPU Region Attribute and Size Register Definitions */
1277:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1278:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1279:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1280:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1281:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1282:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1283:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1284:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1285:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1286:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1287:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1288:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1289:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1290:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1291:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1292:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1293:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1294:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1295:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1296:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1297:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
ARM GAS  /tmp/ccNYJXhf.s 			page 27


1298:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1299:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1300:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1301:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1302:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1303:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1304:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1305:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1306:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1307:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /*@} end of group CMSIS_MPU */
1308:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #endif /* defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U) */
1309:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1310:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1311:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
1312:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1313:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1314:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief    Type definitions for the Floating Point Unit (FPU)
1315:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   @{
1316:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
1317:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1318:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
1319:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief  Structure type to access the Floating Point Unit (FPU).
1320:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
1321:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** typedef struct
1322:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
1323:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED0[1U];
1324:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t FPCCR;                  /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1325:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t FPCAR;                  /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1326:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t FPDSCR;                 /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1327:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1328:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1329:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t MVFR2;                  /*!< Offset: 0x018 (R/ )  Media and FP Feature Register 2 
1330:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** } FPU_Type;
1331:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1332:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* Floating-Point Context Control Register Definitions */
1333:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_FPCCR_ASPEN_Pos                31U                                            /*!< FPCC
1334:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1335:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1336:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_FPCCR_LSPEN_Pos                30U                                            /*!< FPCC
1337:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1338:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1339:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_FPCCR_MONRDY_Pos                8U                                            /*!< FPCC
1340:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1341:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1342:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_FPCCR_BFRDY_Pos                 6U                                            /*!< FPCC
1343:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1344:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1345:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_FPCCR_MMRDY_Pos                 5U                                            /*!< FPCC
1346:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1347:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1348:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_FPCCR_HFRDY_Pos                 4U                                            /*!< FPCC
1349:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1350:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1351:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_FPCCR_THREAD_Pos                3U                                            /*!< FPCC
1352:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1353:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1354:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_FPCCR_USER_Pos                  1U                                            /*!< FPCC
ARM GAS  /tmp/ccNYJXhf.s 			page 28


1355:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1356:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1357:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_FPCCR_LSPACT_Pos                0U                                            /*!< FPCC
1358:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL /*<< FPU_FPCCR_LSPACT_Pos*/)              /*!< FPCC
1359:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1360:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* Floating-Point Context Address Register Definitions */
1361:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Pos               3U                                            /*!< FPCA
1362:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1363:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1364:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* Floating-Point Default Status Control Register Definitions */
1365:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_FPDSCR_AHP_Pos                 26U                                            /*!< FPDS
1366:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1367:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1368:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_FPDSCR_DN_Pos                  25U                                            /*!< FPDS
1369:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1370:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1371:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_FPDSCR_FZ_Pos                  24U                                            /*!< FPDS
1372:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1373:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1374:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_FPDSCR_RMode_Pos               22U                                            /*!< FPDS
1375:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1376:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1377:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* Media and FP Feature Register 0 Definitions */
1378:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28U                                            /*!< MVFR
1379:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1380:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1381:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Pos        24U                                            /*!< MVFR
1382:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1383:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1384:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR0_Square_root_Pos          20U                                            /*!< MVFR
1385:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1386:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1387:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR0_Divide_Pos               16U                                            /*!< MVFR
1388:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1389:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1390:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12U                                            /*!< MVFR
1391:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1392:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1393:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR0_Double_precision_Pos      8U                                            /*!< MVFR
1394:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1395:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1396:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR0_Single_precision_Pos      4U                                            /*!< MVFR
1397:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1398:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1399:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0U                                            /*!< MVFR
1400:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/)  /*!< MVFR
1401:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1402:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* Media and FP Feature Register 1 Definitions */
1403:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28U                                            /*!< MVFR
1404:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1405:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1406:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Pos              24U                                            /*!< MVFR
1407:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1408:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1409:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4U                                            /*!< MVFR
1410:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1411:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
ARM GAS  /tmp/ccNYJXhf.s 			page 29


1412:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Pos              0U                                            /*!< MVFR
1413:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/)          /*!< MVFR
1414:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1415:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* Media and FP Feature Register 2 Definitions */
1416:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1417:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR2_VFP_Misc_Pos              4U                                            /*!< MVFR
1418:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR2_VFP_Misc_Msk             (0xFUL << FPU_MVFR2_VFP_Misc_Pos)              /*!< MVFR
1419:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1420:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /*@} end of group CMSIS_FPU */
1421:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1422:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1423:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
1424:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1425:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1426:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief    Type definitions for the Core Debug Registers
1427:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   @{
1428:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
1429:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1430:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
1431:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1432:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
1433:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** typedef struct
1434:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
1435:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1436:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1437:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1438:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1439:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** } CoreDebug_Type;
1440:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1441:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* Debug Halting Control and Status Register Definitions */
1442:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1443:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1444:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1445:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1446:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1447:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1448:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1449:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1450:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1451:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1452:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1453:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1454:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1455:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1456:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1457:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1458:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1459:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1460:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1461:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1462:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1463:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1464:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1465:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1466:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1467:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1468:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
ARM GAS  /tmp/ccNYJXhf.s 			page 30


1469:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1470:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1471:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1472:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1473:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1474:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1475:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1476:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1477:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1478:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* Debug Core Register Selector Register Definitions */
1479:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1480:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1481:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1482:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1483:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1484:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1485:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* Debug Exception and Monitor Control Register Definitions */
1486:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1487:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1488:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1489:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1490:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1491:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1492:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1493:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1494:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1495:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1496:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1497:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1498:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1499:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1500:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1501:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1502:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1503:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1504:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1505:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1506:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1507:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1508:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1509:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1510:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1511:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1512:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1513:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1514:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1515:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1516:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1517:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1518:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1519:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1520:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1521:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1522:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1523:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1524:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1525:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /*@} end of group CMSIS_CoreDebug */
ARM GAS  /tmp/ccNYJXhf.s 			page 31


1526:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1527:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1528:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
1529:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
1530:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1531:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1532:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   @{
1533:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
1534:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1535:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
1536:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1537:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \param[in] field  Name of the register bit field.
1538:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
1539:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \return           Masked and shifted value.
1540:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** */
1541:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define _VAL2FLD(field, value)    (((uint32_t)(value) << field ## _Pos) & field ## _Msk)
1542:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1543:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
1544:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1545:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \param[in] field  Name of the register bit field.
1546:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
1547:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \return           Masked and shifted bit field value.
1548:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** */
1549:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define _FLD2VAL(field, value)    (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)
1550:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1551:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /*@} end of group CMSIS_core_bitfield */
1552:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1553:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1554:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
1555:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
1556:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \defgroup   CMSIS_core_base     Core Definitions
1557:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief      Definitions for base addresses, unions, and structures.
1558:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   @{
1559:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
1560:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1561:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* Memory mapping of Core Hardware */
1562:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1563:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1564:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1565:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1566:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1567:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1568:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1569:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1570:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1571:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1572:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1573:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1574:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1575:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1576:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1577:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1578:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1579:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1580:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1581:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1582:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
ARM GAS  /tmp/ccNYJXhf.s 			page 32


1583:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #endif
1584:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1585:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_BASE            (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit */
1586:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU                 ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit */
1587:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1588:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /*@} */
1589:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1590:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1591:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
1592:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
1593:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \defgroup   CMSIS_register_aliases     Backwards Compatibility Aliases
1594:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief      Register alias definitions for backwards compatibility.
1595:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   @{
1596:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
1597:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1598:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* Capitalize ITM_TCR Register Definitions */
1599:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1600:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* ITM Trace Control Register Definitions */
1601:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_TCR_TraceBusID_Pos           (ITM_TCR_TRACEBUSID_Pos)     /*!< \deprecated ITM_TCR_Trac
1602:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_TCR_TraceBusID_Msk           (ITM_TCR_TRACEBUSID_Msk)     /*!< \deprecated ITM_TCR_Trac
1603:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1604:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_TCR_TSPrescale_Pos           (ITM_TCR_TSPRESCALE_Pos)     /*!< \deprecated ITM_TCR_TSPr
1605:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_TCR_TSPrescale_Msk           (ITM_TCR_TSPRESCALE_Msk)     /*!< \deprecated ITM_TCR_TSPr
1606:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1607:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* ITM Lock Status Register Definitions */
1608:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_LSR_ByteAcc_Pos              (ITM_LSR_BYTEACC_Pos)        /*!< \deprecated ITM_LSR_Byte
1609:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_LSR_ByteAcc_Msk              (ITM_LSR_BYTEACC_Msk)        /*!< \deprecated ITM_LSR_Byte
1610:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1611:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_LSR_Access_Pos               (ITM_LSR_ACCESS_Pos)         /*!< \deprecated ITM_LSR_Acce
1612:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_LSR_Access_Msk               (ITM_LSR_ACCESS_Msk)         /*!< \deprecated ITM_LSR_Acce
1613:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1614:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_LSR_Present_Pos              (ITM_LSR_PRESENT_Pos)        /*!< \deprecated ITM_LSR_Pres
1615:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_LSR_Present_Msk              (ITM_LSR_PRESENT_Msk)        /*!< \deprecated ITM_LSR_Pres
1616:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1617:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /*@} */
1618:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1619:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1620:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1621:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /*******************************************************************************
1622:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  *                Hardware Abstraction Layer
1623:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   Core Function Interface contains:
1624:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   - Core NVIC Functions
1625:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   - Core SysTick Functions
1626:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   - Core Debug Functions
1627:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   - Core Register Access Functions
1628:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  ******************************************************************************/
1629:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
1630:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1631:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** */
1632:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1633:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1634:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1635:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* ##########################   NVIC functions  #################################### */
1636:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
1637:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \ingroup  CMSIS_Core_FunctionInterface
1638:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1639:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
ARM GAS  /tmp/ccNYJXhf.s 			page 33


1640:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   @{
1641:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
1642:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1643:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #ifdef CMSIS_NVIC_VIRTUAL
1644:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #ifndef CMSIS_NVIC_VIRTUAL_HEADER_FILE
1645:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #define CMSIS_NVIC_VIRTUAL_HEADER_FILE "cmsis_nvic_virtual.h"
1646:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #endif
1647:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #include CMSIS_NVIC_VIRTUAL_HEADER_FILE
1648:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #else
1649:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #define NVIC_SetPriorityGrouping    __NVIC_SetPriorityGrouping
1650:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #define NVIC_GetPriorityGrouping    __NVIC_GetPriorityGrouping
1651:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #define NVIC_EnableIRQ              __NVIC_EnableIRQ
1652:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #define NVIC_GetEnableIRQ           __NVIC_GetEnableIRQ
1653:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #define NVIC_DisableIRQ             __NVIC_DisableIRQ
1654:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #define NVIC_GetPendingIRQ          __NVIC_GetPendingIRQ
1655:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #define NVIC_SetPendingIRQ          __NVIC_SetPendingIRQ
1656:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #define NVIC_ClearPendingIRQ        __NVIC_ClearPendingIRQ
1657:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #define NVIC_GetActive              __NVIC_GetActive
1658:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #define NVIC_SetPriority            __NVIC_SetPriority
1659:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #define NVIC_GetPriority            __NVIC_GetPriority
1660:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #define NVIC_SystemReset            __NVIC_SystemReset
1661:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #endif /* CMSIS_NVIC_VIRTUAL */
1662:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1663:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #ifdef CMSIS_VECTAB_VIRTUAL
1664:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #ifndef CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1665:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #define CMSIS_VECTAB_VIRTUAL_HEADER_FILE "cmsis_vectab_virtual.h"
1666:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #endif
1667:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #include CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1668:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #else
1669:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #define NVIC_SetVector              __NVIC_SetVector
1670:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #define NVIC_GetVector              __NVIC_GetVector
1671:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #endif  /* (CMSIS_VECTAB_VIRTUAL) */
1672:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1673:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define NVIC_USER_IRQ_OFFSET          16
1674:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1675:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1676:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* The following EXC_RETURN values are saved the LR on exception entry */
1677:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define EXC_RETURN_HANDLER         (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after ret
1678:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define EXC_RETURN_THREAD_MSP      (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after retu
1679:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define EXC_RETURN_THREAD_PSP      (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after retu
1680:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define EXC_RETURN_HANDLER_FPU     (0xFFFFFFE1UL)     /* return to Handler mode, uses MSP after ret
1681:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define EXC_RETURN_THREAD_MSP_FPU  (0xFFFFFFE9UL)     /* return to Thread mode, uses MSP after retu
1682:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define EXC_RETURN_THREAD_PSP_FPU  (0xFFFFFFEDUL)     /* return to Thread mode, uses PSP after retu
1683:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1684:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1685:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
1686:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief   Set Priority Grouping
1687:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \details Sets the priority grouping field using the required unlock sequence.
1688:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1689:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****            Only values from 0..7 are used.
1690:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****            In case of a conflict between priority grouping and available
1691:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1692:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \param [in]      PriorityGroup  Priority grouping field.
1693:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
1694:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
  40              		.loc 2 1694 22 view .LVU3
  41              	.LBB53:
ARM GAS  /tmp/ccNYJXhf.s 			page 34


1695:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
1696:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   uint32_t reg_value;
  42              		.loc 2 1696 3 view .LVU4
1697:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
  43              		.loc 2 1697 3 view .LVU5
1698:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1699:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
  44              		.loc 2 1699 3 view .LVU6
  45              		.loc 2 1699 14 is_stmt 0 view .LVU7
  46 0000 074A     		ldr	r2, .L2
  47 0002 D368     		ldr	r3, [r2, #12]
  48              	.LVL1:
1700:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
  49              		.loc 2 1700 3 is_stmt 1 view .LVU8
  50              		.loc 2 1700 13 is_stmt 0 view .LVU9
  51 0004 23F4E063 		bic	r3, r3, #1792
  52              	.LVL2:
  53              		.loc 2 1700 13 view .LVU10
  54 0008 1B04     		lsls	r3, r3, #16
  55 000a 1B0C     		lsrs	r3, r3, #16
  56              	.LVL3:
1701:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   reg_value  =  (reg_value                                   |
  57              		.loc 2 1701 3 is_stmt 1 view .LVU11
1702:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1703:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****                 (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key a
  58              		.loc 2 1703 35 is_stmt 0 view .LVU12
  59 000c 0002     		lsls	r0, r0, #8
  60              	.LVL4:
  61              		.loc 2 1703 35 view .LVU13
  62 000e 00F4E060 		and	r0, r0, #1792
1702:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
  63              		.loc 2 1702 62 view .LVU14
  64 0012 0343     		orrs	r3, r3, r0
  65              	.LVL5:
1701:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   reg_value  =  (reg_value                                   |
  66              		.loc 2 1701 14 view .LVU15
  67 0014 43F0BF63 		orr	r3, r3, #100139008
  68 0018 43F40033 		orr	r3, r3, #131072
  69              	.LVL6:
1704:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   SCB->AIRCR =  reg_value;
  70              		.loc 2 1704 3 is_stmt 1 view .LVU16
  71              		.loc 2 1704 14 is_stmt 0 view .LVU17
  72 001c D360     		str	r3, [r2, #12]
  73              	.LVL7:
  74              		.loc 2 1704 14 view .LVU18
  75              	.LBE53:
  76              	.LBE52:
 148:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** }
  77              		.loc 1 148 1 view .LVU19
  78 001e 7047     		bx	lr
  79              	.L3:
  80              		.align	2
  81              	.L2:
  82 0020 00ED00E0 		.word	-536810240
  83              		.cfi_endproc
  84              	.LFE239:
  86              		.section	.text.HAL_NVIC_SetPriority,"ax",%progbits
ARM GAS  /tmp/ccNYJXhf.s 			page 35


  87              		.align	1
  88              		.global	HAL_NVIC_SetPriority
  89              		.syntax unified
  90              		.thumb
  91              		.thumb_func
  92              		.fpu fpv4-sp-d16
  94              	HAL_NVIC_SetPriority:
  95              	.LVL8:
  96              	.LFB240:
 149:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** 
 150:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** /**
 151:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   * @brief  Sets the priority of an interrupt.
 152:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 153:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 154:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 155:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   * @param  PreemptPriority The preemption priority for the IRQn channel.
 156:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   *         This parameter can be a value between 0 and 15
 157:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   *         A lower priority value indicates a higher priority 
 158:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   * @param  SubPriority the subpriority level for the IRQ channel.
 159:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   *         This parameter can be a value between 0 and 15
 160:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   *         A lower priority value indicates a higher priority.          
 161:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   * @retval None
 162:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   */
 163:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
 164:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** { 
  97              		.loc 1 164 1 is_stmt 1 view -0
  98              		.cfi_startproc
  99              		@ args = 0, pretend = 0, frame = 0
 100              		@ frame_needed = 0, uses_anonymous_args = 0
 101              		@ link register save eliminated.
 102              		.loc 1 164 1 is_stmt 0 view .LVU21
 103 0000 30B4     		push	{r4, r5}
 104              	.LCFI0:
 105              		.cfi_def_cfa_offset 8
 106              		.cfi_offset 4, -8
 107              		.cfi_offset 5, -4
 165:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   uint32_t prioritygroup = 0x00U;
 108              		.loc 1 165 3 is_stmt 1 view .LVU22
 109              	.LVL9:
 166:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   
 167:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   /* Check the parameters */
 168:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
 110              		.loc 1 168 3 view .LVU23
 169:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
 111              		.loc 1 169 3 view .LVU24
 170:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   
 171:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   prioritygroup = NVIC_GetPriorityGrouping();
 112              		.loc 1 171 3 view .LVU25
 113              	.LBB54:
 114              	.LBI54:
1705:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** }
1706:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1707:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1708:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
1709:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief   Get Priority Grouping
1710:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1711:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
ARM GAS  /tmp/ccNYJXhf.s 			page 36


1712:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
1713:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
 115              		.loc 2 1713 26 view .LVU26
 116              	.LBB55:
1714:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
1715:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 117              		.loc 2 1715 3 view .LVU27
 118              		.loc 2 1715 26 is_stmt 0 view .LVU28
 119 0002 174B     		ldr	r3, .L10
 120 0004 DB68     		ldr	r3, [r3, #12]
 121              		.loc 2 1715 11 view .LVU29
 122 0006 C3F30223 		ubfx	r3, r3, #8, #3
 123              	.LVL10:
 124              		.loc 2 1715 11 view .LVU30
 125              	.LBE55:
 126              	.LBE54:
 172:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   
 173:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 127              		.loc 1 173 3 is_stmt 1 view .LVU31
 128              	.LBB56:
 129              	.LBI56:
1716:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** }
1717:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1718:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1719:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
1720:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief   Enable Interrupt
1721:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \details Enables a device specific interrupt in the NVIC interrupt controller.
1722:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1723:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \note    IRQn must not be negative.
1724:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
1725:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
1726:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
1727:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1728:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
1729:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     __COMPILER_BARRIER();
1730:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1731:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     __COMPILER_BARRIER();
1732:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
1733:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** }
1734:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1735:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1736:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
1737:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief   Get Interrupt Enable status
1738:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \details Returns a device specific interrupt enable status from the NVIC interrupt controller.
1739:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1740:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \return             0  Interrupt is not enabled.
1741:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \return             1  Interrupt is enabled.
1742:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \note    IRQn must not be negative.
1743:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
1744:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetEnableIRQ(IRQn_Type IRQn)
1745:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
1746:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1747:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
1748:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     return((uint32_t)(((NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1749:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
1750:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   else
1751:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
ARM GAS  /tmp/ccNYJXhf.s 			page 37


1752:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     return(0U);
1753:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
1754:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** }
1755:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1756:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1757:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
1758:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief   Disable Interrupt
1759:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \details Disables a device specific interrupt in the NVIC interrupt controller.
1760:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1761:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \note    IRQn must not be negative.
1762:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
1763:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
1764:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
1765:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1766:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
1767:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1768:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     __DSB();
1769:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     __ISB();
1770:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
1771:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** }
1772:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1773:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1774:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
1775:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief   Get Pending Interrupt
1776:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \details Reads the NVIC pending register and returns the pending bit for the specified device spe
1777:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1778:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \return             0  Interrupt status is not pending.
1779:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \return             1  Interrupt status is pending.
1780:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \note    IRQn must not be negative.
1781:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
1782:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPendingIRQ(IRQn_Type IRQn)
1783:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
1784:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1785:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
1786:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     return((uint32_t)(((NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1787:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
1788:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   else
1789:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
1790:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     return(0U);
1791:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
1792:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** }
1793:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1794:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1795:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
1796:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief   Set Pending Interrupt
1797:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \details Sets the pending bit of a device specific interrupt in the NVIC pending register.
1798:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1799:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \note    IRQn must not be negative.
1800:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
1801:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_SetPendingIRQ(IRQn_Type IRQn)
1802:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
1803:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1804:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
1805:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1806:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
1807:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** }
1808:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
ARM GAS  /tmp/ccNYJXhf.s 			page 38


1809:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1810:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
1811:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief   Clear Pending Interrupt
1812:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
1813:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1814:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \note    IRQn must not be negative.
1815:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
1816:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1817:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
1818:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1819:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
1820:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1821:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
1822:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** }
1823:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1824:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1825:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
1826:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief   Get Active Interrupt
1827:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \details Reads the active register in the NVIC and returns the active bit for the device specific
1828:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1829:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \return             0  Interrupt status is not active.
1830:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \return             1  Interrupt status is active.
1831:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \note    IRQn must not be negative.
1832:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
1833:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetActive(IRQn_Type IRQn)
1834:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
1835:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1836:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
1837:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     return((uint32_t)(((NVIC->IABR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1838:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
1839:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   else
1840:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
1841:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     return(0U);
1842:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
1843:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** }
1844:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1845:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1846:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
1847:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief   Set Interrupt Priority
1848:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \details Sets the priority of a device specific interrupt or a processor exception.
1849:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1850:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****            or negative to specify a processor exception.
1851:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \param [in]      IRQn  Interrupt number.
1852:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \param [in]  priority  Priority to set.
1853:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \note    The priority cannot be set for every processor exception.
1854:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
1855:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1856:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
1857:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1858:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
1859:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (u
1860:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
1861:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   else
1862:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
1863:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (u
1864:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
1865:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** }
ARM GAS  /tmp/ccNYJXhf.s 			page 39


1866:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1867:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1868:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
1869:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief   Get Interrupt Priority
1870:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \details Reads the priority of a device specific interrupt or a processor exception.
1871:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1872:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****            or negative to specify a processor exception.
1873:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \param [in]   IRQn  Interrupt number.
1874:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \return             Interrupt Priority.
1875:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****                       Value is aligned automatically to the implemented priority bits of the microc
1876:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
1877:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPriority(IRQn_Type IRQn)
1878:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
1879:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1880:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1881:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
1882:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     return(((uint32_t)NVIC->IP[((uint32_t)IRQn)]               >> (8U - __NVIC_PRIO_BITS)));
1883:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
1884:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   else
1885:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
1886:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     return(((uint32_t)SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] >> (8U - __NVIC_PRIO_BITS)));
1887:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
1888:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** }
1889:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1890:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1891:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
1892:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief   Encode Priority
1893:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \details Encodes the priority for an interrupt with the given priority group,
1894:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****            preemptive priority value, and subpriority value.
1895:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****            In case of a conflict between priority grouping and available
1896:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1897:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \param [in]     PriorityGroup  Used priority group.
1898:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
1899:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \param [in]       SubPriority  Subpriority value (starting from 0).
1900:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \return                        Encoded priority. Value can be used in the function \ref NVIC_SetP
1901:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
1902:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
 130              		.loc 2 1902 26 view .LVU32
 131              	.LBB57:
1903:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
1904:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
 132              		.loc 2 1904 3 view .LVU33
1905:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   uint32_t PreemptPriorityBits;
 133              		.loc 2 1905 3 view .LVU34
1906:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   uint32_t SubPriorityBits;
 134              		.loc 2 1906 3 view .LVU35
1907:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1908:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
 135              		.loc 2 1908 3 view .LVU36
 136              		.loc 2 1908 31 is_stmt 0 view .LVU37
 137 000a C3F10704 		rsb	r4, r3, #7
 138              		.loc 2 1908 23 view .LVU38
 139 000e 042C     		cmp	r4, #4
 140 0010 28BF     		it	cs
 141 0012 0424     		movcs	r4, #4
 142              	.LVL11:
1909:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
ARM GAS  /tmp/ccNYJXhf.s 			page 40


 143              		.loc 2 1909 3 is_stmt 1 view .LVU39
 144              		.loc 2 1909 44 is_stmt 0 view .LVU40
 145 0014 1D1D     		adds	r5, r3, #4
 146              		.loc 2 1909 109 view .LVU41
 147 0016 062D     		cmp	r5, #6
 148 0018 18D9     		bls	.L8
 149 001a 033B     		subs	r3, r3, #3
 150              	.LVL12:
 151              	.L5:
1910:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1911:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   return (
 152              		.loc 2 1911 3 is_stmt 1 view .LVU42
1912:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
 153              		.loc 2 1912 30 is_stmt 0 view .LVU43
 154 001c 4FF0FF35 		mov	r5, #-1
 155              	.LVL13:
 156              		.loc 2 1912 30 view .LVU44
 157 0020 05FA04F4 		lsl	r4, r5, r4
 158              	.LVL14:
 159              		.loc 2 1912 30 view .LVU45
 160 0024 21EA0401 		bic	r1, r1, r4
 161              	.LVL15:
 162              		.loc 2 1912 82 view .LVU46
 163 0028 9940     		lsls	r1, r1, r3
1913:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 164              		.loc 2 1913 30 view .LVU47
 165 002a 05FA03F3 		lsl	r3, r5, r3
 166              	.LVL16:
 167              		.loc 2 1913 30 view .LVU48
 168 002e 22EA0303 		bic	r3, r2, r3
1912:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
 169              		.loc 2 1912 102 view .LVU49
 170 0032 1943     		orrs	r1, r1, r3
 171              	.LVL17:
1912:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
 172              		.loc 2 1912 102 view .LVU50
 173              	.LBE57:
 174              	.LBE56:
 175              	.LBB59:
 176              	.LBI59:
1855:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
 177              		.loc 2 1855 22 is_stmt 1 view .LVU51
 178              	.LBB60:
1857:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
 179              		.loc 2 1857 3 view .LVU52
1857:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
 180              		.loc 2 1857 6 is_stmt 0 view .LVU53
 181 0034 0028     		cmp	r0, #0
 182 0036 0BDB     		blt	.L6
1859:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 183              		.loc 2 1859 5 is_stmt 1 view .LVU54
1859:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 184              		.loc 2 1859 48 is_stmt 0 view .LVU55
 185 0038 0901     		lsls	r1, r1, #4
 186              	.LVL18:
1859:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 187              		.loc 2 1859 48 view .LVU56
ARM GAS  /tmp/ccNYJXhf.s 			page 41


 188 003a C9B2     		uxtb	r1, r1
1859:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 189              		.loc 2 1859 46 view .LVU57
 190 003c 00F16040 		add	r0, r0, #-536870912
 191              	.LVL19:
1859:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 192              		.loc 2 1859 46 view .LVU58
 193 0040 00F56140 		add	r0, r0, #57600
 194 0044 80F80013 		strb	r1, [r0, #768]
 195              	.LVL20:
 196              	.L4:
1859:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 197              		.loc 2 1859 46 view .LVU59
 198              	.LBE60:
 199              	.LBE59:
 174:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** }
 200              		.loc 1 174 1 view .LVU60
 201 0048 30BC     		pop	{r4, r5}
 202              	.LCFI1:
 203              		.cfi_remember_state
 204              		.cfi_restore 5
 205              		.cfi_restore 4
 206              		.cfi_def_cfa_offset 0
 207 004a 7047     		bx	lr
 208              	.LVL21:
 209              	.L8:
 210              	.LCFI2:
 211              		.cfi_restore_state
 212              	.LBB62:
 213              	.LBB58:
1909:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 214              		.loc 2 1909 109 view .LVU61
 215 004c 0023     		movs	r3, #0
 216              	.LVL22:
1909:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 217              		.loc 2 1909 109 view .LVU62
 218 004e E5E7     		b	.L5
 219              	.LVL23:
 220              	.L6:
1909:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 221              		.loc 2 1909 109 view .LVU63
 222              	.LBE58:
 223              	.LBE62:
 224              	.LBB63:
 225              	.LBB61:
1863:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 226              		.loc 2 1863 5 is_stmt 1 view .LVU64
1863:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 227              		.loc 2 1863 32 is_stmt 0 view .LVU65
 228 0050 00F00F00 		and	r0, r0, #15
 229              	.LVL24:
1863:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 230              		.loc 2 1863 48 view .LVU66
 231 0054 0901     		lsls	r1, r1, #4
 232              	.LVL25:
1863:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 233              		.loc 2 1863 48 view .LVU67
ARM GAS  /tmp/ccNYJXhf.s 			page 42


 234 0056 C9B2     		uxtb	r1, r1
1863:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 235              		.loc 2 1863 46 view .LVU68
 236 0058 024B     		ldr	r3, .L10+4
 237 005a 1954     		strb	r1, [r3, r0]
 238              	.LVL26:
1863:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 239              		.loc 2 1863 46 view .LVU69
 240              	.LBE61:
 241              	.LBE63:
 242              		.loc 1 174 1 view .LVU70
 243 005c F4E7     		b	.L4
 244              	.L11:
 245 005e 00BF     		.align	2
 246              	.L10:
 247 0060 00ED00E0 		.word	-536810240
 248 0064 14ED00E0 		.word	-536810220
 249              		.cfi_endproc
 250              	.LFE240:
 252              		.section	.text.HAL_NVIC_EnableIRQ,"ax",%progbits
 253              		.align	1
 254              		.global	HAL_NVIC_EnableIRQ
 255              		.syntax unified
 256              		.thumb
 257              		.thumb_func
 258              		.fpu fpv4-sp-d16
 260              	HAL_NVIC_EnableIRQ:
 261              	.LVL27:
 262              	.LFB241:
 175:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** 
 176:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** /**
 177:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   * @brief  Enables a device specific interrupt in the NVIC interrupt controller.
 178:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   * @note   To configure interrupts priority correctly, the NVIC_PriorityGroupConfig()
 179:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   *         function should be called before. 
 180:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 181:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 182:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 183:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   * @retval None
 184:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   */
 185:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
 186:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** {
 263              		.loc 1 186 1 is_stmt 1 view -0
 264              		.cfi_startproc
 265              		@ args = 0, pretend = 0, frame = 0
 266              		@ frame_needed = 0, uses_anonymous_args = 0
 267              		@ link register save eliminated.
 187:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   /* Check the parameters */
 188:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 268              		.loc 1 188 3 view .LVU72
 189:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   
 190:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   /* Enable interrupt */
 191:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   NVIC_EnableIRQ(IRQn);
 269              		.loc 1 191 3 view .LVU73
 270              	.LBB64:
 271              	.LBI64:
1725:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
 272              		.loc 2 1725 22 view .LVU74
ARM GAS  /tmp/ccNYJXhf.s 			page 43


 273              	.LBB65:
1727:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
 274              		.loc 2 1727 3 view .LVU75
1727:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
 275              		.loc 2 1727 6 is_stmt 0 view .LVU76
 276 0000 0028     		cmp	r0, #0
 277              	.LVL28:
1727:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
 278              		.loc 2 1727 6 view .LVU77
 279 0002 07DB     		blt	.L12
1729:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 280              		.loc 2 1729 5 is_stmt 1 view .LVU78
1730:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     __COMPILER_BARRIER();
 281              		.loc 2 1730 5 view .LVU79
1730:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     __COMPILER_BARRIER();
 282              		.loc 2 1730 81 is_stmt 0 view .LVU80
 283 0004 00F01F02 		and	r2, r0, #31
1730:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     __COMPILER_BARRIER();
 284              		.loc 2 1730 34 view .LVU81
 285 0008 4009     		lsrs	r0, r0, #5
1730:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     __COMPILER_BARRIER();
 286              		.loc 2 1730 45 view .LVU82
 287 000a 0123     		movs	r3, #1
 288 000c 9340     		lsls	r3, r3, r2
1730:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     __COMPILER_BARRIER();
 289              		.loc 2 1730 43 view .LVU83
 290 000e 024A     		ldr	r2, .L14
 291 0010 42F82030 		str	r3, [r2, r0, lsl #2]
1731:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 292              		.loc 2 1731 5 is_stmt 1 view .LVU84
 293              	.LVL29:
 294              	.L12:
1731:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 295              		.loc 2 1731 5 is_stmt 0 view .LVU85
 296              	.LBE65:
 297              	.LBE64:
 192:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** }
 298              		.loc 1 192 1 view .LVU86
 299 0014 7047     		bx	lr
 300              	.L15:
 301 0016 00BF     		.align	2
 302              	.L14:
 303 0018 00E100E0 		.word	-536813312
 304              		.cfi_endproc
 305              	.LFE241:
 307              		.section	.text.HAL_NVIC_DisableIRQ,"ax",%progbits
 308              		.align	1
 309              		.global	HAL_NVIC_DisableIRQ
 310              		.syntax unified
 311              		.thumb
 312              		.thumb_func
 313              		.fpu fpv4-sp-d16
 315              	HAL_NVIC_DisableIRQ:
 316              	.LVL30:
 317              	.LFB242:
 193:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** 
 194:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** /**
ARM GAS  /tmp/ccNYJXhf.s 			page 44


 195:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   * @brief  Disables a device specific interrupt in the NVIC interrupt controller.
 196:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 197:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 198:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 199:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   * @retval None
 200:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   */
 201:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** void HAL_NVIC_DisableIRQ(IRQn_Type IRQn)
 202:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** {
 318              		.loc 1 202 1 is_stmt 1 view -0
 319              		.cfi_startproc
 320              		@ args = 0, pretend = 0, frame = 0
 321              		@ frame_needed = 0, uses_anonymous_args = 0
 322              		@ link register save eliminated.
 203:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   /* Check the parameters */
 204:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 323              		.loc 1 204 3 view .LVU88
 205:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   
 206:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   /* Disable interrupt */
 207:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   NVIC_DisableIRQ(IRQn);
 324              		.loc 1 207 3 view .LVU89
 325              	.LBB66:
 326              	.LBI66:
1763:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
 327              		.loc 2 1763 22 view .LVU90
 328              	.LBB67:
1765:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
 329              		.loc 2 1765 3 view .LVU91
1765:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
 330              		.loc 2 1765 6 is_stmt 0 view .LVU92
 331 0000 0028     		cmp	r0, #0
 332              	.LVL31:
1765:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
 333              		.loc 2 1765 6 view .LVU93
 334 0002 0CDB     		blt	.L16
1767:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     __DSB();
 335              		.loc 2 1767 5 is_stmt 1 view .LVU94
1767:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     __DSB();
 336              		.loc 2 1767 81 is_stmt 0 view .LVU95
 337 0004 00F01F02 		and	r2, r0, #31
1767:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     __DSB();
 338              		.loc 2 1767 34 view .LVU96
 339 0008 4009     		lsrs	r0, r0, #5
1767:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     __DSB();
 340              		.loc 2 1767 45 view .LVU97
 341 000a 0123     		movs	r3, #1
 342 000c 9340     		lsls	r3, r3, r2
1767:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     __DSB();
 343              		.loc 2 1767 43 view .LVU98
 344 000e 2030     		adds	r0, r0, #32
 345 0010 034A     		ldr	r2, .L18
 346 0012 42F82030 		str	r3, [r2, r0, lsl #2]
1768:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     __ISB();
 347              		.loc 2 1768 5 is_stmt 1 view .LVU99
 348              	.LBB68:
 349              	.LBI68:
 350              		.file 3 "CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h"
   1:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**************************************************************************//**
ARM GAS  /tmp/ccNYJXhf.s 			page 45


   2:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  * @version  V5.4.2
   5:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  * @date     17. December 2022
   6:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /*
   8:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  *
  10:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  *
  12:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  *
  16:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  *
  18:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  * limitations under the License.
  23:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
  24:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
  25:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
  28:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
  34:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  38:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
  39:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  43:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  46:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  49:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  52:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  55:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __USED
  56:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  58:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __WEAK
ARM GAS  /tmp/ccNYJXhf.s 			page 46


  59:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  61:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  64:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  67:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  70:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  78:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  86:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  94:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 102:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 110:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 113:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccNYJXhf.s 			page 47


 116:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 119:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __NO_INIT
 120:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __NO_INIT                              __attribute__ ((section (".bss.noinit")))
 121:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 122:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __ALIAS
 123:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ALIAS(x)                             __attribute__ ((alias(x)))
 124:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 125:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 126:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 127:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 128:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 129:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 130:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 131:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 132:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 133:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 134:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****            in the used linker script.
 135:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 136:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 137:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 138:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 139:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 140:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 141:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   typedef struct __copy_table {
 142:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t const* src;
 143:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t* dest;
 144:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t  wlen;
 145:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   } __copy_table_t;
 146:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 147:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   typedef struct __zero_table {
 148:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t* dest;
 149:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t  wlen;
 150:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   } __zero_table_t;
 151:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 152:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 153:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 154:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 155:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 156:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 157:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 158:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 160:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     }
 161:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   }
 162:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 163:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 164:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 165:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 166:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     }
 167:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   }
 168:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 169:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   _start();
 170:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 171:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 172:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
ARM GAS  /tmp/ccNYJXhf.s 			page 48


 173:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 174:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 175:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 176:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 177:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 178:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 179:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 180:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 181:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 182:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 183:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 184:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 185:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 186:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 187:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 188:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 189:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 190:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 191:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 192:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 193:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 194:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 195:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 196:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 197:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 198:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 199:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 200:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 201:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 202:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 203:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 204:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 205:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 206:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 207:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 208:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 209:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 210:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 211:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 212:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 213:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   Access to dedicated instructions
 214:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   @{
 215:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** */
 216:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 217:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 218:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 219:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 220:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 221:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 222:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 223:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 224:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #else
 225:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 226:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 227:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 228:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 229:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccNYJXhf.s 			page 49


 230:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 231:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   No Operation
 232:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 233:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 234:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 235:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 236:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 237:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 238:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 239:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 240:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 241:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 242:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 243:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 244:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Wait For Event
 245:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 246:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 247:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 248:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 249:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 250:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 251:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 252:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Send Event
 253:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 254:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 255:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 256:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 257:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 258:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 259:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 260:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 261:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 262:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****            after the instruction has been completed.
 263:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 264:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 265:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 266:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 267:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 268:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 269:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 270:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 271:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 272:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 273:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 274:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 275:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 351              		.loc 3 275 27 view .LVU100
 352              	.LBB69:
 276:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 277:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 353              		.loc 3 277 3 view .LVU101
 354              		.syntax unified
 355              	@ 277 "CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h" 1
 356 0016 BFF34F8F 		dsb 0xF
 357              	@ 0 "" 2
 358              		.thumb
 359              		.syntax unified
ARM GAS  /tmp/ccNYJXhf.s 			page 50


 360              	.LBE69:
 361              	.LBE68:
1769:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 362              		.loc 2 1769 5 view .LVU102
 363              	.LBB70:
 364              	.LBI70:
 264:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 365              		.loc 3 264 27 view .LVU103
 366              	.LBB71:
 266:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 367              		.loc 3 266 3 view .LVU104
 368              		.syntax unified
 369              	@ 266 "CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h" 1
 370 001a BFF36F8F 		isb 0xF
 371              	@ 0 "" 2
 372              	.LVL32:
 373              		.thumb
 374              		.syntax unified
 375              	.L16:
 266:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 376              		.loc 3 266 3 is_stmt 0 view .LVU105
 377              	.LBE71:
 378              	.LBE70:
 379              	.LBE67:
 380              	.LBE66:
 208:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** }
 381              		.loc 1 208 1 view .LVU106
 382 001e 7047     		bx	lr
 383              	.L19:
 384              		.align	2
 385              	.L18:
 386 0020 00E100E0 		.word	-536813312
 387              		.cfi_endproc
 388              	.LFE242:
 390              		.section	.text.HAL_NVIC_SystemReset,"ax",%progbits
 391              		.align	1
 392              		.global	HAL_NVIC_SystemReset
 393              		.syntax unified
 394              		.thumb
 395              		.thumb_func
 396              		.fpu fpv4-sp-d16
 398              	HAL_NVIC_SystemReset:
 399              	.LFB243:
 209:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** 
 210:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** /**
 211:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   * @brief  Initiates a system reset request to reset the MCU.
 212:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   * @retval None
 213:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   */
 214:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** void HAL_NVIC_SystemReset(void)
 215:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** {
 400              		.loc 1 215 1 is_stmt 1 view -0
 401              		.cfi_startproc
 402              		@ Volatile: function does not return.
 403              		@ args = 0, pretend = 0, frame = 0
 404              		@ frame_needed = 0, uses_anonymous_args = 0
 405              		@ link register save eliminated.
 216:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   /* System Reset */
ARM GAS  /tmp/ccNYJXhf.s 			page 51


 217:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   NVIC_SystemReset();
 406              		.loc 1 217 3 view .LVU108
 407              	.LBB78:
 408              	.LBI78:
1914:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****          );
1915:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** }
1916:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1917:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1918:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
1919:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief   Decode Priority
1920:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \details Decodes an interrupt priority value with a given priority group to
1921:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****            preemptive priority value and subpriority value.
1922:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****            In case of a conflict between priority grouping and available
1923:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
1924:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \param [in]         Priority   Priority value, which can be retrieved with the function \ref NVIC
1925:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \param [in]     PriorityGroup  Used priority group.
1926:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \param [out] pPreemptPriority  Preemptive priority value (starting from 0).
1927:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \param [out]     pSubPriority  Subpriority value (starting from 0).
1928:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
1929:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** __STATIC_INLINE void NVIC_DecodePriority (uint32_t Priority, uint32_t PriorityGroup, uint32_t* cons
1930:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
1931:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
1932:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   uint32_t PreemptPriorityBits;
1933:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   uint32_t SubPriorityBits;
1934:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1935:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
1936:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
1937:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1938:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   *pPreemptPriority = (Priority >> SubPriorityBits) & (uint32_t)((1UL << (PreemptPriorityBits)) - 1
1939:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
1940:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** }
1941:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1942:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1943:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
1944:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief   Set Interrupt Vector
1945:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \details Sets an interrupt vector in SRAM based interrupt vector table.
1946:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1947:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****            or negative to specify a processor exception.
1948:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****            VTOR must been relocated to SRAM before.
1949:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \param [in]   IRQn      Interrupt number
1950:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \param [in]   vector    Address of interrupt handler function
1951:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
1952:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_SetVector(IRQn_Type IRQn, uint32_t vector)
1953:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
1954:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   uint32_t *vectors = (uint32_t *)SCB->VTOR;
1955:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   vectors[(int32_t)IRQn + NVIC_USER_IRQ_OFFSET] = vector;
1956:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   /* ARM Application Note 321 states that the M4 does not require the architectural barrier */
1957:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** }
1958:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1959:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1960:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
1961:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief   Get Interrupt Vector
1962:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \details Reads an interrupt vector from interrupt vector table.
1963:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1964:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****            or negative to specify a processor exception.
1965:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \param [in]   IRQn      Interrupt number.
1966:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \return                 Address of interrupt handler function
ARM GAS  /tmp/ccNYJXhf.s 			page 52


1967:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
1968:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetVector(IRQn_Type IRQn)
1969:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
1970:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   uint32_t *vectors = (uint32_t *)SCB->VTOR;
1971:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   return vectors[(int32_t)IRQn + NVIC_USER_IRQ_OFFSET];
1972:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** }
1973:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1974:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1975:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
1976:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief   System Reset
1977:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \details Initiates a system reset request to reset the MCU.
1978:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
1979:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** __NO_RETURN __STATIC_INLINE void __NVIC_SystemReset(void)
 409              		.loc 2 1979 34 view .LVU109
 410              	.LBB79:
1980:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
1981:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __DSB();                                                          /* Ensure all outstanding memor
 411              		.loc 2 1981 3 view .LVU110
 412              	.LBB80:
 413              	.LBI80:
 275:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 414              		.loc 3 275 27 view .LVU111
 415              	.LBB81:
 416              		.loc 3 277 3 view .LVU112
 417              		.syntax unified
 418              	@ 277 "CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h" 1
 419 0000 BFF34F8F 		dsb 0xF
 420              	@ 0 "" 2
 421              		.thumb
 422              		.syntax unified
 423              	.LBE81:
 424              	.LBE80:
1982:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****                                                                        buffered write are completed
1983:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
 425              		.loc 2 1983 3 view .LVU113
1984:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 426              		.loc 2 1984 32 is_stmt 0 view .LVU114
 427 0004 0549     		ldr	r1, .L22
 428 0006 CA68     		ldr	r2, [r1, #12]
 429              		.loc 2 1984 40 view .LVU115
 430 0008 02F4E062 		and	r2, r2, #1792
1983:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 431              		.loc 2 1983 17 view .LVU116
 432 000c 044B     		ldr	r3, .L22+4
 433 000e 1343     		orrs	r3, r3, r2
1983:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 434              		.loc 2 1983 15 view .LVU117
 435 0010 CB60     		str	r3, [r1, #12]
1985:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****                             SCB_AIRCR_SYSRESETREQ_Msk    );         /* Keep priority group unchange
1986:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __DSB();                                                          /* Ensure completion of memory 
 436              		.loc 2 1986 3 is_stmt 1 view .LVU118
 437              	.LBB82:
 438              	.LBI82:
 275:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 439              		.loc 3 275 27 view .LVU119
 440              	.LBB83:
 441              		.loc 3 277 3 view .LVU120
ARM GAS  /tmp/ccNYJXhf.s 			page 53


 442              		.syntax unified
 443              	@ 277 "CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h" 1
 444 0012 BFF34F8F 		dsb 0xF
 445              	@ 0 "" 2
 446              		.thumb
 447              		.syntax unified
 448              	.L21:
 449              	.LBE83:
 450              	.LBE82:
1987:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1988:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   for(;;)                                                           /* wait until reset */
 451              		.loc 2 1988 3 view .LVU121
1989:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
1990:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     __NOP();
 452              		.loc 2 1990 5 view .LVU122
 453              		.syntax unified
 454              	@ 1990 "CMSIS_5/CMSIS/Core/Include/core_cm4.h" 1
 455 0016 00BF     		nop
 456              	@ 0 "" 2
1988:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
 457              		.loc 2 1988 8 view .LVU123
 458              		.thumb
 459              		.syntax unified
 460 0018 FDE7     		b	.L21
 461              	.L23:
 462 001a 00BF     		.align	2
 463              	.L22:
 464 001c 00ED00E0 		.word	-536810240
 465 0020 0400FA05 		.word	100270084
 466              	.LBE79:
 467              	.LBE78:
 468              		.cfi_endproc
 469              	.LFE243:
 471              		.section	.text.HAL_SYSTICK_Config,"ax",%progbits
 472              		.align	1
 473              		.global	HAL_SYSTICK_Config
 474              		.syntax unified
 475              		.thumb
 476              		.thumb_func
 477              		.fpu fpv4-sp-d16
 479              	HAL_SYSTICK_Config:
 480              	.LVL33:
 481              	.LFB244:
 218:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** }
 219:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** 
 220:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** /**
 221:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   * @brief  Initializes the System Timer and its interrupt, and starts the System Tick Timer.
 222:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   *         Counter is in free running mode to generate periodic interrupts.
 223:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
 224:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   * @retval status:  - 0  Function succeeded.
 225:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   *                  - 1  Function failed.
 226:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   */
 227:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
 228:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** {
 482              		.loc 1 228 1 view -0
 483              		.cfi_startproc
 484              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccNYJXhf.s 			page 54


 485              		@ frame_needed = 0, uses_anonymous_args = 0
 486              		@ link register save eliminated.
 229:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****    return SysTick_Config(TicksNumb);
 487              		.loc 1 229 4 view .LVU125
 488              	.LBB84:
 489              	.LBI84:
1991:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
1992:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** }
1993:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1994:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /*@} end of CMSIS_Core_NVICFunctions */
1995:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1996:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1997:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* ##########################  MPU functions  #################################### */
1998:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1999:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
2000:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
2001:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #include "mpu_armv7.h"
2002:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
2003:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #endif
2004:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
2005:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
2006:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* ##########################  FPU functions  #################################### */
2007:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
2008:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \ingroup  CMSIS_Core_FunctionInterface
2009:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \defgroup CMSIS_Core_FpuFunctions FPU Functions
2010:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief    Function that provides FPU type.
2011:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   @{
2012:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
2013:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
2014:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
2015:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief   get FPU type
2016:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \details returns the FPU type
2017:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \returns
2018:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****    - \b  0: No FPU
2019:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****    - \b  1: Single precision FPU
2020:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****    - \b  2: Double + Single precision FPU
2021:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
2022:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** __STATIC_INLINE uint32_t SCB_GetFPUType(void)
2023:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
2024:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   uint32_t mvfr0;
2025:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
2026:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   mvfr0 = FPU->MVFR0;
2027:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   if      ((mvfr0 & (FPU_MVFR0_Single_precision_Msk | FPU_MVFR0_Double_precision_Msk)) == 0x020U)
2028:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
2029:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     return 1U;           /* Single precision FPU */
2030:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
2031:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   else
2032:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
2033:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     return 0U;           /* No FPU */
2034:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
2035:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** }
2036:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
2037:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
2038:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /*@} end of CMSIS_Core_FpuFunctions */
2039:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
2040:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
2041:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
ARM GAS  /tmp/ccNYJXhf.s 			page 55


2042:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* ##################################    SysTick function  ########################################
2043:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
2044:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \ingroup  CMSIS_Core_FunctionInterface
2045:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \defgroup CMSIS_Core_SysTickFunctions SysTick Functions
2046:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief    Functions that configure the System.
2047:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   @{
2048:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
2049:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
2050:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #if defined (__Vendor_SysTickConfig) && (__Vendor_SysTickConfig == 0U)
2051:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
2052:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
2053:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief   System Tick Configuration
2054:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \details Initializes the System Timer and its interrupt, and starts the System Tick Timer.
2055:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****            Counter is in free running mode to generate periodic interrupts.
2056:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \param [in]  ticks  Number of ticks between two interrupts.
2057:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \return          0  Function succeeded.
2058:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \return          1  Function failed.
2059:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
2060:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****            function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.
2061:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****            must contain a vendor-specific implementation of this function.
2062:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
2063:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** __STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
 490              		.loc 2 2063 26 view .LVU126
 491              	.LBB85:
2064:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
2065:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 492              		.loc 2 2065 3 view .LVU127
 493              		.loc 2 2065 14 is_stmt 0 view .LVU128
 494 0000 0138     		subs	r0, r0, #1
 495              	.LVL34:
 496              		.loc 2 2065 6 view .LVU129
 497 0002 B0F1807F 		cmp	r0, #16777216
 498 0006 0AD2     		bcs	.L26
2066:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
2067:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     return (1UL);                                                   /* Reload value impossible */
2068:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
2069:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
2070:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 499              		.loc 2 2070 3 is_stmt 1 view .LVU130
 500              		.loc 2 2070 18 is_stmt 0 view .LVU131
 501 0008 064B     		ldr	r3, .L27
 502 000a 5860     		str	r0, [r3, #4]
2071:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Int
 503              		.loc 2 2071 3 is_stmt 1 view .LVU132
 504              	.LVL35:
 505              	.LBB86:
 506              	.LBI86:
1855:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
 507              		.loc 2 1855 22 view .LVU133
 508              	.LBB87:
1857:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
 509              		.loc 2 1857 3 view .LVU134
1863:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 510              		.loc 2 1863 5 view .LVU135
1863:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 511              		.loc 2 1863 46 is_stmt 0 view .LVU136
 512 000c 064A     		ldr	r2, .L27+4
ARM GAS  /tmp/ccNYJXhf.s 			page 56


 513 000e F021     		movs	r1, #240
 514 0010 82F82310 		strb	r1, [r2, #35]
 515              	.LVL36:
1863:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 516              		.loc 2 1863 46 view .LVU137
 517              	.LBE87:
 518              	.LBE86:
2072:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Val
 519              		.loc 2 2072 3 is_stmt 1 view .LVU138
 520              		.loc 2 2072 18 is_stmt 0 view .LVU139
 521 0014 0020     		movs	r0, #0
 522              	.LVL37:
 523              		.loc 2 2072 18 view .LVU140
 524 0016 9860     		str	r0, [r3, #8]
2073:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 525              		.loc 2 2073 3 is_stmt 1 view .LVU141
 526              		.loc 2 2073 18 is_stmt 0 view .LVU142
 527 0018 0722     		movs	r2, #7
 528 001a 1A60     		str	r2, [r3]
2074:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****                    SysTick_CTRL_TICKINT_Msk   |
2075:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****                    SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTi
2076:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   return (0UL);                                                     /* Function successful */
 529              		.loc 2 2076 3 is_stmt 1 view .LVU143
 530              		.loc 2 2076 10 is_stmt 0 view .LVU144
 531 001c 7047     		bx	lr
 532              	.L26:
2067:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 533              		.loc 2 2067 12 view .LVU145
 534 001e 0120     		movs	r0, #1
 535              	.LVL38:
2067:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 536              		.loc 2 2067 12 view .LVU146
 537              	.LBE85:
 538              	.LBE84:
 230:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** }
 539              		.loc 1 230 1 view .LVU147
 540 0020 7047     		bx	lr
 541              	.L28:
 542 0022 00BF     		.align	2
 543              	.L27:
 544 0024 10E000E0 		.word	-536813552
 545 0028 00ED00E0 		.word	-536810240
 546              		.cfi_endproc
 547              	.LFE244:
 549              		.section	.text.HAL_MPU_Disable,"ax",%progbits
 550              		.align	1
 551              		.global	HAL_MPU_Disable
 552              		.syntax unified
 553              		.thumb
 554              		.thumb_func
 555              		.fpu fpv4-sp-d16
 557              	HAL_MPU_Disable:
 558              	.LFB245:
 231:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** /**
 232:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   * @}
 233:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   */
 234:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** 
ARM GAS  /tmp/ccNYJXhf.s 			page 57


 235:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** /** @defgroup CORTEX_Exported_Functions_Group2 Peripheral Control functions
 236:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****  *  @brief   Cortex control functions 
 237:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****  *
 238:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** @verbatim   
 239:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   ==============================================================================
 240:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****                       ##### Peripheral Control functions #####
 241:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   ==============================================================================  
 242:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****     [..]
 243:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****       This subsection provides a set of functions allowing to control the CORTEX
 244:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****       (NVIC, SYSTICK, MPU) functionalities. 
 245:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****  
 246:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****       
 247:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** @endverbatim
 248:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   * @{
 249:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   */
 250:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** 
 251:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** #if (__MPU_PRESENT == 1U)
 252:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** /**
 253:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   * @brief  Disables the MPU
 254:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   * @retval None
 255:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   */
 256:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** void HAL_MPU_Disable(void)
 257:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** {
 559              		.loc 1 257 1 is_stmt 1 view -0
 560              		.cfi_startproc
 561              		@ args = 0, pretend = 0, frame = 0
 562              		@ frame_needed = 0, uses_anonymous_args = 0
 563              		@ link register save eliminated.
 258:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   /* Make sure outstanding transfers are done */
 259:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   __DMB();
 564              		.loc 1 259 3 view .LVU149
 565              	.LBB88:
 566              	.LBI88:
 278:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 279:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 280:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 281:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 282:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 283:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 284:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 285:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 286:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 567              		.loc 3 286 27 view .LVU150
 568              	.LBB89:
 287:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 288:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 569              		.loc 3 288 3 view .LVU151
 570              		.syntax unified
 571              	@ 288 "CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h" 1
 572 0000 BFF35F8F 		dmb 0xF
 573              	@ 0 "" 2
 574              		.thumb
 575              		.syntax unified
 576              	.LBE89:
 577              	.LBE88:
 260:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** 
 261:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   /* Disable fault exceptions */
ARM GAS  /tmp/ccNYJXhf.s 			page 58


 262:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
 578              		.loc 1 262 3 view .LVU152
 579              		.loc 1 262 14 is_stmt 0 view .LVU153
 580 0004 044A     		ldr	r2, .L30
 581 0006 536A     		ldr	r3, [r2, #36]
 582 0008 23F48033 		bic	r3, r3, #65536
 583 000c 5362     		str	r3, [r2, #36]
 263:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   
 264:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   /* Disable the MPU and clear the control register*/
 265:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   MPU->CTRL = 0U;
 584              		.loc 1 265 3 is_stmt 1 view .LVU154
 585              		.loc 1 265 13 is_stmt 0 view .LVU155
 586 000e 034B     		ldr	r3, .L30+4
 587 0010 0022     		movs	r2, #0
 588 0012 5A60     		str	r2, [r3, #4]
 266:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** }
 589              		.loc 1 266 1 view .LVU156
 590 0014 7047     		bx	lr
 591              	.L31:
 592 0016 00BF     		.align	2
 593              	.L30:
 594 0018 00ED00E0 		.word	-536810240
 595 001c 90ED00E0 		.word	-536810096
 596              		.cfi_endproc
 597              	.LFE245:
 599              		.section	.text.HAL_MPU_Enable,"ax",%progbits
 600              		.align	1
 601              		.global	HAL_MPU_Enable
 602              		.syntax unified
 603              		.thumb
 604              		.thumb_func
 605              		.fpu fpv4-sp-d16
 607              	HAL_MPU_Enable:
 608              	.LVL39:
 609              	.LFB246:
 267:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** 
 268:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** /**
 269:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   * @brief  Enable the MPU.
 270:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   * @param  MPU_Control Specifies the control mode of the MPU during hard fault, 
 271:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   *          NMI, FAULTMASK and privileged access to the default memory 
 272:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   *          This parameter can be one of the following values:
 273:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   *            @arg MPU_HFNMI_PRIVDEF_NONE
 274:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   *            @arg MPU_HARDFAULT_NMI
 275:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   *            @arg MPU_PRIVILEGED_DEFAULT
 276:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   *            @arg MPU_HFNMI_PRIVDEF
 277:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   * @retval None
 278:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   */
 279:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** void HAL_MPU_Enable(uint32_t MPU_Control)
 280:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** {
 610              		.loc 1 280 1 is_stmt 1 view -0
 611              		.cfi_startproc
 612              		@ args = 0, pretend = 0, frame = 0
 613              		@ frame_needed = 0, uses_anonymous_args = 0
 614              		@ link register save eliminated.
 281:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   /* Enable the MPU */
 282:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   MPU->CTRL = MPU_Control | MPU_CTRL_ENABLE_Msk;
 615              		.loc 1 282 3 view .LVU158
ARM GAS  /tmp/ccNYJXhf.s 			page 59


 616              		.loc 1 282 27 is_stmt 0 view .LVU159
 617 0000 40F00100 		orr	r0, r0, #1
 618              	.LVL40:
 619              		.loc 1 282 13 view .LVU160
 620 0004 054B     		ldr	r3, .L33
 621 0006 5860     		str	r0, [r3, #4]
 283:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   
 284:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   /* Enable fault exceptions */
 285:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   SCB->SHCSR |= SCB_SHCSR_MEMFAULTENA_Msk;
 622              		.loc 1 285 3 is_stmt 1 view .LVU161
 623              		.loc 1 285 14 is_stmt 0 view .LVU162
 624 0008 054A     		ldr	r2, .L33+4
 625 000a 536A     		ldr	r3, [r2, #36]
 626 000c 43F48033 		orr	r3, r3, #65536
 627 0010 5362     		str	r3, [r2, #36]
 286:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   
 287:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   /* Ensure MPU setting take effects */
 288:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   __DSB();
 628              		.loc 1 288 3 is_stmt 1 view .LVU163
 629              	.LBB90:
 630              	.LBI90:
 275:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 631              		.loc 3 275 27 view .LVU164
 632              	.LBB91:
 277:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 633              		.loc 3 277 3 view .LVU165
 634              		.syntax unified
 635              	@ 277 "CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h" 1
 636 0012 BFF34F8F 		dsb 0xF
 637              	@ 0 "" 2
 638              		.thumb
 639              		.syntax unified
 640              	.LBE91:
 641              	.LBE90:
 289:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   __ISB();
 642              		.loc 1 289 3 view .LVU166
 643              	.LBB92:
 644              	.LBI92:
 264:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 645              		.loc 3 264 27 view .LVU167
 646              	.LBB93:
 266:CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 647              		.loc 3 266 3 view .LVU168
 648              		.syntax unified
 649              	@ 266 "CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h" 1
 650 0016 BFF36F8F 		isb 0xF
 651              	@ 0 "" 2
 652              		.thumb
 653              		.syntax unified
 654              	.LBE93:
 655              	.LBE92:
 290:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** }
 656              		.loc 1 290 1 is_stmt 0 view .LVU169
 657 001a 7047     		bx	lr
 658              	.L34:
 659              		.align	2
 660              	.L33:
ARM GAS  /tmp/ccNYJXhf.s 			page 60


 661 001c 90ED00E0 		.word	-536810096
 662 0020 00ED00E0 		.word	-536810240
 663              		.cfi_endproc
 664              	.LFE246:
 666              		.section	.text.HAL_MPU_EnableRegion,"ax",%progbits
 667              		.align	1
 668              		.global	HAL_MPU_EnableRegion
 669              		.syntax unified
 670              		.thumb
 671              		.thumb_func
 672              		.fpu fpv4-sp-d16
 674              	HAL_MPU_EnableRegion:
 675              	.LVL41:
 676              	.LFB247:
 291:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** 
 292:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** /**
 293:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   * @brief  Enables the MPU Region.
 294:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   * @retval None
 295:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   */
 296:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** void HAL_MPU_EnableRegion(uint32_t RegionNumber)
 297:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** {
 677              		.loc 1 297 1 is_stmt 1 view -0
 678              		.cfi_startproc
 679              		@ args = 0, pretend = 0, frame = 0
 680              		@ frame_needed = 0, uses_anonymous_args = 0
 681              		@ link register save eliminated.
 298:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   /* Check the parameters */
 299:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   assert_param(IS_MPU_REGION_NUMBER(RegionNumber));
 682              		.loc 1 299 3 view .LVU171
 300:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** 
 301:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   /* Set the Region number */
 302:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   MPU->RNR = RegionNumber;
 683              		.loc 1 302 3 view .LVU172
 684              		.loc 1 302 12 is_stmt 0 view .LVU173
 685 0000 034B     		ldr	r3, .L36
 686 0002 9860     		str	r0, [r3, #8]
 303:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** 
 304:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   /* Enable the Region */
 305:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   SET_BIT(MPU->RASR, MPU_RASR_ENABLE_Msk);
 687              		.loc 1 305 3 is_stmt 1 view .LVU174
 688 0004 1A69     		ldr	r2, [r3, #16]
 689 0006 42F00102 		orr	r2, r2, #1
 690 000a 1A61     		str	r2, [r3, #16]
 306:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** }
 691              		.loc 1 306 1 is_stmt 0 view .LVU175
 692 000c 7047     		bx	lr
 693              	.L37:
 694 000e 00BF     		.align	2
 695              	.L36:
 696 0010 90ED00E0 		.word	-536810096
 697              		.cfi_endproc
 698              	.LFE247:
 700              		.section	.text.HAL_MPU_DisableRegion,"ax",%progbits
 701              		.align	1
 702              		.global	HAL_MPU_DisableRegion
 703              		.syntax unified
 704              		.thumb
ARM GAS  /tmp/ccNYJXhf.s 			page 61


 705              		.thumb_func
 706              		.fpu fpv4-sp-d16
 708              	HAL_MPU_DisableRegion:
 709              	.LVL42:
 710              	.LFB248:
 307:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** 
 308:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** /**
 309:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   * @brief  Disables the MPU Region.
 310:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   * @retval None
 311:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   */
 312:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** void HAL_MPU_DisableRegion(uint32_t RegionNumber)
 313:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** {
 711              		.loc 1 313 1 is_stmt 1 view -0
 712              		.cfi_startproc
 713              		@ args = 0, pretend = 0, frame = 0
 714              		@ frame_needed = 0, uses_anonymous_args = 0
 715              		@ link register save eliminated.
 314:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   /* Check the parameters */
 315:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   assert_param(IS_MPU_REGION_NUMBER(RegionNumber));
 716              		.loc 1 315 3 view .LVU177
 316:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** 
 317:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   /* Set the Region number */
 318:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   MPU->RNR = RegionNumber;
 717              		.loc 1 318 3 view .LVU178
 718              		.loc 1 318 12 is_stmt 0 view .LVU179
 719 0000 034B     		ldr	r3, .L39
 720 0002 9860     		str	r0, [r3, #8]
 319:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** 
 320:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   /* Disable the Region */
 321:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   CLEAR_BIT(MPU->RASR, MPU_RASR_ENABLE_Msk);
 721              		.loc 1 321 3 is_stmt 1 view .LVU180
 722 0004 1A69     		ldr	r2, [r3, #16]
 723 0006 22F00102 		bic	r2, r2, #1
 724 000a 1A61     		str	r2, [r3, #16]
 322:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** }
 725              		.loc 1 322 1 is_stmt 0 view .LVU181
 726 000c 7047     		bx	lr
 727              	.L40:
 728 000e 00BF     		.align	2
 729              	.L39:
 730 0010 90ED00E0 		.word	-536810096
 731              		.cfi_endproc
 732              	.LFE248:
 734              		.section	.text.HAL_MPU_ConfigRegion,"ax",%progbits
 735              		.align	1
 736              		.global	HAL_MPU_ConfigRegion
 737              		.syntax unified
 738              		.thumb
 739              		.thumb_func
 740              		.fpu fpv4-sp-d16
 742              	HAL_MPU_ConfigRegion:
 743              	.LVL43:
 744              	.LFB249:
 323:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** 
 324:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** /**
 325:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   * @brief  Initializes and configures the Region and the memory to be protected.
 326:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   * @param MPU_Init Pointer to a MPU_Region_InitTypeDef structure that contains
ARM GAS  /tmp/ccNYJXhf.s 			page 62


 327:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   *                the initialization and configuration information.
 328:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   * @retval None
 329:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   */
 330:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** void HAL_MPU_ConfigRegion(MPU_Region_InitTypeDef *MPU_Init)
 331:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** {
 745              		.loc 1 331 1 is_stmt 1 view -0
 746              		.cfi_startproc
 747              		@ args = 0, pretend = 0, frame = 0
 748              		@ frame_needed = 0, uses_anonymous_args = 0
 749              		@ link register save eliminated.
 332:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   /* Check the parameters */
 333:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   assert_param(IS_MPU_REGION_NUMBER(MPU_Init->Number));
 750              		.loc 1 333 3 view .LVU183
 334:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   assert_param(IS_MPU_REGION_ENABLE(MPU_Init->Enable));
 751              		.loc 1 334 3 view .LVU184
 335:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   assert_param(IS_MPU_INSTRUCTION_ACCESS(MPU_Init->DisableExec));
 752              		.loc 1 335 3 view .LVU185
 336:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   assert_param(IS_MPU_REGION_PERMISSION_ATTRIBUTE(MPU_Init->AccessPermission));
 753              		.loc 1 336 3 view .LVU186
 337:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   assert_param(IS_MPU_TEX_LEVEL(MPU_Init->TypeExtField));
 754              		.loc 1 337 3 view .LVU187
 338:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   assert_param(IS_MPU_ACCESS_SHAREABLE(MPU_Init->IsShareable));
 755              		.loc 1 338 3 view .LVU188
 339:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   assert_param(IS_MPU_ACCESS_CACHEABLE(MPU_Init->IsCacheable));
 756              		.loc 1 339 3 view .LVU189
 340:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   assert_param(IS_MPU_ACCESS_BUFFERABLE(MPU_Init->IsBufferable));
 757              		.loc 1 340 3 view .LVU190
 341:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   assert_param(IS_MPU_SUB_REGION_DISABLE(MPU_Init->SubRegionDisable));
 758              		.loc 1 341 3 view .LVU191
 342:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   assert_param(IS_MPU_REGION_SIZE(MPU_Init->Size));
 759              		.loc 1 342 3 view .LVU192
 343:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** 
 344:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   /* Set the Region number */
 345:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   MPU->RNR = MPU_Init->Number;
 760              		.loc 1 345 3 view .LVU193
 761              		.loc 1 345 22 is_stmt 0 view .LVU194
 762 0000 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
 763              		.loc 1 345 12 view .LVU195
 764 0002 114A     		ldr	r2, .L42
 765 0004 9360     		str	r3, [r2, #8]
 346:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** 
 347:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   /* Disable the Region */
 348:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   CLEAR_BIT(MPU->RASR, MPU_RASR_ENABLE_Msk);
 766              		.loc 1 348 3 is_stmt 1 view .LVU196
 767 0006 1369     		ldr	r3, [r2, #16]
 768 0008 23F00103 		bic	r3, r3, #1
 769 000c 1361     		str	r3, [r2, #16]
 349:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** 
 350:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   /* Apply configuration */
 351:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   MPU->RBAR = MPU_Init->BaseAddress;
 770              		.loc 1 351 3 view .LVU197
 771              		.loc 1 351 23 is_stmt 0 view .LVU198
 772 000e 4368     		ldr	r3, [r0, #4]
 773              		.loc 1 351 13 view .LVU199
 774 0010 D360     		str	r3, [r2, #12]
 352:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
 775              		.loc 1 352 3 is_stmt 1 view .LVU200
ARM GAS  /tmp/ccNYJXhf.s 			page 63


 776              		.loc 1 352 34 is_stmt 0 view .LVU201
 777 0012 017B     		ldrb	r1, [r0, #12]	@ zero_extendqisi2
 353:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****               ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
 778              		.loc 1 353 34 view .LVU202
 779 0014 C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
 780              		.loc 1 353 60 view .LVU203
 781 0016 1B06     		lsls	r3, r3, #24
 352:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
 782              		.loc 1 352 82 view .LVU204
 783 0018 43EA0173 		orr	r3, r3, r1, lsl #28
 354:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****               ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
 784              		.loc 1 354 34 view .LVU205
 785 001c 817A     		ldrb	r1, [r0, #10]	@ zero_extendqisi2
 353:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****               ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
 786              		.loc 1 353 82 view .LVU206
 787 001e 43EAC143 		orr	r3, r3, r1, lsl #19
 355:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****               ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
 788              		.loc 1 355 34 view .LVU207
 789 0022 417B     		ldrb	r1, [r0, #13]	@ zero_extendqisi2
 354:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****               ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
 790              		.loc 1 354 82 view .LVU208
 791 0024 43EA8143 		orr	r3, r3, r1, lsl #18
 356:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****               ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
 792              		.loc 1 356 34 view .LVU209
 793 0028 817B     		ldrb	r1, [r0, #14]	@ zero_extendqisi2
 355:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****               ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
 794              		.loc 1 355 82 view .LVU210
 795 002a 43EA4143 		orr	r3, r3, r1, lsl #17
 357:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****               ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
 796              		.loc 1 357 34 view .LVU211
 797 002e C17B     		ldrb	r1, [r0, #15]	@ zero_extendqisi2
 356:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****               ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
 798              		.loc 1 356 82 view .LVU212
 799 0030 43EA0143 		orr	r3, r3, r1, lsl #16
 358:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****               ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
 800              		.loc 1 358 34 view .LVU213
 801 0034 417A     		ldrb	r1, [r0, #9]	@ zero_extendqisi2
 357:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****               ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
 802              		.loc 1 357 82 view .LVU214
 803 0036 43EA0123 		orr	r3, r3, r1, lsl #8
 359:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****               ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 804              		.loc 1 359 34 view .LVU215
 805 003a 017A     		ldrb	r1, [r0, #8]	@ zero_extendqisi2
 358:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****               ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
 806              		.loc 1 358 82 view .LVU216
 807 003c 43EA4103 		orr	r3, r3, r1, lsl #1
 360:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****               ((uint32_t)MPU_Init->Enable                  << MPU_RASR_ENABLE_Pos);
 808              		.loc 1 360 34 view .LVU217
 809 0040 0178     		ldrb	r1, [r0]	@ zero_extendqisi2
 359:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****               ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 810              		.loc 1 359 82 view .LVU218
 811 0042 0B43     		orrs	r3, r3, r1
 352:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****               ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
 812              		.loc 1 352 13 view .LVU219
 813 0044 1361     		str	r3, [r2, #16]
 361:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** }
 814              		.loc 1 361 1 view .LVU220
ARM GAS  /tmp/ccNYJXhf.s 			page 64


 815 0046 7047     		bx	lr
 816              	.L43:
 817              		.align	2
 818              	.L42:
 819 0048 90ED00E0 		.word	-536810096
 820              		.cfi_endproc
 821              	.LFE249:
 823              		.section	.text.HAL_CORTEX_ClearEvent,"ax",%progbits
 824              		.align	1
 825              		.global	HAL_CORTEX_ClearEvent
 826              		.syntax unified
 827              		.thumb
 828              		.thumb_func
 829              		.fpu fpv4-sp-d16
 831              	HAL_CORTEX_ClearEvent:
 832              	.LFB250:
 362:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** #endif /* __MPU_PRESENT */
 363:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** 
 364:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** /**
 365:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   * @brief  Clear pending events.
 366:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   * @retval None
 367:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   */
 368:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** void HAL_CORTEX_ClearEvent(void)
 369:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** {
 833              		.loc 1 369 1 is_stmt 1 view -0
 834              		.cfi_startproc
 835              		@ args = 0, pretend = 0, frame = 0
 836              		@ frame_needed = 0, uses_anonymous_args = 0
 837              		@ link register save eliminated.
 370:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   __SEV();
 838              		.loc 1 370 3 view .LVU222
 839              		.syntax unified
 840              	@ 370 "stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c" 1
 841 0000 40BF     		sev
 842              	@ 0 "" 2
 371:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   __WFE();
 843              		.loc 1 371 3 view .LVU223
 844              	@ 371 "stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c" 1
 845 0002 20BF     		wfe
 846              	@ 0 "" 2
 372:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** }
 847              		.loc 1 372 1 is_stmt 0 view .LVU224
 848              		.thumb
 849              		.syntax unified
 850 0004 7047     		bx	lr
 851              		.cfi_endproc
 852              	.LFE250:
 854              		.section	.text.HAL_NVIC_GetPriorityGrouping,"ax",%progbits
 855              		.align	1
 856              		.global	HAL_NVIC_GetPriorityGrouping
 857              		.syntax unified
 858              		.thumb
 859              		.thumb_func
 860              		.fpu fpv4-sp-d16
 862              	HAL_NVIC_GetPriorityGrouping:
 863              	.LFB251:
 373:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** 
ARM GAS  /tmp/ccNYJXhf.s 			page 65


 374:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** /**
 375:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   * @brief  Gets the priority grouping field from the NVIC Interrupt Controller.
 376:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   * @retval Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field)
 377:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   */
 378:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** uint32_t HAL_NVIC_GetPriorityGrouping(void)
 379:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** {
 864              		.loc 1 379 1 is_stmt 1 view -0
 865              		.cfi_startproc
 866              		@ args = 0, pretend = 0, frame = 0
 867              		@ frame_needed = 0, uses_anonymous_args = 0
 868              		@ link register save eliminated.
 380:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   /* Get the PRIGROUP[10:8] field value */
 381:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   return NVIC_GetPriorityGrouping();
 869              		.loc 1 381 3 view .LVU226
 870              	.LBB94:
 871              	.LBI94:
1713:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
 872              		.loc 2 1713 26 view .LVU227
 873              	.LBB95:
1715:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** }
 874              		.loc 2 1715 3 view .LVU228
1715:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** }
 875              		.loc 2 1715 26 is_stmt 0 view .LVU229
 876 0000 024B     		ldr	r3, .L46
 877 0002 D868     		ldr	r0, [r3, #12]
 878              	.LBE95:
 879              	.LBE94:
 382:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** }
 880              		.loc 1 382 1 view .LVU230
 881 0004 C0F30220 		ubfx	r0, r0, #8, #3
 882 0008 7047     		bx	lr
 883              	.L47:
 884 000a 00BF     		.align	2
 885              	.L46:
 886 000c 00ED00E0 		.word	-536810240
 887              		.cfi_endproc
 888              	.LFE251:
 890              		.section	.text.HAL_NVIC_GetPriority,"ax",%progbits
 891              		.align	1
 892              		.global	HAL_NVIC_GetPriority
 893              		.syntax unified
 894              		.thumb
 895              		.thumb_func
 896              		.fpu fpv4-sp-d16
 898              	HAL_NVIC_GetPriority:
 899              	.LVL44:
 900              	.LFB252:
 383:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** 
 384:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** /**
 385:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   * @brief  Gets the priority of an interrupt.
 386:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 387:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 388:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 389:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   * @param   PriorityGroup the priority grouping bits length.
 390:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   *         This parameter can be one of the following values:
 391:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_0: 0 bits for preemption priority
 392:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   *                                      4 bits for subpriority
ARM GAS  /tmp/ccNYJXhf.s 			page 66


 393:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_1: 1 bits for preemption priority
 394:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   *                                      3 bits for subpriority
 395:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_2: 2 bits for preemption priority
 396:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   *                                      2 bits for subpriority
 397:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_3: 3 bits for preemption priority
 398:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   *                                      1 bits for subpriority
 399:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_4: 4 bits for preemption priority
 400:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   *                                      0 bits for subpriority
 401:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   * @param  pPreemptPriority Pointer on the Preemptive priority value (starting from 0).
 402:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   * @param  pSubPriority Pointer on the Subpriority value (starting from 0).
 403:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   * @retval None
 404:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   */
 405:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** void HAL_NVIC_GetPriority(IRQn_Type IRQn, uint32_t PriorityGroup, uint32_t *pPreemptPriority, uint3
 406:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** {
 901              		.loc 1 406 1 is_stmt 1 view -0
 902              		.cfi_startproc
 903              		@ args = 0, pretend = 0, frame = 0
 904              		@ frame_needed = 0, uses_anonymous_args = 0
 905              		@ link register save eliminated.
 906              		.loc 1 406 1 is_stmt 0 view .LVU232
 907 0000 70B4     		push	{r4, r5, r6}
 908              	.LCFI3:
 909              		.cfi_def_cfa_offset 12
 910              		.cfi_offset 4, -12
 911              		.cfi_offset 5, -8
 912              		.cfi_offset 6, -4
 407:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   /* Check the parameters */
 408:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
 913              		.loc 1 408 3 is_stmt 1 view .LVU233
 409:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****  /* Get priority for Cortex-M system or device specific interrupts */
 410:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   NVIC_DecodePriority(NVIC_GetPriority(IRQn), PriorityGroup, pPreemptPriority, pSubPriority);
 914              		.loc 1 410 3 view .LVU234
 915              	.LVL45:
 916              	.LBB96:
 917              	.LBI96:
1877:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
 918              		.loc 2 1877 26 view .LVU235
 919              	.LBB97:
1880:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
 920              		.loc 2 1880 3 view .LVU236
1880:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
 921              		.loc 2 1880 6 is_stmt 0 view .LVU237
 922 0002 0028     		cmp	r0, #0
 923              	.LVL46:
1880:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
 924              		.loc 2 1880 6 view .LVU238
 925 0004 21DB     		blt	.L49
1882:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 926              		.loc 2 1882 5 is_stmt 1 view .LVU239
1882:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 927              		.loc 2 1882 31 is_stmt 0 view .LVU240
 928 0006 00F16040 		add	r0, r0, #-536870912
 929 000a 00F56140 		add	r0, r0, #57600
 930 000e 90F80003 		ldrb	r0, [r0, #768]	@ zero_extendqisi2
1882:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 931              		.loc 2 1882 64 view .LVU241
 932 0012 0009     		lsrs	r0, r0, #4
ARM GAS  /tmp/ccNYJXhf.s 			page 67


 933              	.L50:
 934              	.LVL47:
1882:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 935              		.loc 2 1882 64 view .LVU242
 936              	.LBE97:
 937              	.LBE96:
 938              	.LBB99:
 939              	.LBI99:
1929:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
 940              		.loc 2 1929 22 is_stmt 1 view .LVU243
 941              	.LBB100:
1931:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   uint32_t PreemptPriorityBits;
 942              		.loc 2 1931 3 view .LVU244
1931:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   uint32_t PreemptPriorityBits;
 943              		.loc 2 1931 12 is_stmt 0 view .LVU245
 944 0014 01F00701 		and	r1, r1, #7
 945              	.LVL48:
1932:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   uint32_t SubPriorityBits;
 946              		.loc 2 1932 3 is_stmt 1 view .LVU246
1933:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 947              		.loc 2 1933 3 view .LVU247
1935:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
 948              		.loc 2 1935 3 view .LVU248
1935:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
 949              		.loc 2 1935 31 is_stmt 0 view .LVU249
 950 0018 C1F10704 		rsb	r4, r1, #7
1935:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
 951              		.loc 2 1935 23 view .LVU250
 952 001c 042C     		cmp	r4, #4
 953 001e 28BF     		it	cs
 954 0020 0424     		movcs	r4, #4
 955              	.LVL49:
1936:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 956              		.loc 2 1936 3 is_stmt 1 view .LVU251
1936:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 957              		.loc 2 1936 44 is_stmt 0 view .LVU252
 958 0022 0D1D     		adds	r5, r1, #4
1936:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 959              		.loc 2 1936 109 view .LVU253
 960 0024 062D     		cmp	r5, #6
 961 0026 16D9     		bls	.L52
 962 0028 0339     		subs	r1, r1, #3
 963              	.LVL50:
 964              	.L51:
1938:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
 965              		.loc 2 1938 3 is_stmt 1 view .LVU254
1938:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
 966              		.loc 2 1938 33 is_stmt 0 view .LVU255
 967 002a 20FA01F6 		lsr	r6, r0, r1
1938:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
 968              		.loc 2 1938 53 view .LVU256
 969 002e 4FF0FF35 		mov	r5, #-1
 970              	.LVL51:
1938:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
 971              		.loc 2 1938 53 view .LVU257
 972 0032 05FA04F4 		lsl	r4, r5, r4
 973              	.LVL52:
ARM GAS  /tmp/ccNYJXhf.s 			page 68


1938:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
 974              		.loc 2 1938 53 view .LVU258
 975 0036 26EA0404 		bic	r4, r6, r4
1938:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
 976              		.loc 2 1938 21 view .LVU259
 977 003a 1460     		str	r4, [r2]
1939:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** }
 978              		.loc 2 1939 3 is_stmt 1 view .LVU260
1939:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** }
 979              		.loc 2 1939 53 is_stmt 0 view .LVU261
 980 003c 05FA01F1 		lsl	r1, r5, r1
 981              	.LVL53:
1939:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** }
 982              		.loc 2 1939 53 view .LVU262
 983 0040 20EA0100 		bic	r0, r0, r1
 984              	.LVL54:
1939:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** }
 985              		.loc 2 1939 21 view .LVU263
 986 0044 1860     		str	r0, [r3]
 987              	.LVL55:
1939:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** }
 988              		.loc 2 1939 21 view .LVU264
 989              	.LBE100:
 990              	.LBE99:
 411:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** }
 991              		.loc 1 411 1 view .LVU265
 992 0046 70BC     		pop	{r4, r5, r6}
 993              	.LCFI4:
 994              		.cfi_remember_state
 995              		.cfi_restore 6
 996              		.cfi_restore 5
 997              		.cfi_restore 4
 998              		.cfi_def_cfa_offset 0
 999 0048 7047     		bx	lr
 1000              	.LVL56:
 1001              	.L49:
 1002              	.LCFI5:
 1003              		.cfi_restore_state
 1004              	.LBB102:
 1005              	.LBB98:
1886:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 1006              		.loc 2 1886 5 is_stmt 1 view .LVU266
1886:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 1007              		.loc 2 1886 50 is_stmt 0 view .LVU267
 1008 004a 00F00F00 		and	r0, r0, #15
1886:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 1009              		.loc 2 1886 31 view .LVU268
 1010 004e 034C     		ldr	r4, .L54
 1011 0050 205C     		ldrb	r0, [r4, r0]	@ zero_extendqisi2
1886:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 1012              		.loc 2 1886 64 view .LVU269
 1013 0052 0009     		lsrs	r0, r0, #4
 1014 0054 DEE7     		b	.L50
 1015              	.LVL57:
 1016              	.L52:
1886:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 1017              		.loc 2 1886 64 view .LVU270
ARM GAS  /tmp/ccNYJXhf.s 			page 69


 1018              	.LBE98:
 1019              	.LBE102:
 1020              	.LBB103:
 1021              	.LBB101:
1936:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 1022              		.loc 2 1936 109 view .LVU271
 1023 0056 0021     		movs	r1, #0
 1024              	.LVL58:
1936:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 1025              		.loc 2 1936 109 view .LVU272
 1026 0058 E7E7     		b	.L51
 1027              	.L55:
 1028 005a 00BF     		.align	2
 1029              	.L54:
 1030 005c 14ED00E0 		.word	-536810220
 1031              	.LBE101:
 1032              	.LBE103:
 1033              		.cfi_endproc
 1034              	.LFE252:
 1036              		.section	.text.HAL_NVIC_SetPendingIRQ,"ax",%progbits
 1037              		.align	1
 1038              		.global	HAL_NVIC_SetPendingIRQ
 1039              		.syntax unified
 1040              		.thumb
 1041              		.thumb_func
 1042              		.fpu fpv4-sp-d16
 1044              	HAL_NVIC_SetPendingIRQ:
 1045              	.LVL59:
 1046              	.LFB253:
 412:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** 
 413:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** /**
 414:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   * @brief  Sets Pending bit of an external interrupt.
 415:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   * @param  IRQn External interrupt number
 416:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 417:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 418:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   * @retval None
 419:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   */
 420:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** void HAL_NVIC_SetPendingIRQ(IRQn_Type IRQn)
 421:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** {
 1047              		.loc 1 421 1 is_stmt 1 view -0
 1048              		.cfi_startproc
 1049              		@ args = 0, pretend = 0, frame = 0
 1050              		@ frame_needed = 0, uses_anonymous_args = 0
 1051              		@ link register save eliminated.
 422:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   /* Check the parameters */
 423:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 1052              		.loc 1 423 3 view .LVU274
 424:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   
 425:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   /* Set interrupt pending */
 426:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   NVIC_SetPendingIRQ(IRQn);
 1053              		.loc 1 426 3 view .LVU275
 1054              	.LBB104:
 1055              	.LBI104:
1801:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
 1056              		.loc 2 1801 22 view .LVU276
 1057              	.LBB105:
1803:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
ARM GAS  /tmp/ccNYJXhf.s 			page 70


 1058              		.loc 2 1803 3 view .LVU277
1803:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
 1059              		.loc 2 1803 6 is_stmt 0 view .LVU278
 1060 0000 0028     		cmp	r0, #0
 1061              	.LVL60:
1803:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
 1062              		.loc 2 1803 6 view .LVU279
 1063 0002 08DB     		blt	.L56
1805:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 1064              		.loc 2 1805 5 is_stmt 1 view .LVU280
1805:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 1065              		.loc 2 1805 81 is_stmt 0 view .LVU281
 1066 0004 00F01F02 		and	r2, r0, #31
1805:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 1067              		.loc 2 1805 34 view .LVU282
 1068 0008 4009     		lsrs	r0, r0, #5
1805:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 1069              		.loc 2 1805 45 view .LVU283
 1070 000a 0123     		movs	r3, #1
 1071 000c 9340     		lsls	r3, r3, r2
1805:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 1072              		.loc 2 1805 43 view .LVU284
 1073 000e 4030     		adds	r0, r0, #64
 1074 0010 014A     		ldr	r2, .L58
 1075 0012 42F82030 		str	r3, [r2, r0, lsl #2]
 1076              	.LVL61:
 1077              	.L56:
1805:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 1078              		.loc 2 1805 43 view .LVU285
 1079              	.LBE105:
 1080              	.LBE104:
 427:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** }
 1081              		.loc 1 427 1 view .LVU286
 1082 0016 7047     		bx	lr
 1083              	.L59:
 1084              		.align	2
 1085              	.L58:
 1086 0018 00E100E0 		.word	-536813312
 1087              		.cfi_endproc
 1088              	.LFE253:
 1090              		.section	.text.HAL_NVIC_GetPendingIRQ,"ax",%progbits
 1091              		.align	1
 1092              		.global	HAL_NVIC_GetPendingIRQ
 1093              		.syntax unified
 1094              		.thumb
 1095              		.thumb_func
 1096              		.fpu fpv4-sp-d16
 1098              	HAL_NVIC_GetPendingIRQ:
 1099              	.LVL62:
 1100              	.LFB254:
 428:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** 
 429:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** /**
 430:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   * @brief  Gets Pending Interrupt (reads the pending register in the NVIC 
 431:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   *         and returns the pending bit for the specified interrupt).
 432:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 433:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   *          This parameter can be an enumerator of IRQn_Type enumeration
 434:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
ARM GAS  /tmp/ccNYJXhf.s 			page 71


 435:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   * @retval status: - 0  Interrupt status is not pending.
 436:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   *                 - 1  Interrupt status is pending.
 437:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   */
 438:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** uint32_t HAL_NVIC_GetPendingIRQ(IRQn_Type IRQn)
 439:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** {
 1101              		.loc 1 439 1 is_stmt 1 view -0
 1102              		.cfi_startproc
 1103              		@ args = 0, pretend = 0, frame = 0
 1104              		@ frame_needed = 0, uses_anonymous_args = 0
 1105              		@ link register save eliminated.
 440:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   /* Check the parameters */
 441:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 1106              		.loc 1 441 3 view .LVU288
 442:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   
 443:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   /* Return 1 if pending else 0 */
 444:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   return NVIC_GetPendingIRQ(IRQn);
 1107              		.loc 1 444 3 view .LVU289
 1108              	.LBB106:
 1109              	.LBI106:
1782:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
 1110              		.loc 2 1782 26 view .LVU290
 1111              	.LBB107:
1784:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
 1112              		.loc 2 1784 3 view .LVU291
1784:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
 1113              		.loc 2 1784 6 is_stmt 0 view .LVU292
 1114 0000 0028     		cmp	r0, #0
 1115              	.LVL63:
1784:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
 1116              		.loc 2 1784 6 view .LVU293
 1117 0002 0BDB     		blt	.L62
1786:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 1118              		.loc 2 1786 5 is_stmt 1 view .LVU294
1786:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 1119              		.loc 2 1786 54 is_stmt 0 view .LVU295
 1120 0004 4309     		lsrs	r3, r0, #5
1786:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 1121              		.loc 2 1786 35 view .LVU296
 1122 0006 4033     		adds	r3, r3, #64
 1123 0008 054A     		ldr	r2, .L63
 1124 000a 52F82330 		ldr	r3, [r2, r3, lsl #2]
1786:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 1125              		.loc 2 1786 91 view .LVU297
 1126 000e 00F01F00 		and	r0, r0, #31
1786:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 1127              		.loc 2 1786 103 view .LVU298
 1128 0012 23FA00F0 		lsr	r0, r3, r0
1786:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 1129              		.loc 2 1786 12 view .LVU299
 1130 0016 00F00100 		and	r0, r0, #1
 1131 001a 7047     		bx	lr
 1132              	.L62:
1790:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 1133              		.loc 2 1790 11 view .LVU300
 1134 001c 0020     		movs	r0, #0
 1135              	.LVL64:
1790:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
ARM GAS  /tmp/ccNYJXhf.s 			page 72


 1136              		.loc 2 1790 11 view .LVU301
 1137              	.LBE107:
 1138              	.LBE106:
 445:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** }
 1139              		.loc 1 445 1 view .LVU302
 1140 001e 7047     		bx	lr
 1141              	.L64:
 1142              		.align	2
 1143              	.L63:
 1144 0020 00E100E0 		.word	-536813312
 1145              		.cfi_endproc
 1146              	.LFE254:
 1148              		.section	.text.HAL_NVIC_ClearPendingIRQ,"ax",%progbits
 1149              		.align	1
 1150              		.global	HAL_NVIC_ClearPendingIRQ
 1151              		.syntax unified
 1152              		.thumb
 1153              		.thumb_func
 1154              		.fpu fpv4-sp-d16
 1156              	HAL_NVIC_ClearPendingIRQ:
 1157              	.LVL65:
 1158              	.LFB255:
 446:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** 
 447:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** /**
 448:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   * @brief  Clears the pending bit of an external interrupt.
 449:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 450:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 451:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 452:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   * @retval None
 453:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   */
 454:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** void HAL_NVIC_ClearPendingIRQ(IRQn_Type IRQn)
 455:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** {
 1159              		.loc 1 455 1 is_stmt 1 view -0
 1160              		.cfi_startproc
 1161              		@ args = 0, pretend = 0, frame = 0
 1162              		@ frame_needed = 0, uses_anonymous_args = 0
 1163              		@ link register save eliminated.
 456:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   /* Check the parameters */
 457:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 1164              		.loc 1 457 3 view .LVU304
 458:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   
 459:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   /* Clear pending interrupt */
 460:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   NVIC_ClearPendingIRQ(IRQn);
 1165              		.loc 1 460 3 view .LVU305
 1166              	.LBB108:
 1167              	.LBI108:
1816:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
 1168              		.loc 2 1816 22 view .LVU306
 1169              	.LBB109:
1818:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
 1170              		.loc 2 1818 3 view .LVU307
1818:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
 1171              		.loc 2 1818 6 is_stmt 0 view .LVU308
 1172 0000 0028     		cmp	r0, #0
 1173              	.LVL66:
1818:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
 1174              		.loc 2 1818 6 view .LVU309
ARM GAS  /tmp/ccNYJXhf.s 			page 73


 1175 0002 08DB     		blt	.L65
1820:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 1176              		.loc 2 1820 5 is_stmt 1 view .LVU310
1820:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 1177              		.loc 2 1820 81 is_stmt 0 view .LVU311
 1178 0004 00F01F02 		and	r2, r0, #31
1820:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 1179              		.loc 2 1820 34 view .LVU312
 1180 0008 4009     		lsrs	r0, r0, #5
1820:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 1181              		.loc 2 1820 45 view .LVU313
 1182 000a 0123     		movs	r3, #1
 1183 000c 9340     		lsls	r3, r3, r2
1820:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 1184              		.loc 2 1820 43 view .LVU314
 1185 000e 6030     		adds	r0, r0, #96
 1186 0010 014A     		ldr	r2, .L67
 1187 0012 42F82030 		str	r3, [r2, r0, lsl #2]
 1188              	.LVL67:
 1189              	.L65:
1820:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 1190              		.loc 2 1820 43 view .LVU315
 1191              	.LBE109:
 1192              	.LBE108:
 461:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** }
 1193              		.loc 1 461 1 view .LVU316
 1194 0016 7047     		bx	lr
 1195              	.L68:
 1196              		.align	2
 1197              	.L67:
 1198 0018 00E100E0 		.word	-536813312
 1199              		.cfi_endproc
 1200              	.LFE255:
 1202              		.section	.text.HAL_NVIC_GetActive,"ax",%progbits
 1203              		.align	1
 1204              		.global	HAL_NVIC_GetActive
 1205              		.syntax unified
 1206              		.thumb
 1207              		.thumb_func
 1208              		.fpu fpv4-sp-d16
 1210              	HAL_NVIC_GetActive:
 1211              	.LVL68:
 1212              	.LFB256:
 462:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** 
 463:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** /**
 464:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   * @brief Gets active interrupt ( reads the active register in NVIC and returns the active bit).
 465:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   * @param IRQn External interrupt number
 466:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 467:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 468:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   * @retval status: - 0  Interrupt status is not pending.
 469:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   *                 - 1  Interrupt status is pending.
 470:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   */
 471:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** uint32_t HAL_NVIC_GetActive(IRQn_Type IRQn)
 472:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** {
 1213              		.loc 1 472 1 is_stmt 1 view -0
 1214              		.cfi_startproc
 1215              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccNYJXhf.s 			page 74


 1216              		@ frame_needed = 0, uses_anonymous_args = 0
 1217              		@ link register save eliminated.
 473:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   /* Check the parameters */
 474:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 1218              		.loc 1 474 3 view .LVU318
 475:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   
 476:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   /* Return 1 if active else 0 */
 477:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   return NVIC_GetActive(IRQn);
 1219              		.loc 1 477 3 view .LVU319
 1220              	.LBB110:
 1221              	.LBI110:
1833:CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
 1222              		.loc 2 1833 26 view .LVU320
 1223              	.LBB111:
1835:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
 1224              		.loc 2 1835 3 view .LVU321
1835:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
 1225              		.loc 2 1835 6 is_stmt 0 view .LVU322
 1226 0000 0028     		cmp	r0, #0
 1227              	.LVL69:
1835:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
 1228              		.loc 2 1835 6 view .LVU323
 1229 0002 0BDB     		blt	.L71
1837:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 1230              		.loc 2 1837 5 is_stmt 1 view .LVU324
1837:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 1231              		.loc 2 1837 54 is_stmt 0 view .LVU325
 1232 0004 4309     		lsrs	r3, r0, #5
1837:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 1233              		.loc 2 1837 35 view .LVU326
 1234 0006 8033     		adds	r3, r3, #128
 1235 0008 054A     		ldr	r2, .L72
 1236 000a 52F82330 		ldr	r3, [r2, r3, lsl #2]
1837:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 1237              		.loc 2 1837 91 view .LVU327
 1238 000e 00F01F00 		and	r0, r0, #31
1837:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 1239              		.loc 2 1837 103 view .LVU328
 1240 0012 23FA00F0 		lsr	r0, r3, r0
1837:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 1241              		.loc 2 1837 12 view .LVU329
 1242 0016 00F00100 		and	r0, r0, #1
 1243 001a 7047     		bx	lr
 1244              	.L71:
1841:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 1245              		.loc 2 1841 11 view .LVU330
 1246 001c 0020     		movs	r0, #0
 1247              	.LVL70:
1841:CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 1248              		.loc 2 1841 11 view .LVU331
 1249              	.LBE111:
 1250              	.LBE110:
 478:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** }
 1251              		.loc 1 478 1 view .LVU332
 1252 001e 7047     		bx	lr
 1253              	.L73:
 1254              		.align	2
ARM GAS  /tmp/ccNYJXhf.s 			page 75


 1255              	.L72:
 1256 0020 00E100E0 		.word	-536813312
 1257              		.cfi_endproc
 1258              	.LFE256:
 1260              		.section	.text.HAL_SYSTICK_CLKSourceConfig,"ax",%progbits
 1261              		.align	1
 1262              		.global	HAL_SYSTICK_CLKSourceConfig
 1263              		.syntax unified
 1264              		.thumb
 1265              		.thumb_func
 1266              		.fpu fpv4-sp-d16
 1268              	HAL_SYSTICK_CLKSourceConfig:
 1269              	.LVL71:
 1270              	.LFB257:
 479:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** 
 480:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** /**
 481:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   * @brief  Configures the SysTick clock source.
 482:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   * @param  CLKSource specifies the SysTick clock source.
 483:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   *          This parameter can be one of the following values:
 484:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   *             @arg SYSTICK_CLKSOURCE_HCLK_DIV8: AHB clock divided by 8 selected as SysTick clock 
 485:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   *             @arg SYSTICK_CLKSOURCE_HCLK: AHB clock selected as SysTick clock source.
 486:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   * @retval None
 487:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   */
 488:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** void HAL_SYSTICK_CLKSourceConfig(uint32_t CLKSource)
 489:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** {
 1271              		.loc 1 489 1 is_stmt 1 view -0
 1272              		.cfi_startproc
 1273              		@ args = 0, pretend = 0, frame = 0
 1274              		@ frame_needed = 0, uses_anonymous_args = 0
 1275              		@ link register save eliminated.
 490:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   /* Check the parameters */
 491:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   assert_param(IS_SYSTICK_CLK_SOURCE(CLKSource));
 1276              		.loc 1 491 3 view .LVU334
 492:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   if (CLKSource == SYSTICK_CLKSOURCE_HCLK)
 1277              		.loc 1 492 3 view .LVU335
 1278              		.loc 1 492 6 is_stmt 0 view .LVU336
 1279 0000 0428     		cmp	r0, #4
 1280 0002 05D0     		beq	.L77
 493:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   {
 494:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****     SysTick->CTRL |= SYSTICK_CLKSOURCE_HCLK;
 495:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   }
 496:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   else
 497:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   {
 498:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****     SysTick->CTRL &= ~SYSTICK_CLKSOURCE_HCLK;
 1281              		.loc 1 498 5 is_stmt 1 view .LVU337
 1282              		.loc 1 498 19 is_stmt 0 view .LVU338
 1283 0004 054A     		ldr	r2, .L78
 1284 0006 1368     		ldr	r3, [r2]
 1285 0008 23F00403 		bic	r3, r3, #4
 1286 000c 1360     		str	r3, [r2]
 499:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   }
 500:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** }
 1287              		.loc 1 500 1 view .LVU339
 1288 000e 7047     		bx	lr
 1289              	.L77:
 494:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   }
 1290              		.loc 1 494 5 is_stmt 1 view .LVU340
ARM GAS  /tmp/ccNYJXhf.s 			page 76


 494:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   }
 1291              		.loc 1 494 19 is_stmt 0 view .LVU341
 1292 0010 024A     		ldr	r2, .L78
 1293 0012 1368     		ldr	r3, [r2]
 1294 0014 43F00403 		orr	r3, r3, #4
 1295 0018 1360     		str	r3, [r2]
 1296 001a 7047     		bx	lr
 1297              	.L79:
 1298              		.align	2
 1299              	.L78:
 1300 001c 10E000E0 		.word	-536813552
 1301              		.cfi_endproc
 1302              	.LFE257:
 1304              		.section	.text.HAL_SYSTICK_Callback,"ax",%progbits
 1305              		.align	1
 1306              		.weak	HAL_SYSTICK_Callback
 1307              		.syntax unified
 1308              		.thumb
 1309              		.thumb_func
 1310              		.fpu fpv4-sp-d16
 1312              	HAL_SYSTICK_Callback:
 1313              	.LFB259:
 501:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** 
 502:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** /**
 503:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   * @brief  This function handles SYSTICK interrupt request.
 504:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   * @retval None
 505:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   */
 506:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** void HAL_SYSTICK_IRQHandler(void)
 507:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** {
 508:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   HAL_SYSTICK_Callback();
 509:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** }
 510:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** 
 511:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** /**
 512:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   * @brief  SYSTICK callback.
 513:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   * @retval None
 514:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   */
 515:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** __weak void HAL_SYSTICK_Callback(void)
 516:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** {
 1314              		.loc 1 516 1 is_stmt 1 view -0
 1315              		.cfi_startproc
 1316              		@ args = 0, pretend = 0, frame = 0
 1317              		@ frame_needed = 0, uses_anonymous_args = 0
 1318              		@ link register save eliminated.
 517:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 518:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****             the HAL_SYSTICK_Callback could be implemented in the user file
 519:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****    */
 520:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** }
 1319              		.loc 1 520 1 view .LVU343
 1320 0000 7047     		bx	lr
 1321              		.cfi_endproc
 1322              	.LFE259:
 1324              		.section	.text.HAL_SYSTICK_IRQHandler,"ax",%progbits
 1325              		.align	1
 1326              		.global	HAL_SYSTICK_IRQHandler
 1327              		.syntax unified
 1328              		.thumb
 1329              		.thumb_func
ARM GAS  /tmp/ccNYJXhf.s 			page 77


 1330              		.fpu fpv4-sp-d16
 1332              	HAL_SYSTICK_IRQHandler:
 1333              	.LFB258:
 507:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c ****   HAL_SYSTICK_Callback();
 1334              		.loc 1 507 1 view -0
 1335              		.cfi_startproc
 1336              		@ args = 0, pretend = 0, frame = 0
 1337              		@ frame_needed = 0, uses_anonymous_args = 0
 1338 0000 08B5     		push	{r3, lr}
 1339              	.LCFI6:
 1340              		.cfi_def_cfa_offset 8
 1341              		.cfi_offset 3, -8
 1342              		.cfi_offset 14, -4
 508:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** }
 1343              		.loc 1 508 3 view .LVU345
 1344 0002 FFF7FEFF 		bl	HAL_SYSTICK_Callback
 1345              	.LVL72:
 509:stm32f4xx-hal-driver/Src/stm32f4xx_hal_cortex.c **** 
 1346              		.loc 1 509 1 is_stmt 0 view .LVU346
 1347 0006 08BD     		pop	{r3, pc}
 1348              		.cfi_endproc
 1349              	.LFE258:
 1351              		.text
 1352              	.Letext0:
 1353              		.file 4 "cmsis-device-f4/Include/stm32f407xx.h"
 1354              		.file 5 "/opt/gcc_arm/gcc-arm-none-eabi-9-2019-q4-major/arm-none-eabi/include/machine/_default_typ
 1355              		.file 6 "/opt/gcc_arm/gcc-arm-none-eabi-9-2019-q4-major/arm-none-eabi/include/sys/_stdint.h"
 1356              		.file 7 "cmsis-device-f4/Include/system_stm32f4xx.h"
 1357              		.file 8 "stm32f4xx-hal-driver/Inc/stm32f4xx_hal_cortex.h"
 1358              		.file 9 "stm32f4xx-hal-driver/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/ccNYJXhf.s 			page 78


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_hal_cortex.c
     /tmp/ccNYJXhf.s:18     .text.HAL_NVIC_SetPriorityGrouping:0000000000000000 $t
     /tmp/ccNYJXhf.s:26     .text.HAL_NVIC_SetPriorityGrouping:0000000000000000 HAL_NVIC_SetPriorityGrouping
     /tmp/ccNYJXhf.s:82     .text.HAL_NVIC_SetPriorityGrouping:0000000000000020 $d
     /tmp/ccNYJXhf.s:87     .text.HAL_NVIC_SetPriority:0000000000000000 $t
     /tmp/ccNYJXhf.s:94     .text.HAL_NVIC_SetPriority:0000000000000000 HAL_NVIC_SetPriority
     /tmp/ccNYJXhf.s:247    .text.HAL_NVIC_SetPriority:0000000000000060 $d
     /tmp/ccNYJXhf.s:253    .text.HAL_NVIC_EnableIRQ:0000000000000000 $t
     /tmp/ccNYJXhf.s:260    .text.HAL_NVIC_EnableIRQ:0000000000000000 HAL_NVIC_EnableIRQ
     /tmp/ccNYJXhf.s:303    .text.HAL_NVIC_EnableIRQ:0000000000000018 $d
     /tmp/ccNYJXhf.s:308    .text.HAL_NVIC_DisableIRQ:0000000000000000 $t
     /tmp/ccNYJXhf.s:315    .text.HAL_NVIC_DisableIRQ:0000000000000000 HAL_NVIC_DisableIRQ
     /tmp/ccNYJXhf.s:386    .text.HAL_NVIC_DisableIRQ:0000000000000020 $d
     /tmp/ccNYJXhf.s:391    .text.HAL_NVIC_SystemReset:0000000000000000 $t
     /tmp/ccNYJXhf.s:398    .text.HAL_NVIC_SystemReset:0000000000000000 HAL_NVIC_SystemReset
     /tmp/ccNYJXhf.s:464    .text.HAL_NVIC_SystemReset:000000000000001c $d
     /tmp/ccNYJXhf.s:472    .text.HAL_SYSTICK_Config:0000000000000000 $t
     /tmp/ccNYJXhf.s:479    .text.HAL_SYSTICK_Config:0000000000000000 HAL_SYSTICK_Config
     /tmp/ccNYJXhf.s:544    .text.HAL_SYSTICK_Config:0000000000000024 $d
     /tmp/ccNYJXhf.s:550    .text.HAL_MPU_Disable:0000000000000000 $t
     /tmp/ccNYJXhf.s:557    .text.HAL_MPU_Disable:0000000000000000 HAL_MPU_Disable
     /tmp/ccNYJXhf.s:594    .text.HAL_MPU_Disable:0000000000000018 $d
     /tmp/ccNYJXhf.s:600    .text.HAL_MPU_Enable:0000000000000000 $t
     /tmp/ccNYJXhf.s:607    .text.HAL_MPU_Enable:0000000000000000 HAL_MPU_Enable
     /tmp/ccNYJXhf.s:661    .text.HAL_MPU_Enable:000000000000001c $d
     /tmp/ccNYJXhf.s:667    .text.HAL_MPU_EnableRegion:0000000000000000 $t
     /tmp/ccNYJXhf.s:674    .text.HAL_MPU_EnableRegion:0000000000000000 HAL_MPU_EnableRegion
     /tmp/ccNYJXhf.s:696    .text.HAL_MPU_EnableRegion:0000000000000010 $d
     /tmp/ccNYJXhf.s:701    .text.HAL_MPU_DisableRegion:0000000000000000 $t
     /tmp/ccNYJXhf.s:708    .text.HAL_MPU_DisableRegion:0000000000000000 HAL_MPU_DisableRegion
     /tmp/ccNYJXhf.s:730    .text.HAL_MPU_DisableRegion:0000000000000010 $d
     /tmp/ccNYJXhf.s:735    .text.HAL_MPU_ConfigRegion:0000000000000000 $t
     /tmp/ccNYJXhf.s:742    .text.HAL_MPU_ConfigRegion:0000000000000000 HAL_MPU_ConfigRegion
     /tmp/ccNYJXhf.s:819    .text.HAL_MPU_ConfigRegion:0000000000000048 $d
     /tmp/ccNYJXhf.s:824    .text.HAL_CORTEX_ClearEvent:0000000000000000 $t
     /tmp/ccNYJXhf.s:831    .text.HAL_CORTEX_ClearEvent:0000000000000000 HAL_CORTEX_ClearEvent
     /tmp/ccNYJXhf.s:855    .text.HAL_NVIC_GetPriorityGrouping:0000000000000000 $t
     /tmp/ccNYJXhf.s:862    .text.HAL_NVIC_GetPriorityGrouping:0000000000000000 HAL_NVIC_GetPriorityGrouping
     /tmp/ccNYJXhf.s:886    .text.HAL_NVIC_GetPriorityGrouping:000000000000000c $d
     /tmp/ccNYJXhf.s:891    .text.HAL_NVIC_GetPriority:0000000000000000 $t
     /tmp/ccNYJXhf.s:898    .text.HAL_NVIC_GetPriority:0000000000000000 HAL_NVIC_GetPriority
     /tmp/ccNYJXhf.s:1030   .text.HAL_NVIC_GetPriority:000000000000005c $d
     /tmp/ccNYJXhf.s:1037   .text.HAL_NVIC_SetPendingIRQ:0000000000000000 $t
     /tmp/ccNYJXhf.s:1044   .text.HAL_NVIC_SetPendingIRQ:0000000000000000 HAL_NVIC_SetPendingIRQ
     /tmp/ccNYJXhf.s:1086   .text.HAL_NVIC_SetPendingIRQ:0000000000000018 $d
     /tmp/ccNYJXhf.s:1091   .text.HAL_NVIC_GetPendingIRQ:0000000000000000 $t
     /tmp/ccNYJXhf.s:1098   .text.HAL_NVIC_GetPendingIRQ:0000000000000000 HAL_NVIC_GetPendingIRQ
     /tmp/ccNYJXhf.s:1144   .text.HAL_NVIC_GetPendingIRQ:0000000000000020 $d
     /tmp/ccNYJXhf.s:1149   .text.HAL_NVIC_ClearPendingIRQ:0000000000000000 $t
     /tmp/ccNYJXhf.s:1156   .text.HAL_NVIC_ClearPendingIRQ:0000000000000000 HAL_NVIC_ClearPendingIRQ
     /tmp/ccNYJXhf.s:1198   .text.HAL_NVIC_ClearPendingIRQ:0000000000000018 $d
     /tmp/ccNYJXhf.s:1203   .text.HAL_NVIC_GetActive:0000000000000000 $t
     /tmp/ccNYJXhf.s:1210   .text.HAL_NVIC_GetActive:0000000000000000 HAL_NVIC_GetActive
     /tmp/ccNYJXhf.s:1256   .text.HAL_NVIC_GetActive:0000000000000020 $d
     /tmp/ccNYJXhf.s:1261   .text.HAL_SYSTICK_CLKSourceConfig:0000000000000000 $t
     /tmp/ccNYJXhf.s:1268   .text.HAL_SYSTICK_CLKSourceConfig:0000000000000000 HAL_SYSTICK_CLKSourceConfig
ARM GAS  /tmp/ccNYJXhf.s 			page 79


     /tmp/ccNYJXhf.s:1300   .text.HAL_SYSTICK_CLKSourceConfig:000000000000001c $d
     /tmp/ccNYJXhf.s:1305   .text.HAL_SYSTICK_Callback:0000000000000000 $t
     /tmp/ccNYJXhf.s:1312   .text.HAL_SYSTICK_Callback:0000000000000000 HAL_SYSTICK_Callback
     /tmp/ccNYJXhf.s:1325   .text.HAL_SYSTICK_IRQHandler:0000000000000000 $t
     /tmp/ccNYJXhf.s:1332   .text.HAL_SYSTICK_IRQHandler:0000000000000000 HAL_SYSTICK_IRQHandler

NO UNDEFINED SYMBOLS

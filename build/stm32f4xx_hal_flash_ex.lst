ARM GAS  /tmp/cc3kSl1G.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_hal_flash_ex.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.FLASH_MassErase,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	FLASH_MassErase:
  26              	.LVL0:
  27              	.LFB243:
  28              		.file 1 "stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c"
   1:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** /**
   2:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   ******************************************************************************
   3:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @file    stm32f4xx_hal_flash_ex.c
   4:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @author  MCD Application Team
   5:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @brief   Extended FLASH HAL module driver.
   6:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *          This file provides firmware functions to manage the following
   7:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *          functionalities of the FLASH extension peripheral:
   8:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *           + Extended programming operations functions
   9:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *
  10:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   @verbatim
  11:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   ==============================================================================
  12:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****                    ##### Flash Extension features #####
  13:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   ==============================================================================
  14:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
  15:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   [..] Comparing to other previous devices, the FLASH interface for STM32F427xx/437xx and
  16:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****        STM32F429xx/439xx devices contains the following additional features
  17:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
  18:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****        (+) Capacity up to 2 Mbyte with dual bank architecture supporting read-while-write
  19:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****            capability (RWW)
  20:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****        (+) Dual bank memory organization
  21:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****        (+) PCROP protection for all banks
  22:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
  23:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****                       ##### How to use this driver #####
  24:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   ==============================================================================
  25:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   [..] This driver provides functions to configure and program the FLASH memory
  26:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****        of all STM32F427xx/437xx, STM32F429xx/439xx, STM32F469xx/479xx and STM32F446xx
  27:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****        devices. It includes
  28:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****       (#) FLASH Memory Erase functions:
  29:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****            (++) Lock and Unlock the FLASH interface using HAL_FLASH_Unlock() and
  30:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****                 HAL_FLASH_Lock() functions
ARM GAS  /tmp/cc3kSl1G.s 			page 2


  31:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****            (++) Erase function: Erase sector, erase all sectors
  32:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****            (++) There are two modes of erase :
  33:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****              (+++) Polling Mode using HAL_FLASHEx_Erase()
  34:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****              (+++) Interrupt Mode using HAL_FLASHEx_Erase_IT()
  35:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
  36:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****       (#) Option Bytes Programming functions: Use HAL_FLASHEx_OBProgram() to :
  37:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****            (++) Set/Reset the write protection
  38:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****            (++) Set the Read protection Level
  39:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****            (++) Set the BOR level
  40:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****            (++) Program the user Option Bytes
  41:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****       (#) Advanced Option Bytes Programming functions: Use HAL_FLASHEx_AdvOBProgram() to :
  42:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****        (++) Extended space (bank 2) erase function
  43:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****        (++) Full FLASH space (2 Mo) erase (bank 1 and bank 2)
  44:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****        (++) Dual Boot activation
  45:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****        (++) Write protection configuration for bank 2
  46:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****        (++) PCROP protection configuration and control for both banks
  47:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
  48:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   @endverbatim
  49:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   ******************************************************************************
  50:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @attention
  51:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *
  52:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * Copyright (c) 2017 STMicroelectronics.
  53:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * All rights reserved.
  54:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *
  55:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * This software is licensed under terms that can be found in the LICENSE file in
  56:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * the root directory of this software component.
  57:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  58:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   ******************************************************************************
  59:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   */
  60:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
  61:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** /* Includes ------------------------------------------------------------------*/
  62:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** #include "stm32f4xx_hal.h"
  63:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
  64:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** /** @addtogroup STM32F4xx_HAL_Driver
  65:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @{
  66:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   */
  67:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
  68:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** /** @defgroup FLASHEx FLASHEx
  69:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @brief FLASH HAL Extension module driver
  70:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @{
  71:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   */
  72:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
  73:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** #ifdef HAL_FLASH_MODULE_ENABLED
  74:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
  75:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** /* Private typedef -----------------------------------------------------------*/
  76:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** /* Private define ------------------------------------------------------------*/
  77:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** /** @addtogroup FLASHEx_Private_Constants
  78:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @{
  79:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   */
  80:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** #define FLASH_TIMEOUT_VALUE       50000U /* 50 s */
  81:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** /**
  82:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @}
  83:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   */
  84:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
  85:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** /* Private macro -------------------------------------------------------------*/
  86:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** /* Private variables ---------------------------------------------------------*/
  87:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** /** @addtogroup FLASHEx_Private_Variables
ARM GAS  /tmp/cc3kSl1G.s 			page 3


  88:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @{
  89:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   */
  90:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** extern FLASH_ProcessTypeDef pFlash;
  91:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** /**
  92:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @}
  93:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   */
  94:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
  95:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** /* Private function prototypes -----------------------------------------------*/
  96:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** /** @addtogroup FLASHEx_Private_Functions
  97:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @{
  98:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   */
  99:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** /* Option bytes control */
 100:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** static void               FLASH_MassErase(uint8_t VoltageRange, uint32_t Banks);
 101:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** static HAL_StatusTypeDef  FLASH_OB_EnableWRP(uint32_t WRPSector, uint32_t Banks);
 102:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** static HAL_StatusTypeDef  FLASH_OB_DisableWRP(uint32_t WRPSector, uint32_t Banks);
 103:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** static HAL_StatusTypeDef  FLASH_OB_RDP_LevelConfig(uint8_t Level);
 104:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** static HAL_StatusTypeDef  FLASH_OB_UserConfig(uint8_t Iwdg, uint8_t Stop, uint8_t Stdby);
 105:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** static HAL_StatusTypeDef  FLASH_OB_BOR_LevelConfig(uint8_t Level);
 106:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** static uint8_t            FLASH_OB_GetUser(void);
 107:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** static uint16_t           FLASH_OB_GetWRP(void);
 108:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** static uint8_t            FLASH_OB_GetRDP(void);
 109:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** static uint8_t            FLASH_OB_GetBOR(void);
 110:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 111:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** #if defined(STM32F401xC) || defined(STM32F401xE) || defined(STM32F410Tx) || defined(STM32F410Cx) ||
 112:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     defined(STM32F446xx) || defined(STM32F412Zx) || defined(STM32F412Vx) || defined(STM32F412Rx) ||
 113:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     defined(STM32F423xx)
 114:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** static HAL_StatusTypeDef  FLASH_OB_EnablePCROP(uint32_t Sector);
 115:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** static HAL_StatusTypeDef  FLASH_OB_DisablePCROP(uint32_t Sector);
 116:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** #endif /* STM32F401xC || STM32F401xE || STM32F410xx || STM32F411xE || STM32F446xx || STM32F412Zx ||
 117:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****           STM32F413xx || STM32F423xx */
 118:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 119:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** #if defined(STM32F427xx) || defined(STM32F437xx) || defined(STM32F429xx)|| defined(STM32F439xx) || 
 120:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_EnablePCROP(uint32_t SectorBank1, uint32_t SectorBank2, uint32_t 
 121:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_DisablePCROP(uint32_t SectorBank1, uint32_t SectorBank2, uint32_t
 122:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_BootConfig(uint8_t BootConfig);
 123:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** #endif /* STM32F427xx || STM32F437xx || STM32F429xx || STM32F439xx || STM32F469xx || STM32F479xx */
 124:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 125:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** extern HAL_StatusTypeDef         FLASH_WaitForLastOperation(uint32_t Timeout);
 126:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** /**
 127:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @}
 128:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   */
 129:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 130:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** /* Exported functions --------------------------------------------------------*/
 131:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** /** @defgroup FLASHEx_Exported_Functions FLASHEx Exported Functions
 132:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @{
 133:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   */
 134:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 135:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** /** @defgroup FLASHEx_Exported_Functions_Group1 Extended IO operation functions
 136:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *  @brief   Extended IO operation functions
 137:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *
 138:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** @verbatim
 139:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****  ===============================================================================
 140:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****                 ##### Extended programming operation functions #####
 141:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****  ===============================================================================
 142:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     [..]
 143:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     This subsection provides a set of functions allowing to manage the Extension FLASH
 144:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     programming operations.
ARM GAS  /tmp/cc3kSl1G.s 			page 4


 145:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 146:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** @endverbatim
 147:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @{
 148:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   */
 149:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** /**
 150:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @brief  Perform a mass erase or erase the specified FLASH memory sectors
 151:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @param[in]  pEraseInit pointer to an FLASH_EraseInitTypeDef structure that
 152:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *         contains the configuration information for the erasing.
 153:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *
 154:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @param[out]  SectorError pointer to variable  that
 155:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *         contains the configuration information on faulty sector in case of error
 156:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *         (0xFFFFFFFFU means that all the sectors have been correctly erased)
 157:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *
 158:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @retval HAL Status
 159:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   */
 160:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** HAL_StatusTypeDef HAL_FLASHEx_Erase(FLASH_EraseInitTypeDef *pEraseInit, uint32_t *SectorError)
 161:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** {
 162:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   HAL_StatusTypeDef status;
 163:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   uint32_t index = 0U;
 164:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 165:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Process Locked */
 166:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   __HAL_LOCK(&pFlash);
 167:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 168:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Check the parameters */
 169:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   assert_param(IS_FLASH_TYPEERASE(pEraseInit->TypeErase));
 170:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 171:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Wait for last operation to be completed */
 172:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 173:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 174:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   if (status == HAL_OK)
 175:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   {
 176:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     /*Initialization of SectorError variable*/
 177:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     *SectorError = 0xFFFFFFFFU;
 178:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 179:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     if (pEraseInit->TypeErase == FLASH_TYPEERASE_MASSERASE)
 180:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     {
 181:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****       /*Mass erase to be done*/
 182:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****       FLASH_MassErase((uint8_t) pEraseInit->VoltageRange, pEraseInit->Banks);
 183:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 184:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****       /* Wait for last operation to be completed */
 185:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****       status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 186:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 187:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****       /* if the erase operation is completed, disable the MER Bit */
 188:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****       FLASH->CR &= (~FLASH_MER_BIT);
 189:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     }
 190:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     else
 191:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     {
 192:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****       /* Check the parameters */
 193:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****       assert_param(IS_FLASH_NBSECTORS(pEraseInit->NbSectors + pEraseInit->Sector));
 194:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 195:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****       /* Erase by sector by sector to be done*/
 196:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****       for (index = pEraseInit->Sector; index < (pEraseInit->NbSectors + pEraseInit->Sector); index+
 197:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****       {
 198:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****         FLASH_Erase_Sector(index, (uint8_t) pEraseInit->VoltageRange);
 199:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 200:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****         /* Wait for last operation to be completed */
 201:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****         status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
ARM GAS  /tmp/cc3kSl1G.s 			page 5


 202:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 203:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****         /* If the erase operation is completed, disable the SER and SNB Bits */
 204:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****         CLEAR_BIT(FLASH->CR, (FLASH_CR_SER | FLASH_CR_SNB));
 205:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 206:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****         if (status != HAL_OK)
 207:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****         {
 208:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****           /* In case of error, stop erase procedure and return the faulty sector*/
 209:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****           *SectorError = index;
 210:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****           break;
 211:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****         }
 212:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****       }
 213:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     }
 214:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     /* Flush the caches to be sure of the data consistency */
 215:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     FLASH_FlushCaches();
 216:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   }
 217:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 218:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Process Unlocked */
 219:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   __HAL_UNLOCK(&pFlash);
 220:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 221:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   return status;
 222:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** }
 223:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 224:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** /**
 225:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @brief  Perform a mass erase or erase the specified FLASH memory sectors  with interrupt enable
 226:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @param  pEraseInit pointer to an FLASH_EraseInitTypeDef structure that
 227:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *         contains the configuration information for the erasing.
 228:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *
 229:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @retval HAL Status
 230:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   */
 231:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** HAL_StatusTypeDef HAL_FLASHEx_Erase_IT(FLASH_EraseInitTypeDef *pEraseInit)
 232:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** {
 233:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 234:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 235:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Check the parameters */
 236:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   assert_param(IS_FLASH_TYPEERASE(pEraseInit->TypeErase));
 237:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 238:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Enable End of FLASH Operation interrupt */
 239:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   __HAL_FLASH_ENABLE_IT(FLASH_IT_EOP);
 240:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 241:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Enable Error source interrupt */
 242:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   __HAL_FLASH_ENABLE_IT(FLASH_IT_ERR);
 243:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 244:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Clear pending flags (if any) */
 245:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP    | FLASH_FLAG_OPERR | FLASH_FLAG_WRPERR | \
 246:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****                          FLASH_FLAG_PGAERR | FLASH_FLAG_PGPERR | FLASH_FLAG_PGSERR);
 247:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 248:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   if (pEraseInit->TypeErase == FLASH_TYPEERASE_MASSERASE)
 249:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   {
 250:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     /*Mass erase to be done*/
 251:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     pFlash.ProcedureOnGoing = FLASH_PROC_MASSERASE;
 252:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     pFlash.Bank = pEraseInit->Banks;
 253:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     FLASH_MassErase((uint8_t) pEraseInit->VoltageRange, pEraseInit->Banks);
 254:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   }
 255:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   else
 256:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   {
 257:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     /* Erase by sector to be done*/
 258:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
ARM GAS  /tmp/cc3kSl1G.s 			page 6


 259:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     /* Check the parameters */
 260:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     assert_param(IS_FLASH_NBSECTORS(pEraseInit->NbSectors + pEraseInit->Sector));
 261:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 262:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     pFlash.ProcedureOnGoing = FLASH_PROC_SECTERASE;
 263:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     pFlash.NbSectorsToErase = pEraseInit->NbSectors;
 264:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     pFlash.Sector = pEraseInit->Sector;
 265:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     pFlash.VoltageForErase = (uint8_t)pEraseInit->VoltageRange;
 266:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 267:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     /*Erase 1st sector and wait for IT*/
 268:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     FLASH_Erase_Sector(pEraseInit->Sector, pEraseInit->VoltageRange);
 269:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   }
 270:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 271:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   return status;
 272:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** }
 273:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 274:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** /**
 275:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @brief   Program option bytes
 276:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @param  pOBInit pointer to an FLASH_OBInitStruct structure that
 277:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *         contains the configuration information for the programming.
 278:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *
 279:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @retval HAL Status
 280:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   */
 281:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** HAL_StatusTypeDef HAL_FLASHEx_OBProgram(FLASH_OBProgramInitTypeDef *pOBInit)
 282:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** {
 283:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_ERROR;
 284:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 285:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Process Locked */
 286:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   __HAL_LOCK(&pFlash);
 287:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 288:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Check the parameters */
 289:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   assert_param(IS_OPTIONBYTE(pOBInit->OptionType));
 290:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 291:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   /*Write protection configuration*/
 292:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   if ((pOBInit->OptionType & OPTIONBYTE_WRP) == OPTIONBYTE_WRP)
 293:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   {
 294:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     assert_param(IS_WRPSTATE(pOBInit->WRPState));
 295:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     if (pOBInit->WRPState == OB_WRPSTATE_ENABLE)
 296:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     {
 297:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****       /*Enable of Write protection on the selected Sector*/
 298:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****       status = FLASH_OB_EnableWRP(pOBInit->WRPSector, pOBInit->Banks);
 299:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     }
 300:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     else
 301:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     {
 302:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****       /*Disable of Write protection on the selected Sector*/
 303:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****       status = FLASH_OB_DisableWRP(pOBInit->WRPSector, pOBInit->Banks);
 304:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     }
 305:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   }
 306:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 307:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   /*Read protection configuration*/
 308:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   if ((pOBInit->OptionType & OPTIONBYTE_RDP) == OPTIONBYTE_RDP)
 309:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   {
 310:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     status = FLASH_OB_RDP_LevelConfig(pOBInit->RDPLevel);
 311:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   }
 312:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 313:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   /*USER  configuration*/
 314:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   if ((pOBInit->OptionType & OPTIONBYTE_USER) == OPTIONBYTE_USER)
 315:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   {
ARM GAS  /tmp/cc3kSl1G.s 			page 7


 316:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     status = FLASH_OB_UserConfig(pOBInit->USERConfig & OB_IWDG_SW,
 317:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****                                  pOBInit->USERConfig & OB_STOP_NO_RST,
 318:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****                                  pOBInit->USERConfig & OB_STDBY_NO_RST);
 319:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   }
 320:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 321:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   /*BOR Level  configuration*/
 322:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   if ((pOBInit->OptionType & OPTIONBYTE_BOR) == OPTIONBYTE_BOR)
 323:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   {
 324:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     status = FLASH_OB_BOR_LevelConfig(pOBInit->BORLevel);
 325:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   }
 326:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 327:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Process Unlocked */
 328:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   __HAL_UNLOCK(&pFlash);
 329:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 330:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   return status;
 331:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** }
 332:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 333:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** /**
 334:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @brief   Get the Option byte configuration
 335:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @param  pOBInit pointer to an FLASH_OBInitStruct structure that
 336:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *         contains the configuration information for the programming.
 337:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *
 338:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @retval None
 339:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   */
 340:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** void HAL_FLASHEx_OBGetConfig(FLASH_OBProgramInitTypeDef *pOBInit)
 341:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** {
 342:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   pOBInit->OptionType = OPTIONBYTE_WRP | OPTIONBYTE_RDP | OPTIONBYTE_USER | OPTIONBYTE_BOR;
 343:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 344:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   /*Get WRP*/
 345:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   pOBInit->WRPSector = (uint32_t)FLASH_OB_GetWRP();
 346:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 347:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   /*Get RDP Level*/
 348:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   pOBInit->RDPLevel = (uint32_t)FLASH_OB_GetRDP();
 349:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 350:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   /*Get USER*/
 351:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   pOBInit->USERConfig = (uint8_t)FLASH_OB_GetUser();
 352:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 353:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   /*Get BOR Level*/
 354:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   pOBInit->BORLevel = (uint32_t)FLASH_OB_GetBOR();
 355:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** }
 356:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 357:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** #if defined(STM32F427xx) || defined(STM32F437xx) || defined(STM32F429xx) || defined(STM32F439xx) ||
 358:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     defined(STM32F401xC) || defined(STM32F401xE) || defined(STM32F410Tx) || defined(STM32F410Cx) ||
 359:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     defined(STM32F410Rx) || defined(STM32F411xE) || defined(STM32F446xx) || defined(STM32F469xx) ||
 360:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     defined(STM32F479xx) || defined(STM32F412Zx) || defined(STM32F412Vx) || defined(STM32F412Rx) ||
 361:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     defined(STM32F412Cx) || defined(STM32F413xx) || defined(STM32F423xx)
 362:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** /**
 363:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @brief   Program option bytes
 364:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @param  pAdvOBInit pointer to an FLASH_AdvOBProgramInitTypeDef structure that
 365:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *         contains the configuration information for the programming.
 366:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *
 367:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @retval HAL Status
 368:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   */
 369:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** HAL_StatusTypeDef HAL_FLASHEx_AdvOBProgram(FLASH_AdvOBProgramInitTypeDef *pAdvOBInit)
 370:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** {
 371:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_ERROR;
 372:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
ARM GAS  /tmp/cc3kSl1G.s 			page 8


 373:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Check the parameters */
 374:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   assert_param(IS_OBEX(pAdvOBInit->OptionType));
 375:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 376:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   /*Program PCROP option byte*/
 377:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   if (((pAdvOBInit->OptionType) & OPTIONBYTE_PCROP) == OPTIONBYTE_PCROP)
 378:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   {
 379:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     /* Check the parameters */
 380:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     assert_param(IS_PCROPSTATE(pAdvOBInit->PCROPState));
 381:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     if ((pAdvOBInit->PCROPState) == OB_PCROP_STATE_ENABLE)
 382:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     {
 383:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****       /*Enable of Write protection on the selected Sector*/
 384:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** #if defined(STM32F401xC) || defined(STM32F401xE) || defined(STM32F410Tx) || defined(STM32F410Cx) ||
 385:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     defined(STM32F411xE) || defined(STM32F446xx) || defined(STM32F412Zx) || defined(STM32F412Vx) ||
 386:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     defined(STM32F412Cx) || defined(STM32F413xx) || defined(STM32F423xx)
 387:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****       status = FLASH_OB_EnablePCROP(pAdvOBInit->Sectors);
 388:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** #else  /* STM32F427xx || STM32F437xx || STM32F429xx|| STM32F439xx || STM32F469xx || STM32F479xx */
 389:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****       status = FLASH_OB_EnablePCROP(pAdvOBInit->SectorsBank1, pAdvOBInit->SectorsBank2, pAdvOBInit-
 390:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** #endif /* STM32F401xC || STM32F401xE || STM32F410xx || STM32F411xE || STM32F446xx || STM32F412Zx ||
 391:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****           STM32F413xx || STM32F423xx */
 392:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     }
 393:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     else
 394:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     {
 395:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****       /*Disable of Write protection on the selected Sector*/
 396:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** #if defined(STM32F401xC) || defined(STM32F401xE) || defined(STM32F410Tx) || defined(STM32F410Cx) ||
 397:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     defined(STM32F411xE) || defined(STM32F446xx) || defined(STM32F412Zx) || defined(STM32F412Vx) ||
 398:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     defined(STM32F412Cx) || defined(STM32F413xx) || defined(STM32F423xx)
 399:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****       status = FLASH_OB_DisablePCROP(pAdvOBInit->Sectors);
 400:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** #else /* STM32F427xx || STM32F437xx || STM32F429xx|| STM32F439xx || STM32F469xx || STM32F479xx */
 401:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****       status = FLASH_OB_DisablePCROP(pAdvOBInit->SectorsBank1, pAdvOBInit->SectorsBank2, pAdvOBInit
 402:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** #endif /* STM32F401xC || STM32F401xE || STM32F410xx || STM32F411xE || STM32F446xx || STM32F412Zx ||
 403:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****           STM32F413xx || STM32F423xx */
 404:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     }
 405:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   }
 406:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 407:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** #if defined(STM32F427xx) || defined(STM32F437xx) || defined(STM32F429xx) || defined(STM32F439xx) ||
 408:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   /*Program BOOT config option byte*/
 409:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   if (((pAdvOBInit->OptionType) & OPTIONBYTE_BOOTCONFIG) == OPTIONBYTE_BOOTCONFIG)
 410:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   {
 411:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     status = FLASH_OB_BootConfig(pAdvOBInit->BootConfig);
 412:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   }
 413:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** #endif /* STM32F427xx || STM32F437xx || STM32F429xx || STM32F439xx || STM32F469xx || STM32F479xx */
 414:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 415:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   return status;
 416:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** }
 417:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 418:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** /**
 419:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @brief   Get the OBEX byte configuration
 420:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @param  pAdvOBInit pointer to an FLASH_AdvOBProgramInitTypeDef structure that
 421:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *         contains the configuration information for the programming.
 422:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *
 423:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @retval None
 424:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   */
 425:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** void HAL_FLASHEx_AdvOBGetConfig(FLASH_AdvOBProgramInitTypeDef *pAdvOBInit)
 426:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** {
 427:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** #if defined(STM32F401xC) || defined(STM32F401xE) || defined(STM32F410Tx) || defined(STM32F410Cx) ||
 428:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     defined(STM32F411xE) || defined(STM32F446xx) || defined(STM32F412Zx) || defined(STM32F412Vx) ||
 429:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     defined(STM32F412Cx) || defined(STM32F413xx) || defined(STM32F423xx)
ARM GAS  /tmp/cc3kSl1G.s 			page 9


 430:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   /*Get Sector*/
 431:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   pAdvOBInit->Sectors = (*(__IO uint16_t *)(OPTCR_BYTE2_ADDRESS));
 432:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** #else  /* STM32F427xx || STM32F437xx || STM32F429xx|| STM32F439xx || STM32F469xx || STM32F479xx */
 433:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   /*Get Sector for Bank1*/
 434:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   pAdvOBInit->SectorsBank1 = (*(__IO uint16_t *)(OPTCR_BYTE2_ADDRESS));
 435:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 436:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   /*Get Sector for Bank2*/
 437:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   pAdvOBInit->SectorsBank2 = (*(__IO uint16_t *)(OPTCR1_BYTE2_ADDRESS));
 438:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 439:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   /*Get Boot config OB*/
 440:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   pAdvOBInit->BootConfig = *(__IO uint8_t *)OPTCR_BYTE0_ADDRESS;
 441:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** #endif /* STM32F401xC || STM32F401xE || STM32F410xx || STM32F411xE || STM32F446xx || STM32F412Zx ||
 442:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****           STM32F413xx || STM32F423xx */
 443:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** }
 444:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 445:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** /**
 446:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @brief  Select the Protection Mode
 447:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *
 448:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @note   After PCROP activated Option Byte modification NOT POSSIBLE! excepted
 449:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *         Global Read Out Protection modification (from level1 to level0)
 450:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @note   Once SPRMOD bit is active unprotection of a protected sector is not possible
 451:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @note   Read a protected sector will set RDERR Flag and write a protected sector will set WRPER
 452:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @note   This function can be used only for STM32F42xxx/STM32F43xxx/STM32F401xx/STM32F411xx/STM3
 453:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *         STM32F469xx/STM32F479xx/STM32F412xx/STM32F413xx devices.
 454:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *
 455:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @retval HAL Status
 456:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   */
 457:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** HAL_StatusTypeDef HAL_FLASHEx_OB_SelectPCROP(void)
 458:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** {
 459:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   uint8_t optiontmp;
 460:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 461:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Mask SPRMOD bit */
 462:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   optiontmp = (uint8_t)((*(__IO uint8_t *)OPTCR_BYTE3_ADDRESS) & (uint8_t)0x7F);
 463:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 464:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Update Option Byte */
 465:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *(__IO uint8_t *)OPTCR_BYTE3_ADDRESS = (uint8_t)(OB_PCROP_SELECTED | optiontmp);
 466:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 467:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   return HAL_OK;
 468:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** }
 469:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 470:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** /**
 471:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @brief  Deselect the Protection Mode
 472:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *
 473:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @note   After PCROP activated Option Byte modification NOT POSSIBLE! excepted
 474:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *         Global Read Out Protection modification (from level1 to level0)
 475:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @note   Once SPRMOD bit is active unprotection of a protected sector is not possible
 476:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @note   Read a protected sector will set RDERR Flag and write a protected sector will set WRPER
 477:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @note   This function can be used only for STM32F42xxx/STM32F43xxx/STM32F401xx/STM32F411xx/STM3
 478:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *         STM32F469xx/STM32F479xx/STM32F412xx/STM32F413xx devices.
 479:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *
 480:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @retval HAL Status
 481:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   */
 482:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** HAL_StatusTypeDef HAL_FLASHEx_OB_DeSelectPCROP(void)
 483:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** {
 484:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   uint8_t optiontmp;
 485:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 486:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Mask SPRMOD bit */
ARM GAS  /tmp/cc3kSl1G.s 			page 10


 487:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   optiontmp = (uint8_t)((*(__IO uint8_t *)OPTCR_BYTE3_ADDRESS) & (uint8_t)0x7F);
 488:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 489:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Update Option Byte */
 490:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *(__IO uint8_t *)OPTCR_BYTE3_ADDRESS = (uint8_t)(OB_PCROP_DESELECTED | optiontmp);
 491:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 492:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   return HAL_OK;
 493:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** }
 494:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** #endif /* STM32F427xx || STM32F437xx || STM32F429xx || STM32F439xx || STM32F401xC || STM32F401xE ||
 495:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****           STM32F411xE || STM32F469xx || STM32F479xx || STM32F412Zx || STM32F412Vx || STM32F412Rx ||
 496:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****           STM32F413xx || STM32F423xx */
 497:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 498:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** #if defined(STM32F427xx) || defined(STM32F437xx) || defined(STM32F429xx)|| defined(STM32F439xx) || 
 499:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** /**
 500:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @brief  Returns the FLASH Write Protection Option Bytes value for Bank 2
 501:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @note   This function can be used only for STM32F42xxx/STM32F43xxx/STM32F469xx/STM32F479xx devi
 502:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @retval The FLASH Write Protection  Option Bytes value
 503:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   */
 504:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** uint16_t HAL_FLASHEx_OB_GetBank2WRP(void)
 505:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** {
 506:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Return the FLASH write protection Register value */
 507:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   return (*(__IO uint16_t *)(OPTCR1_BYTE2_ADDRESS));
 508:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** }
 509:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** #endif /* STM32F427xx || STM32F437xx || STM32F429xx || STM32F439xx || STM32F469xx || STM32F479xx */
 510:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 511:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** /**
 512:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @}
 513:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   */
 514:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 515:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** #if defined(STM32F427xx) || defined(STM32F437xx) || defined(STM32F429xx) || defined(STM32F439xx) ||
 516:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** /**
 517:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @brief  Full erase of FLASH memory sectors
 518:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @param  VoltageRange The device voltage range which defines the erase parallelism.
 519:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *          This parameter can be one of the following values:
 520:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg FLASH_VOLTAGE_RANGE_1: when the device voltage range is 1.8V to 2.1V,
 521:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *                                  the operation will be done by byte (8-bit)
 522:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg FLASH_VOLTAGE_RANGE_2: when the device voltage range is 2.1V to 2.7V,
 523:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *                                  the operation will be done by half word (16-bit)
 524:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg FLASH_VOLTAGE_RANGE_3: when the device voltage range is 2.7V to 3.6V,
 525:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *                                  the operation will be done by word (32-bit)
 526:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg FLASH_VOLTAGE_RANGE_4: when the device voltage range is 2.7V to 3.6V + External
 527:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *                                  the operation will be done by double word (64-bit)
 528:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *
 529:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @param  Banks Banks to be erased
 530:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *          This parameter can be one of the following values:
 531:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg FLASH_BANK_1: Bank1 to be erased
 532:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg FLASH_BANK_2: Bank2 to be erased
 533:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg FLASH_BANK_BOTH: Bank1 and Bank2 to be erased
 534:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *
 535:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @retval HAL Status
 536:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   */
 537:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** static void FLASH_MassErase(uint8_t VoltageRange, uint32_t Banks)
 538:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** {
 539:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Check the parameters */
 540:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   assert_param(IS_VOLTAGERANGE(VoltageRange));
 541:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   assert_param(IS_FLASH_BANK(Banks));
 542:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 543:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   /* if the previous operation is completed, proceed to erase all sectors */
ARM GAS  /tmp/cc3kSl1G.s 			page 11


 544:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 545:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 546:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   if (Banks == FLASH_BANK_BOTH)
 547:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   {
 548:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     /* bank1 & bank2 will be erased*/
 549:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     FLASH->CR |= FLASH_MER_BIT;
 550:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   }
 551:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   else if (Banks == FLASH_BANK_1)
 552:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   {
 553:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     /*Only bank1 will be erased*/
 554:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     FLASH->CR |= FLASH_CR_MER1;
 555:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   }
 556:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   else
 557:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   {
 558:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     /*Only bank2 will be erased*/
 559:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     FLASH->CR |= FLASH_CR_MER2;
 560:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   }
 561:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   FLASH->CR |= FLASH_CR_STRT | ((uint32_t)VoltageRange << 8U);
 562:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** }
 563:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 564:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** /**
 565:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @brief  Erase the specified FLASH memory sector
 566:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @param  Sector FLASH sector to erase
 567:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *         The value of this parameter depend on device used within the same series
 568:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @param  VoltageRange The device voltage range which defines the erase parallelism.
 569:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *          This parameter can be one of the following values:
 570:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg FLASH_VOLTAGE_RANGE_1: when the device voltage range is 1.8V to 2.1V,
 571:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *                                  the operation will be done by byte (8-bit)
 572:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg FLASH_VOLTAGE_RANGE_2: when the device voltage range is 2.1V to 2.7V,
 573:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *                                  the operation will be done by half word (16-bit)
 574:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg FLASH_VOLTAGE_RANGE_3: when the device voltage range is 2.7V to 3.6V,
 575:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *                                  the operation will be done by word (32-bit)
 576:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg FLASH_VOLTAGE_RANGE_4: when the device voltage range is 2.7V to 3.6V + External
 577:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *                                  the operation will be done by double word (64-bit)
 578:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *
 579:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @retval None
 580:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   */
 581:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** void FLASH_Erase_Sector(uint32_t Sector, uint8_t VoltageRange)
 582:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** {
 583:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   uint32_t tmp_psize = 0U;
 584:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 585:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Check the parameters */
 586:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   assert_param(IS_FLASH_SECTOR(Sector));
 587:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   assert_param(IS_VOLTAGERANGE(VoltageRange));
 588:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 589:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   if (VoltageRange == FLASH_VOLTAGE_RANGE_1)
 590:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   {
 591:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     tmp_psize = FLASH_PSIZE_BYTE;
 592:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   }
 593:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   else if (VoltageRange == FLASH_VOLTAGE_RANGE_2)
 594:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   {
 595:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     tmp_psize = FLASH_PSIZE_HALF_WORD;
 596:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   }
 597:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   else if (VoltageRange == FLASH_VOLTAGE_RANGE_3)
 598:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   {
 599:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     tmp_psize = FLASH_PSIZE_WORD;
 600:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   }
ARM GAS  /tmp/cc3kSl1G.s 			page 12


 601:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   else
 602:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   {
 603:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     tmp_psize = FLASH_PSIZE_DOUBLE_WORD;
 604:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   }
 605:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 606:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Need to add offset of 4 when sector higher than FLASH_SECTOR_11 */
 607:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   if (Sector > FLASH_SECTOR_11)
 608:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   {
 609:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     Sector += 4U;
 610:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   }
 611:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   /* If the previous operation is completed, proceed to erase the sector */
 612:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 613:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   FLASH->CR |= tmp_psize;
 614:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   CLEAR_BIT(FLASH->CR, FLASH_CR_SNB);
 615:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   FLASH->CR |= FLASH_CR_SER | (Sector << FLASH_CR_SNB_Pos);
 616:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   FLASH->CR |= FLASH_CR_STRT;
 617:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** }
 618:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 619:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** /**
 620:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @brief  Enable the write protection of the desired bank1 or bank 2 sectors
 621:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *
 622:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @note   When the memory read protection level is selected (RDP level = 1),
 623:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *         it is not possible to program or erase the flash sector i if CortexM4
 624:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *         debug features are connected or boot code is executed in RAM, even if nWRPi = 1
 625:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @note   Active value of nWRPi bits is inverted when PCROP mode is active (SPRMOD =1).
 626:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *
 627:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @param  WRPSector specifies the sector(s) to be write protected.
 628:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *          This parameter can be one of the following values:
 629:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg WRPSector: A value between OB_WRP_SECTOR_0 and OB_WRP_SECTOR_23
 630:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg OB_WRP_SECTOR_All
 631:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @note   BANK2 starts from OB_WRP_SECTOR_12
 632:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *
 633:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @param  Banks Enable write protection on all the sectors for the specific bank
 634:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *          This parameter can be one of the following values:
 635:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg FLASH_BANK_1: WRP on all sectors of bank1
 636:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg FLASH_BANK_2: WRP on all sectors of bank2
 637:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg FLASH_BANK_BOTH: WRP on all sectors of bank1 & bank2
 638:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *
 639:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @retval HAL FLASH State
 640:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   */
 641:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_EnableWRP(uint32_t WRPSector, uint32_t Banks)
 642:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** {
 643:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 644:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 645:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Check the parameters */
 646:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   assert_param(IS_OB_WRP_SECTOR(WRPSector));
 647:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   assert_param(IS_FLASH_BANK(Banks));
 648:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 649:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Wait for last operation to be completed */
 650:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 651:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 652:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   if (status == HAL_OK)
 653:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   {
 654:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     if (((WRPSector == OB_WRP_SECTOR_All) && ((Banks == FLASH_BANK_1) || (Banks == FLASH_BANK_BOTH)
 655:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****         (WRPSector < OB_WRP_SECTOR_12))
 656:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     {
 657:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****       if (WRPSector == OB_WRP_SECTOR_All)
ARM GAS  /tmp/cc3kSl1G.s 			page 13


 658:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****       {
 659:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****         /*Write protection on all sector of BANK1*/
 660:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****         *(__IO uint16_t *)OPTCR_BYTE2_ADDRESS &= (~(WRPSector >> 12));
 661:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****       }
 662:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****       else
 663:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****       {
 664:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****         /*Write protection done on sectors of BANK1*/
 665:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****         *(__IO uint16_t *)OPTCR_BYTE2_ADDRESS &= (~WRPSector);
 666:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****       }
 667:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     }
 668:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     else
 669:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     {
 670:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****       /*Write protection done on sectors of BANK2*/
 671:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****       *(__IO uint16_t *)OPTCR1_BYTE2_ADDRESS &= (~(WRPSector >> 12));
 672:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     }
 673:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 674:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     /*Write protection on all sector of BANK2*/
 675:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     if ((WRPSector == OB_WRP_SECTOR_All) && (Banks == FLASH_BANK_BOTH))
 676:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     {
 677:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****       /* Wait for last operation to be completed */
 678:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****       status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 679:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 680:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****       if (status == HAL_OK)
 681:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****       {
 682:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****         *(__IO uint16_t *)OPTCR1_BYTE2_ADDRESS &= (~(WRPSector >> 12));
 683:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****       }
 684:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     }
 685:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 686:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   }
 687:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   return status;
 688:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** }
 689:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 690:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** /**
 691:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @brief  Disable the write protection of the desired bank1 or bank 2 sectors
 692:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *
 693:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @note   When the memory read protection level is selected (RDP level = 1),
 694:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *         it is not possible to program or erase the flash sector i if CortexM4
 695:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *         debug features are connected or boot code is executed in RAM, even if nWRPi = 1
 696:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @note   Active value of nWRPi bits is inverted when PCROP mode is active (SPRMOD =1).
 697:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *
 698:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @param  WRPSector specifies the sector(s) to be write protected.
 699:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *          This parameter can be one of the following values:
 700:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg WRPSector: A value between OB_WRP_SECTOR_0 and OB_WRP_SECTOR_23
 701:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg OB_WRP_Sector_All
 702:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @note   BANK2 starts from OB_WRP_SECTOR_12
 703:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *
 704:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @param  Banks Disable write protection on all the sectors for the specific bank
 705:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *          This parameter can be one of the following values:
 706:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg FLASH_BANK_1: Bank1 to be erased
 707:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg FLASH_BANK_2: Bank2 to be erased
 708:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg FLASH_BANK_BOTH: Bank1 and Bank2 to be erased
 709:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *
 710:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @retval HAL Status
 711:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   */
 712:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_DisableWRP(uint32_t WRPSector, uint32_t Banks)
 713:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** {
 714:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
ARM GAS  /tmp/cc3kSl1G.s 			page 14


 715:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 716:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Check the parameters */
 717:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   assert_param(IS_OB_WRP_SECTOR(WRPSector));
 718:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   assert_param(IS_FLASH_BANK(Banks));
 719:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 720:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Wait for last operation to be completed */
 721:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 722:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 723:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   if (status == HAL_OK)
 724:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   {
 725:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     if (((WRPSector == OB_WRP_SECTOR_All) && ((Banks == FLASH_BANK_1) || (Banks == FLASH_BANK_BOTH)
 726:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****         (WRPSector < OB_WRP_SECTOR_12))
 727:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     {
 728:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****       if (WRPSector == OB_WRP_SECTOR_All)
 729:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****       {
 730:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****         /*Write protection on all sector of BANK1*/
 731:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****         *(__IO uint16_t *)OPTCR_BYTE2_ADDRESS |= (uint16_t)(WRPSector >> 12);
 732:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****       }
 733:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****       else
 734:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****       {
 735:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****         /*Write protection done on sectors of BANK1*/
 736:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****         *(__IO uint16_t *)OPTCR_BYTE2_ADDRESS |= (uint16_t)WRPSector;
 737:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****       }
 738:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     }
 739:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     else
 740:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     {
 741:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****       /*Write protection done on sectors of BANK2*/
 742:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****       *(__IO uint16_t *)OPTCR1_BYTE2_ADDRESS |= (uint16_t)(WRPSector >> 12);
 743:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     }
 744:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 745:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     /*Write protection on all sector  of BANK2*/
 746:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     if ((WRPSector == OB_WRP_SECTOR_All) && (Banks == FLASH_BANK_BOTH))
 747:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     {
 748:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****       /* Wait for last operation to be completed */
 749:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****       status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 750:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 751:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****       if (status == HAL_OK)
 752:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****       {
 753:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****         *(__IO uint16_t *)OPTCR1_BYTE2_ADDRESS |= (uint16_t)(WRPSector >> 12);
 754:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****       }
 755:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     }
 756:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 757:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   }
 758:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 759:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   return status;
 760:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** }
 761:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 762:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** /**
 763:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @brief  Configure the Dual Bank Boot.
 764:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *
 765:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @note   This function can be used only for STM32F42xxx/43xxx devices.
 766:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *
 767:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @param  BootConfig specifies the Dual Bank Boot Option byte.
 768:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *          This parameter can be one of the following values:
 769:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg OB_Dual_BootEnabled: Dual Bank Boot Enable
 770:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg OB_Dual_BootDisabled: Dual Bank Boot Disabled
 771:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @retval None
ARM GAS  /tmp/cc3kSl1G.s 			page 15


 772:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   */
 773:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_BootConfig(uint8_t BootConfig)
 774:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** {
 775:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 776:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 777:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Check the parameters */
 778:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   assert_param(IS_OB_BOOT(BootConfig));
 779:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 780:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Wait for last operation to be completed */
 781:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 782:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 783:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   if (status == HAL_OK)
 784:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   {
 785:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     /* Set Dual Bank Boot */
 786:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     *(__IO uint8_t *)OPTCR_BYTE0_ADDRESS &= (~FLASH_OPTCR_BFB2);
 787:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     *(__IO uint8_t *)OPTCR_BYTE0_ADDRESS |= BootConfig;
 788:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   }
 789:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 790:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   return status;
 791:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** }
 792:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 793:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** /**
 794:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @brief  Enable the read/write protection (PCROP) of the desired
 795:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *         sectors of Bank 1 and/or Bank 2.
 796:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @note   This function can be used only for STM32F42xxx/43xxx devices.
 797:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @param  SectorBank1 Specifies the sector(s) to be read/write protected or unprotected for bank1
 798:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *          This parameter can be one of the following values:
 799:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg OB_PCROP: A value between OB_PCROP_SECTOR_0 and OB_PCROP_SECTOR_11
 800:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg OB_PCROP_SECTOR__All
 801:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @param  SectorBank2 Specifies the sector(s) to be read/write protected or unprotected for bank2
 802:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *          This parameter can be one of the following values:
 803:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg OB_PCROP: A value between OB_PCROP_SECTOR_12 and OB_PCROP_SECTOR_23
 804:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg OB_PCROP_SECTOR__All
 805:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @param  Banks Enable PCROP protection on all the sectors for the specific bank
 806:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *          This parameter can be one of the following values:
 807:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg FLASH_BANK_1: WRP on all sectors of bank1
 808:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg FLASH_BANK_2: WRP on all sectors of bank2
 809:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg FLASH_BANK_BOTH: WRP on all sectors of bank1 & bank2
 810:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *
 811:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @retval HAL Status
 812:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   */
 813:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_EnablePCROP(uint32_t SectorBank1, uint32_t SectorBank2, uint32_t 
 814:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** {
 815:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 816:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 817:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   assert_param(IS_FLASH_BANK(Banks));
 818:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 819:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Wait for last operation to be completed */
 820:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 821:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 822:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   if (status == HAL_OK)
 823:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   {
 824:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     if ((Banks == FLASH_BANK_1) || (Banks == FLASH_BANK_BOTH))
 825:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     {
 826:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****       assert_param(IS_OB_PCROP(SectorBank1));
 827:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****       /*Write protection done on sectors of BANK1*/
 828:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****       *(__IO uint16_t *)OPTCR_BYTE2_ADDRESS |= (uint16_t)SectorBank1;
ARM GAS  /tmp/cc3kSl1G.s 			page 16


 829:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     }
 830:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     else
 831:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     {
 832:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****       assert_param(IS_OB_PCROP(SectorBank2));
 833:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****       /*Write protection done on sectors of BANK2*/
 834:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****       *(__IO uint16_t *)OPTCR1_BYTE2_ADDRESS |= (uint16_t)SectorBank2;
 835:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     }
 836:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 837:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     /*Write protection on all sector  of BANK2*/
 838:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     if (Banks == FLASH_BANK_BOTH)
 839:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     {
 840:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****       assert_param(IS_OB_PCROP(SectorBank2));
 841:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****       /* Wait for last operation to be completed */
 842:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****       status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 843:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 844:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****       if (status == HAL_OK)
 845:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****       {
 846:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****         /*Write protection done on sectors of BANK2*/
 847:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****         *(__IO uint16_t *)OPTCR1_BYTE2_ADDRESS |= (uint16_t)SectorBank2;
 848:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****       }
 849:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     }
 850:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 851:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   }
 852:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 853:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   return status;
 854:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** }
 855:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 856:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 857:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** /**
 858:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @brief  Disable the read/write protection (PCROP) of the desired
 859:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *         sectors  of Bank 1 and/or Bank 2.
 860:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @note   This function can be used only for STM32F42xxx/43xxx devices.
 861:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @param  SectorBank1 specifies the sector(s) to be read/write protected or unprotected for bank1
 862:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *          This parameter can be one of the following values:
 863:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg OB_PCROP: A value between OB_PCROP_SECTOR_0 and OB_PCROP_SECTOR_11
 864:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg OB_PCROP_SECTOR__All
 865:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @param  SectorBank2 Specifies the sector(s) to be read/write protected or unprotected for bank2
 866:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *          This parameter can be one of the following values:
 867:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg OB_PCROP: A value between OB_PCROP_SECTOR_12 and OB_PCROP_SECTOR_23
 868:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg OB_PCROP_SECTOR__All
 869:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @param  Banks Disable PCROP protection on all the sectors for the specific bank
 870:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *          This parameter can be one of the following values:
 871:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg FLASH_BANK_1: WRP on all sectors of bank1
 872:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg FLASH_BANK_2: WRP on all sectors of bank2
 873:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg FLASH_BANK_BOTH: WRP on all sectors of bank1 & bank2
 874:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *
 875:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @retval HAL Status
 876:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   */
 877:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_DisablePCROP(uint32_t SectorBank1, uint32_t SectorBank2, uint32_t
 878:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** {
 879:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 880:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 881:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Check the parameters */
 882:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   assert_param(IS_FLASH_BANK(Banks));
 883:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 884:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Wait for last operation to be completed */
 885:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
ARM GAS  /tmp/cc3kSl1G.s 			page 17


 886:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 887:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   if (status == HAL_OK)
 888:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   {
 889:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     if ((Banks == FLASH_BANK_1) || (Banks == FLASH_BANK_BOTH))
 890:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     {
 891:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****       assert_param(IS_OB_PCROP(SectorBank1));
 892:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****       /*Write protection done on sectors of BANK1*/
 893:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****       *(__IO uint16_t *)OPTCR_BYTE2_ADDRESS &= (~SectorBank1);
 894:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     }
 895:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     else
 896:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     {
 897:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****       /*Write protection done on sectors of BANK2*/
 898:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****       assert_param(IS_OB_PCROP(SectorBank2));
 899:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****       *(__IO uint16_t *)OPTCR1_BYTE2_ADDRESS &= (~SectorBank2);
 900:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     }
 901:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 902:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     /*Write protection on all sector  of BANK2*/
 903:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     if (Banks == FLASH_BANK_BOTH)
 904:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     {
 905:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****       assert_param(IS_OB_PCROP(SectorBank2));
 906:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****       /* Wait for last operation to be completed */
 907:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****       status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 908:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 909:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****       if (status == HAL_OK)
 910:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****       {
 911:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****         /*Write protection done on sectors of BANK2*/
 912:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****         *(__IO uint16_t *)OPTCR1_BYTE2_ADDRESS &= (~SectorBank2);
 913:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****       }
 914:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     }
 915:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 916:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   }
 917:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 918:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   return status;
 919:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 920:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** }
 921:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 922:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** #endif /* STM32F427xx || STM32F437xx || STM32F429xx || STM32F439xx || STM32F469xx || STM32F479xx */
 923:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 924:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** #if defined(STM32F405xx) || defined(STM32F415xx) || defined(STM32F407xx) || defined(STM32F417xx) ||
 925:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     defined(STM32F401xC) || defined(STM32F401xE) || defined(STM32F410Tx) || defined(STM32F410Cx) ||
 926:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     defined(STM32F410Rx) || defined(STM32F411xE) || defined(STM32F446xx) || defined(STM32F412Zx) ||
 927:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     defined(STM32F412Vx) || defined(STM32F412Rx) || defined(STM32F412Cx) || defined(STM32F413xx) ||
 928:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     defined(STM32F423xx)
 929:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** /**
 930:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @brief  Mass erase of FLASH memory
 931:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @param  VoltageRange The device voltage range which defines the erase parallelism.
 932:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *          This parameter can be one of the following values:
 933:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg FLASH_VOLTAGE_RANGE_1: when the device voltage range is 1.8V to 2.1V,
 934:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *                                  the operation will be done by byte (8-bit)
 935:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg FLASH_VOLTAGE_RANGE_2: when the device voltage range is 2.1V to 2.7V,
 936:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *                                  the operation will be done by half word (16-bit)
 937:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg FLASH_VOLTAGE_RANGE_3: when the device voltage range is 2.7V to 3.6V,
 938:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *                                  the operation will be done by word (32-bit)
 939:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg FLASH_VOLTAGE_RANGE_4: when the device voltage range is 2.7V to 3.6V + External
 940:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *                                  the operation will be done by double word (64-bit)
 941:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *
 942:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @param  Banks Banks to be erased
ARM GAS  /tmp/cc3kSl1G.s 			page 18


 943:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *          This parameter can be one of the following values:
 944:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg FLASH_BANK_1: Bank1 to be erased
 945:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *
 946:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @retval None
 947:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   */
 948:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** static void FLASH_MassErase(uint8_t VoltageRange, uint32_t Banks)
 949:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** {
  29              		.loc 1 949 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
 950:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Check the parameters */
 951:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   assert_param(IS_VOLTAGERANGE(VoltageRange));
  34              		.loc 1 951 3 view .LVU1
 952:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   assert_param(IS_FLASH_BANK(Banks));
  35              		.loc 1 952 3 view .LVU2
 953:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 954:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   /* If the previous operation is completed, proceed to erase all sectors */
 955:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
  36              		.loc 1 955 3 view .LVU3
  37 0000 074B     		ldr	r3, .L2
  38 0002 1969     		ldr	r1, [r3, #16]
  39              	.LVL1:
  40              		.loc 1 955 3 is_stmt 0 view .LVU4
  41 0004 21F44071 		bic	r1, r1, #768
  42 0008 1961     		str	r1, [r3, #16]
 956:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   FLASH->CR |= FLASH_CR_MER;
  43              		.loc 1 956 3 is_stmt 1 view .LVU5
  44              		.loc 1 956 13 is_stmt 0 view .LVU6
  45 000a 1969     		ldr	r1, [r3, #16]
  46 000c 41F00401 		orr	r1, r1, #4
  47 0010 1961     		str	r1, [r3, #16]
 957:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   FLASH->CR |= FLASH_CR_STRT | ((uint32_t)VoltageRange << 8U);
  48              		.loc 1 957 3 is_stmt 1 view .LVU7
  49              		.loc 1 957 13 is_stmt 0 view .LVU8
  50 0012 1A69     		ldr	r2, [r3, #16]
  51 0014 42EA0022 		orr	r2, r2, r0, lsl #8
  52 0018 42F48032 		orr	r2, r2, #65536
  53 001c 1A61     		str	r2, [r3, #16]
 958:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** }
  54              		.loc 1 958 1 view .LVU9
  55 001e 7047     		bx	lr
  56              	.L3:
  57              		.align	2
  58              	.L2:
  59 0020 003C0240 		.word	1073888256
  60              		.cfi_endproc
  61              	.LFE243:
  63              		.section	.text.FLASH_OB_BOR_LevelConfig,"ax",%progbits
  64              		.align	1
  65              		.syntax unified
  66              		.thumb
  67              		.thumb_func
  68              		.fpu fpv4-sp-d16
  70              	FLASH_OB_BOR_LevelConfig:
  71              	.LVL2:
ARM GAS  /tmp/cc3kSl1G.s 			page 19


  72              	.LFB249:
 959:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 960:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** /**
 961:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @brief  Erase the specified FLASH memory sector
 962:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @param  Sector FLASH sector to erase
 963:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *         The value of this parameter depend on device used within the same series
 964:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @param  VoltageRange The device voltage range which defines the erase parallelism.
 965:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *          This parameter can be one of the following values:
 966:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg FLASH_VOLTAGE_RANGE_1: when the device voltage range is 1.8V to 2.1V,
 967:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *                                  the operation will be done by byte (8-bit)
 968:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg FLASH_VOLTAGE_RANGE_2: when the device voltage range is 2.1V to 2.7V,
 969:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *                                  the operation will be done by half word (16-bit)
 970:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg FLASH_VOLTAGE_RANGE_3: when the device voltage range is 2.7V to 3.6V,
 971:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *                                  the operation will be done by word (32-bit)
 972:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg FLASH_VOLTAGE_RANGE_4: when the device voltage range is 2.7V to 3.6V + External
 973:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *                                  the operation will be done by double word (64-bit)
 974:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *
 975:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @retval None
 976:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   */
 977:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** void FLASH_Erase_Sector(uint32_t Sector, uint8_t VoltageRange)
 978:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** {
 979:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   uint32_t tmp_psize = 0U;
 980:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 981:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Check the parameters */
 982:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   assert_param(IS_FLASH_SECTOR(Sector));
 983:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   assert_param(IS_VOLTAGERANGE(VoltageRange));
 984:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 985:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   if (VoltageRange == FLASH_VOLTAGE_RANGE_1)
 986:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   {
 987:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     tmp_psize = FLASH_PSIZE_BYTE;
 988:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   }
 989:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   else if (VoltageRange == FLASH_VOLTAGE_RANGE_2)
 990:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   {
 991:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     tmp_psize = FLASH_PSIZE_HALF_WORD;
 992:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   }
 993:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   else if (VoltageRange == FLASH_VOLTAGE_RANGE_3)
 994:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   {
 995:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     tmp_psize = FLASH_PSIZE_WORD;
 996:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   }
 997:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   else
 998:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   {
 999:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     tmp_psize = FLASH_PSIZE_DOUBLE_WORD;
1000:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   }
1001:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
1002:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   /* If the previous operation is completed, proceed to erase the sector */
1003:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
1004:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   FLASH->CR |= tmp_psize;
1005:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   CLEAR_BIT(FLASH->CR, FLASH_CR_SNB);
1006:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   FLASH->CR |= FLASH_CR_SER | (Sector << FLASH_CR_SNB_Pos);
1007:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   FLASH->CR |= FLASH_CR_STRT;
1008:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** }
1009:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
1010:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** /**
1011:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @brief  Enable the write protection of the desired bank 1 sectors
1012:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *
1013:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @note   When the memory read protection level is selected (RDP level = 1),
1014:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *         it is not possible to program or erase the flash sector i if CortexM4
ARM GAS  /tmp/cc3kSl1G.s 			page 20


1015:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *         debug features are connected or boot code is executed in RAM, even if nWRPi = 1
1016:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @note   Active value of nWRPi bits is inverted when PCROP mode is active (SPRMOD =1).
1017:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *
1018:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @param  WRPSector specifies the sector(s) to be write protected.
1019:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *         The value of this parameter depend on device used within the same series
1020:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *
1021:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @param  Banks Enable write protection on all the sectors for the specific bank
1022:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *          This parameter can be one of the following values:
1023:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg FLASH_BANK_1: WRP on all sectors of bank1
1024:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *
1025:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @retval HAL Status
1026:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   */
1027:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_EnableWRP(uint32_t WRPSector, uint32_t Banks)
1028:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** {
1029:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
1030:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
1031:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Check the parameters */
1032:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   assert_param(IS_OB_WRP_SECTOR(WRPSector));
1033:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   assert_param(IS_FLASH_BANK(Banks));
1034:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
1035:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Wait for last operation to be completed */
1036:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
1037:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
1038:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   if (status == HAL_OK)
1039:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   {
1040:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     *(__IO uint16_t *)OPTCR_BYTE2_ADDRESS &= (~WRPSector);
1041:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   }
1042:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
1043:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   return status;
1044:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** }
1045:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
1046:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** /**
1047:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @brief  Disable the write protection of the desired bank 1 sectors
1048:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *
1049:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @note   When the memory read protection level is selected (RDP level = 1),
1050:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *         it is not possible to program or erase the flash sector i if CortexM4
1051:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *         debug features are connected or boot code is executed in RAM, even if nWRPi = 1
1052:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @note   Active value of nWRPi bits is inverted when PCROP mode is active (SPRMOD =1).
1053:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *
1054:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @param  WRPSector specifies the sector(s) to be write protected.
1055:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *         The value of this parameter depend on device used within the same series
1056:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *
1057:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @param  Banks Enable write protection on all the sectors for the specific bank
1058:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *          This parameter can be one of the following values:
1059:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg FLASH_BANK_1: WRP on all sectors of bank1
1060:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *
1061:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @retval HAL Status
1062:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   */
1063:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_DisableWRP(uint32_t WRPSector, uint32_t Banks)
1064:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** {
1065:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
1066:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
1067:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Check the parameters */
1068:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   assert_param(IS_OB_WRP_SECTOR(WRPSector));
1069:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   assert_param(IS_FLASH_BANK(Banks));
1070:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
1071:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Wait for last operation to be completed */
ARM GAS  /tmp/cc3kSl1G.s 			page 21


1072:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
1073:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
1074:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   if (status == HAL_OK)
1075:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   {
1076:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     *(__IO uint16_t *)OPTCR_BYTE2_ADDRESS |= (uint16_t)WRPSector;
1077:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   }
1078:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
1079:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   return status;
1080:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** }
1081:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** #endif /* STM32F40xxx || STM32F41xxx || STM32F401xx || STM32F410xx || STM32F411xE || STM32F446xx ||
1082:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****           STM32F413xx || STM32F423xx */
1083:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
1084:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** #if defined(STM32F401xC) || defined(STM32F401xE) || defined(STM32F410Tx) || defined(STM32F410Cx) ||
1085:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     defined(STM32F411xE) || defined(STM32F446xx) || defined(STM32F412Zx) || defined(STM32F412Vx) ||
1086:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     defined(STM32F412Cx) || defined(STM32F413xx) || defined(STM32F423xx)
1087:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** /**
1088:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @brief  Enable the read/write protection (PCROP) of the desired sectors.
1089:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @note   This function can be used only for STM32F401xx devices.
1090:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @param  Sector specifies the sector(s) to be read/write protected or unprotected.
1091:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *          This parameter can be one of the following values:
1092:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg OB_PCROP: A value between OB_PCROP_Sector0 and OB_PCROP_Sector5
1093:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg OB_PCROP_Sector_All
1094:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @retval HAL Status
1095:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   */
1096:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_EnablePCROP(uint32_t Sector)
1097:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** {
1098:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
1099:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
1100:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Check the parameters */
1101:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   assert_param(IS_OB_PCROP(Sector));
1102:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
1103:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Wait for last operation to be completed */
1104:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
1105:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
1106:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   if (status == HAL_OK)
1107:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   {
1108:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     *(__IO uint16_t *)OPTCR_BYTE2_ADDRESS |= (uint16_t)Sector;
1109:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   }
1110:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
1111:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   return status;
1112:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** }
1113:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
1114:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
1115:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** /**
1116:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @brief  Disable the read/write protection (PCROP) of the desired sectors.
1117:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @note   This function can be used only for STM32F401xx devices.
1118:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @param  Sector specifies the sector(s) to be read/write protected or unprotected.
1119:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *          This parameter can be one of the following values:
1120:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg OB_PCROP: A value between OB_PCROP_Sector0 and OB_PCROP_Sector5
1121:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg OB_PCROP_Sector_All
1122:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @retval HAL Status
1123:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   */
1124:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_DisablePCROP(uint32_t Sector)
1125:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** {
1126:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
1127:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
1128:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Check the parameters */
ARM GAS  /tmp/cc3kSl1G.s 			page 22


1129:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   assert_param(IS_OB_PCROP(Sector));
1130:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
1131:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Wait for last operation to be completed */
1132:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
1133:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
1134:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   if (status == HAL_OK)
1135:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   {
1136:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     *(__IO uint16_t *)OPTCR_BYTE2_ADDRESS &= (~Sector);
1137:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   }
1138:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
1139:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   return status;
1140:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
1141:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** }
1142:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** #endif /* STM32F401xC || STM32F401xE || STM32F411xE || STM32F446xx || STM32F412Zx || STM32F412Vx ||
1143:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****           STM32F413xx || STM32F423xx */
1144:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
1145:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** /**
1146:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @brief  Set the read protection level.
1147:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @param  Level specifies the read protection level.
1148:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *          This parameter can be one of the following values:
1149:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg OB_RDP_LEVEL_0: No protection
1150:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg OB_RDP_LEVEL_1: Read protection of the memory
1151:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg OB_RDP_LEVEL_2: Full chip protection
1152:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *
1153:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @note WARNING: When enabling OB_RDP level 2 it's no more possible to go back to level 1 or 0
1154:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *
1155:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @retval HAL Status
1156:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   */
1157:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_RDP_LevelConfig(uint8_t Level)
1158:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** {
1159:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
1160:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
1161:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Check the parameters */
1162:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   assert_param(IS_OB_RDP_LEVEL(Level));
1163:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
1164:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Wait for last operation to be completed */
1165:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
1166:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
1167:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   if (status == HAL_OK)
1168:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   {
1169:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     *(__IO uint8_t *)OPTCR_BYTE1_ADDRESS = Level;
1170:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   }
1171:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
1172:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   return status;
1173:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** }
1174:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
1175:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** /**
1176:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @brief  Program the FLASH User Option Byte: IWDG_SW / RST_STOP / RST_STDBY.
1177:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @param  Iwdg Selects the IWDG mode
1178:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *          This parameter can be one of the following values:
1179:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg OB_IWDG_SW: Software IWDG selected
1180:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg OB_IWDG_HW: Hardware IWDG selected
1181:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @param  Stop Reset event when entering STOP mode.
1182:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *          This parameter  can be one of the following values:
1183:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg OB_STOP_NO_RST: No reset generated when entering in STOP
1184:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg OB_STOP_RST: Reset generated when entering in STOP
1185:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @param  Stdby Reset event when entering Standby mode.
ARM GAS  /tmp/cc3kSl1G.s 			page 23


1186:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *          This parameter  can be one of the following values:
1187:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg OB_STDBY_NO_RST: No reset generated when entering in STANDBY
1188:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg OB_STDBY_RST: Reset generated when entering in STANDBY
1189:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @retval HAL Status
1190:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   */
1191:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_UserConfig(uint8_t Iwdg, uint8_t Stop, uint8_t Stdby)
1192:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** {
1193:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   uint8_t optiontmp;
1194:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
1195:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
1196:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Check the parameters */
1197:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   assert_param(IS_OB_IWDG_SOURCE(Iwdg));
1198:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   assert_param(IS_OB_STOP_SOURCE(Stop));
1199:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   assert_param(IS_OB_STDBY_SOURCE(Stdby));
1200:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
1201:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Wait for last operation to be completed */
1202:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
1203:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
1204:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   if (status == HAL_OK)
1205:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   {
1206:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     /* Mask OPTLOCK, OPTSTRT, BOR_LEV and BFB2 bits */
1207:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     optiontmp = (uint8_t)((*(__IO uint8_t *)OPTCR_BYTE0_ADDRESS) & (uint8_t)0x1F);
1208:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
1209:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     /* Update User Option Byte */
1210:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     *(__IO uint8_t *)OPTCR_BYTE0_ADDRESS = Iwdg | (uint8_t)(Stdby | (uint8_t)(Stop | ((uint8_t)opti
1211:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   }
1212:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
1213:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   return status;
1214:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** }
1215:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
1216:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** /**
1217:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @brief  Set the BOR Level.
1218:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @param  Level specifies the Option Bytes BOR Reset Level.
1219:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *          This parameter can be one of the following values:
1220:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg OB_BOR_LEVEL3: Supply voltage ranges from 2.7 to 3.6 V
1221:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg OB_BOR_LEVEL2: Supply voltage ranges from 2.4 to 2.7 V
1222:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg OB_BOR_LEVEL1: Supply voltage ranges from 2.1 to 2.4 V
1223:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg OB_BOR_OFF: Supply voltage ranges from 1.62 to 2.1 V
1224:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @retval HAL Status
1225:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   */
1226:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_BOR_LevelConfig(uint8_t Level)
1227:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** {
  73              		.loc 1 1227 1 is_stmt 1 view -0
  74              		.cfi_startproc
  75              		@ args = 0, pretend = 0, frame = 0
  76              		@ frame_needed = 0, uses_anonymous_args = 0
  77              		@ link register save eliminated.
1228:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Check the parameters */
1229:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   assert_param(IS_OB_BOR_LEVEL(Level));
  78              		.loc 1 1229 3 view .LVU11
1230:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
1231:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Set the BOR Level */
1232:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *(__IO uint8_t *)OPTCR_BYTE0_ADDRESS &= (~FLASH_OPTCR_BOR_LEV);
  79              		.loc 1 1232 3 view .LVU12
  80              		.loc 1 1232 40 is_stmt 0 view .LVU13
  81 0000 044B     		ldr	r3, .L5
  82 0002 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
ARM GAS  /tmp/cc3kSl1G.s 			page 24


  83 0004 01F0F301 		and	r1, r1, #243
  84 0008 1970     		strb	r1, [r3]
1233:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *(__IO uint8_t *)OPTCR_BYTE0_ADDRESS |= Level;
  85              		.loc 1 1233 3 is_stmt 1 view .LVU14
  86              		.loc 1 1233 40 is_stmt 0 view .LVU15
  87 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
  88 000c 0243     		orrs	r2, r2, r0
  89 000e 1A70     		strb	r2, [r3]
1234:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
1235:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   return HAL_OK;
  90              		.loc 1 1235 3 is_stmt 1 view .LVU16
1236:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
1237:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** }
  91              		.loc 1 1237 1 is_stmt 0 view .LVU17
  92 0010 0020     		movs	r0, #0
  93              	.LVL3:
  94              		.loc 1 1237 1 view .LVU18
  95 0012 7047     		bx	lr
  96              	.L6:
  97              		.align	2
  98              	.L5:
  99 0014 143C0240 		.word	1073888276
 100              		.cfi_endproc
 101              	.LFE249:
 103              		.section	.text.FLASH_OB_GetUser,"ax",%progbits
 104              		.align	1
 105              		.syntax unified
 106              		.thumb
 107              		.thumb_func
 108              		.fpu fpv4-sp-d16
 110              	FLASH_OB_GetUser:
 111              	.LFB250:
1238:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
1239:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** /**
1240:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @brief  Return the FLASH User Option Byte value.
1241:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @retval uint8_t FLASH User Option Bytes values: IWDG_SW(Bit0), RST_STOP(Bit1)
1242:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *         and RST_STDBY(Bit2).
1243:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   */
1244:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** static uint8_t FLASH_OB_GetUser(void)
1245:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** {
 112              		.loc 1 1245 1 is_stmt 1 view -0
 113              		.cfi_startproc
 114              		@ args = 0, pretend = 0, frame = 0
 115              		@ frame_needed = 0, uses_anonymous_args = 0
 116              		@ link register save eliminated.
1246:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Return the User Option Byte */
1247:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   return ((uint8_t)(FLASH->OPTCR & 0xE0));
 117              		.loc 1 1247 3 view .LVU20
 118              		.loc 1 1247 26 is_stmt 0 view .LVU21
 119 0000 024B     		ldr	r3, .L8
 120 0002 5869     		ldr	r0, [r3, #20]
1248:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** }
 121              		.loc 1 1248 1 view .LVU22
 122 0004 00F0E000 		and	r0, r0, #224
 123 0008 7047     		bx	lr
 124              	.L9:
 125 000a 00BF     		.align	2
ARM GAS  /tmp/cc3kSl1G.s 			page 25


 126              	.L8:
 127 000c 003C0240 		.word	1073888256
 128              		.cfi_endproc
 129              	.LFE250:
 131              		.section	.text.FLASH_OB_GetWRP,"ax",%progbits
 132              		.align	1
 133              		.syntax unified
 134              		.thumb
 135              		.thumb_func
 136              		.fpu fpv4-sp-d16
 138              	FLASH_OB_GetWRP:
 139              	.LFB251:
1249:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
1250:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** /**
1251:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @brief  Return the FLASH Write Protection Option Bytes value.
1252:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @retval uint16_t FLASH Write Protection Option Bytes value
1253:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   */
1254:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** static uint16_t FLASH_OB_GetWRP(void)
1255:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** {
 140              		.loc 1 1255 1 is_stmt 1 view -0
 141              		.cfi_startproc
 142              		@ args = 0, pretend = 0, frame = 0
 143              		@ frame_needed = 0, uses_anonymous_args = 0
 144              		@ link register save eliminated.
1256:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Return the FLASH write protection Register value */
1257:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   return (*(__IO uint16_t *)(OPTCR_BYTE2_ADDRESS));
 145              		.loc 1 1257 3 view .LVU24
 146              		.loc 1 1257 11 is_stmt 0 view .LVU25
 147 0000 014B     		ldr	r3, .L11
 148 0002 1888     		ldrh	r0, [r3]
1258:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** }
 149              		.loc 1 1258 1 view .LVU26
 150 0004 80B2     		uxth	r0, r0
 151 0006 7047     		bx	lr
 152              	.L12:
 153              		.align	2
 154              	.L11:
 155 0008 163C0240 		.word	1073888278
 156              		.cfi_endproc
 157              	.LFE251:
 159              		.section	.text.FLASH_OB_GetRDP,"ax",%progbits
 160              		.align	1
 161              		.syntax unified
 162              		.thumb
 163              		.thumb_func
 164              		.fpu fpv4-sp-d16
 166              	FLASH_OB_GetRDP:
 167              	.LFB252:
1259:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
1260:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** /**
1261:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @brief  Returns the FLASH Read Protection level.
1262:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @retval FLASH ReadOut Protection Status:
1263:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *         This parameter can be one of the following values:
1264:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg OB_RDP_LEVEL_0: No protection
1265:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg OB_RDP_LEVEL_1: Read protection of the memory
1266:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg OB_RDP_LEVEL_2: Full chip protection
1267:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   */
ARM GAS  /tmp/cc3kSl1G.s 			page 26


1268:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** static uint8_t FLASH_OB_GetRDP(void)
1269:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** {
 168              		.loc 1 1269 1 is_stmt 1 view -0
 169              		.cfi_startproc
 170              		@ args = 0, pretend = 0, frame = 0
 171              		@ frame_needed = 0, uses_anonymous_args = 0
 172              		@ link register save eliminated.
1270:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   uint8_t readstatus = OB_RDP_LEVEL_0;
 173              		.loc 1 1270 3 view .LVU28
 174              	.LVL4:
1271:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
1272:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   if (*(__IO uint8_t *)(OPTCR_BYTE1_ADDRESS) == (uint8_t)OB_RDP_LEVEL_2)
 175              		.loc 1 1272 3 view .LVU29
 176              		.loc 1 1272 7 is_stmt 0 view .LVU30
 177 0000 054B     		ldr	r3, .L16
 178 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 179 0004 C0B2     		uxtb	r0, r0
 180              		.loc 1 1272 6 view .LVU31
 181 0006 CC28     		cmp	r0, #204
 182 0008 04D0     		beq	.L14
1273:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   {
1274:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     readstatus = OB_RDP_LEVEL_2;
1275:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   }
1276:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   else if (*(__IO uint8_t *)(OPTCR_BYTE1_ADDRESS) == (uint8_t)OB_RDP_LEVEL_0)
 183              		.loc 1 1276 8 is_stmt 1 view .LVU32
 184              		.loc 1 1276 12 is_stmt 0 view .LVU33
 185 000a 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 186 000c C0B2     		uxtb	r0, r0
 187              		.loc 1 1276 11 view .LVU34
 188 000e AA28     		cmp	r0, #170
 189 0010 00D0     		beq	.L14
1277:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   {
1278:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     readstatus = OB_RDP_LEVEL_0;
1279:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   }
1280:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   else
1281:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   {
1282:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     readstatus = OB_RDP_LEVEL_1;
 190              		.loc 1 1282 16 view .LVU35
 191 0012 5520     		movs	r0, #85
 192              	.L14:
 193              	.LVL5:
1283:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   }
1284:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
1285:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   return readstatus;
 194              		.loc 1 1285 3 is_stmt 1 view .LVU36
1286:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** }
 195              		.loc 1 1286 1 is_stmt 0 view .LVU37
 196 0014 7047     		bx	lr
 197              	.L17:
 198 0016 00BF     		.align	2
 199              	.L16:
 200 0018 153C0240 		.word	1073888277
 201              		.cfi_endproc
 202              	.LFE252:
 204              		.section	.text.FLASH_OB_GetBOR,"ax",%progbits
 205              		.align	1
 206              		.syntax unified
ARM GAS  /tmp/cc3kSl1G.s 			page 27


 207              		.thumb
 208              		.thumb_func
 209              		.fpu fpv4-sp-d16
 211              	FLASH_OB_GetBOR:
 212              	.LFB253:
1287:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
1288:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** /**
1289:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @brief  Returns the FLASH BOR level.
1290:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @retval uint8_t The FLASH BOR level:
1291:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *           - OB_BOR_LEVEL3: Supply voltage ranges from 2.7 to 3.6 V
1292:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *           - OB_BOR_LEVEL2: Supply voltage ranges from 2.4 to 2.7 V
1293:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *           - OB_BOR_LEVEL1: Supply voltage ranges from 2.1 to 2.4 V
1294:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   *           - OB_BOR_OFF   : Supply voltage ranges from 1.62 to 2.1 V
1295:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   */
1296:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** static uint8_t FLASH_OB_GetBOR(void)
1297:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** {
 213              		.loc 1 1297 1 is_stmt 1 view -0
 214              		.cfi_startproc
 215              		@ args = 0, pretend = 0, frame = 0
 216              		@ frame_needed = 0, uses_anonymous_args = 0
 217              		@ link register save eliminated.
1298:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Return the FLASH BOR level */
1299:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   return (uint8_t)(*(__IO uint8_t *)(OPTCR_BYTE0_ADDRESS) & (uint8_t)0x0C);
 218              		.loc 1 1299 3 view .LVU39
 219              		.loc 1 1299 10 is_stmt 0 view .LVU40
 220 0000 024B     		ldr	r3, .L19
 221 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
1300:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** }
 222              		.loc 1 1300 1 view .LVU41
 223 0004 00F00C00 		and	r0, r0, #12
 224 0008 7047     		bx	lr
 225              	.L20:
 226 000a 00BF     		.align	2
 227              	.L19:
 228 000c 143C0240 		.word	1073888276
 229              		.cfi_endproc
 230              	.LFE253:
 232              		.section	.text.FLASH_OB_EnableWRP,"ax",%progbits
 233              		.align	1
 234              		.syntax unified
 235              		.thumb
 236              		.thumb_func
 237              		.fpu fpv4-sp-d16
 239              	FLASH_OB_EnableWRP:
 240              	.LVL6:
 241              	.LFB245:
1028:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 242              		.loc 1 1028 1 is_stmt 1 view -0
 243              		.cfi_startproc
 244              		@ args = 0, pretend = 0, frame = 0
 245              		@ frame_needed = 0, uses_anonymous_args = 0
1028:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 246              		.loc 1 1028 1 is_stmt 0 view .LVU43
 247 0000 10B5     		push	{r4, lr}
 248              	.LCFI0:
 249              		.cfi_def_cfa_offset 8
 250              		.cfi_offset 4, -8
ARM GAS  /tmp/cc3kSl1G.s 			page 28


 251              		.cfi_offset 14, -4
 252 0002 0446     		mov	r4, r0
1029:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 253              		.loc 1 1029 3 is_stmt 1 view .LVU44
 254              	.LVL7:
1032:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   assert_param(IS_FLASH_BANK(Banks));
 255              		.loc 1 1032 3 view .LVU45
1033:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 256              		.loc 1 1033 3 view .LVU46
1036:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 257              		.loc 1 1036 3 view .LVU47
1036:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 258              		.loc 1 1036 12 is_stmt 0 view .LVU48
 259 0004 4CF25030 		movw	r0, #50000
 260              	.LVL8:
1036:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 261              		.loc 1 1036 12 view .LVU49
 262 0008 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 263              	.LVL9:
1038:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   {
 264              		.loc 1 1038 3 is_stmt 1 view .LVU50
1038:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   {
 265              		.loc 1 1038 6 is_stmt 0 view .LVU51
 266 000c 28B9     		cbnz	r0, .L22
1040:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   }
 267              		.loc 1 1040 5 is_stmt 1 view .LVU52
1040:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   }
 268              		.loc 1 1040 43 is_stmt 0 view .LVU53
 269 000e 034A     		ldr	r2, .L24
 270 0010 1388     		ldrh	r3, [r2]
 271 0012 9BB2     		uxth	r3, r3
 272 0014 23EA0404 		bic	r4, r3, r4
 273              	.LVL10:
1040:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   }
 274              		.loc 1 1040 43 view .LVU54
 275 0018 1480     		strh	r4, [r2]	@ movhi
 276              	.L22:
1043:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** }
 277              		.loc 1 1043 3 is_stmt 1 view .LVU55
1044:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 278              		.loc 1 1044 1 is_stmt 0 view .LVU56
 279 001a 10BD     		pop	{r4, pc}
 280              	.L25:
 281              		.align	2
 282              	.L24:
 283 001c 163C0240 		.word	1073888278
 284              		.cfi_endproc
 285              	.LFE245:
 287              		.section	.text.FLASH_OB_DisableWRP,"ax",%progbits
 288              		.align	1
 289              		.syntax unified
 290              		.thumb
 291              		.thumb_func
 292              		.fpu fpv4-sp-d16
 294              	FLASH_OB_DisableWRP:
 295              	.LVL11:
 296              	.LFB246:
ARM GAS  /tmp/cc3kSl1G.s 			page 29


1064:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 297              		.loc 1 1064 1 is_stmt 1 view -0
 298              		.cfi_startproc
 299              		@ args = 0, pretend = 0, frame = 0
 300              		@ frame_needed = 0, uses_anonymous_args = 0
1064:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 301              		.loc 1 1064 1 is_stmt 0 view .LVU58
 302 0000 10B5     		push	{r4, lr}
 303              	.LCFI1:
 304              		.cfi_def_cfa_offset 8
 305              		.cfi_offset 4, -8
 306              		.cfi_offset 14, -4
 307 0002 0446     		mov	r4, r0
1065:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 308              		.loc 1 1065 3 is_stmt 1 view .LVU59
 309              	.LVL12:
1068:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   assert_param(IS_FLASH_BANK(Banks));
 310              		.loc 1 1068 3 view .LVU60
1069:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 311              		.loc 1 1069 3 view .LVU61
1072:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 312              		.loc 1 1072 3 view .LVU62
1072:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 313              		.loc 1 1072 12 is_stmt 0 view .LVU63
 314 0004 4CF25030 		movw	r0, #50000
 315              	.LVL13:
1072:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 316              		.loc 1 1072 12 view .LVU64
 317 0008 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 318              	.LVL14:
1074:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   {
 319              		.loc 1 1074 3 is_stmt 1 view .LVU65
1074:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   {
 320              		.loc 1 1074 6 is_stmt 0 view .LVU66
 321 000c 28B9     		cbnz	r0, .L27
1076:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   }
 322              		.loc 1 1076 5 is_stmt 1 view .LVU67
1076:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   }
 323              		.loc 1 1076 43 is_stmt 0 view .LVU68
 324 000e 034A     		ldr	r2, .L29
 325 0010 1388     		ldrh	r3, [r2]
 326 0012 9BB2     		uxth	r3, r3
1076:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   }
 327              		.loc 1 1076 46 view .LVU69
 328 0014 A4B2     		uxth	r4, r4
 329              	.LVL15:
1076:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   }
 330              		.loc 1 1076 43 view .LVU70
 331 0016 1C43     		orrs	r4, r4, r3
 332 0018 1480     		strh	r4, [r2]	@ movhi
 333              	.L27:
1079:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** }
 334              		.loc 1 1079 3 is_stmt 1 view .LVU71
1080:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** #endif /* STM32F40xxx || STM32F41xxx || STM32F401xx || STM32F410xx || STM32F411xE || STM32F446xx ||
 335              		.loc 1 1080 1 is_stmt 0 view .LVU72
 336 001a 10BD     		pop	{r4, pc}
 337              	.L30:
ARM GAS  /tmp/cc3kSl1G.s 			page 30


 338              		.align	2
 339              	.L29:
 340 001c 163C0240 		.word	1073888278
 341              		.cfi_endproc
 342              	.LFE246:
 344              		.section	.text.FLASH_OB_RDP_LevelConfig,"ax",%progbits
 345              		.align	1
 346              		.syntax unified
 347              		.thumb
 348              		.thumb_func
 349              		.fpu fpv4-sp-d16
 351              	FLASH_OB_RDP_LevelConfig:
 352              	.LVL16:
 353              	.LFB247:
1158:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 354              		.loc 1 1158 1 is_stmt 1 view -0
 355              		.cfi_startproc
 356              		@ args = 0, pretend = 0, frame = 0
 357              		@ frame_needed = 0, uses_anonymous_args = 0
1158:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 358              		.loc 1 1158 1 is_stmt 0 view .LVU74
 359 0000 10B5     		push	{r4, lr}
 360              	.LCFI2:
 361              		.cfi_def_cfa_offset 8
 362              		.cfi_offset 4, -8
 363              		.cfi_offset 14, -4
 364 0002 0446     		mov	r4, r0
1159:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 365              		.loc 1 1159 3 is_stmt 1 view .LVU75
 366              	.LVL17:
1162:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 367              		.loc 1 1162 3 view .LVU76
1165:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 368              		.loc 1 1165 3 view .LVU77
1165:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 369              		.loc 1 1165 12 is_stmt 0 view .LVU78
 370 0004 4CF25030 		movw	r0, #50000
 371              	.LVL18:
1165:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 372              		.loc 1 1165 12 view .LVU79
 373 0008 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 374              	.LVL19:
1167:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   {
 375              		.loc 1 1167 3 is_stmt 1 view .LVU80
1167:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   {
 376              		.loc 1 1167 6 is_stmt 0 view .LVU81
 377 000c 08B9     		cbnz	r0, .L32
1169:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   }
 378              		.loc 1 1169 5 is_stmt 1 view .LVU82
1169:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   }
 379              		.loc 1 1169 42 is_stmt 0 view .LVU83
 380 000e 014B     		ldr	r3, .L34
 381 0010 1C70     		strb	r4, [r3]
 382              	.L32:
1172:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** }
 383              		.loc 1 1172 3 is_stmt 1 view .LVU84
1173:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
ARM GAS  /tmp/cc3kSl1G.s 			page 31


 384              		.loc 1 1173 1 is_stmt 0 view .LVU85
 385 0012 10BD     		pop	{r4, pc}
 386              	.L35:
 387              		.align	2
 388              	.L34:
 389 0014 153C0240 		.word	1073888277
 390              		.cfi_endproc
 391              	.LFE247:
 393              		.section	.text.FLASH_OB_UserConfig,"ax",%progbits
 394              		.align	1
 395              		.syntax unified
 396              		.thumb
 397              		.thumb_func
 398              		.fpu fpv4-sp-d16
 400              	FLASH_OB_UserConfig:
 401              	.LVL20:
 402              	.LFB248:
1192:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   uint8_t optiontmp;
 403              		.loc 1 1192 1 is_stmt 1 view -0
 404              		.cfi_startproc
 405              		@ args = 0, pretend = 0, frame = 0
 406              		@ frame_needed = 0, uses_anonymous_args = 0
1192:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   uint8_t optiontmp;
 407              		.loc 1 1192 1 is_stmt 0 view .LVU87
 408 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 409              	.LCFI3:
 410              		.cfi_def_cfa_offset 24
 411              		.cfi_offset 3, -24
 412              		.cfi_offset 4, -20
 413              		.cfi_offset 5, -16
 414              		.cfi_offset 6, -12
 415              		.cfi_offset 7, -8
 416              		.cfi_offset 14, -4
 417 0002 0446     		mov	r4, r0
 418 0004 0E46     		mov	r6, r1
 419 0006 1546     		mov	r5, r2
1193:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 420              		.loc 1 1193 3 is_stmt 1 view .LVU88
1194:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 421              		.loc 1 1194 3 view .LVU89
 422              	.LVL21:
1197:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   assert_param(IS_OB_STOP_SOURCE(Stop));
 423              		.loc 1 1197 3 view .LVU90
1198:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   assert_param(IS_OB_STDBY_SOURCE(Stdby));
 424              		.loc 1 1198 3 view .LVU91
1199:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 425              		.loc 1 1199 3 view .LVU92
1202:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 426              		.loc 1 1202 3 view .LVU93
1202:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 427              		.loc 1 1202 12 is_stmt 0 view .LVU94
 428 0008 4CF25030 		movw	r0, #50000
 429              	.LVL22:
1202:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 430              		.loc 1 1202 12 view .LVU95
 431 000c FFF7FEFF 		bl	FLASH_WaitForLastOperation
 432              	.LVL23:
ARM GAS  /tmp/cc3kSl1G.s 			page 32


1204:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   {
 433              		.loc 1 1204 3 is_stmt 1 view .LVU96
1204:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   {
 434              		.loc 1 1204 6 is_stmt 0 view .LVU97
 435 0010 48B9     		cbnz	r0, .L37
1207:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 436              		.loc 1 1207 5 is_stmt 1 view .LVU98
1207:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 437              		.loc 1 1207 66 is_stmt 0 view .LVU99
 438 0012 054F     		ldr	r7, .L39
 439 0014 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
1207:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 440              		.loc 1 1207 15 view .LVU100
 441 0016 03F01F03 		and	r3, r3, #31
 442              	.LVL24:
1210:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   }
 443              		.loc 1 1210 5 is_stmt 1 view .LVU101
1210:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   }
 444              		.loc 1 1210 69 is_stmt 0 view .LVU102
 445 001a 43EA0601 		orr	r1, r3, r6
1210:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   }
 446              		.loc 1 1210 51 view .LVU103
 447 001e 41EA0502 		orr	r2, r1, r5
1210:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   }
 448              		.loc 1 1210 42 view .LVU104
 449 0022 2243     		orrs	r2, r2, r4
 450 0024 3A70     		strb	r2, [r7]
 451              	.LVL25:
 452              	.L37:
1213:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** }
 453              		.loc 1 1213 3 is_stmt 1 view .LVU105
1214:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 454              		.loc 1 1214 1 is_stmt 0 view .LVU106
 455 0026 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 456              	.L40:
 457              		.align	2
 458              	.L39:
 459 0028 143C0240 		.word	1073888276
 460              		.cfi_endproc
 461              	.LFE248:
 463              		.section	.text.HAL_FLASHEx_OBProgram,"ax",%progbits
 464              		.align	1
 465              		.global	HAL_FLASHEx_OBProgram
 466              		.syntax unified
 467              		.thumb
 468              		.thumb_func
 469              		.fpu fpv4-sp-d16
 471              	HAL_FLASHEx_OBProgram:
 472              	.LVL26:
 473              	.LFB241:
 282:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_ERROR;
 474              		.loc 1 282 1 is_stmt 1 view -0
 475              		.cfi_startproc
 476              		@ args = 0, pretend = 0, frame = 0
 477              		@ frame_needed = 0, uses_anonymous_args = 0
 283:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 478              		.loc 1 283 3 view .LVU108
ARM GAS  /tmp/cc3kSl1G.s 			page 33


 286:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 479              		.loc 1 286 3 view .LVU109
 286:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 480              		.loc 1 286 3 view .LVU110
 481 0000 1F4B     		ldr	r3, .L58
 482 0002 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 483 0004 012B     		cmp	r3, #1
 484 0006 38D0     		beq	.L48
 282:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_ERROR;
 485              		.loc 1 282 1 is_stmt 0 discriminator 2 view .LVU111
 486 0008 10B5     		push	{r4, lr}
 487              	.LCFI4:
 488              		.cfi_def_cfa_offset 8
 489              		.cfi_offset 4, -8
 490              		.cfi_offset 14, -4
 491 000a 0446     		mov	r4, r0
 286:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 492              		.loc 1 286 3 is_stmt 1 discriminator 2 view .LVU112
 493 000c 1C4B     		ldr	r3, .L58
 494 000e 0122     		movs	r2, #1
 495 0010 1A76     		strb	r2, [r3, #24]
 286:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 496              		.loc 1 286 3 discriminator 2 view .LVU113
 289:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 497              		.loc 1 289 3 discriminator 2 view .LVU114
 292:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   {
 498              		.loc 1 292 3 discriminator 2 view .LVU115
 292:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   {
 499              		.loc 1 292 15 is_stmt 0 discriminator 2 view .LVU116
 500 0012 0368     		ldr	r3, [r0]
 292:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   {
 501              		.loc 1 292 6 discriminator 2 view .LVU117
 502 0014 13F0010F 		tst	r3, #1
 503 0018 0CD0     		beq	.L49
 294:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     if (pOBInit->WRPState == OB_WRPSTATE_ENABLE)
 504              		.loc 1 294 5 is_stmt 1 view .LVU118
 295:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     {
 505              		.loc 1 295 5 view .LVU119
 295:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     {
 506              		.loc 1 295 16 is_stmt 0 view .LVU120
 507 001a 4368     		ldr	r3, [r0, #4]
 295:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     {
 508              		.loc 1 295 8 view .LVU121
 509 001c 9342     		cmp	r3, r2
 510 001e 04D0     		beq	.L54
 303:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     }
 511              		.loc 1 303 7 is_stmt 1 view .LVU122
 303:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     }
 512              		.loc 1 303 16 is_stmt 0 view .LVU123
 513 0020 C168     		ldr	r1, [r0, #12]
 514 0022 8068     		ldr	r0, [r0, #8]
 515              	.LVL27:
 303:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     }
 516              		.loc 1 303 16 view .LVU124
 517 0024 FFF7FEFF 		bl	FLASH_OB_DisableWRP
 518              	.LVL28:
 303:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     }
ARM GAS  /tmp/cc3kSl1G.s 			page 34


 519              		.loc 1 303 16 view .LVU125
 520 0028 05E0     		b	.L43
 521              	.LVL29:
 522              	.L54:
 298:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     }
 523              		.loc 1 298 7 is_stmt 1 view .LVU126
 298:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     }
 524              		.loc 1 298 16 is_stmt 0 view .LVU127
 525 002a C168     		ldr	r1, [r0, #12]
 526 002c 8068     		ldr	r0, [r0, #8]
 527              	.LVL30:
 298:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     }
 528              		.loc 1 298 16 view .LVU128
 529 002e FFF7FEFF 		bl	FLASH_OB_EnableWRP
 530              	.LVL31:
 298:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     }
 531              		.loc 1 298 16 view .LVU129
 532 0032 00E0     		b	.L43
 533              	.LVL32:
 534              	.L49:
 283:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 535              		.loc 1 283 21 view .LVU130
 536 0034 0120     		movs	r0, #1
 537              	.LVL33:
 538              	.L43:
 308:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   {
 539              		.loc 1 308 3 is_stmt 1 view .LVU131
 308:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   {
 540              		.loc 1 308 15 is_stmt 0 view .LVU132
 541 0036 2368     		ldr	r3, [r4]
 308:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   {
 542              		.loc 1 308 6 view .LVU133
 543 0038 13F0020F 		tst	r3, #2
 544 003c 0BD1     		bne	.L55
 545              	.L45:
 314:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   {
 546              		.loc 1 314 3 is_stmt 1 view .LVU134
 314:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   {
 547              		.loc 1 314 15 is_stmt 0 view .LVU135
 548 003e 2368     		ldr	r3, [r4]
 314:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   {
 549              		.loc 1 314 6 view .LVU136
 550 0040 13F0040F 		tst	r3, #4
 551 0044 0BD1     		bne	.L56
 552              	.L46:
 322:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   {
 553              		.loc 1 322 3 is_stmt 1 view .LVU137
 322:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   {
 554              		.loc 1 322 15 is_stmt 0 view .LVU138
 555 0046 2368     		ldr	r3, [r4]
 322:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   {
 556              		.loc 1 322 6 view .LVU139
 557 0048 13F0080F 		tst	r3, #8
 558 004c 11D1     		bne	.L57
 559              	.L47:
 328:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 560              		.loc 1 328 3 is_stmt 1 view .LVU140
ARM GAS  /tmp/cc3kSl1G.s 			page 35


 328:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 561              		.loc 1 328 3 view .LVU141
 562 004e 0C4B     		ldr	r3, .L58
 563 0050 0022     		movs	r2, #0
 564 0052 1A76     		strb	r2, [r3, #24]
 328:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 565              		.loc 1 328 3 view .LVU142
 330:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** }
 566              		.loc 1 330 3 view .LVU143
 331:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 567              		.loc 1 331 1 is_stmt 0 view .LVU144
 568 0054 10BD     		pop	{r4, pc}
 569              	.LVL34:
 570              	.L55:
 310:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   }
 571              		.loc 1 310 5 is_stmt 1 view .LVU145
 310:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   }
 572              		.loc 1 310 14 is_stmt 0 view .LVU146
 573 0056 207C     		ldrb	r0, [r4, #16]	@ zero_extendqisi2
 574              	.LVL35:
 310:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   }
 575              		.loc 1 310 14 view .LVU147
 576 0058 FFF7FEFF 		bl	FLASH_OB_RDP_LevelConfig
 577              	.LVL36:
 310:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   }
 578              		.loc 1 310 14 view .LVU148
 579 005c EFE7     		b	.L45
 580              	.L56:
 316:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****                                  pOBInit->USERConfig & OB_STOP_NO_RST,
 581              		.loc 1 316 5 is_stmt 1 view .LVU149
 316:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****                                  pOBInit->USERConfig & OB_STOP_NO_RST,
 582              		.loc 1 316 41 is_stmt 0 view .LVU150
 583 005e 207E     		ldrb	r0, [r4, #24]	@ zero_extendqisi2
 584              	.LVL37:
 316:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****                                  pOBInit->USERConfig & OB_STOP_NO_RST,
 585              		.loc 1 316 14 view .LVU151
 586 0060 00F08002 		and	r2, r0, #128
 587 0064 00F04001 		and	r1, r0, #64
 588 0068 00F02000 		and	r0, r0, #32
 589 006c FFF7FEFF 		bl	FLASH_OB_UserConfig
 590              	.LVL38:
 316:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****                                  pOBInit->USERConfig & OB_STOP_NO_RST,
 591              		.loc 1 316 14 view .LVU152
 592 0070 E9E7     		b	.L46
 593              	.L57:
 324:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   }
 594              		.loc 1 324 5 is_stmt 1 view .LVU153
 324:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   }
 595              		.loc 1 324 14 is_stmt 0 view .LVU154
 596 0072 207D     		ldrb	r0, [r4, #20]	@ zero_extendqisi2
 597              	.LVL39:
 324:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   }
 598              		.loc 1 324 14 view .LVU155
 599 0074 FFF7FEFF 		bl	FLASH_OB_BOR_LevelConfig
 600              	.LVL40:
 324:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   }
 601              		.loc 1 324 14 view .LVU156
ARM GAS  /tmp/cc3kSl1G.s 			page 36


 602 0078 E9E7     		b	.L47
 603              	.LVL41:
 604              	.L48:
 605              	.LCFI5:
 606              		.cfi_def_cfa_offset 0
 607              		.cfi_restore 4
 608              		.cfi_restore 14
 286:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 609              		.loc 1 286 3 view .LVU157
 610 007a 0220     		movs	r0, #2
 611              	.LVL42:
 331:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 612              		.loc 1 331 1 view .LVU158
 613 007c 7047     		bx	lr
 614              	.L59:
 615 007e 00BF     		.align	2
 616              	.L58:
 617 0080 00000000 		.word	pFlash
 618              		.cfi_endproc
 619              	.LFE241:
 621              		.section	.text.HAL_FLASHEx_OBGetConfig,"ax",%progbits
 622              		.align	1
 623              		.global	HAL_FLASHEx_OBGetConfig
 624              		.syntax unified
 625              		.thumb
 626              		.thumb_func
 627              		.fpu fpv4-sp-d16
 629              	HAL_FLASHEx_OBGetConfig:
 630              	.LVL43:
 631              	.LFB242:
 341:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   pOBInit->OptionType = OPTIONBYTE_WRP | OPTIONBYTE_RDP | OPTIONBYTE_USER | OPTIONBYTE_BOR;
 632              		.loc 1 341 1 is_stmt 1 view -0
 633              		.cfi_startproc
 634              		@ args = 0, pretend = 0, frame = 0
 635              		@ frame_needed = 0, uses_anonymous_args = 0
 341:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   pOBInit->OptionType = OPTIONBYTE_WRP | OPTIONBYTE_RDP | OPTIONBYTE_USER | OPTIONBYTE_BOR;
 636              		.loc 1 341 1 is_stmt 0 view .LVU160
 637 0000 10B5     		push	{r4, lr}
 638              	.LCFI6:
 639              		.cfi_def_cfa_offset 8
 640              		.cfi_offset 4, -8
 641              		.cfi_offset 14, -4
 642 0002 0446     		mov	r4, r0
 342:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 643              		.loc 1 342 3 is_stmt 1 view .LVU161
 342:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 644              		.loc 1 342 23 is_stmt 0 view .LVU162
 645 0004 0F23     		movs	r3, #15
 646 0006 0360     		str	r3, [r0]
 345:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 647              		.loc 1 345 3 is_stmt 1 view .LVU163
 345:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 648              		.loc 1 345 34 is_stmt 0 view .LVU164
 649 0008 FFF7FEFF 		bl	FLASH_OB_GetWRP
 650              	.LVL44:
 345:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 651              		.loc 1 345 22 view .LVU165
ARM GAS  /tmp/cc3kSl1G.s 			page 37


 652 000c A060     		str	r0, [r4, #8]
 348:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 653              		.loc 1 348 3 is_stmt 1 view .LVU166
 348:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 654              		.loc 1 348 33 is_stmt 0 view .LVU167
 655 000e FFF7FEFF 		bl	FLASH_OB_GetRDP
 656              	.LVL45:
 348:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 657              		.loc 1 348 21 view .LVU168
 658 0012 2061     		str	r0, [r4, #16]
 351:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 659              		.loc 1 351 3 is_stmt 1 view .LVU169
 351:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 660              		.loc 1 351 34 is_stmt 0 view .LVU170
 661 0014 FFF7FEFF 		bl	FLASH_OB_GetUser
 662              	.LVL46:
 351:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 663              		.loc 1 351 23 view .LVU171
 664 0018 2076     		strb	r0, [r4, #24]
 354:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** }
 665              		.loc 1 354 3 is_stmt 1 view .LVU172
 354:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** }
 666              		.loc 1 354 33 is_stmt 0 view .LVU173
 667 001a FFF7FEFF 		bl	FLASH_OB_GetBOR
 668              	.LVL47:
 354:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** }
 669              		.loc 1 354 21 view .LVU174
 670 001e 6061     		str	r0, [r4, #20]
 355:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 671              		.loc 1 355 1 view .LVU175
 672 0020 10BD     		pop	{r4, pc}
 355:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 673              		.loc 1 355 1 view .LVU176
 674              		.cfi_endproc
 675              	.LFE242:
 677              		.section	.text.FLASH_Erase_Sector,"ax",%progbits
 678              		.align	1
 679              		.global	FLASH_Erase_Sector
 680              		.syntax unified
 681              		.thumb
 682              		.thumb_func
 683              		.fpu fpv4-sp-d16
 685              	FLASH_Erase_Sector:
 686              	.LVL48:
 687              	.LFB244:
 978:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   uint32_t tmp_psize = 0U;
 688              		.loc 1 978 1 is_stmt 1 view -0
 689              		.cfi_startproc
 690              		@ args = 0, pretend = 0, frame = 0
 691              		@ frame_needed = 0, uses_anonymous_args = 0
 692              		@ link register save eliminated.
 978:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   uint32_t tmp_psize = 0U;
 693              		.loc 1 978 1 is_stmt 0 view .LVU178
 694 0000 10B4     		push	{r4}
 695              	.LCFI7:
 696              		.cfi_def_cfa_offset 4
 697              		.cfi_offset 4, -4
ARM GAS  /tmp/cc3kSl1G.s 			page 38


 979:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 698              		.loc 1 979 3 is_stmt 1 view .LVU179
 699              	.LVL49:
 982:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   assert_param(IS_VOLTAGERANGE(VoltageRange));
 700              		.loc 1 982 3 view .LVU180
 983:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 701              		.loc 1 983 3 view .LVU181
 985:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   {
 702              		.loc 1 985 3 view .LVU182
 985:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   {
 703              		.loc 1 985 6 is_stmt 0 view .LVU183
 704 0002 49B1     		cbz	r1, .L64
 989:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   {
 705              		.loc 1 989 8 is_stmt 1 view .LVU184
 989:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   {
 706              		.loc 1 989 11 is_stmt 0 view .LVU185
 707 0004 0129     		cmp	r1, #1
 708 0006 21D0     		beq	.L65
 993:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   {
 709              		.loc 1 993 8 is_stmt 1 view .LVU186
 993:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   {
 710              		.loc 1 993 11 is_stmt 0 view .LVU187
 711 0008 0229     		cmp	r1, #2
 712 000a 02D0     		beq	.L68
 999:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   }
 713              		.loc 1 999 15 view .LVU188
 714 000c 4FF44074 		mov	r4, #768
 715 0010 03E0     		b	.L63
 716              	.L68:
 995:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   }
 717              		.loc 1 995 15 view .LVU189
 718 0012 4FF40074 		mov	r4, #512
 719 0016 00E0     		b	.L63
 720              	.L64:
 987:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   }
 721              		.loc 1 987 15 view .LVU190
 722 0018 0024     		movs	r4, #0
 723              	.L63:
 724              	.LVL50:
1003:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   FLASH->CR |= tmp_psize;
 725              		.loc 1 1003 3 is_stmt 1 view .LVU191
 726 001a 0E4B     		ldr	r3, .L69
 727 001c 1969     		ldr	r1, [r3, #16]
 728              	.LVL51:
1003:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   FLASH->CR |= tmp_psize;
 729              		.loc 1 1003 3 is_stmt 0 view .LVU192
 730 001e 21F44071 		bic	r1, r1, #768
 731 0022 1961     		str	r1, [r3, #16]
1004:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   CLEAR_BIT(FLASH->CR, FLASH_CR_SNB);
 732              		.loc 1 1004 3 is_stmt 1 view .LVU193
1004:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   CLEAR_BIT(FLASH->CR, FLASH_CR_SNB);
 733              		.loc 1 1004 13 is_stmt 0 view .LVU194
 734 0024 1A69     		ldr	r2, [r3, #16]
 735 0026 2243     		orrs	r2, r2, r4
 736 0028 1A61     		str	r2, [r3, #16]
1005:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   FLASH->CR |= FLASH_CR_SER | (Sector << FLASH_CR_SNB_Pos);
 737              		.loc 1 1005 3 is_stmt 1 view .LVU195
ARM GAS  /tmp/cc3kSl1G.s 			page 39


 738 002a 1A69     		ldr	r2, [r3, #16]
 739 002c 22F07802 		bic	r2, r2, #120
 740 0030 1A61     		str	r2, [r3, #16]
1006:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   FLASH->CR |= FLASH_CR_STRT;
 741              		.loc 1 1006 3 view .LVU196
1006:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   FLASH->CR |= FLASH_CR_STRT;
 742              		.loc 1 1006 13 is_stmt 0 view .LVU197
 743 0032 1A69     		ldr	r2, [r3, #16]
 744 0034 42EAC000 		orr	r0, r2, r0, lsl #3
 745              	.LVL52:
1006:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   FLASH->CR |= FLASH_CR_STRT;
 746              		.loc 1 1006 13 view .LVU198
 747 0038 40F00200 		orr	r0, r0, #2
 748 003c 1861     		str	r0, [r3, #16]
1007:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** }
 749              		.loc 1 1007 3 is_stmt 1 view .LVU199
1007:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** }
 750              		.loc 1 1007 13 is_stmt 0 view .LVU200
 751 003e 1A69     		ldr	r2, [r3, #16]
 752 0040 42F48032 		orr	r2, r2, #65536
 753 0044 1A61     		str	r2, [r3, #16]
1008:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 754              		.loc 1 1008 1 view .LVU201
 755 0046 5DF8044B 		ldr	r4, [sp], #4
 756              	.LCFI8:
 757              		.cfi_remember_state
 758              		.cfi_restore 4
 759              		.cfi_def_cfa_offset 0
 760              	.LVL53:
1008:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 761              		.loc 1 1008 1 view .LVU202
 762 004a 7047     		bx	lr
 763              	.LVL54:
 764              	.L65:
 765              	.LCFI9:
 766              		.cfi_restore_state
 991:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   }
 767              		.loc 1 991 15 view .LVU203
 768 004c 4FF48074 		mov	r4, #256
 769 0050 E3E7     		b	.L63
 770              	.L70:
 771 0052 00BF     		.align	2
 772              	.L69:
 773 0054 003C0240 		.word	1073888256
 774              		.cfi_endproc
 775              	.LFE244:
 777              		.section	.text.HAL_FLASHEx_Erase_IT,"ax",%progbits
 778              		.align	1
 779              		.global	HAL_FLASHEx_Erase_IT
 780              		.syntax unified
 781              		.thumb
 782              		.thumb_func
 783              		.fpu fpv4-sp-d16
 785              	HAL_FLASHEx_Erase_IT:
 786              	.LVL55:
 787              	.LFB240:
 232:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
ARM GAS  /tmp/cc3kSl1G.s 			page 40


 788              		.loc 1 232 1 is_stmt 1 view -0
 789              		.cfi_startproc
 790              		@ args = 0, pretend = 0, frame = 0
 791              		@ frame_needed = 0, uses_anonymous_args = 0
 232:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 792              		.loc 1 232 1 is_stmt 0 view .LVU205
 793 0000 08B5     		push	{r3, lr}
 794              	.LCFI10:
 795              		.cfi_def_cfa_offset 8
 796              		.cfi_offset 3, -8
 797              		.cfi_offset 14, -4
 233:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 798              		.loc 1 233 3 is_stmt 1 view .LVU206
 799              	.LVL56:
 236:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 800              		.loc 1 236 3 view .LVU207
 239:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 801              		.loc 1 239 3 view .LVU208
 802 0002 134B     		ldr	r3, .L76
 803 0004 1A69     		ldr	r2, [r3, #16]
 804 0006 42F08072 		orr	r2, r2, #16777216
 805 000a 1A61     		str	r2, [r3, #16]
 242:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 806              		.loc 1 242 3 view .LVU209
 807 000c 1A69     		ldr	r2, [r3, #16]
 808 000e 42F00072 		orr	r2, r2, #33554432
 809 0012 1A61     		str	r2, [r3, #16]
 245:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****                          FLASH_FLAG_PGAERR | FLASH_FLAG_PGPERR | FLASH_FLAG_PGSERR);
 810              		.loc 1 245 3 view .LVU210
 811 0014 F322     		movs	r2, #243
 812 0016 DA60     		str	r2, [r3, #12]
 248:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   {
 813              		.loc 1 248 3 view .LVU211
 248:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   {
 814              		.loc 1 248 17 is_stmt 0 view .LVU212
 815 0018 0368     		ldr	r3, [r0]
 248:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   {
 816              		.loc 1 248 6 view .LVU213
 817 001a 012B     		cmp	r3, #1
 818 001c 0DD0     		beq	.L75
 260:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 819              		.loc 1 260 5 is_stmt 1 view .LVU214
 262:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     pFlash.NbSectorsToErase = pEraseInit->NbSectors;
 820              		.loc 1 262 5 view .LVU215
 262:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     pFlash.NbSectorsToErase = pEraseInit->NbSectors;
 821              		.loc 1 262 29 is_stmt 0 view .LVU216
 822 001e 0D4B     		ldr	r3, .L76+4
 823 0020 0122     		movs	r2, #1
 824 0022 1A70     		strb	r2, [r3]
 263:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     pFlash.Sector = pEraseInit->Sector;
 825              		.loc 1 263 5 is_stmt 1 view .LVU217
 263:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     pFlash.Sector = pEraseInit->Sector;
 826              		.loc 1 263 41 is_stmt 0 view .LVU218
 827 0024 C268     		ldr	r2, [r0, #12]
 263:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     pFlash.Sector = pEraseInit->Sector;
 828              		.loc 1 263 29 view .LVU219
 829 0026 5A60     		str	r2, [r3, #4]
ARM GAS  /tmp/cc3kSl1G.s 			page 41


 264:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     pFlash.VoltageForErase = (uint8_t)pEraseInit->VoltageRange;
 830              		.loc 1 264 5 is_stmt 1 view .LVU220
 264:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     pFlash.VoltageForErase = (uint8_t)pEraseInit->VoltageRange;
 831              		.loc 1 264 31 is_stmt 0 view .LVU221
 832 0028 8268     		ldr	r2, [r0, #8]
 264:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     pFlash.VoltageForErase = (uint8_t)pEraseInit->VoltageRange;
 833              		.loc 1 264 19 view .LVU222
 834 002a DA60     		str	r2, [r3, #12]
 265:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 835              		.loc 1 265 5 is_stmt 1 view .LVU223
 265:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 836              		.loc 1 265 30 is_stmt 0 view .LVU224
 837 002c 017C     		ldrb	r1, [r0, #16]	@ zero_extendqisi2
 265:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 838              		.loc 1 265 28 view .LVU225
 839 002e 1972     		strb	r1, [r3, #8]
 268:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   }
 840              		.loc 1 268 5 is_stmt 1 view .LVU226
 841 0030 8068     		ldr	r0, [r0, #8]
 842              	.LVL57:
 268:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   }
 843              		.loc 1 268 5 is_stmt 0 view .LVU227
 844 0032 FFF7FEFF 		bl	FLASH_Erase_Sector
 845              	.LVL58:
 846              	.L73:
 271:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** }
 847              		.loc 1 271 3 is_stmt 1 view .LVU228
 272:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 848              		.loc 1 272 1 is_stmt 0 view .LVU229
 849 0036 0020     		movs	r0, #0
 850 0038 08BD     		pop	{r3, pc}
 851              	.LVL59:
 852              	.L75:
 251:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     pFlash.Bank = pEraseInit->Banks;
 853              		.loc 1 251 5 is_stmt 1 view .LVU230
 251:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     pFlash.Bank = pEraseInit->Banks;
 854              		.loc 1 251 29 is_stmt 0 view .LVU231
 855 003a 064B     		ldr	r3, .L76+4
 856 003c 0222     		movs	r2, #2
 857 003e 1A70     		strb	r2, [r3]
 252:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     FLASH_MassErase((uint8_t) pEraseInit->VoltageRange, pEraseInit->Banks);
 858              		.loc 1 252 5 is_stmt 1 view .LVU232
 252:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     FLASH_MassErase((uint8_t) pEraseInit->VoltageRange, pEraseInit->Banks);
 859              		.loc 1 252 29 is_stmt 0 view .LVU233
 860 0040 4268     		ldr	r2, [r0, #4]
 252:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     FLASH_MassErase((uint8_t) pEraseInit->VoltageRange, pEraseInit->Banks);
 861              		.loc 1 252 17 view .LVU234
 862 0042 1A61     		str	r2, [r3, #16]
 253:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   }
 863              		.loc 1 253 5 is_stmt 1 view .LVU235
 864 0044 4168     		ldr	r1, [r0, #4]
 865 0046 007C     		ldrb	r0, [r0, #16]	@ zero_extendqisi2
 866              	.LVL60:
 253:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   }
 867              		.loc 1 253 5 is_stmt 0 view .LVU236
 868 0048 FFF7FEFF 		bl	FLASH_MassErase
 869              	.LVL61:
ARM GAS  /tmp/cc3kSl1G.s 			page 42


 870 004c F3E7     		b	.L73
 871              	.L77:
 872 004e 00BF     		.align	2
 873              	.L76:
 874 0050 003C0240 		.word	1073888256
 875 0054 00000000 		.word	pFlash
 876              		.cfi_endproc
 877              	.LFE240:
 879              		.section	.text.FLASH_FlushCaches,"ax",%progbits
 880              		.align	1
 881              		.global	FLASH_FlushCaches
 882              		.syntax unified
 883              		.thumb
 884              		.thumb_func
 885              		.fpu fpv4-sp-d16
 887              	FLASH_FlushCaches:
 888              	.LFB254:
1301:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
1302:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** /**
1303:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @brief  Flush the instruction and data caches
1304:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   * @retval None
1305:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   */
1306:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** void FLASH_FlushCaches(void)
1307:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** {
 889              		.loc 1 1307 1 is_stmt 1 view -0
 890              		.cfi_startproc
 891              		@ args = 0, pretend = 0, frame = 0
 892              		@ frame_needed = 0, uses_anonymous_args = 0
 893              		@ link register save eliminated.
1308:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Flush instruction cache  */
1309:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   if (READ_BIT(FLASH->ACR, FLASH_ACR_ICEN) != RESET)
 894              		.loc 1 1309 3 view .LVU238
 895              		.loc 1 1309 7 is_stmt 0 view .LVU239
 896 0000 164B     		ldr	r3, .L81
 897 0002 1B68     		ldr	r3, [r3]
 898              		.loc 1 1309 6 view .LVU240
 899 0004 13F4007F 		tst	r3, #512
 900 0008 10D0     		beq	.L79
1310:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   {
1311:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     /* Disable instruction cache  */
1312:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     __HAL_FLASH_INSTRUCTION_CACHE_DISABLE();
 901              		.loc 1 1312 5 is_stmt 1 view .LVU241
 902 000a 144B     		ldr	r3, .L81
 903 000c 1A68     		ldr	r2, [r3]
 904 000e 22F40072 		bic	r2, r2, #512
 905 0012 1A60     		str	r2, [r3]
1313:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     /* Reset instruction cache */
1314:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     __HAL_FLASH_INSTRUCTION_CACHE_RESET();
 906              		.loc 1 1314 5 view .LVU242
 907              		.loc 1 1314 5 view .LVU243
 908 0014 1A68     		ldr	r2, [r3]
 909 0016 42F40062 		orr	r2, r2, #2048
 910 001a 1A60     		str	r2, [r3]
 911              		.loc 1 1314 5 view .LVU244
 912 001c 1A68     		ldr	r2, [r3]
 913 001e 22F40062 		bic	r2, r2, #2048
 914 0022 1A60     		str	r2, [r3]
ARM GAS  /tmp/cc3kSl1G.s 			page 43


 915              		.loc 1 1314 5 view .LVU245
1315:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     /* Enable instruction cache */
1316:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 916              		.loc 1 1316 5 view .LVU246
 917 0024 1A68     		ldr	r2, [r3]
 918 0026 42F40072 		orr	r2, r2, #512
 919 002a 1A60     		str	r2, [r3]
 920              	.L79:
1317:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   }
1318:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
1319:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Flush data cache */
1320:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   if (READ_BIT(FLASH->ACR, FLASH_ACR_DCEN) != RESET)
 921              		.loc 1 1320 3 view .LVU247
 922              		.loc 1 1320 7 is_stmt 0 view .LVU248
 923 002c 0B4B     		ldr	r3, .L81
 924 002e 1B68     		ldr	r3, [r3]
 925              		.loc 1 1320 6 view .LVU249
 926 0030 13F4806F 		tst	r3, #1024
 927 0034 10D0     		beq	.L78
1321:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   {
1322:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     /* Disable data cache  */
1323:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     __HAL_FLASH_DATA_CACHE_DISABLE();
 928              		.loc 1 1323 5 is_stmt 1 view .LVU250
 929 0036 094B     		ldr	r3, .L81
 930 0038 1A68     		ldr	r2, [r3]
 931 003a 22F48062 		bic	r2, r2, #1024
 932 003e 1A60     		str	r2, [r3]
1324:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     /* Reset data cache */
1325:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     __HAL_FLASH_DATA_CACHE_RESET();
 933              		.loc 1 1325 5 view .LVU251
 934              		.loc 1 1325 5 view .LVU252
 935 0040 1A68     		ldr	r2, [r3]
 936 0042 42F48052 		orr	r2, r2, #4096
 937 0046 1A60     		str	r2, [r3]
 938              		.loc 1 1325 5 view .LVU253
 939 0048 1A68     		ldr	r2, [r3]
 940 004a 22F48052 		bic	r2, r2, #4096
 941 004e 1A60     		str	r2, [r3]
 942              		.loc 1 1325 5 view .LVU254
1326:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     /* Enable data cache */
1327:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     __HAL_FLASH_DATA_CACHE_ENABLE();
 943              		.loc 1 1327 5 view .LVU255
 944 0050 1A68     		ldr	r2, [r3]
 945 0052 42F48062 		orr	r2, r2, #1024
 946 0056 1A60     		str	r2, [r3]
 947              	.L78:
1328:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   }
1329:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** }
 948              		.loc 1 1329 1 is_stmt 0 view .LVU256
 949 0058 7047     		bx	lr
 950              	.L82:
 951 005a 00BF     		.align	2
 952              	.L81:
 953 005c 003C0240 		.word	1073888256
 954              		.cfi_endproc
 955              	.LFE254:
 957              		.section	.text.HAL_FLASHEx_Erase,"ax",%progbits
ARM GAS  /tmp/cc3kSl1G.s 			page 44


 958              		.align	1
 959              		.global	HAL_FLASHEx_Erase
 960              		.syntax unified
 961              		.thumb
 962              		.thumb_func
 963              		.fpu fpv4-sp-d16
 965              	HAL_FLASHEx_Erase:
 966              	.LVL62:
 967              	.LFB239:
 161:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   HAL_StatusTypeDef status;
 968              		.loc 1 161 1 is_stmt 1 view -0
 969              		.cfi_startproc
 970              		@ args = 0, pretend = 0, frame = 0
 971              		@ frame_needed = 0, uses_anonymous_args = 0
 161:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   HAL_StatusTypeDef status;
 972              		.loc 1 161 1 is_stmt 0 view .LVU258
 973 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 974              	.LCFI11:
 975              		.cfi_def_cfa_offset 24
 976              		.cfi_offset 3, -24
 977              		.cfi_offset 4, -20
 978              		.cfi_offset 5, -16
 979              		.cfi_offset 6, -12
 980              		.cfi_offset 7, -8
 981              		.cfi_offset 14, -4
 162:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   uint32_t index = 0U;
 982              		.loc 1 162 3 is_stmt 1 view .LVU259
 163:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 983              		.loc 1 163 3 view .LVU260
 984              	.LVL63:
 166:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 985              		.loc 1 166 3 view .LVU261
 166:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 986              		.loc 1 166 3 view .LVU262
 987 0002 224B     		ldr	r3, .L95
 988 0004 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 989 0006 012B     		cmp	r3, #1
 990 0008 3ED0     		beq	.L91
 991 000a 0446     		mov	r4, r0
 992 000c 0E46     		mov	r6, r1
 166:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 993              		.loc 1 166 3 discriminator 2 view .LVU263
 994 000e 1F4B     		ldr	r3, .L95
 995 0010 0122     		movs	r2, #1
 996 0012 1A76     		strb	r2, [r3, #24]
 166:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 997              		.loc 1 166 3 discriminator 2 view .LVU264
 169:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 998              		.loc 1 169 3 discriminator 2 view .LVU265
 172:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 999              		.loc 1 172 3 discriminator 2 view .LVU266
 172:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 1000              		.loc 1 172 12 is_stmt 0 discriminator 2 view .LVU267
 1001 0014 4CF25030 		movw	r0, #50000
 1002              	.LVL64:
 172:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 1003              		.loc 1 172 12 discriminator 2 view .LVU268
ARM GAS  /tmp/cc3kSl1G.s 			page 45


 1004 0018 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1005              	.LVL65:
 174:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   {
 1006              		.loc 1 174 3 is_stmt 1 discriminator 2 view .LVU269
 174:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   {
 1007              		.loc 1 174 6 is_stmt 0 discriminator 2 view .LVU270
 1008 001c 0746     		mov	r7, r0
 1009 001e 70BB     		cbnz	r0, .L85
 177:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 1010              		.loc 1 177 5 is_stmt 1 view .LVU271
 177:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 1011              		.loc 1 177 18 is_stmt 0 view .LVU272
 1012 0020 4FF0FF33 		mov	r3, #-1
 1013 0024 3360     		str	r3, [r6]
 179:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     {
 1014              		.loc 1 179 5 is_stmt 1 view .LVU273
 179:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     {
 1015              		.loc 1 179 19 is_stmt 0 view .LVU274
 1016 0026 2368     		ldr	r3, [r4]
 179:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     {
 1017              		.loc 1 179 8 view .LVU275
 1018 0028 012B     		cmp	r3, #1
 1019 002a 16D0     		beq	.L93
 193:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 1020              		.loc 1 193 7 is_stmt 1 view .LVU276
 196:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****       {
 1021              		.loc 1 196 7 view .LVU277
 196:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****       {
 1022              		.loc 1 196 18 is_stmt 0 view .LVU278
 1023 002c A568     		ldr	r5, [r4, #8]
 1024              	.LVL66:
 1025              	.L88:
 196:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****       {
 1026              		.loc 1 196 40 is_stmt 1 discriminator 1 view .LVU279
 196:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****       {
 1027              		.loc 1 196 59 is_stmt 0 discriminator 1 view .LVU280
 1028 002e E368     		ldr	r3, [r4, #12]
 196:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****       {
 1029              		.loc 1 196 83 discriminator 1 view .LVU281
 1030 0030 A268     		ldr	r2, [r4, #8]
 196:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****       {
 1031              		.loc 1 196 71 discriminator 1 view .LVU282
 1032 0032 1344     		add	r3, r3, r2
 196:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****       {
 1033              		.loc 1 196 7 discriminator 1 view .LVU283
 1034 0034 AB42     		cmp	r3, r5
 1035 0036 20D9     		bls	.L87
 198:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 1036              		.loc 1 198 9 is_stmt 1 view .LVU284
 1037 0038 217C     		ldrb	r1, [r4, #16]	@ zero_extendqisi2
 1038 003a 2846     		mov	r0, r5
 1039 003c FFF7FEFF 		bl	FLASH_Erase_Sector
 1040              	.LVL67:
 201:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 1041              		.loc 1 201 9 view .LVU285
 201:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 1042              		.loc 1 201 18 is_stmt 0 view .LVU286
ARM GAS  /tmp/cc3kSl1G.s 			page 46


 1043 0040 4CF25030 		movw	r0, #50000
 1044 0044 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1045              	.LVL68:
 204:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 1046              		.loc 1 204 9 is_stmt 1 view .LVU287
 1047 0048 114A     		ldr	r2, .L95+4
 1048 004a 1369     		ldr	r3, [r2, #16]
 1049 004c 23F07A03 		bic	r3, r3, #122
 1050 0050 1361     		str	r3, [r2, #16]
 206:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****         {
 1051              		.loc 1 206 9 view .LVU288
 206:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****         {
 1052              		.loc 1 206 12 is_stmt 0 view .LVU289
 1053 0052 0746     		mov	r7, r0
 1054 0054 80B9     		cbnz	r0, .L94
 196:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****       {
 1055              		.loc 1 196 94 is_stmt 1 discriminator 2 view .LVU290
 196:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****       {
 1056              		.loc 1 196 99 is_stmt 0 discriminator 2 view .LVU291
 1057 0056 0135     		adds	r5, r5, #1
 1058              	.LVL69:
 196:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****       {
 1059              		.loc 1 196 99 discriminator 2 view .LVU292
 1060 0058 E9E7     		b	.L88
 1061              	.LVL70:
 1062              	.L93:
 182:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 1063              		.loc 1 182 7 is_stmt 1 view .LVU293
 1064 005a 6168     		ldr	r1, [r4, #4]
 1065 005c 207C     		ldrb	r0, [r4, #16]	@ zero_extendqisi2
 1066              	.LVL71:
 182:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 1067              		.loc 1 182 7 is_stmt 0 view .LVU294
 1068 005e FFF7FEFF 		bl	FLASH_MassErase
 1069              	.LVL72:
 185:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 1070              		.loc 1 185 7 is_stmt 1 view .LVU295
 185:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 1071              		.loc 1 185 16 is_stmt 0 view .LVU296
 1072 0062 4CF25030 		movw	r0, #50000
 1073 0066 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1074              	.LVL73:
 1075 006a 0746     		mov	r7, r0
 1076              	.LVL74:
 188:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     }
 1077              		.loc 1 188 7 is_stmt 1 view .LVU297
 188:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****     }
 1078              		.loc 1 188 17 is_stmt 0 view .LVU298
 1079 006c 084A     		ldr	r2, .L95+4
 1080 006e 1369     		ldr	r3, [r2, #16]
 1081 0070 23F00403 		bic	r3, r3, #4
 1082 0074 1361     		str	r3, [r2, #16]
 1083 0076 00E0     		b	.L87
 1084              	.LVL75:
 1085              	.L94:
 209:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****           break;
 1086              		.loc 1 209 11 is_stmt 1 view .LVU299
ARM GAS  /tmp/cc3kSl1G.s 			page 47


 209:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****           break;
 1087              		.loc 1 209 24 is_stmt 0 view .LVU300
 1088 0078 3560     		str	r5, [r6]
 210:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****         }
 1089              		.loc 1 210 11 is_stmt 1 view .LVU301
 1090              	.LVL76:
 1091              	.L87:
 215:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c ****   }
 1092              		.loc 1 215 5 view .LVU302
 1093 007a FFF7FEFF 		bl	FLASH_FlushCaches
 1094              	.LVL77:
 1095              	.L85:
 219:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 1096              		.loc 1 219 3 view .LVU303
 219:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 1097              		.loc 1 219 3 view .LVU304
 1098 007e 034B     		ldr	r3, .L95
 1099 0080 0022     		movs	r2, #0
 1100 0082 1A76     		strb	r2, [r3, #24]
 219:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 1101              		.loc 1 219 3 view .LVU305
 221:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** }
 1102              		.loc 1 221 3 view .LVU306
 1103              	.LVL78:
 1104              	.L84:
 222:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 1105              		.loc 1 222 1 is_stmt 0 view .LVU307
 1106 0084 3846     		mov	r0, r7
 1107 0086 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1108              	.LVL79:
 1109              	.L91:
 166:stm32f4xx-hal-driver/Src/stm32f4xx_hal_flash_ex.c **** 
 1110              		.loc 1 166 3 view .LVU308
 1111 0088 0227     		movs	r7, #2
 1112 008a FBE7     		b	.L84
 1113              	.L96:
 1114              		.align	2
 1115              	.L95:
 1116 008c 00000000 		.word	pFlash
 1117 0090 003C0240 		.word	1073888256
 1118              		.cfi_endproc
 1119              	.LFE239:
 1121              		.text
 1122              	.Letext0:
 1123              		.file 2 "/opt/gcc_arm/gcc-arm-none-eabi-9-2019-q4-major/arm-none-eabi/include/machine/_default_typ
 1124              		.file 3 "/opt/gcc_arm/gcc-arm-none-eabi-9-2019-q4-major/arm-none-eabi/include/sys/_stdint.h"
 1125              		.file 4 "CMSIS_5/CMSIS/Core/Include/core_cm4.h"
 1126              		.file 5 "cmsis-device-f4/Include/system_stm32f4xx.h"
 1127              		.file 6 "cmsis-device-f4/Include/stm32f407xx.h"
 1128              		.file 7 "cmsis-device-f4/Include/stm32f4xx.h"
 1129              		.file 8 "stm32f4xx-hal-driver/Inc/stm32f4xx_hal_def.h"
 1130              		.file 9 "stm32f4xx-hal-driver/Inc/stm32f4xx_hal_flash.h"
 1131              		.file 10 "stm32f4xx-hal-driver/Inc/stm32f4xx_hal_flash_ex.h"
 1132              		.file 11 "stm32f4xx-hal-driver/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/cc3kSl1G.s 			page 48


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_hal_flash_ex.c
     /tmp/cc3kSl1G.s:18     .text.FLASH_MassErase:0000000000000000 $t
     /tmp/cc3kSl1G.s:25     .text.FLASH_MassErase:0000000000000000 FLASH_MassErase
     /tmp/cc3kSl1G.s:59     .text.FLASH_MassErase:0000000000000020 $d
     /tmp/cc3kSl1G.s:64     .text.FLASH_OB_BOR_LevelConfig:0000000000000000 $t
     /tmp/cc3kSl1G.s:70     .text.FLASH_OB_BOR_LevelConfig:0000000000000000 FLASH_OB_BOR_LevelConfig
     /tmp/cc3kSl1G.s:99     .text.FLASH_OB_BOR_LevelConfig:0000000000000014 $d
     /tmp/cc3kSl1G.s:104    .text.FLASH_OB_GetUser:0000000000000000 $t
     /tmp/cc3kSl1G.s:110    .text.FLASH_OB_GetUser:0000000000000000 FLASH_OB_GetUser
     /tmp/cc3kSl1G.s:127    .text.FLASH_OB_GetUser:000000000000000c $d
     /tmp/cc3kSl1G.s:132    .text.FLASH_OB_GetWRP:0000000000000000 $t
     /tmp/cc3kSl1G.s:138    .text.FLASH_OB_GetWRP:0000000000000000 FLASH_OB_GetWRP
     /tmp/cc3kSl1G.s:155    .text.FLASH_OB_GetWRP:0000000000000008 $d
     /tmp/cc3kSl1G.s:160    .text.FLASH_OB_GetRDP:0000000000000000 $t
     /tmp/cc3kSl1G.s:166    .text.FLASH_OB_GetRDP:0000000000000000 FLASH_OB_GetRDP
     /tmp/cc3kSl1G.s:200    .text.FLASH_OB_GetRDP:0000000000000018 $d
     /tmp/cc3kSl1G.s:205    .text.FLASH_OB_GetBOR:0000000000000000 $t
     /tmp/cc3kSl1G.s:211    .text.FLASH_OB_GetBOR:0000000000000000 FLASH_OB_GetBOR
     /tmp/cc3kSl1G.s:228    .text.FLASH_OB_GetBOR:000000000000000c $d
     /tmp/cc3kSl1G.s:233    .text.FLASH_OB_EnableWRP:0000000000000000 $t
     /tmp/cc3kSl1G.s:239    .text.FLASH_OB_EnableWRP:0000000000000000 FLASH_OB_EnableWRP
     /tmp/cc3kSl1G.s:283    .text.FLASH_OB_EnableWRP:000000000000001c $d
     /tmp/cc3kSl1G.s:288    .text.FLASH_OB_DisableWRP:0000000000000000 $t
     /tmp/cc3kSl1G.s:294    .text.FLASH_OB_DisableWRP:0000000000000000 FLASH_OB_DisableWRP
     /tmp/cc3kSl1G.s:340    .text.FLASH_OB_DisableWRP:000000000000001c $d
     /tmp/cc3kSl1G.s:345    .text.FLASH_OB_RDP_LevelConfig:0000000000000000 $t
     /tmp/cc3kSl1G.s:351    .text.FLASH_OB_RDP_LevelConfig:0000000000000000 FLASH_OB_RDP_LevelConfig
     /tmp/cc3kSl1G.s:389    .text.FLASH_OB_RDP_LevelConfig:0000000000000014 $d
     /tmp/cc3kSl1G.s:394    .text.FLASH_OB_UserConfig:0000000000000000 $t
     /tmp/cc3kSl1G.s:400    .text.FLASH_OB_UserConfig:0000000000000000 FLASH_OB_UserConfig
     /tmp/cc3kSl1G.s:459    .text.FLASH_OB_UserConfig:0000000000000028 $d
     /tmp/cc3kSl1G.s:464    .text.HAL_FLASHEx_OBProgram:0000000000000000 $t
     /tmp/cc3kSl1G.s:471    .text.HAL_FLASHEx_OBProgram:0000000000000000 HAL_FLASHEx_OBProgram
     /tmp/cc3kSl1G.s:617    .text.HAL_FLASHEx_OBProgram:0000000000000080 $d
     /tmp/cc3kSl1G.s:622    .text.HAL_FLASHEx_OBGetConfig:0000000000000000 $t
     /tmp/cc3kSl1G.s:629    .text.HAL_FLASHEx_OBGetConfig:0000000000000000 HAL_FLASHEx_OBGetConfig
     /tmp/cc3kSl1G.s:678    .text.FLASH_Erase_Sector:0000000000000000 $t
     /tmp/cc3kSl1G.s:685    .text.FLASH_Erase_Sector:0000000000000000 FLASH_Erase_Sector
     /tmp/cc3kSl1G.s:773    .text.FLASH_Erase_Sector:0000000000000054 $d
     /tmp/cc3kSl1G.s:778    .text.HAL_FLASHEx_Erase_IT:0000000000000000 $t
     /tmp/cc3kSl1G.s:785    .text.HAL_FLASHEx_Erase_IT:0000000000000000 HAL_FLASHEx_Erase_IT
     /tmp/cc3kSl1G.s:874    .text.HAL_FLASHEx_Erase_IT:0000000000000050 $d
     /tmp/cc3kSl1G.s:880    .text.FLASH_FlushCaches:0000000000000000 $t
     /tmp/cc3kSl1G.s:887    .text.FLASH_FlushCaches:0000000000000000 FLASH_FlushCaches
     /tmp/cc3kSl1G.s:953    .text.FLASH_FlushCaches:000000000000005c $d
     /tmp/cc3kSl1G.s:958    .text.HAL_FLASHEx_Erase:0000000000000000 $t
     /tmp/cc3kSl1G.s:965    .text.HAL_FLASHEx_Erase:0000000000000000 HAL_FLASHEx_Erase
     /tmp/cc3kSl1G.s:1116   .text.HAL_FLASHEx_Erase:000000000000008c $d

UNDEFINED SYMBOLS
FLASH_WaitForLastOperation
pFlash

ARM GAS  /tmp/ccwOIEYW.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_hal_irda.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.IRDA_EndTxTransfer,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	IRDA_EndTxTransfer:
  26              	.LVL0:
  27              	.LFB168:
  28              		.file 1 "HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c"
   1:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** /**
   2:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   ******************************************************************************
   3:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @file    stm32f4xx_hal_irda.c
   4:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @author  MCD Application Team
   5:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @brief   IRDA HAL module driver.
   6:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *          This file provides firmware functions to manage the following
   7:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *          functionalities of the IrDA SIR ENDEC block (IrDA):
   8:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *           + Initialization and de-initialization functions
   9:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *           + IO operation functions
  10:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *           + Peripheral Control functions
  11:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *           + Peripheral State and Errors functions
  12:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   @verbatim
  13:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   ==============================================================================
  14:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****                         ##### How to use this driver #####
  15:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   ==============================================================================
  16:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   [..]
  17:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     The IRDA HAL driver can be used as follows:
  18:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
  19:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     (#) Declare a IRDA_HandleTypeDef handle structure (eg. IRDA_HandleTypeDef hirda).
  20:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     (#) Initialize the IRDA low level resources by implementing the HAL_IRDA_MspInit() API:
  21:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         (##) Enable the USARTx interface clock.
  22:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         (##) IRDA pins configuration:
  23:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****             (+++) Enable the clock for the IRDA GPIOs.
  24:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****             (+++) Configure IRDA pins as alternate function pull-up.
  25:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         (##) NVIC configuration if you need to use interrupt process (HAL_IRDA_Transmit_IT()
  26:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****              and HAL_IRDA_Receive_IT() APIs):
  27:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****             (+++) Configure the USARTx interrupt priority.
  28:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****             (+++) Enable the NVIC USART IRQ handle.
  29:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         (##) DMA Configuration if you need to use DMA process (HAL_IRDA_Transmit_DMA()
  30:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****              and HAL_IRDA_Receive_DMA() APIs):
ARM GAS  /tmp/ccwOIEYW.s 			page 2


  31:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****             (+++) Declare a DMA handle structure for the Tx/Rx stream.
  32:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****             (+++) Enable the DMAx interface clock.
  33:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****             (+++) Configure the declared DMA handle structure with the required Tx/Rx parameters.
  34:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****             (+++) Configure the DMA Tx/Rx stream.
  35:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****             (+++) Associate the initialized DMA handle to the IRDA DMA Tx/Rx handle.
  36:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete interrupt on
  37:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****             (+++) Configure the IRDAx interrupt priority and enable the NVIC USART IRQ handle
  38:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****                   (used for last byte sending completion detection in DMA non circular mode)
  39:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
  40:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     (#) Program the Baud Rate, Word Length, Parity, IrDA Mode, Prescaler
  41:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         and Mode(Receiver/Transmitter) in the hirda Init structure.
  42:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
  43:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     (#) Initialize the IRDA registers by calling the HAL_IRDA_Init() API:
  44:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         (++) This API configures also the low level Hardware GPIO, CLOCK, CORTEX...etc)
  45:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****              by calling the customized HAL_IRDA_MspInit() API.
  46:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
  47:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****          -@@- The specific IRDA interrupts (Transmission complete interrupt,
  48:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****              RXNE interrupt and Error Interrupts) will be managed using the macros
  49:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****              __HAL_IRDA_ENABLE_IT() and __HAL_IRDA_DISABLE_IT() inside the transmit and receive pro
  50:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
  51:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     (#) Three operation modes are available within this driver :
  52:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
  53:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     *** Polling mode IO operation ***
  54:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     =================================
  55:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     [..]
  56:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       (+) Send an amount of data in blocking mode using HAL_IRDA_Transmit()
  57:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       (+) Receive an amount of data in blocking mode using HAL_IRDA_Receive()
  58:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
  59:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     *** Interrupt mode IO operation ***
  60:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     ===================================
  61:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     [..]
  62:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       (+) Send an amount of data in non blocking mode using HAL_IRDA_Transmit_IT()
  63:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       (+) At transmission end of transfer HAL_IRDA_TxCpltCallback is executed and user can
  64:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****            add his own code by customization of function pointer HAL_IRDA_TxCpltCallback
  65:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       (+) Receive an amount of data in non blocking mode using HAL_IRDA_Receive_IT()
  66:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       (+) At reception end of transfer HAL_IRDA_RxCpltCallback is executed and user can
  67:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****            add his own code by customization of function pointer HAL_IRDA_RxCpltCallback
  68:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       (+) In case of transfer Error, HAL_IRDA_ErrorCallback() function is executed and user can
  69:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****            add his own code by customization of function pointer HAL_IRDA_ErrorCallback
  70:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
  71:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     *** DMA mode IO operation ***
  72:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     =============================
  73:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     [..]
  74:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       (+) Send an amount of data in non blocking mode (DMA) using HAL_IRDA_Transmit_DMA()
  75:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       (+) At transmission end of half transfer HAL_IRDA_TxHalfCpltCallback is executed and user can
  76:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****             add his own code by customization of function pointer HAL_IRDA_TxHalfCpltCallback
  77:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       (+) At transmission end of transfer HAL_IRDA_TxCpltCallback is executed and user can
  78:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****            add his own code by customization of function pointer HAL_IRDA_TxCpltCallback
  79:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       (+) Receive an amount of data in non blocking mode (DMA) using HAL_IRDA_Receive_DMA()
  80:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       (+) At reception end of half transfer HAL_IRDA_RxHalfCpltCallback is executed and user can
  81:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****             add his own code by customization of function pointer HAL_IRDA_RxHalfCpltCallback
  82:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       (+) At reception end of transfer HAL_IRDA_RxCpltCallback is executed and user can
  83:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****            add his own code by customization of function pointer HAL_IRDA_RxCpltCallback
  84:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       (+) In case of transfer Error, HAL_IRDA_ErrorCallback() function is executed and user can
  85:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****            add his own code by customization of function pointer HAL_IRDA_ErrorCallback
  86:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       (+) Pause the DMA Transfer using HAL_IRDA_DMAPause()
  87:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       (+) Resume the DMA Transfer using HAL_IRDA_DMAResume()
ARM GAS  /tmp/ccwOIEYW.s 			page 3


  88:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       (+) Stop the DMA Transfer using HAL_IRDA_DMAStop()
  89:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
  90:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     *** IRDA HAL driver macros list ***
  91:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     ===================================
  92:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     [..]
  93:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       Below the list of most used macros in IRDA HAL driver.
  94:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
  95:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****        (+) __HAL_IRDA_ENABLE: Enable the IRDA peripheral
  96:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****        (+) __HAL_IRDA_DISABLE: Disable the IRDA peripheral
  97:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****        (+) __HAL_IRDA_GET_FLAG : Check whether the specified IRDA flag is set or not
  98:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****        (+) __HAL_IRDA_CLEAR_FLAG : Clear the specified IRDA pending flag
  99:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****        (+) __HAL_IRDA_ENABLE_IT: Enable the specified IRDA interrupt
 100:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****        (+) __HAL_IRDA_DISABLE_IT: Disable the specified IRDA interrupt
 101:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****        (+) __HAL_IRDA_GET_IT_SOURCE: Check whether the specified IRDA interrupt has occurred or not
 102:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 103:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     [..]
 104:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****      (@) You can refer to the IRDA HAL driver header file for more useful macros
 105:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 106:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     ##### Callback registration #####
 107:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     ==================================
 108:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 109:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     [..]
 110:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       The compilation define USE_HAL_IRDA_REGISTER_CALLBACKS when set to 1
 111:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       allows the user to configure dynamically the driver callbacks.
 112:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 113:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     [..]
 114:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       Use Function @ref HAL_IRDA_RegisterCallback() to register a user callback.
 115:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       Function @ref HAL_IRDA_RegisterCallback() allows to register following callbacks:
 116:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****        (+) TxHalfCpltCallback        : Tx Half Complete Callback.
 117:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****        (+) TxCpltCallback            : Tx Complete Callback.
 118:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****        (+) RxHalfCpltCallback        : Rx Half Complete Callback.
 119:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****        (+) RxCpltCallback            : Rx Complete Callback.
 120:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****        (+) ErrorCallback             : Error Callback.
 121:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****        (+) AbortCpltCallback         : Abort Complete Callback.
 122:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****        (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
 123:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****        (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
 124:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****        (+) MspInitCallback           : IRDA MspInit.
 125:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****        (+) MspDeInitCallback         : IRDA MspDeInit.
 126:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       This function takes as parameters the HAL peripheral handle, the Callback ID
 127:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       and a pointer to the user callback function.
 128:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 129:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     [..]
 130:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       Use function @ref HAL_IRDA_UnRegisterCallback() to reset a callback to the default
 131:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       weak (surcharged) function.
 132:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       @ref HAL_IRDA_UnRegisterCallback() takes as parameters the HAL peripheral handle,
 133:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       and the Callback ID.
 134:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       This function allows to reset following callbacks:
 135:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****        (+) TxHalfCpltCallback        : Tx Half Complete Callback.
 136:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****        (+) TxCpltCallback            : Tx Complete Callback.
 137:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****        (+) RxHalfCpltCallback        : Rx Half Complete Callback.
 138:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****        (+) RxCpltCallback            : Rx Complete Callback.
 139:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****        (+) ErrorCallback             : Error Callback.
 140:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****        (+) AbortCpltCallback         : Abort Complete Callback.
 141:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****        (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
 142:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****        (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
 143:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****        (+) MspInitCallback           : IRDA MspInit.
 144:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****        (+) MspDeInitCallback         : IRDA MspDeInit.
ARM GAS  /tmp/ccwOIEYW.s 			page 4


 145:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 146:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     [..]
 147:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       By default, after the @ref HAL_IRDA_Init() and when the state is HAL_IRDA_STATE_RESET
 148:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       all callbacks are set to the corresponding weak (surcharged) functions:
 149:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       examples @ref HAL_IRDA_TxCpltCallback(), @ref HAL_IRDA_RxHalfCpltCallback().
 150:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       Exception done for MspInit and MspDeInit functions that are respectively
 151:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       reset to the legacy weak (surcharged) functions in the @ref HAL_IRDA_Init()
 152:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       and @ref HAL_IRDA_DeInit() only when these callbacks are null (not registered beforehand).
 153:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       If not, MspInit or MspDeInit are not null, the @ref HAL_IRDA_Init() and @ref HAL_IRDA_DeInit(
 154:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       keep and use the user MspInit/MspDeInit callbacks (registered beforehand).
 155:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 156:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     [..]
 157:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       Callbacks can be registered/unregistered in HAL_IRDA_STATE_READY state only.
 158:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       Exception done MspInit/MspDeInit that can be registered/unregistered
 159:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       in HAL_IRDA_STATE_READY or HAL_IRDA_STATE_RESET state, thus registered (user)
 160:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       MspInit/DeInit callbacks can be used during the Init/DeInit.
 161:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       In that case first register the MspInit/MspDeInit user callbacks
 162:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       using @ref HAL_IRDA_RegisterCallback() before calling @ref HAL_IRDA_DeInit()
 163:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       or @ref HAL_IRDA_Init() function.
 164:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 165:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     [..]
 166:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       When The compilation define USE_HAL_IRDA_REGISTER_CALLBACKS is set to 0 or
 167:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       not defined, the callback registration feature is not available
 168:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       and weak (surcharged) callbacks are used.
 169:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 170:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   @endverbatim
 171:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****      [..]
 172:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****        (@) Additionnal remark: If the parity is enabled, then the MSB bit of the data written
 173:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****            in the data register is transmitted but is changed by the parity bit.
 174:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****            Depending on the frame length defined by the M bit (8-bits or 9-bits),
 175:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****            the possible IRDA frame formats are as listed in the following table:
 176:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     +-------------------------------------------------------------+
 177:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     |   M bit |  PCE bit  |            IRDA frame                 |
 178:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     |---------------------|---------------------------------------|
 179:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     |    0    |    0      |    | SB | 8 bit data | 1 STB |        |
 180:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     |---------|-----------|---------------------------------------|
 181:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     |    0    |    1      |    | SB | 7 bit data | PB | 1 STB |   |
 182:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     |---------|-----------|---------------------------------------|
 183:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     |    1    |    0      |    | SB | 9 bit data | 1 STB |        |
 184:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     |---------|-----------|---------------------------------------|
 185:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     |    1    |    1      |    | SB | 8 bit data | PB | 1 STB |   |
 186:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     +-------------------------------------------------------------+
 187:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   ******************************************************************************
 188:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @attention
 189:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *
 190:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
 191:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * All rights reserved.</center></h2>
 192:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *
 193:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 194:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * the "License"; You may not use this file except in compliance with the
 195:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * License. You may obtain a copy of the License at:
 196:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *                        opensource.org/licenses/BSD-3-Clause
 197:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *
 198:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   ******************************************************************************
 199:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   */
 200:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 201:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** /* Includes ------------------------------------------------------------------*/
ARM GAS  /tmp/ccwOIEYW.s 			page 5


 202:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #include "stm32f4xx_hal.h"
 203:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 204:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** /** @addtogroup STM32F4xx_HAL_Driver
 205:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @{
 206:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   */
 207:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 208:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** /** @defgroup IRDA IRDA
 209:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @brief HAL IRDA module driver
 210:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @{
 211:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   */
 212:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 213:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #ifdef HAL_IRDA_MODULE_ENABLED
 214:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 215:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** /* Private typedef -----------------------------------------------------------*/
 216:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** /* Private define ------------------------------------------------------------*/
 217:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** /* Private constants ---------------------------------------------------------*/
 218:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** /* Private macro -------------------------------------------------------------*/
 219:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** /* Private variables ---------------------------------------------------------*/
 220:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** /* Private function prototypes -----------------------------------------------*/
 221:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** /** @addtogroup IRDA_Private_Functions
 222:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @{
 223:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   */
 224:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #if (USE_HAL_IRDA_REGISTER_CALLBACKS == 1)
 225:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** void IRDA_InitCallbacksToDefault(IRDA_HandleTypeDef *hirda);
 226:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #endif /* USE_HAL_IRDA_REGISTER_CALLBACKS */
 227:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** static void IRDA_SetConfig(IRDA_HandleTypeDef *hirda);
 228:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** static HAL_StatusTypeDef IRDA_Transmit_IT(IRDA_HandleTypeDef *hirda);
 229:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** static HAL_StatusTypeDef IRDA_EndTransmit_IT(IRDA_HandleTypeDef *hirda);
 230:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** static HAL_StatusTypeDef IRDA_Receive_IT(IRDA_HandleTypeDef *hirda);
 231:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** static void IRDA_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 232:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** static void IRDA_DMATransmitHalfCplt(DMA_HandleTypeDef *hdma);
 233:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** static void IRDA_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 234:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** static void IRDA_DMAReceiveHalfCplt(DMA_HandleTypeDef *hdma);
 235:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** static void IRDA_DMAError(DMA_HandleTypeDef *hdma);
 236:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** static void IRDA_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 237:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** static void IRDA_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 238:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** static void IRDA_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
 239:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** static void IRDA_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 240:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** static void IRDA_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 241:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** static HAL_StatusTypeDef IRDA_WaitOnFlagUntilTimeout(IRDA_HandleTypeDef *hirda, uint32_t Flag, Flag
 242:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** static void IRDA_EndTxTransfer(IRDA_HandleTypeDef *hirda);
 243:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** static void IRDA_EndRxTransfer(IRDA_HandleTypeDef *hirda);
 244:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** /**
 245:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @}
 246:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   */
 247:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 248:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** /* Exported functions --------------------------------------------------------*/
 249:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** /** @defgroup IRDA_Exported_Functions IrDA Exported Functions
 250:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @{
 251:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   */
 252:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 253:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** /** @defgroup IRDA_Exported_Functions_Group1 IrDA Initialization and de-initialization functions
 254:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *  @brief    Initialization and Configuration functions
 255:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *
 256:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** @verbatim
 257:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 258:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   ==============================================================================
ARM GAS  /tmp/ccwOIEYW.s 			page 6


 259:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****             ##### Initialization and Configuration functions #####
 260:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   ==============================================================================
 261:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     [..]
 262:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy
 263:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     in asynchronous IrDA mode.
 264:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       (+) For the asynchronous mode only these parameters can be configured:
 265:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         (++) BaudRate
 266:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         (++) WordLength
 267:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         (++) Parity: If the parity is enabled, then the MSB bit of the data written
 268:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****              in the data register is transmitted but is changed by the parity bit.
 269:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****              Depending on the frame length defined by the M bit (8-bits or 9-bits),
 270:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****              please refer to Reference manual for possible IRDA frame formats.
 271:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         (++) Prescaler: A pulse of width less than two and greater than one PSC period(s) may or ma
 272:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****              not be rejected. The receiver set up time should be managed by software. The IrDA phys
 273:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****              specification specifies a minimum of 10 ms delay between transmission and
 274:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****              reception (IrDA is a half duplex protocol).
 275:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         (++) Mode: Receiver/transmitter modes
 276:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         (++) IrDAMode: the IrDA can operate in the Normal mode or in the Low power mode.
 277:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     [..]
 278:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     The HAL_IRDA_Init() API follows IRDA configuration procedures (details for the procedures
 279:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     are available in reference manual).
 280:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 281:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** @endverbatim
 282:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @{
 283:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   */
 284:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 285:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** /**
 286:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @brief  Initializes the IRDA mode according to the specified
 287:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *         parameters in the IRDA_InitTypeDef and create the associated handle.
 288:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @param  hirda  Pointer to a IRDA_HandleTypeDef structure that contains
 289:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *                the configuration information for the specified IRDA module.
 290:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @retval HAL status
 291:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   */
 292:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** HAL_StatusTypeDef HAL_IRDA_Init(IRDA_HandleTypeDef *hirda)
 293:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** {
 294:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Check the IRDA handle allocation */
 295:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   if (hirda == NULL)
 296:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 297:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     return HAL_ERROR;
 298:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
 299:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 300:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Check the IRDA instance parameters */
 301:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   assert_param(IS_IRDA_INSTANCE(hirda->Instance));
 302:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Check the IRDA mode parameter in the IRDA handle */
 303:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   assert_param(IS_IRDA_POWERMODE(hirda->Init.IrDAMode));
 304:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 305:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   if (hirda->gState == HAL_IRDA_STATE_RESET)
 306:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 307:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* Allocate lock resource and initialize it */
 308:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->Lock = HAL_UNLOCKED;
 309:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 310:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #if USE_HAL_IRDA_REGISTER_CALLBACKS == 1
 311:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     IRDA_InitCallbacksToDefault(hirda);
 312:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 313:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     if (hirda->MspInitCallback == NULL)
 314:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 315:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       hirda->MspInitCallback = HAL_IRDA_MspInit;
ARM GAS  /tmp/ccwOIEYW.s 			page 7


 316:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
 317:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 318:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* Init the low level hardware */
 319:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->MspInitCallback(hirda);
 320:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #else
 321:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* Init the low level hardware : GPIO, CLOCK */
 322:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     HAL_IRDA_MspInit(hirda);
 323:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #endif /* USE_HAL_IRDA_REGISTER_CALLBACKS */
 324:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
 325:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 326:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   hirda->gState = HAL_IRDA_STATE_BUSY;
 327:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 328:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Disable the IRDA peripheral */
 329:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   __HAL_IRDA_DISABLE(hirda);
 330:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 331:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Set the IRDA communication parameters */
 332:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   IRDA_SetConfig(hirda);
 333:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 334:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* In IrDA mode, the following bits must be kept cleared:
 335:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   - LINEN, STOP and CLKEN bits in the USART_CR2 register,
 336:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   - SCEN and HDSEL bits in the USART_CR3 register.*/
 337:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   CLEAR_BIT(hirda->Instance->CR2, (USART_CR2_LINEN | USART_CR2_STOP | USART_CR2_CLKEN));
 338:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   CLEAR_BIT(hirda->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL));
 339:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 340:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Enable the IRDA peripheral */
 341:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   __HAL_IRDA_ENABLE(hirda);
 342:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 343:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Set the prescaler */
 344:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   MODIFY_REG(hirda->Instance->GTPR, USART_GTPR_PSC, hirda->Init.Prescaler);
 345:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 346:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Configure the IrDA mode */
 347:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   MODIFY_REG(hirda->Instance->CR3, USART_CR3_IRLP, hirda->Init.IrDAMode);
 348:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 349:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Enable the IrDA mode by setting the IREN bit in the CR3 register */
 350:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   SET_BIT(hirda->Instance->CR3, USART_CR3_IREN);
 351:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 352:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Initialize the IRDA state*/
 353:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   hirda->ErrorCode = HAL_IRDA_ERROR_NONE;
 354:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   hirda->gState = HAL_IRDA_STATE_READY;
 355:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   hirda->RxState = HAL_IRDA_STATE_READY;
 356:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 357:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   return HAL_OK;
 358:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** }
 359:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 360:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** /**
 361:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @brief  DeInitializes the IRDA peripheral
 362:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @param  hirda  Pointer to a IRDA_HandleTypeDef structure that contains
 363:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *                the configuration information for the specified IRDA module.
 364:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @retval HAL status
 365:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   */
 366:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** HAL_StatusTypeDef HAL_IRDA_DeInit(IRDA_HandleTypeDef *hirda)
 367:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** {
 368:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Check the IRDA handle allocation */
 369:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   if (hirda == NULL)
 370:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 371:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     return HAL_ERROR;
 372:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
ARM GAS  /tmp/ccwOIEYW.s 			page 8


 373:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 374:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Check the parameters */
 375:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   assert_param(IS_IRDA_INSTANCE(hirda->Instance));
 376:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 377:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   hirda->gState = HAL_IRDA_STATE_BUSY;
 378:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 379:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Disable the Peripheral */
 380:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   __HAL_IRDA_DISABLE(hirda);
 381:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 382:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* DeInit the low level hardware */
 383:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #if USE_HAL_IRDA_REGISTER_CALLBACKS == 1
 384:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   if (hirda->MspDeInitCallback == NULL)
 385:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 386:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->MspDeInitCallback = HAL_IRDA_MspDeInit;
 387:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
 388:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* DeInit the low level hardware */
 389:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   hirda->MspDeInitCallback(hirda);
 390:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #else
 391:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   HAL_IRDA_MspDeInit(hirda);
 392:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #endif /* USE_HAL_IRDA_REGISTER_CALLBACKS */
 393:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 394:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   hirda->ErrorCode = HAL_IRDA_ERROR_NONE;
 395:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 396:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   hirda->gState = HAL_IRDA_STATE_RESET;
 397:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   hirda->RxState = HAL_IRDA_STATE_RESET;
 398:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 399:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Release Lock */
 400:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   __HAL_UNLOCK(hirda);
 401:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 402:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   return HAL_OK;
 403:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** }
 404:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 405:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** /**
 406:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @brief  IRDA MSP Init.
 407:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @param  hirda  Pointer to a IRDA_HandleTypeDef structure that contains
 408:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *                the configuration information for the specified IRDA module.
 409:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @retval None
 410:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   */
 411:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** __weak void HAL_IRDA_MspInit(IRDA_HandleTypeDef *hirda)
 412:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** {
 413:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Prevent unused argument(s) compilation warning */
 414:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   UNUSED(hirda);
 415:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 416:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* NOTE: This function should not be modified, when the callback is needed,
 417:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****            the HAL_IRDA_MspInit can be implemented in the user file
 418:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****    */
 419:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** }
 420:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 421:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** /**
 422:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @brief  IRDA MSP DeInit.
 423:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @param  hirda  Pointer to a IRDA_HandleTypeDef structure that contains
 424:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *                the configuration information for the specified IRDA module.
 425:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @retval None
 426:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   */
 427:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** __weak void HAL_IRDA_MspDeInit(IRDA_HandleTypeDef *hirda)
 428:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** {
 429:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Prevent unused argument(s) compilation warning */
ARM GAS  /tmp/ccwOIEYW.s 			page 9


 430:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   UNUSED(hirda);
 431:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 432:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* NOTE: This function should not be modified, when the callback is needed,
 433:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****            the HAL_IRDA_MspDeInit can be implemented in the user file
 434:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****    */
 435:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** }
 436:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 437:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #if (USE_HAL_IRDA_REGISTER_CALLBACKS == 1)
 438:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** /**
 439:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @brief  Register a User IRDA Callback
 440:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *         To be used instead of the weak predefined callback
 441:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @param  hirda irda handle
 442:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @param  CallbackID ID of the callback to be registered
 443:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *         This parameter can be one of the following values:
 444:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *           @arg @ref HAL_IRDA_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 445:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *           @arg @ref HAL_IRDA_TX_COMPLETE_CB_ID Tx Complete Callback ID
 446:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *           @arg @ref HAL_IRDA_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 447:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *           @arg @ref HAL_IRDA_RX_COMPLETE_CB_ID Rx Complete Callback ID
 448:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *           @arg @ref HAL_IRDA_ERROR_CB_ID Error Callback ID
 449:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *           @arg @ref HAL_IRDA_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 450:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *           @arg @ref HAL_IRDA_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 451:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *           @arg @ref HAL_IRDA_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 452:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *           @arg @ref HAL_IRDA_MSPINIT_CB_ID MspInit Callback ID
 453:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *           @arg @ref HAL_IRDA_MSPDEINIT_CB_ID MspDeInit Callback ID
 454:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @param  pCallback pointer to the Callback function
 455:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @retval HAL status
 456:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   */
 457:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** HAL_StatusTypeDef HAL_IRDA_RegisterCallback(IRDA_HandleTypeDef *hirda, HAL_IRDA_CallbackIDTypeDef C
 458:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** {
 459:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   HAL_StatusTypeDef status = HAL_OK;
 460:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 461:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   if (pCallback == NULL)
 462:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 463:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* Update the error code */
 464:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->ErrorCode |= HAL_IRDA_ERROR_INVALID_CALLBACK;
 465:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 466:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     return HAL_ERROR;
 467:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
 468:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Process locked */
 469:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   __HAL_LOCK(hirda);
 470:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 471:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   if (hirda->gState == HAL_IRDA_STATE_READY)
 472:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 473:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     switch (CallbackID)
 474:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 475:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       case HAL_IRDA_TX_HALFCOMPLETE_CB_ID :
 476:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         hirda->TxHalfCpltCallback = pCallback;
 477:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         break;
 478:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 479:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       case HAL_IRDA_TX_COMPLETE_CB_ID :
 480:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         hirda->TxCpltCallback = pCallback;
 481:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         break;
 482:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 483:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       case HAL_IRDA_RX_HALFCOMPLETE_CB_ID :
 484:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         hirda->RxHalfCpltCallback = pCallback;
 485:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         break;
 486:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
ARM GAS  /tmp/ccwOIEYW.s 			page 10


 487:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       case HAL_IRDA_RX_COMPLETE_CB_ID :
 488:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         hirda->RxCpltCallback = pCallback;
 489:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         break;
 490:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 491:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       case HAL_IRDA_ERROR_CB_ID :
 492:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         hirda->ErrorCallback = pCallback;
 493:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         break;
 494:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 495:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       case HAL_IRDA_ABORT_COMPLETE_CB_ID :
 496:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         hirda->AbortCpltCallback = pCallback;
 497:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         break;
 498:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 499:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       case HAL_IRDA_ABORT_TRANSMIT_COMPLETE_CB_ID :
 500:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         hirda->AbortTransmitCpltCallback = pCallback;
 501:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         break;
 502:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 503:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       case HAL_IRDA_ABORT_RECEIVE_COMPLETE_CB_ID :
 504:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         hirda->AbortReceiveCpltCallback = pCallback;
 505:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         break;
 506:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 507:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       case HAL_IRDA_MSPINIT_CB_ID :
 508:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         hirda->MspInitCallback = pCallback;
 509:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         break;
 510:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 511:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       case HAL_IRDA_MSPDEINIT_CB_ID :
 512:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         hirda->MspDeInitCallback = pCallback;
 513:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         break;
 514:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 515:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       default :
 516:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         /* Update the error code */
 517:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         hirda->ErrorCode |= HAL_IRDA_ERROR_INVALID_CALLBACK;
 518:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 519:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         /* Return error status */
 520:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         status =  HAL_ERROR;
 521:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         break;
 522:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
 523:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
 524:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   else if (hirda->gState == HAL_IRDA_STATE_RESET)
 525:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 526:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     switch (CallbackID)
 527:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 528:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       case HAL_IRDA_MSPINIT_CB_ID :
 529:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         hirda->MspInitCallback = pCallback;
 530:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         break;
 531:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 532:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       case HAL_IRDA_MSPDEINIT_CB_ID :
 533:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         hirda->MspDeInitCallback = pCallback;
 534:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         break;
 535:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 536:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       default :
 537:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         /* Update the error code */
 538:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         hirda->ErrorCode |= HAL_IRDA_ERROR_INVALID_CALLBACK;
 539:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 540:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         /* Return error status */
 541:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         status =  HAL_ERROR;
 542:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         break;
 543:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
ARM GAS  /tmp/ccwOIEYW.s 			page 11


 544:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
 545:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   else
 546:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 547:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* Update the error code */
 548:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->ErrorCode |= HAL_IRDA_ERROR_INVALID_CALLBACK;
 549:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 550:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* Return error status */
 551:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     status =  HAL_ERROR;
 552:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
 553:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 554:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Release Lock */
 555:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   __HAL_UNLOCK(hirda);
 556:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 557:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   return status;
 558:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** }
 559:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 560:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** /**
 561:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @brief  Unregister an IRDA callback
 562:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *         IRDA callback is redirected to the weak predefined callback
 563:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @param  hirda irda handle
 564:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @param  CallbackID ID of the callback to be unregistered
 565:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *         This parameter can be one of the following values:
 566:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *           @arg @ref HAL_IRDA_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 567:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *           @arg @ref HAL_IRDA_TX_COMPLETE_CB_ID Tx Complete Callback ID
 568:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *           @arg @ref HAL_IRDA_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 569:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *           @arg @ref HAL_IRDA_RX_COMPLETE_CB_ID Rx Complete Callback ID
 570:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *           @arg @ref HAL_IRDA_ERROR_CB_ID Error Callback ID
 571:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *           @arg @ref HAL_IRDA_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 572:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *           @arg @ref HAL_IRDA_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 573:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *           @arg @ref HAL_IRDA_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 574:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *           @arg @ref HAL_IRDA_MSPINIT_CB_ID MspInit Callback ID
 575:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *           @arg @ref HAL_IRDA_MSPDEINIT_CB_ID MspDeInit Callback ID
 576:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @retval HAL status
 577:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   */
 578:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** HAL_StatusTypeDef HAL_IRDA_UnRegisterCallback(IRDA_HandleTypeDef *hirda, HAL_IRDA_CallbackIDTypeDef
 579:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** {
 580:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   HAL_StatusTypeDef status = HAL_OK;
 581:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 582:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Process locked */
 583:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   __HAL_LOCK(hirda);
 584:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 585:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   if (HAL_IRDA_STATE_READY == hirda->gState)
 586:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 587:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     switch (CallbackID)
 588:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 589:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       case HAL_IRDA_TX_HALFCOMPLETE_CB_ID :
 590:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         hirda->TxHalfCpltCallback = HAL_IRDA_TxHalfCpltCallback;               /* Legacy weak  TxHa
 591:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         break;
 592:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 593:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       case HAL_IRDA_TX_COMPLETE_CB_ID :
 594:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         hirda->TxCpltCallback = HAL_IRDA_TxCpltCallback;                       /* Legacy weak TxCpl
 595:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         break;
 596:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 597:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       case HAL_IRDA_RX_HALFCOMPLETE_CB_ID :
 598:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         hirda->RxHalfCpltCallback = HAL_IRDA_RxHalfCpltCallback;               /* Legacy weak RxHal
 599:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         break;
 600:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
ARM GAS  /tmp/ccwOIEYW.s 			page 12


 601:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       case HAL_IRDA_RX_COMPLETE_CB_ID :
 602:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         hirda->RxCpltCallback = HAL_IRDA_RxCpltCallback;                       /* Legacy weak RxCpl
 603:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         break;
 604:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 605:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       case HAL_IRDA_ERROR_CB_ID :
 606:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         hirda->ErrorCallback = HAL_IRDA_ErrorCallback;                         /* Legacy weak Error
 607:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         break;
 608:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 609:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       case HAL_IRDA_ABORT_COMPLETE_CB_ID :
 610:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         hirda->AbortCpltCallback = HAL_IRDA_AbortCpltCallback;                 /* Legacy weak Abort
 611:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         break;
 612:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 613:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       case HAL_IRDA_ABORT_TRANSMIT_COMPLETE_CB_ID :
 614:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         hirda->AbortTransmitCpltCallback = HAL_IRDA_AbortTransmitCpltCallback; /* Legacy weak Abort
 615:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         break;
 616:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 617:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       case HAL_IRDA_ABORT_RECEIVE_COMPLETE_CB_ID :
 618:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         hirda->AbortReceiveCpltCallback = HAL_IRDA_AbortReceiveCpltCallback;   /* Legacy weak Abort
 619:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         break;
 620:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 621:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       case HAL_IRDA_MSPINIT_CB_ID :
 622:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         hirda->MspInitCallback = HAL_IRDA_MspInit;                             /* Legacy weak MspIn
 623:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         break;
 624:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 625:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       case HAL_IRDA_MSPDEINIT_CB_ID :
 626:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         hirda->MspDeInitCallback = HAL_IRDA_MspDeInit;                         /* Legacy weak MspDe
 627:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         break;
 628:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 629:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       default :
 630:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         /* Update the error code */
 631:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         hirda->ErrorCode |= HAL_IRDA_ERROR_INVALID_CALLBACK;
 632:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 633:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         /* Return error status */
 634:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         status =  HAL_ERROR;
 635:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         break;
 636:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
 637:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
 638:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   else if (HAL_IRDA_STATE_RESET == hirda->gState)
 639:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 640:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     switch (CallbackID)
 641:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 642:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       case HAL_IRDA_MSPINIT_CB_ID :
 643:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         hirda->MspInitCallback = HAL_IRDA_MspInit;
 644:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         break;
 645:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 646:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       case HAL_IRDA_MSPDEINIT_CB_ID :
 647:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         hirda->MspDeInitCallback = HAL_IRDA_MspDeInit;
 648:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         break;
 649:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 650:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       default :
 651:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         /* Update the error code */
 652:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         hirda->ErrorCode |= HAL_IRDA_ERROR_INVALID_CALLBACK;
 653:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 654:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         /* Return error status */
 655:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         status =  HAL_ERROR;
 656:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         break;
 657:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
ARM GAS  /tmp/ccwOIEYW.s 			page 13


 658:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
 659:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   else
 660:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 661:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* Update the error code */
 662:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->ErrorCode |= HAL_IRDA_ERROR_INVALID_CALLBACK;
 663:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 664:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* Return error status */
 665:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     status =  HAL_ERROR;
 666:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
 667:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 668:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Release Lock */
 669:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   __HAL_UNLOCK(hirda);
 670:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 671:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   return status;
 672:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** }
 673:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #endif /* USE_HAL_IRDA_REGISTER_CALLBACKS */
 674:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 675:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** /**
 676:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @}
 677:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   */
 678:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 679:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** /** @defgroup IRDA_Exported_Functions_Group2 IO operation functions
 680:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *  @brief   IRDA Transmit and Receive functions
 681:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *
 682:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** @verbatim
 683:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   ==============================================================================
 684:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****                       ##### IO operation functions #####
 685:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   ==============================================================================
 686:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     [..]
 687:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     This subsection provides a set of functions allowing to manage the IRDA data transfers.
 688:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     IrDA is a half duplex communication protocol. If the Transmitter is busy, any data
 689:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     on the IrDA receive line will be ignored by the IrDA decoder and if the Receiver
 690:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     is busy, data on the TX from the USART to IrDA will not be encoded by IrDA.
 691:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     While receiving data, transmission should be avoided as the data to be transmitted
 692:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     could be corrupted.
 693:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 694:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     (#) There are two modes of transfer:
 695:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****        (++) Blocking mode: The communication is performed in polling mode.
 696:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****             The HAL status of all data processing is returned by the same function
 697:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****             after finishing transfer.
 698:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****        (++) Non-Blocking mode: The communication is performed using Interrupts
 699:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****            or DMA, these API's return the HAL status.
 700:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****            The end of the data processing will be indicated through the
 701:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****            dedicated IRDA IRQ when using Interrupt mode or the DMA IRQ when
 702:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****            using DMA mode.
 703:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****            The HAL_IRDA_TxCpltCallback(), HAL_IRDA_RxCpltCallback() user callbacks
 704:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****            will be executed respectively at the end of the Transmit or Receive process
 705:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****            The HAL_IRDA_ErrorCallback() user callback will be executed when a communication error i
 706:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 707:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     (#) Blocking mode APIs are :
 708:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         (++) HAL_IRDA_Transmit()
 709:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         (++) HAL_IRDA_Receive()
 710:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 711:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     (#) Non Blocking mode APIs with Interrupt are :
 712:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         (++) HAL_IRDA_Transmit_IT()
 713:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         (++) HAL_IRDA_Receive_IT()
 714:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         (++) HAL_IRDA_IRQHandler()
ARM GAS  /tmp/ccwOIEYW.s 			page 14


 715:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 716:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     (#) Non Blocking mode functions with DMA are :
 717:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         (++) HAL_IRDA_Transmit_DMA()
 718:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         (++) HAL_IRDA_Receive_DMA()
 719:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         (++) HAL_IRDA_DMAPause()
 720:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         (++) HAL_IRDA_DMAResume()
 721:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         (++) HAL_IRDA_DMAStop()
 722:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 723:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     (#) A set of Transfer Complete Callbacks are provided in Non Blocking mode:
 724:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         (++) HAL_IRDA_TxHalfCpltCallback()
 725:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         (++) HAL_IRDA_TxCpltCallback()
 726:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         (++) HAL_IRDA_RxHalfCpltCallback()
 727:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         (++) HAL_IRDA_RxCpltCallback()
 728:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         (++) HAL_IRDA_ErrorCallback()
 729:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 730:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     (#) Non-Blocking mode transfers could be aborted using Abort API's :
 731:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         (+) HAL_IRDA_Abort()
 732:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         (+) HAL_IRDA_AbortTransmit()
 733:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         (+) HAL_IRDA_AbortReceive()
 734:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         (+) HAL_IRDA_Abort_IT()
 735:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         (+) HAL_IRDA_AbortTransmit_IT()
 736:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         (+) HAL_IRDA_AbortReceive_IT()
 737:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 738:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     (#) For Abort services based on interrupts (HAL_IRDA_Abortxxx_IT), a set of Abort Complete Call
 739:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         (+) HAL_IRDA_AbortCpltCallback()
 740:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         (+) HAL_IRDA_AbortTransmitCpltCallback()
 741:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         (+) HAL_IRDA_AbortReceiveCpltCallback()
 742:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 743:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     (#) In Non-Blocking mode transfers, possible errors are split into 2 categories.
 744:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         Errors are handled as follows :
 745:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         (+) Error is considered as Recoverable and non blocking : Transfer could go till end, but e
 746:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****             to be evaluated by user : this concerns Frame Error, Parity Error or Noise Error in Int
 747:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****             Received character is then retrieved and stored in Rx buffer, Error code is set to allo
 748:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****             and HAL_IRDA_ErrorCallback() user callback is executed. Transfer is kept ongoing on IRD
 749:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****             If user wants to abort it, Abort services should be called by user.
 750:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         (+) Error is considered as Blocking : Transfer could not be completed properly and is abort
 751:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****             This concerns Overrun Error In Interrupt mode reception and all errors in DMA mode.
 752:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****             Error code is set to allow user to identify error type, and HAL_IRDA_ErrorCallback() us
 753:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 754:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** @endverbatim
 755:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @{
 756:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   */
 757:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 758:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** /**
 759:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @brief  Sends an amount of data in blocking mode.
 760:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @param  hirda  Pointer to a IRDA_HandleTypeDef structure that contains
 761:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *                the configuration information for the specified IRDA module.
 762:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @param  pData Pointer to data buffer
 763:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @param  Size Amount of data to be sent
 764:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @param  Timeout Specify timeout value
 765:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @retval HAL status
 766:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   */
 767:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** HAL_StatusTypeDef HAL_IRDA_Transmit(IRDA_HandleTypeDef *hirda, uint8_t *pData, uint16_t Size, uint3
 768:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** {
 769:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   uint16_t *tmp;
 770:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   uint32_t tickstart = 0U;
 771:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
ARM GAS  /tmp/ccwOIEYW.s 			page 15


 772:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Check that a Tx process is not already ongoing */
 773:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   if (hirda->gState == HAL_IRDA_STATE_READY)
 774:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 775:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     if ((pData == NULL) || (Size == 0U))
 776:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 777:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       return  HAL_ERROR;
 778:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
 779:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 780:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* Process Locked */
 781:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     __HAL_LOCK(hirda);
 782:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 783:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->ErrorCode = HAL_IRDA_ERROR_NONE;
 784:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->gState = HAL_IRDA_STATE_BUSY_TX;
 785:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 786:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* Init tickstart for timeout managment*/
 787:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     tickstart = HAL_GetTick();
 788:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 789:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->TxXferSize = Size;
 790:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->TxXferCount = Size;
 791:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     while (hirda->TxXferCount > 0U)
 792:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 793:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       hirda->TxXferCount--;
 794:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       if (hirda->Init.WordLength == IRDA_WORDLENGTH_9B)
 795:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       {
 796:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         if (IRDA_WaitOnFlagUntilTimeout(hirda, IRDA_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 797:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         {
 798:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****           return HAL_TIMEOUT;
 799:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         }
 800:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         tmp = (uint16_t *) pData;
 801:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         hirda->Instance->DR = (*tmp & (uint16_t)0x01FF);
 802:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         if (hirda->Init.Parity == IRDA_PARITY_NONE)
 803:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         {
 804:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****           pData += 2U;
 805:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         }
 806:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         else
 807:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         {
 808:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****           pData += 1U;
 809:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         }
 810:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       }
 811:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       else
 812:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       {
 813:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         if (IRDA_WaitOnFlagUntilTimeout(hirda, IRDA_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 814:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         {
 815:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****           return HAL_TIMEOUT;
 816:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         }
 817:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         hirda->Instance->DR = (*pData++ & (uint8_t)0xFF);
 818:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       }
 819:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
 820:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 821:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     if (IRDA_WaitOnFlagUntilTimeout(hirda, IRDA_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 822:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 823:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       return HAL_TIMEOUT;
 824:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
 825:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 826:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* At end of Tx process, restore hirda->gState to Ready */
 827:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->gState = HAL_IRDA_STATE_READY;
 828:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
ARM GAS  /tmp/ccwOIEYW.s 			page 16


 829:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* Process Unlocked */
 830:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     __HAL_UNLOCK(hirda);
 831:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 832:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     return HAL_OK;
 833:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
 834:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   else
 835:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 836:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     return HAL_BUSY;
 837:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
 838:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** }
 839:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 840:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** /**
 841:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @brief  Receive an amount of data in blocking mode.
 842:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @param  hirda  Pointer to a IRDA_HandleTypeDef structure that contains
 843:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *                the configuration information for the specified IRDA module.
 844:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @param  pData Pointer to data buffer
 845:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @param  Size Amount of data to be received
 846:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @param  Timeout Specify timeout value
 847:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @retval HAL status
 848:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   */
 849:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** HAL_StatusTypeDef HAL_IRDA_Receive(IRDA_HandleTypeDef *hirda, uint8_t *pData, uint16_t Size, uint32
 850:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** {
 851:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   uint16_t *tmp;
 852:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   uint32_t tickstart = 0U;
 853:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 854:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Check that a Rx process is not already ongoing */
 855:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   if (hirda->RxState == HAL_IRDA_STATE_READY)
 856:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 857:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     if ((pData == NULL) || (Size == 0U))
 858:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 859:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       return  HAL_ERROR;
 860:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
 861:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 862:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* Process Locked */
 863:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     __HAL_LOCK(hirda);
 864:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 865:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->ErrorCode = HAL_IRDA_ERROR_NONE;
 866:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->RxState = HAL_IRDA_STATE_BUSY_RX;
 867:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 868:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* Init tickstart for timeout managment*/
 869:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     tickstart = HAL_GetTick();
 870:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 871:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->RxXferSize = Size;
 872:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->RxXferCount = Size;
 873:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 874:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* Check the remain data to be received */
 875:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     while (hirda->RxXferCount > 0U)
 876:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 877:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       hirda->RxXferCount--;
 878:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 879:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       if (hirda->Init.WordLength == IRDA_WORDLENGTH_9B)
 880:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       {
 881:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         if (IRDA_WaitOnFlagUntilTimeout(hirda, IRDA_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK
 882:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         {
 883:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****           return HAL_TIMEOUT;
 884:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         }
 885:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         tmp = (uint16_t *) pData ;
ARM GAS  /tmp/ccwOIEYW.s 			page 17


 886:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         if (hirda->Init.Parity == IRDA_PARITY_NONE)
 887:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         {
 888:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****           *tmp = (uint16_t)(hirda->Instance->DR & (uint16_t)0x01FF);
 889:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****           pData += 2U;
 890:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         }
 891:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         else
 892:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         {
 893:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****           *tmp = (uint16_t)(hirda->Instance->DR & (uint16_t)0x00FF);
 894:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****           pData += 1U;
 895:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         }
 896:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       }
 897:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       else
 898:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       {
 899:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         if (IRDA_WaitOnFlagUntilTimeout(hirda, IRDA_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK
 900:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         {
 901:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****           return HAL_TIMEOUT;
 902:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         }
 903:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         if (hirda->Init.Parity == IRDA_PARITY_NONE)
 904:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         {
 905:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****           *pData++ = (uint8_t)(hirda->Instance->DR & (uint8_t)0x00FF);
 906:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         }
 907:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         else
 908:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         {
 909:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****           *pData++ = (uint8_t)(hirda->Instance->DR & (uint8_t)0x007F);
 910:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         }
 911:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       }
 912:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
 913:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 914:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* At end of Rx process, restore hirda->RxState to Ready */
 915:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->RxState = HAL_IRDA_STATE_READY;
 916:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 917:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* Process Unlocked */
 918:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     __HAL_UNLOCK(hirda);
 919:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 920:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     return HAL_OK;
 921:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
 922:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   else
 923:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 924:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     return HAL_BUSY;
 925:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
 926:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** }
 927:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 928:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** /**
 929:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @brief  Send an amount of data in non blocking mode.
 930:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @param  hirda  Pointer to a IRDA_HandleTypeDef structure that contains
 931:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *                the configuration information for the specified IRDA module.
 932:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @param  pData Pointer to data buffer
 933:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @param  Size Amount of data to be sent
 934:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @retval HAL status
 935:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   */
 936:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** HAL_StatusTypeDef HAL_IRDA_Transmit_IT(IRDA_HandleTypeDef *hirda, uint8_t *pData, uint16_t Size)
 937:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** {
 938:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Check that a Tx process is not already ongoing */
 939:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   if (hirda->gState == HAL_IRDA_STATE_READY)
 940:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 941:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     if ((pData == NULL) || (Size == 0U))
 942:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
ARM GAS  /tmp/ccwOIEYW.s 			page 18


 943:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       return HAL_ERROR;
 944:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
 945:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 946:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* Process Locked */
 947:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     __HAL_LOCK(hirda);
 948:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 949:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->pTxBuffPtr = pData;
 950:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->TxXferSize = Size;
 951:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->TxXferCount = Size;
 952:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 953:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->ErrorCode = HAL_IRDA_ERROR_NONE;
 954:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->gState = HAL_IRDA_STATE_BUSY_TX;
 955:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 956:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* Process Unlocked */
 957:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     __HAL_UNLOCK(hirda);
 958:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 959:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* Enable the IRDA Transmit Data Register Empty Interrupt */
 960:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     SET_BIT(hirda->Instance->CR1, USART_CR1_TXEIE);
 961:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 962:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     return HAL_OK;
 963:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
 964:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   else
 965:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 966:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     return HAL_BUSY;
 967:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
 968:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** }
 969:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 970:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** /**
 971:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @brief  Receive an amount of data in non blocking mode.
 972:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @param  hirda  Pointer to a IRDA_HandleTypeDef structure that contains
 973:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *                the configuration information for the specified IRDA module.
 974:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @param  pData Pointer to data buffer
 975:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @param  Size Amount of data to be received
 976:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @retval HAL status
 977:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   */
 978:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** HAL_StatusTypeDef HAL_IRDA_Receive_IT(IRDA_HandleTypeDef *hirda, uint8_t *pData, uint16_t Size)
 979:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** {
 980:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Check that a Rx process is not already ongoing */
 981:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   if (hirda->RxState == HAL_IRDA_STATE_READY)
 982:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 983:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     if ((pData == NULL) || (Size == 0U))
 984:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 985:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       return HAL_ERROR;
 986:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
 987:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 988:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* Process Locked */
 989:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     __HAL_LOCK(hirda);
 990:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 991:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->pRxBuffPtr = pData;
 992:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->RxXferSize = Size;
 993:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->RxXferCount = Size;
 994:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 995:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->ErrorCode = HAL_IRDA_ERROR_NONE;
 996:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->RxState = HAL_IRDA_STATE_BUSY_RX;
 997:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 998:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* Process Unlocked */
 999:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     __HAL_UNLOCK(hirda);
ARM GAS  /tmp/ccwOIEYW.s 			page 19


1000:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1001:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* Enable the IRDA Parity Error and Data Register Not Empty Interrupts */
1002:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     SET_BIT(hirda->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE);
1003:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1004:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* Enable the IRDA Error Interrupt: (Frame error, Noise error, Overrun error) */
1005:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     SET_BIT(hirda->Instance->CR3, USART_CR3_EIE);
1006:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1007:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     return HAL_OK;
1008:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
1009:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   else
1010:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
1011:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     return HAL_BUSY;
1012:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
1013:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** }
1014:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1015:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** /**
1016:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @brief  Send an amount of data in non blocking mode.
1017:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @param  hirda  Pointer to a IRDA_HandleTypeDef structure that contains
1018:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *                the configuration information for the specified IRDA module.
1019:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @param  pData Pointer to data buffer
1020:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @param  Size Amount of data to be sent
1021:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @retval HAL status
1022:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   */
1023:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** HAL_StatusTypeDef HAL_IRDA_Transmit_DMA(IRDA_HandleTypeDef *hirda, uint8_t *pData, uint16_t Size)
1024:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** {
1025:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   uint32_t *tmp;
1026:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1027:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Check that a Tx process is not already ongoing */
1028:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   if (hirda->gState == HAL_IRDA_STATE_READY)
1029:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
1030:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     if ((pData == NULL) || (Size == 0U))
1031:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
1032:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       return HAL_ERROR;
1033:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
1034:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1035:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* Process Locked */
1036:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     __HAL_LOCK(hirda);
1037:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1038:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->pTxBuffPtr = pData;
1039:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->TxXferSize = Size;
1040:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->TxXferCount = Size;
1041:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1042:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->ErrorCode = HAL_IRDA_ERROR_NONE;
1043:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->gState = HAL_IRDA_STATE_BUSY_TX;
1044:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1045:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* Set the IRDA DMA transfer complete callback */
1046:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->hdmatx->XferCpltCallback = IRDA_DMATransmitCplt;
1047:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1048:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* Set the IRDA DMA half transfer complete callback */
1049:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->hdmatx->XferHalfCpltCallback = IRDA_DMATransmitHalfCplt;
1050:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1051:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* Set the DMA error callback */
1052:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->hdmatx->XferErrorCallback = IRDA_DMAError;
1053:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1054:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* Set the DMA abort callback */
1055:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->hdmatx->XferAbortCallback = NULL;
1056:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
ARM GAS  /tmp/ccwOIEYW.s 			page 20


1057:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* Enable the IRDA transmit DMA stream */
1058:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     tmp = (uint32_t *)&pData;
1059:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     HAL_DMA_Start_IT(hirda->hdmatx, *(uint32_t *)tmp, (uint32_t)&hirda->Instance->DR, Size);
1060:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1061:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* Clear the TC flag in the SR register by writing 0 to it */
1062:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     __HAL_IRDA_CLEAR_FLAG(hirda, IRDA_FLAG_TC);
1063:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1064:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* Process Unlocked */
1065:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     __HAL_UNLOCK(hirda);
1066:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1067:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
1068:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     in the USART CR3 register */
1069:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     SET_BIT(hirda->Instance->CR3, USART_CR3_DMAT);
1070:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1071:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     return HAL_OK;
1072:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
1073:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   else
1074:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
1075:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     return HAL_BUSY;
1076:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
1077:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** }
1078:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1079:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** /**
1080:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @brief  Receives an amount of data in non blocking mode.
1081:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @param  hirda  Pointer to a IRDA_HandleTypeDef structure that contains
1082:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *                the configuration information for the specified IRDA module.
1083:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @param  pData Pointer to data buffer
1084:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @param  Size Amount of data to be received
1085:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @note   When the IRDA parity is enabled (PCE = 1) the data received contain the parity bit.
1086:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @retval HAL status
1087:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   */
1088:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** HAL_StatusTypeDef HAL_IRDA_Receive_DMA(IRDA_HandleTypeDef *hirda, uint8_t *pData, uint16_t Size)
1089:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** {
1090:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   uint32_t *tmp;
1091:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1092:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Check that a Rx process is not already ongoing */
1093:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   if (hirda->RxState == HAL_IRDA_STATE_READY)
1094:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
1095:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     if ((pData == NULL) || (Size == 0U))
1096:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
1097:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       return HAL_ERROR;
1098:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
1099:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1100:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* Process Locked */
1101:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     __HAL_LOCK(hirda);
1102:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1103:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->pRxBuffPtr = pData;
1104:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->RxXferSize = Size;
1105:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1106:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->ErrorCode = HAL_IRDA_ERROR_NONE;
1107:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->RxState = HAL_IRDA_STATE_BUSY_RX;
1108:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1109:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* Set the IRDA DMA transfer complete callback */
1110:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->hdmarx->XferCpltCallback = IRDA_DMAReceiveCplt;
1111:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1112:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* Set the IRDA DMA half transfer complete callback */
1113:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->hdmarx->XferHalfCpltCallback = IRDA_DMAReceiveHalfCplt;
ARM GAS  /tmp/ccwOIEYW.s 			page 21


1114:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1115:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* Set the DMA error callback */
1116:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->hdmarx->XferErrorCallback = IRDA_DMAError;
1117:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1118:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* Set the DMA abort callback */
1119:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->hdmarx->XferAbortCallback = NULL;
1120:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1121:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* Enable the DMA stream */
1122:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     tmp = (uint32_t *)&pData;
1123:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     HAL_DMA_Start_IT(hirda->hdmarx, (uint32_t)&hirda->Instance->DR, *(uint32_t *)tmp, Size);
1124:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1125:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* Clear the Overrun flag just before enabling the DMA Rx request: can be mandatory for the sec
1126:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     __HAL_IRDA_CLEAR_OREFLAG(hirda);
1127:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1128:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* Process Unlocked */
1129:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     __HAL_UNLOCK(hirda);
1130:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1131:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* Enable the IRDA Parity Error Interrupt */
1132:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     SET_BIT(hirda->Instance->CR1, USART_CR1_PEIE);
1133:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1134:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* Enable the IRDA Error Interrupt: (Frame error, Noise error, Overrun error) */
1135:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     SET_BIT(hirda->Instance->CR3, USART_CR3_EIE);
1136:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1137:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* Enable the DMA transfer for the receiver request by setting the DMAR bit
1138:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     in the USART CR3 register */
1139:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     SET_BIT(hirda->Instance->CR3, USART_CR3_DMAR);
1140:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1141:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     return HAL_OK;
1142:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
1143:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   else
1144:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
1145:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     return HAL_BUSY;
1146:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
1147:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** }
1148:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1149:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** /**
1150:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @brief Pauses the DMA Transfer.
1151:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @param  hirda  Pointer to a IRDA_HandleTypeDef structure that contains
1152:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *                the configuration information for the specified IRDA module.
1153:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @retval HAL status
1154:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   */
1155:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** HAL_StatusTypeDef HAL_IRDA_DMAPause(IRDA_HandleTypeDef *hirda)
1156:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** {
1157:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   uint32_t dmarequest = 0x00U;
1158:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1159:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Process Locked */
1160:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   __HAL_LOCK(hirda);
1161:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1162:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   dmarequest = HAL_IS_BIT_SET(hirda->Instance->CR3, USART_CR3_DMAT);
1163:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   if ((hirda->gState == HAL_IRDA_STATE_BUSY_TX) && dmarequest)
1164:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
1165:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* Disable the IRDA DMA Tx request */
1166:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     CLEAR_BIT(hirda->Instance->CR3, USART_CR3_DMAT);
1167:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
1168:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1169:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   dmarequest = HAL_IS_BIT_SET(hirda->Instance->CR3, USART_CR3_DMAR);
1170:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   if ((hirda->RxState == HAL_IRDA_STATE_BUSY_RX) && dmarequest)
ARM GAS  /tmp/ccwOIEYW.s 			page 22


1171:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
1172:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
1173:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     CLEAR_BIT(hirda->Instance->CR1, USART_CR1_PEIE);
1174:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     CLEAR_BIT(hirda->Instance->CR3, USART_CR3_EIE);
1175:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1176:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* Disable the IRDA DMA Rx request */
1177:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     CLEAR_BIT(hirda->Instance->CR3, USART_CR3_DMAR);
1178:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
1179:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1180:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Process Unlocked */
1181:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   __HAL_UNLOCK(hirda);
1182:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1183:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   return HAL_OK;
1184:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** }
1185:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1186:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** /**
1187:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @brief Resumes the DMA Transfer.
1188:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @param  hirda  Pointer to a IRDA_HandleTypeDef structure that contains
1189:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *                the configuration information for the specified IRDA module.
1190:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @retval HAL status
1191:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   */
1192:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** HAL_StatusTypeDef HAL_IRDA_DMAResume(IRDA_HandleTypeDef *hirda)
1193:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** {
1194:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Process Locked */
1195:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   __HAL_LOCK(hirda);
1196:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1197:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   if (hirda->gState == HAL_IRDA_STATE_BUSY_TX)
1198:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
1199:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* Enable the IRDA DMA Tx request */
1200:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     SET_BIT(hirda->Instance->CR3, USART_CR3_DMAT);
1201:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
1202:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1203:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   if (hirda->RxState == HAL_IRDA_STATE_BUSY_RX)
1204:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
1205:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* Clear the Overrun flag before resuming the Rx transfer */
1206:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     __HAL_IRDA_CLEAR_OREFLAG(hirda);
1207:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1208:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* Reenable PE and ERR (Frame error, noise error, overrun error) interrupts */
1209:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     SET_BIT(hirda->Instance->CR1, USART_CR1_PEIE);
1210:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     SET_BIT(hirda->Instance->CR3, USART_CR3_EIE);
1211:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1212:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* Enable the IRDA DMA Rx request */
1213:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     SET_BIT(hirda->Instance->CR3, USART_CR3_DMAR);
1214:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
1215:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1216:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Process Unlocked */
1217:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   __HAL_UNLOCK(hirda);
1218:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1219:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   return HAL_OK;
1220:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** }
1221:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1222:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** /**
1223:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @brief Stops the DMA Transfer.
1224:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @param  hirda  Pointer to a IRDA_HandleTypeDef structure that contains
1225:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *                the configuration information for the specified IRDA module.
1226:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @retval HAL status
1227:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   */
ARM GAS  /tmp/ccwOIEYW.s 			page 23


1228:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** HAL_StatusTypeDef HAL_IRDA_DMAStop(IRDA_HandleTypeDef *hirda)
1229:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** {
1230:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   uint32_t dmarequest = 0x00U;
1231:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* The Lock is not implemented on this API to allow the user application
1232:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****      to call the HAL IRDA API under callbacks HAL_IRDA_TxCpltCallback() / HAL_IRDA_RxCpltCallback()
1233:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****      when calling HAL_DMA_Abort() API the DMA TX/RX Transfer complete interrupt is generated
1234:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****      and the correspond call back is executed HAL_IRDA_TxCpltCallback() / HAL_IRDA_RxCpltCallback()
1235:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   */
1236:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1237:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Stop IRDA DMA Tx request if ongoing */
1238:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   dmarequest = HAL_IS_BIT_SET(hirda->Instance->CR3, USART_CR3_DMAT);
1239:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   if ((hirda->gState == HAL_IRDA_STATE_BUSY_TX) && dmarequest)
1240:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
1241:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     CLEAR_BIT(hirda->Instance->CR3, USART_CR3_DMAT);
1242:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1243:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* Abort the IRDA DMA Tx channel */
1244:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     if (hirda->hdmatx != NULL)
1245:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
1246:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       HAL_DMA_Abort(hirda->hdmatx);
1247:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
1248:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     IRDA_EndTxTransfer(hirda);
1249:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
1250:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1251:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Stop IRDA DMA Rx request if ongoing */
1252:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   dmarequest = HAL_IS_BIT_SET(hirda->Instance->CR3, USART_CR3_DMAR);
1253:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   if ((hirda->RxState == HAL_IRDA_STATE_BUSY_RX) && dmarequest)
1254:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
1255:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     CLEAR_BIT(hirda->Instance->CR3, USART_CR3_DMAR);
1256:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1257:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* Abort the IRDA DMA Rx channel */
1258:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     if (hirda->hdmarx != NULL)
1259:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
1260:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       HAL_DMA_Abort(hirda->hdmarx);
1261:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
1262:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     IRDA_EndRxTransfer(hirda);
1263:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
1264:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1265:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   return HAL_OK;
1266:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** }
1267:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1268:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** /**
1269:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @brief  Abort ongoing transfers (blocking mode).
1270:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @param  hirda IRDA handle.
1271:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1272:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *         This procedure performs following operations :
1273:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *           - Disable PPP Interrupts
1274:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1275:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1276:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *           - Set handle State to READY
1277:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1278:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @retval HAL status
1279:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** */
1280:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** HAL_StatusTypeDef HAL_IRDA_Abort(IRDA_HandleTypeDef *hirda)
1281:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** {
1282:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1283:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   CLEAR_BIT(hirda->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
1284:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   CLEAR_BIT(hirda->Instance->CR3, USART_CR3_EIE);
ARM GAS  /tmp/ccwOIEYW.s 			page 24


1285:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1286:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Disable the IRDA DMA Tx request if enabled */
1287:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   if (HAL_IS_BIT_SET(hirda->Instance->CR3, USART_CR3_DMAT))
1288:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
1289:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     CLEAR_BIT(hirda->Instance->CR3, USART_CR3_DMAT);
1290:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1291:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* Abort the IRDA DMA Tx channel : use blocking DMA Abort API (no callback) */
1292:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     if (hirda->hdmatx != NULL)
1293:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
1294:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       /* Set the IRDA DMA Abort callback to Null.
1295:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****          No call back execution at end of DMA abort procedure */
1296:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       hirda->hdmatx->XferAbortCallback = NULL;
1297:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1298:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       HAL_DMA_Abort(hirda->hdmatx);
1299:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
1300:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
1301:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1302:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Disable the IRDA DMA Rx request if enabled */
1303:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   if (HAL_IS_BIT_SET(hirda->Instance->CR3, USART_CR3_DMAR))
1304:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
1305:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     CLEAR_BIT(hirda->Instance->CR3, USART_CR3_DMAR);
1306:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1307:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* Abort the IRDA DMA Rx channel : use blocking DMA Abort API (no callback) */
1308:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     if (hirda->hdmarx != NULL)
1309:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
1310:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       /* Set the IRDA DMA Abort callback to Null.
1311:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****          No call back execution at end of DMA abort procedure */
1312:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       hirda->hdmarx->XferAbortCallback = NULL;
1313:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1314:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       HAL_DMA_Abort(hirda->hdmarx);
1315:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
1316:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
1317:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1318:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Reset Tx and Rx transfer counters */
1319:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   hirda->TxXferCount = 0x00U;
1320:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   hirda->RxXferCount = 0x00U;
1321:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1322:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Reset ErrorCode */
1323:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   hirda->ErrorCode = HAL_IRDA_ERROR_NONE;
1324:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1325:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Restore hirda->RxState and hirda->gState to Ready */
1326:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   hirda->RxState = HAL_IRDA_STATE_READY;
1327:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   hirda->gState = HAL_IRDA_STATE_READY;
1328:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1329:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   return HAL_OK;
1330:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** }
1331:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1332:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** /**
1333:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @brief  Abort ongoing Transmit transfer (blocking mode).
1334:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @param  hirda IRDA handle.
1335:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1336:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *         This procedure performs following operations :
1337:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *           - Disable PPP Interrupts
1338:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1339:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1340:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *           - Set handle State to READY
1341:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
ARM GAS  /tmp/ccwOIEYW.s 			page 25


1342:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @retval HAL status
1343:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** */
1344:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** HAL_StatusTypeDef HAL_IRDA_AbortTransmit(IRDA_HandleTypeDef *hirda)
1345:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** {
1346:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Disable TXEIE and TCIE interrupts */
1347:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   CLEAR_BIT(hirda->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
1348:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1349:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Disable the IRDA DMA Tx request if enabled */
1350:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   if (HAL_IS_BIT_SET(hirda->Instance->CR3, USART_CR3_DMAT))
1351:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
1352:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     CLEAR_BIT(hirda->Instance->CR3, USART_CR3_DMAT);
1353:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1354:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* Abort the IRDA DMA Tx channel : use blocking DMA Abort API (no callback) */
1355:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     if (hirda->hdmatx != NULL)
1356:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
1357:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       /* Set the IRDA DMA Abort callback to Null.
1358:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****          No call back execution at end of DMA abort procedure */
1359:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       hirda->hdmatx->XferAbortCallback = NULL;
1360:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1361:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       HAL_DMA_Abort(hirda->hdmatx);
1362:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
1363:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
1364:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1365:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Reset Tx transfer counter */
1366:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   hirda->TxXferCount = 0x00U;
1367:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1368:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Restore hirda->gState to Ready */
1369:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   hirda->gState = HAL_IRDA_STATE_READY;
1370:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1371:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   return HAL_OK;
1372:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** }
1373:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1374:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** /**
1375:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @brief  Abort ongoing Receive transfer (blocking mode).
1376:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @param  hirda IRDA handle.
1377:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1378:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *         This procedure performs following operations :
1379:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *           - Disable PPP Interrupts
1380:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1381:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1382:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *           - Set handle State to READY
1383:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1384:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @retval HAL status
1385:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** */
1386:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** HAL_StatusTypeDef HAL_IRDA_AbortReceive(IRDA_HandleTypeDef *hirda)
1387:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** {
1388:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1389:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   CLEAR_BIT(hirda->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
1390:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   CLEAR_BIT(hirda->Instance->CR3, USART_CR3_EIE);
1391:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1392:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Disable the IRDA DMA Rx request if enabled */
1393:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   if (HAL_IS_BIT_SET(hirda->Instance->CR3, USART_CR3_DMAR))
1394:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
1395:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     CLEAR_BIT(hirda->Instance->CR3, USART_CR3_DMAR);
1396:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1397:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* Abort the IRDA DMA Rx channel : use blocking DMA Abort API (no callback) */
1398:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     if (hirda->hdmarx != NULL)
ARM GAS  /tmp/ccwOIEYW.s 			page 26


1399:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
1400:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       /* Set the IRDA DMA Abort callback to Null.
1401:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****          No call back execution at end of DMA abort procedure */
1402:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       hirda->hdmarx->XferAbortCallback = NULL;
1403:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1404:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       HAL_DMA_Abort(hirda->hdmarx);
1405:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
1406:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
1407:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1408:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Reset Rx transfer counter */
1409:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   hirda->RxXferCount = 0x00U;
1410:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1411:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Restore hirda->RxState to Ready */
1412:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   hirda->RxState = HAL_IRDA_STATE_READY;
1413:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1414:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   return HAL_OK;
1415:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** }
1416:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1417:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** /**
1418:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @brief  Abort ongoing transfers (Interrupt mode).
1419:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @param  hirda IRDA handle.
1420:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1421:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *         This procedure performs following operations :
1422:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *           - Disable PPP Interrupts
1423:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1424:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1425:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *           - Set handle State to READY
1426:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *           - At abort completion, call user abort complete callback
1427:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1428:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1429:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @retval HAL status
1430:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** */
1431:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** HAL_StatusTypeDef HAL_IRDA_Abort_IT(IRDA_HandleTypeDef *hirda)
1432:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** {
1433:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   uint32_t AbortCplt = 0x01U;
1434:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1435:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1436:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   CLEAR_BIT(hirda->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
1437:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   CLEAR_BIT(hirda->Instance->CR3, USART_CR3_EIE);
1438:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1439:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to IRDA Handle, DMA Abort complete callbacks sh
1440:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****      before any call to DMA Abort functions */
1441:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* DMA Tx Handle is valid */
1442:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   if (hirda->hdmatx != NULL)
1443:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
1444:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* Set DMA Abort Complete callback if IRDA DMA Tx request if enabled.
1445:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****        Otherwise, set it to NULL */
1446:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     if (HAL_IS_BIT_SET(hirda->Instance->CR3, USART_CR3_DMAT))
1447:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
1448:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       hirda->hdmatx->XferAbortCallback = IRDA_DMATxAbortCallback;
1449:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
1450:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     else
1451:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
1452:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       hirda->hdmatx->XferAbortCallback = NULL;
1453:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
1454:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
1455:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* DMA Rx Handle is valid */
ARM GAS  /tmp/ccwOIEYW.s 			page 27


1456:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   if (hirda->hdmarx != NULL)
1457:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
1458:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* Set DMA Abort Complete callback if IRDA DMA Rx request if enabled.
1459:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****        Otherwise, set it to NULL */
1460:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     if (HAL_IS_BIT_SET(hirda->Instance->CR3, USART_CR3_DMAR))
1461:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
1462:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       hirda->hdmarx->XferAbortCallback = IRDA_DMARxAbortCallback;
1463:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
1464:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     else
1465:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
1466:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       hirda->hdmarx->XferAbortCallback = NULL;
1467:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
1468:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
1469:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1470:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Disable the IRDA DMA Tx request if enabled */
1471:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   if (HAL_IS_BIT_SET(hirda->Instance->CR3, USART_CR3_DMAT))
1472:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
1473:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* Disable DMA Tx at IRDA level */
1474:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     CLEAR_BIT(hirda->Instance->CR3, USART_CR3_DMAT);
1475:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1476:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* Abort the IRDA DMA Tx channel : use non blocking DMA Abort API (callback) */
1477:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     if (hirda->hdmatx != NULL)
1478:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
1479:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       /* IRDA Tx DMA Abort callback has already been initialised :
1480:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****          will lead to call HAL_IRDA_AbortCpltCallback() at end of DMA abort procedure */
1481:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1482:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       /* Abort DMA TX */
1483:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       if (HAL_DMA_Abort_IT(hirda->hdmatx) != HAL_OK)
1484:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       {
1485:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         hirda->hdmatx->XferAbortCallback = NULL;
1486:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       }
1487:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       else
1488:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       {
1489:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         AbortCplt = 0x00U;
1490:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       }
1491:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
1492:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
1493:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1494:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Disable the IRDA DMA Rx request if enabled */
1495:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   if (HAL_IS_BIT_SET(hirda->Instance->CR3, USART_CR3_DMAR))
1496:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
1497:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     CLEAR_BIT(hirda->Instance->CR3, USART_CR3_DMAR);
1498:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1499:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* Abort the IRDA DMA Rx channel : use non blocking DMA Abort API (callback) */
1500:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     if (hirda->hdmarx != NULL)
1501:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
1502:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       /* IRDA Rx DMA Abort callback has already been initialised :
1503:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****          will lead to call HAL_IRDA_AbortCpltCallback() at end of DMA abort procedure */
1504:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1505:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       /* Abort DMA RX */
1506:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       if (HAL_DMA_Abort_IT(hirda->hdmarx) != HAL_OK)
1507:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       {
1508:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         hirda->hdmarx->XferAbortCallback = NULL;
1509:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         AbortCplt = 0x01U;
1510:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       }
1511:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       else
1512:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       {
ARM GAS  /tmp/ccwOIEYW.s 			page 28


1513:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         AbortCplt = 0x00U;
1514:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       }
1515:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
1516:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
1517:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1518:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* if no DMA abort complete callback execution is required => call user Abort Complete callback *
1519:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   if (AbortCplt == 0x01U)
1520:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
1521:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* Reset Tx and Rx transfer counters */
1522:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->TxXferCount = 0x00U;
1523:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->RxXferCount = 0x00U;
1524:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1525:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* Reset ErrorCode */
1526:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->ErrorCode = HAL_IRDA_ERROR_NONE;
1527:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1528:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* Restore hirda->gState and hirda->RxState to Ready */
1529:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->gState  = HAL_IRDA_STATE_READY;
1530:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->RxState = HAL_IRDA_STATE_READY;
1531:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1532:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1533:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #if (USE_HAL_IRDA_REGISTER_CALLBACKS == 1)
1534:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* Call registered Abort complete callback */
1535:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->AbortCpltCallback(hirda);
1536:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #else
1537:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* Call legacy weak Abort complete callback */
1538:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     HAL_IRDA_AbortCpltCallback(hirda);
1539:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #endif /* USE_HAL_IRDA_REGISTER_CALLBACK */
1540:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
1541:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1542:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   return HAL_OK;
1543:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** }
1544:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1545:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** /**
1546:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @brief  Abort ongoing Transmit transfer (Interrupt mode).
1547:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @param  hirda IRDA handle.
1548:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1549:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *         This procedure performs following operations :
1550:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *           - Disable IRDA Interrupts (Tx)
1551:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1552:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1553:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *           - Set handle State to READY
1554:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *           - At abort completion, call user abort complete callback
1555:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1556:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1557:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @retval HAL status
1558:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** */
1559:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** HAL_StatusTypeDef HAL_IRDA_AbortTransmit_IT(IRDA_HandleTypeDef *hirda)
1560:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** {
1561:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Disable TXEIE and TCIE interrupts */
1562:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   CLEAR_BIT(hirda->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
1563:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1564:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Disable the IRDA DMA Tx request if enabled */
1565:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   if (HAL_IS_BIT_SET(hirda->Instance->CR3, USART_CR3_DMAT))
1566:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
1567:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     CLEAR_BIT(hirda->Instance->CR3, USART_CR3_DMAT);
1568:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1569:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* Abort the IRDA DMA Tx channel : use non blocking DMA Abort API (callback) */
ARM GAS  /tmp/ccwOIEYW.s 			page 29


1570:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     if (hirda->hdmatx != NULL)
1571:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
1572:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       /* Set the IRDA DMA Abort callback :
1573:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****          will lead to call HAL_IRDA_AbortCpltCallback() at end of DMA abort procedure */
1574:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       hirda->hdmatx->XferAbortCallback = IRDA_DMATxOnlyAbortCallback;
1575:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1576:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       /* Abort DMA TX */
1577:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       if (HAL_DMA_Abort_IT(hirda->hdmatx) != HAL_OK)
1578:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       {
1579:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         /* Call Directly hirda->hdmatx->XferAbortCallback function in case of error */
1580:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         hirda->hdmatx->XferAbortCallback(hirda->hdmatx);
1581:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       }
1582:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
1583:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     else
1584:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
1585:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       /* Reset Tx transfer counter */
1586:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       hirda->TxXferCount = 0x00U;
1587:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1588:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       /* Restore hirda->gState to Ready */
1589:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       hirda->gState = HAL_IRDA_STATE_READY;
1590:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1591:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
1592:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #if (USE_HAL_IRDA_REGISTER_CALLBACKS == 1)
1593:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       /* Call registered Abort Transmit Complete Callback */
1594:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       hirda->AbortTransmitCpltCallback(hirda);
1595:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #else
1596:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       /* Call legacy weak Abort Transmit Complete Callback */
1597:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       HAL_IRDA_AbortTransmitCpltCallback(hirda);
1598:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #endif /* USE_HAL_IRDA_REGISTER_CALLBACK */
1599:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
1600:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
1601:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   else
1602:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
1603:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* Reset Tx transfer counter */
1604:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->TxXferCount = 0x00U;
1605:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1606:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* Restore hirda->gState to Ready */
1607:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->gState = HAL_IRDA_STATE_READY;
1608:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1609:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1610:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #if (USE_HAL_IRDA_REGISTER_CALLBACKS == 1)
1611:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* Call registered Abort Transmit Complete Callback */
1612:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->AbortTransmitCpltCallback(hirda);
1613:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #else
1614:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* Call legacy weak Abort Transmit Complete Callback */
1615:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     HAL_IRDA_AbortTransmitCpltCallback(hirda);
1616:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #endif /* USE_HAL_IRDA_REGISTER_CALLBACK */
1617:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
1618:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1619:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   return HAL_OK;
1620:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** }
1621:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1622:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** /**
1623:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @brief  Abort ongoing Receive transfer (Interrupt mode).
1624:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @param  hirda IRDA handle.
1625:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1626:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *         This procedure performs following operations :
ARM GAS  /tmp/ccwOIEYW.s 			page 30


1627:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *           - Disable PPP Interrupts
1628:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1629:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1630:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *           - Set handle State to READY
1631:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *           - At abort completion, call user abort complete callback
1632:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1633:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1634:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @retval HAL status
1635:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** */
1636:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** HAL_StatusTypeDef HAL_IRDA_AbortReceive_IT(IRDA_HandleTypeDef *hirda)
1637:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** {
1638:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1639:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   CLEAR_BIT(hirda->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
1640:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   CLEAR_BIT(hirda->Instance->CR3, USART_CR3_EIE);
1641:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1642:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Disable the IRDA DMA Rx request if enabled */
1643:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   if (HAL_IS_BIT_SET(hirda->Instance->CR3, USART_CR3_DMAR))
1644:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
1645:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     CLEAR_BIT(hirda->Instance->CR3, USART_CR3_DMAR);
1646:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1647:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* Abort the IRDA DMA Rx channel : use non blocking DMA Abort API (callback) */
1648:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     if (hirda->hdmarx != NULL)
1649:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
1650:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       /* Set the IRDA DMA Abort callback :
1651:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****          will lead to call HAL_IRDA_AbortCpltCallback() at end of DMA abort procedure */
1652:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       hirda->hdmarx->XferAbortCallback = IRDA_DMARxOnlyAbortCallback;
1653:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1654:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       /* Abort DMA RX */
1655:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       if (HAL_DMA_Abort_IT(hirda->hdmarx) != HAL_OK)
1656:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       {
1657:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         /* Call Directly hirda->hdmarx->XferAbortCallback function in case of error */
1658:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         hirda->hdmarx->XferAbortCallback(hirda->hdmarx);
1659:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       }
1660:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
1661:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     else
1662:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
1663:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       /* Reset Rx transfer counter */
1664:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       hirda->RxXferCount = 0x00U;
1665:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1666:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       /* Restore hirda->RxState to Ready */
1667:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       hirda->RxState = HAL_IRDA_STATE_READY;
1668:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1669:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
1670:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #if (USE_HAL_IRDA_REGISTER_CALLBACKS == 1)
1671:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       /* Call registered Abort Receive Complete Callback */
1672:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       hirda->AbortReceiveCpltCallback(hirda);
1673:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #else
1674:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       /* Call legacy weak Abort Receive Complete Callback */
1675:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       HAL_IRDA_AbortReceiveCpltCallback(hirda);
1676:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #endif /* USE_HAL_IRDA_REGISTER_CALLBACK */
1677:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
1678:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
1679:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   else
1680:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
1681:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* Reset Rx transfer counter */
1682:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->RxXferCount = 0x00U;
1683:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
ARM GAS  /tmp/ccwOIEYW.s 			page 31


1684:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* Restore hirda->RxState to Ready */
1685:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->RxState = HAL_IRDA_STATE_READY;
1686:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1687:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1688:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #if (USE_HAL_IRDA_REGISTER_CALLBACKS == 1)
1689:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* Call registered Abort Receive Complete Callback */
1690:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->AbortReceiveCpltCallback(hirda);
1691:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #else
1692:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* Call legacy weak Abort Receive Complete Callback */
1693:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     HAL_IRDA_AbortReceiveCpltCallback(hirda);
1694:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #endif /* USE_HAL_IRDA_REGISTER_CALLBACK */
1695:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
1696:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1697:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   return HAL_OK;
1698:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** }
1699:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1700:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** /**
1701:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @brief  This function handles IRDA interrupt request.
1702:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @param  hirda  Pointer to a IRDA_HandleTypeDef structure that contains
1703:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *                the configuration information for the specified IRDA module.
1704:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @retval None
1705:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   */
1706:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** void HAL_IRDA_IRQHandler(IRDA_HandleTypeDef *hirda)
1707:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** {
1708:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   uint32_t isrflags   = READ_REG(hirda->Instance->SR);
1709:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   uint32_t cr1its     = READ_REG(hirda->Instance->CR1);
1710:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   uint32_t cr3its     = READ_REG(hirda->Instance->CR3);
1711:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   uint32_t errorflags = 0x00U;
1712:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   uint32_t dmarequest = 0x00U;
1713:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1714:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* If no error occurs */
1715:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   errorflags = (isrflags & (uint32_t)(USART_SR_PE | USART_SR_FE | USART_SR_ORE | USART_SR_NE));
1716:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   if (errorflags == RESET)
1717:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
1718:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* IRDA in mode Receiver -----------------------------------------------*/
1719:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     if (((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
1720:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
1721:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       IRDA_Receive_IT(hirda);
1722:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       return;
1723:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
1724:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
1725:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1726:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* If some errors occur */
1727:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   if ((errorflags != RESET) && (((cr3its & USART_CR3_EIE) != RESET) || ((cr1its & (USART_CR1_RXNEIE
1728:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
1729:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* IRDA parity error interrupt occurred -------------------------------*/
1730:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     if (((isrflags & USART_SR_PE) != RESET) && ((cr1its & USART_CR1_PEIE) != RESET))
1731:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
1732:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       hirda->ErrorCode |= HAL_IRDA_ERROR_PE;
1733:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
1734:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1735:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* IRDA noise error interrupt occurred --------------------------------*/
1736:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     if (((isrflags & USART_SR_NE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
1737:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
1738:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       hirda->ErrorCode |= HAL_IRDA_ERROR_NE;
1739:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
1740:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
ARM GAS  /tmp/ccwOIEYW.s 			page 32


1741:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* IRDA frame error interrupt occurred --------------------------------*/
1742:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     if (((isrflags & USART_SR_FE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
1743:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
1744:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       hirda->ErrorCode |= HAL_IRDA_ERROR_FE;
1745:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
1746:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1747:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* IRDA Over-Run interrupt occurred -----------------------------------*/
1748:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     if (((isrflags & USART_SR_ORE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
1749:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
1750:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       hirda->ErrorCode |= HAL_IRDA_ERROR_ORE;
1751:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
1752:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* Call IRDA Error Call back function if need be -----------------------*/
1753:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     if (hirda->ErrorCode != HAL_IRDA_ERROR_NONE)
1754:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
1755:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       /* IRDA in mode Receiver ---------------------------------------------*/
1756:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       if (((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
1757:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       {
1758:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         IRDA_Receive_IT(hirda);
1759:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       }
1760:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1761:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       /* If Overrun error occurs, or if any error occurs in DMA mode reception,
1762:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****          consider error as blocking */
1763:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       dmarequest = HAL_IS_BIT_SET(hirda->Instance->CR3, USART_CR3_DMAR);
1764:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       if (((hirda->ErrorCode & HAL_IRDA_ERROR_ORE) != RESET) || dmarequest)
1765:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       {
1766:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         /* Blocking error : transfer is aborted
1767:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****            Set the IRDA state ready to be able to start again the process,
1768:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****            Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
1769:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         IRDA_EndRxTransfer(hirda);
1770:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1771:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         /* Disable the IRDA DMA Rx request if enabled */
1772:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         if (HAL_IS_BIT_SET(hirda->Instance->CR3, USART_CR3_DMAR))
1773:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         {
1774:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****           CLEAR_BIT(hirda->Instance->CR3, USART_CR3_DMAR);
1775:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1776:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****           /* Abort the IRDA DMA Rx channel */
1777:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****           if (hirda->hdmarx != NULL)
1778:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****           {
1779:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****             /* Set the IRDA DMA Abort callback :
1780:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****             will lead to call HAL_IRDA_ErrorCallback() at end of DMA abort procedure */
1781:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****             hirda->hdmarx->XferAbortCallback = IRDA_DMAAbortOnError;
1782:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1783:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****             /* Abort DMA RX */
1784:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****             if (HAL_DMA_Abort_IT(hirda->hdmarx) != HAL_OK)
1785:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****             {
1786:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****               /* Call Directly XferAbortCallback function in case of error */
1787:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****               hirda->hdmarx->XferAbortCallback(hirda->hdmarx);
1788:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****             }
1789:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****           }
1790:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****           else
1791:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****           {
1792:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #if (USE_HAL_IRDA_REGISTER_CALLBACKS == 1)
1793:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****             /* Call registered user error callback */
1794:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****             hirda->ErrorCallback(hirda);
1795:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #else
1796:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****             /* Call legacy weak user error callback */
1797:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****             HAL_IRDA_ErrorCallback(hirda);
ARM GAS  /tmp/ccwOIEYW.s 			page 33


1798:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #endif /* USE_HAL_IRDA_REGISTER_CALLBACK */
1799:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****           }
1800:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         }
1801:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         else
1802:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         {
1803:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #if (USE_HAL_IRDA_REGISTER_CALLBACKS == 1)
1804:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****           /* Call registered user error callback */
1805:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****           hirda->ErrorCallback(hirda);
1806:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #else
1807:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****           /* Call legacy weak user error callback */
1808:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****           HAL_IRDA_ErrorCallback(hirda);
1809:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #endif /* USE_HAL_IRDA_REGISTER_CALLBACK */
1810:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         }
1811:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       }
1812:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       else
1813:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       {
1814:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         /* Non Blocking error : transfer could go on.
1815:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****            Error is notified to user through user error callback */
1816:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #if (USE_HAL_IRDA_REGISTER_CALLBACKS == 1)
1817:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         /* Call registered user error callback */
1818:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         hirda->ErrorCallback(hirda);
1819:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #else
1820:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         /* Call legacy weak user error callback */
1821:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         HAL_IRDA_ErrorCallback(hirda);
1822:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #endif /* USE_HAL_IRDA_REGISTER_CALLBACK */
1823:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1824:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         hirda->ErrorCode = HAL_IRDA_ERROR_NONE;
1825:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       }
1826:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
1827:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     return;
1828:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   } /* End if some error occurs */
1829:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1830:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* IRDA in mode Transmitter ------------------------------------------------*/
1831:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   if (((isrflags & USART_SR_TXE) != RESET) && ((cr1its & USART_CR1_TXEIE) != RESET))
1832:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
1833:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     IRDA_Transmit_IT(hirda);
1834:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     return;
1835:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
1836:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1837:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* IRDA in mode Transmitter end --------------------------------------------*/
1838:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   if (((isrflags & USART_SR_TC) != RESET) && ((cr1its & USART_CR1_TCIE) != RESET))
1839:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
1840:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     IRDA_EndTransmit_IT(hirda);
1841:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     return;
1842:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
1843:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** }
1844:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1845:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** /**
1846:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @brief  Tx Transfer complete callback.
1847:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @param  hirda  Pointer to a IRDA_HandleTypeDef structure that contains
1848:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *                the configuration information for the specified IRDA module.
1849:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @retval None
1850:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   */
1851:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** __weak void HAL_IRDA_TxCpltCallback(IRDA_HandleTypeDef *hirda)
1852:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** {
1853:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Prevent unused argument(s) compilation warning */
1854:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   UNUSED(hirda);
ARM GAS  /tmp/ccwOIEYW.s 			page 34


1855:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1856:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1857:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****             the HAL_IRDA_TxCpltCallback can be implemented in the user file.
1858:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****    */
1859:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** }
1860:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1861:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** /**
1862:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @brief  Tx Half Transfer completed callback.
1863:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @param  hirda  Pointer to a IRDA_HandleTypeDef structure that contains
1864:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *                the configuration information for the specified USART module.
1865:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @retval None
1866:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   */
1867:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** __weak void HAL_IRDA_TxHalfCpltCallback(IRDA_HandleTypeDef *hirda)
1868:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** {
1869:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Prevent unused argument(s) compilation warning */
1870:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   UNUSED(hirda);
1871:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1872:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1873:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****             the HAL_IRDA_TxHalfCpltCallback can be implemented in the user file.
1874:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****    */
1875:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** }
1876:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1877:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** /**
1878:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @brief  Rx Transfer complete callback.
1879:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @param  hirda  Pointer to a IRDA_HandleTypeDef structure that contains
1880:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *                the configuration information for the specified IRDA module.
1881:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @retval None
1882:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   */
1883:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** __weak void HAL_IRDA_RxCpltCallback(IRDA_HandleTypeDef *hirda)
1884:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** {
1885:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Prevent unused argument(s) compilation warning */
1886:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   UNUSED(hirda);
1887:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1888:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1889:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****             the HAL_IRDA_RxCpltCallback can be implemented in the user file.
1890:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****    */
1891:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** }
1892:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1893:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** /**
1894:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @brief  Rx Half Transfer complete callback.
1895:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @param  hirda  Pointer to a IRDA_HandleTypeDef structure that contains
1896:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *                the configuration information for the specified IRDA module.
1897:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @retval None
1898:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   */
1899:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** __weak void HAL_IRDA_RxHalfCpltCallback(IRDA_HandleTypeDef *hirda)
1900:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** {
1901:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Prevent unused argument(s) compilation warning */
1902:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   UNUSED(hirda);
1903:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1904:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1905:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****             the HAL_IRDA_RxHalfCpltCallback can be implemented in the user file.
1906:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****    */
1907:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** }
1908:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1909:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** /**
1910:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @brief  IRDA error callback.
1911:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @param  hirda  Pointer to a IRDA_HandleTypeDef structure that contains
ARM GAS  /tmp/ccwOIEYW.s 			page 35


1912:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *                the configuration information for the specified IRDA module.
1913:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @retval None
1914:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   */
1915:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** __weak void HAL_IRDA_ErrorCallback(IRDA_HandleTypeDef *hirda)
1916:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** {
1917:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Prevent unused argument(s) compilation warning */
1918:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   UNUSED(hirda);
1919:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1920:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1921:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****             the HAL_IRDA_ErrorCallback can be implemented in the user file.
1922:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****    */
1923:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** }
1924:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1925:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** /**
1926:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @brief  IRDA Abort Complete callback.
1927:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @param  hirda Pointer to a IRDA_HandleTypeDef structure that contains
1928:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *                the configuration information for the specified IRDA module.
1929:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @retval None
1930:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   */
1931:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** __weak void HAL_IRDA_AbortCpltCallback(IRDA_HandleTypeDef *hirda)
1932:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** {
1933:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Prevent unused argument(s) compilation warning */
1934:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   UNUSED(hirda);
1935:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1936:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1937:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****             the HAL_IRDA_AbortCpltCallback can be implemented in the user file.
1938:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****    */
1939:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** }
1940:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1941:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** /**
1942:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @brief  IRDA Abort Transmit Complete callback.
1943:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @param  hirda Pointer to a IRDA_HandleTypeDef structure that contains
1944:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *                the configuration information for the specified IRDA module.
1945:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @retval None
1946:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   */
1947:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** __weak void HAL_IRDA_AbortTransmitCpltCallback(IRDA_HandleTypeDef *hirda)
1948:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** {
1949:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Prevent unused argument(s) compilation warning */
1950:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   UNUSED(hirda);
1951:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1952:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1953:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****             the HAL_IRDA_AbortTransmitCpltCallback can be implemented in the user file.
1954:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****    */
1955:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** }
1956:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1957:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** /**
1958:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @brief  IRDA Abort Receive Complete callback.
1959:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @param  hirda Pointer to a IRDA_HandleTypeDef structure that contains
1960:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *                the configuration information for the specified IRDA module.
1961:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @retval None
1962:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   */
1963:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** __weak void HAL_IRDA_AbortReceiveCpltCallback(IRDA_HandleTypeDef *hirda)
1964:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** {
1965:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Prevent unused argument(s) compilation warning */
1966:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   UNUSED(hirda);
1967:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1968:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* NOTE : This function should not be modified, when the callback is needed,
ARM GAS  /tmp/ccwOIEYW.s 			page 36


1969:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****             the HAL_IRDA_AbortReceiveCpltCallback can be implemented in the user file.
1970:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****    */
1971:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** }
1972:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1973:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** /**
1974:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @}
1975:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   */
1976:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1977:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** /** @defgroup IRDA_Exported_Functions_Group3 Peripheral State and Errors functions
1978:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *  @brief   IRDA State and Errors functions
1979:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *
1980:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** @verbatim
1981:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   ==============================================================================
1982:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****                   ##### Peripheral State and Errors functions #####
1983:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   ==============================================================================
1984:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   [..]
1985:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     This subsection provides a set of functions allowing to return the State of IrDA
1986:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     communication process and also return Peripheral Errors occurred during communication process
1987:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****      (+) HAL_IRDA_GetState() API can be helpful to check in run-time the state of the IrDA peripher
1988:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****      (+) HAL_IRDA_GetError() check in run-time errors that could be occurred during communication.
1989:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1990:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** @endverbatim
1991:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @{
1992:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   */
1993:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
1994:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** /**
1995:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @brief  Return the IRDA state.
1996:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @param  hirda  Pointer to a IRDA_HandleTypeDef structure that contains
1997:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *                the configuration information for the specified IRDA.
1998:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @retval HAL state
1999:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   */
2000:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** HAL_IRDA_StateTypeDef HAL_IRDA_GetState(IRDA_HandleTypeDef *hirda)
2001:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** {
2002:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   uint32_t temp1 = 0x00U, temp2 = 0x00U;
2003:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   temp1 = hirda->gState;
2004:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   temp2 = hirda->RxState;
2005:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
2006:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   return (HAL_IRDA_StateTypeDef)(temp1 | temp2);
2007:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** }
2008:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
2009:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** /**
2010:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @brief  Return the IRDA error code
2011:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @param  hirda  Pointer to a IRDA_HandleTypeDef structure that contains
2012:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *              the configuration information for the specified IRDA.
2013:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @retval IRDA Error Code
2014:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   */
2015:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** uint32_t HAL_IRDA_GetError(IRDA_HandleTypeDef *hirda)
2016:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** {
2017:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   return hirda->ErrorCode;
2018:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** }
2019:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
2020:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** /**
2021:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @}
2022:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   */
2023:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
2024:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** /**
2025:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @}
ARM GAS  /tmp/ccwOIEYW.s 			page 37


2026:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   */
2027:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
2028:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** /** @defgroup IRDA_Private_Functions IRDA Private Functions
2029:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @{
2030:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   */
2031:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
2032:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #if (USE_HAL_IRDA_REGISTER_CALLBACKS == 1)
2033:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** /**
2034:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @brief  Initialize the callbacks to their default values.
2035:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @param  hirda IRDA handle.
2036:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @retval none
2037:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   */
2038:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** void IRDA_InitCallbacksToDefault(IRDA_HandleTypeDef *hirda)
2039:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** {
2040:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Init the IRDA Callback settings */
2041:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   hirda->TxHalfCpltCallback        = HAL_IRDA_TxHalfCpltCallback;        /* Legacy weak TxHalfCpltC
2042:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   hirda->TxCpltCallback            = HAL_IRDA_TxCpltCallback;            /* Legacy weak TxCpltCallb
2043:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   hirda->RxHalfCpltCallback        = HAL_IRDA_RxHalfCpltCallback;        /* Legacy weak RxHalfCpltC
2044:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   hirda->RxCpltCallback            = HAL_IRDA_RxCpltCallback;            /* Legacy weak RxCpltCallb
2045:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   hirda->ErrorCallback             = HAL_IRDA_ErrorCallback;             /* Legacy weak ErrorCallba
2046:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   hirda->AbortCpltCallback         = HAL_IRDA_AbortCpltCallback;         /* Legacy weak AbortCpltCa
2047:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   hirda->AbortTransmitCpltCallback = HAL_IRDA_AbortTransmitCpltCallback; /* Legacy weak AbortTransm
2048:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   hirda->AbortReceiveCpltCallback  = HAL_IRDA_AbortReceiveCpltCallback;  /* Legacy weak AbortReceiv
2049:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
2050:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** }
2051:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #endif /* USE_HAL_IRDA_REGISTER_CALLBACKS */
2052:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
2053:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** /**
2054:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @brief  DMA IRDA transmit process complete callback.
2055:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
2056:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *               the configuration information for the specified DMA.
2057:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @retval None
2058:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   */
2059:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** static void IRDA_DMATransmitCplt(DMA_HandleTypeDef *hdma)
2060:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** {
2061:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   IRDA_HandleTypeDef *hirda = (IRDA_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
2062:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* DMA Normal mode */
2063:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   if ((hdma->Instance->CR & DMA_SxCR_CIRC) == 0U)
2064:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
2065:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->TxXferCount = 0U;
2066:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
2067:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* Disable the DMA transfer for transmit request by resetting the DMAT bit
2068:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****        in the IRDA CR3 register */
2069:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     CLEAR_BIT(hirda->Instance->CR3, USART_CR3_DMAT);
2070:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
2071:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* Enable the IRDA Transmit Complete Interrupt */
2072:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     SET_BIT(hirda->Instance->CR1, USART_CR1_TCIE);
2073:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
2074:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* DMA Circular mode */
2075:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   else
2076:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
2077:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #if (USE_HAL_IRDA_REGISTER_CALLBACKS == 1)
2078:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* Call registered Tx complete callback */
2079:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->TxCpltCallback(hirda);
2080:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #else
2081:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* Call legacy weak Tx complete callback */
2082:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     HAL_IRDA_TxCpltCallback(hirda);
ARM GAS  /tmp/ccwOIEYW.s 			page 38


2083:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #endif /* USE_HAL_IRDA_REGISTER_CALLBACK */
2084:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
2085:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** }
2086:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
2087:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** /**
2088:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @brief DMA IRDA receive process half complete callback
2089:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
2090:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *               the configuration information for the specified DMA.
2091:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @retval None
2092:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   */
2093:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** static void IRDA_DMATransmitHalfCplt(DMA_HandleTypeDef *hdma)
2094:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** {
2095:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   IRDA_HandleTypeDef *hirda = (IRDA_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
2096:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
2097:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #if (USE_HAL_IRDA_REGISTER_CALLBACKS == 1)
2098:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Call registered Tx Half complete callback */
2099:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   hirda->TxHalfCpltCallback(hirda);
2100:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #else
2101:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Call legacy weak Tx complete callback */
2102:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   HAL_IRDA_TxHalfCpltCallback(hirda);
2103:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #endif /* USE_HAL_IRDA_REGISTER_CALLBACK */
2104:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** }
2105:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
2106:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** /**
2107:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @brief  DMA IRDA receive process complete callback.
2108:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
2109:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *               the configuration information for the specified DMA.
2110:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @retval None
2111:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   */
2112:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** static void IRDA_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
2113:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** {
2114:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   IRDA_HandleTypeDef *hirda = (IRDA_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
2115:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
2116:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* DMA Normal mode */
2117:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   if ((hdma->Instance->CR & DMA_SxCR_CIRC) == 0U)
2118:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
2119:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->RxXferCount = 0U;
2120:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
2121:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
2122:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     CLEAR_BIT(hirda->Instance->CR1, USART_CR1_PEIE);
2123:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     CLEAR_BIT(hirda->Instance->CR3, USART_CR3_EIE);
2124:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
2125:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* Disable the DMA transfer for the receiver request by resetting the DMAR bit
2126:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****        in the IRDA CR3 register */
2127:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     CLEAR_BIT(hirda->Instance->CR3, USART_CR3_DMAR);
2128:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
2129:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* At end of Rx process, restore hirda->RxState to Ready */
2130:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->RxState = HAL_IRDA_STATE_READY;
2131:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
2132:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
2133:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #if (USE_HAL_IRDA_REGISTER_CALLBACKS == 1)
2134:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Call registered Rx complete callback */
2135:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   hirda->RxCpltCallback(hirda);
2136:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #else
2137:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Call legacy weak Rx complete callback */
2138:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   HAL_IRDA_RxCpltCallback(hirda);
2139:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #endif /* USE_HAL_IRDA_REGISTER_CALLBACKS */
ARM GAS  /tmp/ccwOIEYW.s 			page 39


2140:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** }
2141:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
2142:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** /**
2143:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @brief DMA IRDA receive process half complete callback.
2144:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
2145:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *               the configuration information for the specified DMA.
2146:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @retval None
2147:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   */
2148:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** static void IRDA_DMAReceiveHalfCplt(DMA_HandleTypeDef *hdma)
2149:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** {
2150:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   IRDA_HandleTypeDef *hirda = (IRDA_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
2151:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
2152:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #if (USE_HAL_IRDA_REGISTER_CALLBACKS == 1)
2153:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /*Call registered Rx Half complete callback*/
2154:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   hirda->RxHalfCpltCallback(hirda);
2155:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #else
2156:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Call legacy weak Rx Half complete callback */
2157:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   HAL_IRDA_RxHalfCpltCallback(hirda);
2158:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #endif /* USE_HAL_IRDA_REGISTER_CALLBACK */
2159:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** }
2160:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
2161:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** /**
2162:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @brief  DMA IRDA communication error callback.
2163:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
2164:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *               the configuration information for the specified DMA.
2165:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @retval None
2166:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   */
2167:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** static void IRDA_DMAError(DMA_HandleTypeDef *hdma)
2168:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** {
2169:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   uint32_t dmarequest = 0x00U;
2170:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   IRDA_HandleTypeDef *hirda = (IRDA_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
2171:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
2172:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Stop IRDA DMA Tx request if ongoing */
2173:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   dmarequest = HAL_IS_BIT_SET(hirda->Instance->CR3, USART_CR3_DMAT);
2174:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   if ((hirda->gState == HAL_IRDA_STATE_BUSY_TX) && dmarequest)
2175:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
2176:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->TxXferCount = 0U;
2177:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     IRDA_EndTxTransfer(hirda);
2178:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
2179:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
2180:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Stop IRDA DMA Rx request if ongoing */
2181:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   dmarequest = HAL_IS_BIT_SET(hirda->Instance->CR3, USART_CR3_DMAR);
2182:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   if ((hirda->RxState == HAL_IRDA_STATE_BUSY_RX) && dmarequest)
2183:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
2184:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->RxXferCount = 0U;
2185:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     IRDA_EndRxTransfer(hirda);
2186:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
2187:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
2188:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   hirda->ErrorCode |= HAL_IRDA_ERROR_DMA;
2189:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
2190:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #if (USE_HAL_IRDA_REGISTER_CALLBACKS == 1)
2191:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Call registered user error callback */
2192:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   hirda->ErrorCallback(hirda);
2193:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #else
2194:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Call legacy weak user error callback */
2195:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   HAL_IRDA_ErrorCallback(hirda);
2196:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #endif /* USE_HAL_IRDA_REGISTER_CALLBACK */
ARM GAS  /tmp/ccwOIEYW.s 			page 40


2197:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** }
2198:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
2199:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** /**
2200:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @brief  This function handles IRDA Communication Timeout.
2201:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @param  hirda  Pointer to a IRDA_HandleTypeDef structure that contains
2202:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *                the configuration information for the specified IRDA.
2203:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @param  Flag specifies the IRDA flag to check.
2204:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @param  Status The new Flag status (SET or RESET).
2205:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @param  Tickstart Tick start value
2206:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @param  Timeout Timeout duration
2207:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @retval HAL status
2208:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   */
2209:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** static HAL_StatusTypeDef IRDA_WaitOnFlagUntilTimeout(IRDA_HandleTypeDef *hirda, uint32_t Flag, Flag
2210:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** {
2211:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Wait until flag is set */
2212:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   while ((__HAL_IRDA_GET_FLAG(hirda, Flag) ? SET : RESET) == Status)
2213:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
2214:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     /* Check for the Timeout */
2215:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     if (Timeout != HAL_MAX_DELAY)
2216:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
2217:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       if ((Timeout == 0U) || ((HAL_GetTick() - Tickstart) > Timeout))
2218:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       {
2219:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for t
2220:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         CLEAR_BIT(hirda->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
2221:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         CLEAR_BIT(hirda->Instance->CR3, USART_CR3_EIE);
2222:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
2223:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         hirda->gState  = HAL_IRDA_STATE_READY;
2224:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         hirda->RxState = HAL_IRDA_STATE_READY;
2225:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
2226:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         /* Process Unlocked */
2227:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         __HAL_UNLOCK(hirda);
2228:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
2229:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         return HAL_TIMEOUT;
2230:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       }
2231:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
2232:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
2233:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   return HAL_OK;
2234:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** }
2235:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
2236:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** /**
2237:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @brief  End ongoing Tx transfer on IRDA peripheral (following error detection or Transmit compl
2238:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @param  hirda IRDA handle.
2239:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @retval None
2240:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   */
2241:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** static void IRDA_EndTxTransfer(IRDA_HandleTypeDef *hirda)
2242:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** {
  29              		.loc 1 2242 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
2243:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Disable TXEIE and TCIE interrupts */
2244:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   CLEAR_BIT(hirda->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
  34              		.loc 1 2244 3 view .LVU1
  35 0000 0268     		ldr	r2, [r0]
  36 0002 D368     		ldr	r3, [r2, #12]
  37 0004 23F0C003 		bic	r3, r3, #192
ARM GAS  /tmp/ccwOIEYW.s 			page 41


  38 0008 D360     		str	r3, [r2, #12]
2245:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
2246:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* At end of Tx process, restore hirda->gState to Ready */
2247:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   hirda->gState = HAL_IRDA_STATE_READY;
  39              		.loc 1 2247 3 view .LVU2
  40              		.loc 1 2247 17 is_stmt 0 view .LVU3
  41 000a 2023     		movs	r3, #32
  42 000c 80F83530 		strb	r3, [r0, #53]
2248:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** }
  43              		.loc 1 2248 1 view .LVU4
  44 0010 7047     		bx	lr
  45              		.cfi_endproc
  46              	.LFE168:
  48              		.section	.text.IRDA_EndRxTransfer,"ax",%progbits
  49              		.align	1
  50              		.syntax unified
  51              		.thumb
  52              		.thumb_func
  53              		.fpu fpv4-sp-d16
  55              	IRDA_EndRxTransfer:
  56              	.LVL1:
  57              	.LFB169:
2249:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
2250:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** /**
2251:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @brief  End ongoing Rx transfer on IRDA peripheral (following error detection or Reception comp
2252:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @param  hirda IRDA handle.
2253:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @retval None
2254:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   */
2255:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** static void IRDA_EndRxTransfer(IRDA_HandleTypeDef *hirda)
2256:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** {
  58              		.loc 1 2256 1 is_stmt 1 view -0
  59              		.cfi_startproc
  60              		@ args = 0, pretend = 0, frame = 0
  61              		@ frame_needed = 0, uses_anonymous_args = 0
  62              		@ link register save eliminated.
2257:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2258:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   CLEAR_BIT(hirda->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
  63              		.loc 1 2258 3 view .LVU6
  64 0000 0268     		ldr	r2, [r0]
  65 0002 D368     		ldr	r3, [r2, #12]
  66 0004 23F49073 		bic	r3, r3, #288
  67 0008 D360     		str	r3, [r2, #12]
2259:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   CLEAR_BIT(hirda->Instance->CR3, USART_CR3_EIE);
  68              		.loc 1 2259 3 view .LVU7
  69 000a 0268     		ldr	r2, [r0]
  70 000c 5369     		ldr	r3, [r2, #20]
  71 000e 23F00103 		bic	r3, r3, #1
  72 0012 5361     		str	r3, [r2, #20]
2260:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
2261:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* At end of Rx process, restore hirda->RxState to Ready */
2262:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   hirda->RxState = HAL_IRDA_STATE_READY;
  73              		.loc 1 2262 3 view .LVU8
  74              		.loc 1 2262 18 is_stmt 0 view .LVU9
  75 0014 2023     		movs	r3, #32
  76 0016 80F83630 		strb	r3, [r0, #54]
2263:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** }
  77              		.loc 1 2263 1 view .LVU10
ARM GAS  /tmp/ccwOIEYW.s 			page 42


  78 001a 7047     		bx	lr
  79              		.cfi_endproc
  80              	.LFE169:
  82              		.section	.text.IRDA_Transmit_IT,"ax",%progbits
  83              		.align	1
  84              		.syntax unified
  85              		.thumb
  86              		.thumb_func
  87              		.fpu fpv4-sp-d16
  89              	IRDA_Transmit_IT:
  90              	.LVL2:
  91              	.LFB175:
2264:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
2265:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** /**
2266:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @brief  DMA IRDA communication abort callback, when initiated by HAL services on Error
2267:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
2268:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @param  hdma DMA handle.
2269:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @retval None
2270:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   */
2271:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** static void IRDA_DMAAbortOnError(DMA_HandleTypeDef *hdma)
2272:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** {
2273:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   IRDA_HandleTypeDef *hirda = (IRDA_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
2274:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   hirda->RxXferCount = 0x00U;
2275:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   hirda->TxXferCount = 0x00U;
2276:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
2277:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #if (USE_HAL_IRDA_REGISTER_CALLBACKS == 1)
2278:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Call registered user error callback */
2279:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   hirda->ErrorCallback(hirda);
2280:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #else
2281:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Call legacy weak user error callback */
2282:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   HAL_IRDA_ErrorCallback(hirda);
2283:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #endif /* USE_HAL_IRDA_REGISTER_CALLBACK */
2284:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** }
2285:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
2286:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** /**
2287:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @brief  DMA IRDA Tx communication abort callback, when initiated by user
2288:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
2289:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
2290:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *         Abort still ongoing for Rx DMA Handle.
2291:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @param  hdma DMA handle.
2292:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @retval None
2293:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   */
2294:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** static void IRDA_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
2295:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** {
2296:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   IRDA_HandleTypeDef *hirda = (IRDA_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
2297:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
2298:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   hirda->hdmatx->XferAbortCallback = NULL;
2299:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
2300:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Check if an Abort process is still ongoing */
2301:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   if (hirda->hdmarx != NULL)
2302:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
2303:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     if (hirda->hdmarx->XferAbortCallback != NULL)
2304:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
2305:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       return;
2306:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
2307:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
2308:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
ARM GAS  /tmp/ccwOIEYW.s 			page 43


2309:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
2310:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   hirda->TxXferCount = 0x00U;
2311:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   hirda->RxXferCount = 0x00U;
2312:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
2313:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Reset ErrorCode */
2314:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   hirda->ErrorCode = HAL_IRDA_ERROR_NONE;
2315:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
2316:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Restore hirda->gState and hirda->RxState to Ready */
2317:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   hirda->gState  = HAL_IRDA_STATE_READY;
2318:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   hirda->RxState = HAL_IRDA_STATE_READY;
2319:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
2320:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Call user Abort complete callback */
2321:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #if (USE_HAL_IRDA_REGISTER_CALLBACKS == 1)
2322:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Call registered Abort complete callback */
2323:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   hirda->AbortCpltCallback(hirda);
2324:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #else
2325:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Call legacy weak Abort complete callback */
2326:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   HAL_IRDA_AbortCpltCallback(hirda);
2327:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #endif /* USE_HAL_IRDA_REGISTER_CALLBACK */
2328:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** }
2329:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
2330:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** /**
2331:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @brief  DMA IRDA Rx communication abort callback, when initiated by user
2332:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
2333:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
2334:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *         Abort still ongoing for Tx DMA Handle.
2335:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @param  hdma DMA handle.
2336:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @retval None
2337:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   */
2338:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** static void IRDA_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
2339:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** {
2340:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   IRDA_HandleTypeDef *hirda = (IRDA_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
2341:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
2342:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   hirda->hdmarx->XferAbortCallback = NULL;
2343:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
2344:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Check if an Abort process is still ongoing */
2345:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   if (hirda->hdmatx != NULL)
2346:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
2347:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     if (hirda->hdmatx->XferAbortCallback != NULL)
2348:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
2349:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       return;
2350:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
2351:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
2352:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
2353:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
2354:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   hirda->TxXferCount = 0x00U;
2355:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   hirda->RxXferCount = 0x00U;
2356:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
2357:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Reset ErrorCode */
2358:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   hirda->ErrorCode = HAL_IRDA_ERROR_NONE;
2359:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
2360:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Restore hirda->gState and hirda->RxState to Ready */
2361:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   hirda->gState  = HAL_IRDA_STATE_READY;
2362:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   hirda->RxState = HAL_IRDA_STATE_READY;
2363:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
2364:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Call user Abort complete callback */
2365:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #if (USE_HAL_IRDA_REGISTER_CALLBACKS == 1)
ARM GAS  /tmp/ccwOIEYW.s 			page 44


2366:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Call registered Abort complete callback */
2367:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   hirda->AbortCpltCallback(hirda);
2368:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #else
2369:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Call legacy weak Abort complete callback */
2370:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   HAL_IRDA_AbortCpltCallback(hirda);
2371:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #endif /* USE_HAL_IRDA_REGISTER_CALLBACK */
2372:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** }
2373:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
2374:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** /**
2375:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @brief  DMA IRDA Tx communication abort callback, when initiated by user by a call to
2376:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *         HAL_IRDA_AbortTransmit_IT API (Abort only Tx transfer)
2377:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *         (This callback is executed at end of DMA Tx Abort procedure following user abort reques
2378:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *         and leads to user Tx Abort Complete callback execution).
2379:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @param  hdma DMA handle.
2380:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @retval None
2381:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   */
2382:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** static void IRDA_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
2383:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** {
2384:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   IRDA_HandleTypeDef *hirda = (IRDA_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
2385:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
2386:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   hirda->TxXferCount = 0x00U;
2387:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
2388:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Restore hirda->gState to Ready */
2389:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   hirda->gState = HAL_IRDA_STATE_READY;
2390:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
2391:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Call user Abort complete callback */
2392:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #if (USE_HAL_IRDA_REGISTER_CALLBACKS == 1)
2393:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Call registered Abort Transmit Complete Callback */
2394:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   hirda->AbortTransmitCpltCallback(hirda);
2395:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #else
2396:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Call legacy weak Abort Transmit Complete Callback */
2397:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   HAL_IRDA_AbortTransmitCpltCallback(hirda);
2398:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #endif /* USE_HAL_IRDA_REGISTER_CALLBACK */
2399:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** }
2400:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
2401:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** /**
2402:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @brief  DMA IRDA Rx communication abort callback, when initiated by user by a call to
2403:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *         HAL_IRDA_AbortReceive_IT API (Abort only Rx transfer)
2404:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *         (This callback is executed at end of DMA Rx Abort procedure following user abort reques
2405:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *         and leads to user Rx Abort Complete callback execution).
2406:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @param  hdma DMA handle.
2407:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @retval None
2408:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   */
2409:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** static void IRDA_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
2410:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** {
2411:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   IRDA_HandleTypeDef *hirda = (IRDA_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
2412:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
2413:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   hirda->RxXferCount = 0x00U;
2414:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
2415:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Restore hirda->RxState to Ready */
2416:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   hirda->RxState = HAL_IRDA_STATE_READY;
2417:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
2418:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Call user Abort complete callback */
2419:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #if (USE_HAL_IRDA_REGISTER_CALLBACKS == 1)
2420:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Call registered Abort Receive Complete Callback */
2421:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   hirda->AbortReceiveCpltCallback(hirda);
2422:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #else
ARM GAS  /tmp/ccwOIEYW.s 			page 45


2423:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Call legacy weak Abort Receive Complete Callback */
2424:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   HAL_IRDA_AbortReceiveCpltCallback(hirda);
2425:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #endif /* USE_HAL_IRDA_REGISTER_CALLBACK */
2426:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** }
2427:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
2428:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** /**
2429:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****  * @brief  Send an amount of data in non blocking mode.
2430:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****  * @param  hirda  Pointer to a IRDA_HandleTypeDef structure that contains
2431:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****  *                the configuration information for the specified IRDA module.
2432:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****  * @retval HAL status
2433:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****  */
2434:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** static HAL_StatusTypeDef IRDA_Transmit_IT(IRDA_HandleTypeDef *hirda)
2435:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** {
  92              		.loc 1 2435 1 is_stmt 1 view -0
  93              		.cfi_startproc
  94              		@ args = 0, pretend = 0, frame = 0
  95              		@ frame_needed = 0, uses_anonymous_args = 0
  96              		@ link register save eliminated.
2436:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   uint16_t *tmp;
  97              		.loc 1 2436 3 view .LVU12
2437:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
2438:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Check that a Tx process is ongoing */
2439:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   if (hirda->gState == HAL_IRDA_STATE_BUSY_TX)
  98              		.loc 1 2439 3 view .LVU13
  99              		.loc 1 2439 12 is_stmt 0 view .LVU14
 100 0000 90F83530 		ldrb	r3, [r0, #53]	@ zero_extendqisi2
 101 0004 DBB2     		uxtb	r3, r3
 102              		.loc 1 2439 6 view .LVU15
 103 0006 212B     		cmp	r3, #33
 104 0008 01D0     		beq	.L10
2440:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
2441:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     if (hirda->Init.WordLength == IRDA_WORDLENGTH_9B)
2442:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
2443:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       tmp = (uint16_t *) hirda->pTxBuffPtr;
2444:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       hirda->Instance->DR = (uint16_t)(*tmp & (uint16_t)0x01FF);
2445:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       if (hirda->Init.Parity == IRDA_PARITY_NONE)
2446:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       {
2447:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         hirda->pTxBuffPtr += 2U;
2448:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       }
2449:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       else
2450:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       {
2451:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         hirda->pTxBuffPtr += 1U;
2452:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       }
2453:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
2454:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     else
2455:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
2456:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       hirda->Instance->DR = (uint8_t)(*hirda->pTxBuffPtr++ & (uint8_t)0x00FF);
2457:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
2458:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
2459:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     if (--hirda->TxXferCount == 0U)
2460:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
2461:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       /* Disable the IRDA Transmit Data Register Empty Interrupt */
2462:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       CLEAR_BIT(hirda->Instance->CR1, USART_CR1_TXEIE);
2463:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
2464:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       /* Enable the IRDA Transmit Complete Interrupt */
2465:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       SET_BIT(hirda->Instance->CR1, USART_CR1_TCIE);
2466:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
ARM GAS  /tmp/ccwOIEYW.s 			page 46


2467:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
2468:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     return HAL_OK;
2469:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
2470:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   else
2471:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
2472:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     return HAL_BUSY;
 105              		.loc 1 2472 12 view .LVU16
 106 000a 0220     		movs	r0, #2
 107              	.LVL3:
2473:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
2474:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** }
 108              		.loc 1 2474 1 view .LVU17
 109 000c 7047     		bx	lr
 110              	.LVL4:
 111              	.L10:
2441:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 112              		.loc 1 2441 5 is_stmt 1 view .LVU18
2441:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 113              		.loc 1 2441 20 is_stmt 0 view .LVU19
 114 000e 8368     		ldr	r3, [r0, #8]
2441:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 115              		.loc 1 2441 8 view .LVU20
 116 0010 B3F5805F 		cmp	r3, #4096
 117 0014 17D0     		beq	.L11
2456:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
 118              		.loc 1 2456 7 is_stmt 1 view .LVU21
2456:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
 119              		.loc 1 2456 45 is_stmt 0 view .LVU22
 120 0016 C369     		ldr	r3, [r0, #28]
2456:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
 121              		.loc 1 2456 57 view .LVU23
 122 0018 5A1C     		adds	r2, r3, #1
 123 001a C261     		str	r2, [r0, #28]
2456:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
 124              		.loc 1 2456 39 view .LVU24
 125 001c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
2456:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
 126              		.loc 1 2456 12 view .LVU25
 127 001e 0368     		ldr	r3, [r0]
2456:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
 128              		.loc 1 2456 27 view .LVU26
 129 0020 5A60     		str	r2, [r3, #4]
 130              	.L7:
2459:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 131              		.loc 1 2459 5 is_stmt 1 view .LVU27
2459:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 132              		.loc 1 2459 16 is_stmt 0 view .LVU28
 133 0022 438C     		ldrh	r3, [r0, #34]
 134 0024 9BB2     		uxth	r3, r3
2459:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 135              		.loc 1 2459 9 view .LVU29
 136 0026 013B     		subs	r3, r3, #1
 137 0028 9BB2     		uxth	r3, r3
2459:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 138              		.loc 1 2459 8 view .LVU30
 139 002a 4384     		strh	r3, [r0, #34]	@ movhi
 140 002c 4BB9     		cbnz	r3, .L8
ARM GAS  /tmp/ccwOIEYW.s 			page 47


2462:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 141              		.loc 1 2462 7 is_stmt 1 view .LVU31
 142 002e 0268     		ldr	r2, [r0]
 143 0030 D368     		ldr	r3, [r2, #12]
 144 0032 23F08003 		bic	r3, r3, #128
 145 0036 D360     		str	r3, [r2, #12]
2465:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
 146              		.loc 1 2465 7 view .LVU32
 147 0038 0268     		ldr	r2, [r0]
 148 003a D368     		ldr	r3, [r2, #12]
 149 003c 43F04003 		orr	r3, r3, #64
 150 0040 D360     		str	r3, [r2, #12]
 151              	.L8:
2468:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
 152              		.loc 1 2468 5 view .LVU33
2468:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
 153              		.loc 1 2468 12 is_stmt 0 view .LVU34
 154 0042 0020     		movs	r0, #0
 155              	.LVL5:
2468:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
 156              		.loc 1 2468 12 view .LVU35
 157 0044 7047     		bx	lr
 158              	.LVL6:
 159              	.L11:
2443:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       hirda->Instance->DR = (uint16_t)(*tmp & (uint16_t)0x01FF);
 160              		.loc 1 2443 7 is_stmt 1 view .LVU36
2443:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       hirda->Instance->DR = (uint16_t)(*tmp & (uint16_t)0x01FF);
 161              		.loc 1 2443 11 is_stmt 0 view .LVU37
 162 0046 C369     		ldr	r3, [r0, #28]
 163              	.LVL7:
2444:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       if (hirda->Init.Parity == IRDA_PARITY_NONE)
 164              		.loc 1 2444 7 is_stmt 1 view .LVU38
2444:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       if (hirda->Init.Parity == IRDA_PARITY_NONE)
 165              		.loc 1 2444 40 is_stmt 0 view .LVU39
 166 0048 1B88     		ldrh	r3, [r3]
 167              	.LVL8:
2444:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       if (hirda->Init.Parity == IRDA_PARITY_NONE)
 168              		.loc 1 2444 12 view .LVU40
 169 004a 0268     		ldr	r2, [r0]
2444:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       if (hirda->Init.Parity == IRDA_PARITY_NONE)
 170              		.loc 1 2444 29 view .LVU41
 171 004c C3F30803 		ubfx	r3, r3, #0, #9
2444:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       if (hirda->Init.Parity == IRDA_PARITY_NONE)
 172              		.loc 1 2444 27 view .LVU42
 173 0050 5360     		str	r3, [r2, #4]
 174              	.LVL9:
2445:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       {
 175              		.loc 1 2445 7 is_stmt 1 view .LVU43
2445:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       {
 176              		.loc 1 2445 22 is_stmt 0 view .LVU44
 177 0052 C368     		ldr	r3, [r0, #12]
2445:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       {
 178              		.loc 1 2445 10 view .LVU45
 179 0054 1BB9     		cbnz	r3, .L6
2447:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       }
 180              		.loc 1 2447 9 is_stmt 1 view .LVU46
2447:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       }
ARM GAS  /tmp/ccwOIEYW.s 			page 48


 181              		.loc 1 2447 27 is_stmt 0 view .LVU47
 182 0056 C369     		ldr	r3, [r0, #28]
 183 0058 0233     		adds	r3, r3, #2
 184 005a C361     		str	r3, [r0, #28]
 185 005c E1E7     		b	.L7
 186              	.L6:
2451:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       }
 187              		.loc 1 2451 9 is_stmt 1 view .LVU48
2451:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       }
 188              		.loc 1 2451 27 is_stmt 0 view .LVU49
 189 005e C369     		ldr	r3, [r0, #28]
 190 0060 0133     		adds	r3, r3, #1
 191 0062 C361     		str	r3, [r0, #28]
 192 0064 DDE7     		b	.L7
 193              		.cfi_endproc
 194              	.LFE175:
 196              		.section	.text.IRDA_SetConfig,"ax",%progbits
 197              		.align	1
 198              		.syntax unified
 199              		.thumb
 200              		.thumb_func
 201              		.fpu fpv4-sp-d16
 203              	IRDA_SetConfig:
 204              	.LVL10:
 205              	.LFB178:
2475:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
2476:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** /**
2477:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @brief  Wraps up transmission in non blocking mode.
2478:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @param  hirda  Pointer to a IRDA_HandleTypeDef structure that contains
2479:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *                the configuration information for the specified IRDA module.
2480:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @retval HAL status
2481:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   */
2482:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** static HAL_StatusTypeDef IRDA_EndTransmit_IT(IRDA_HandleTypeDef *hirda)
2483:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** {
2484:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Disable the IRDA Transmit Complete Interrupt */
2485:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   CLEAR_BIT(hirda->Instance->CR1, USART_CR1_TCIE);
2486:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
2487:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Disable the IRDA Error Interrupt: (Frame error, noise error, overrun error) */
2488:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   CLEAR_BIT(hirda->Instance->CR3, USART_CR3_EIE);
2489:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
2490:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Tx process is ended, restore hirda->gState to Ready */
2491:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   hirda->gState = HAL_IRDA_STATE_READY;
2492:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
2493:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #if (USE_HAL_IRDA_REGISTER_CALLBACKS == 1)
2494:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Call registered Tx complete callback */
2495:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   hirda->TxCpltCallback(hirda);
2496:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #else
2497:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Call legacy weak Tx complete callback */
2498:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   HAL_IRDA_TxCpltCallback(hirda);
2499:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #endif /* USE_HAL_IRDA_REGISTER_CALLBACK */
2500:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
2501:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   return HAL_OK;
2502:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** }
2503:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
2504:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** /**
2505:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @brief  Receives an amount of data in non blocking mode.
2506:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @param  hirda  Pointer to a IRDA_HandleTypeDef structure that contains
ARM GAS  /tmp/ccwOIEYW.s 			page 49


2507:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *                the configuration information for the specified IRDA module.
2508:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @retval HAL status
2509:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   */
2510:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** static HAL_StatusTypeDef IRDA_Receive_IT(IRDA_HandleTypeDef *hirda)
2511:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** {
2512:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   uint16_t *tmp;
2513:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   uint16_t  uhdata;
2514:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
2515:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Check that a Rx process is ongoing */
2516:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   if (hirda->RxState == HAL_IRDA_STATE_BUSY_RX)
2517:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
2518:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     uhdata = (uint16_t) READ_REG(hirda->Instance->DR);
2519:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     if (hirda->Init.WordLength == IRDA_WORDLENGTH_9B)
2520:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
2521:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       tmp = (uint16_t *) hirda->pRxBuffPtr;
2522:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       if (hirda->Init.Parity == IRDA_PARITY_NONE)
2523:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       {
2524:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         *tmp = (uint16_t)(uhdata & (uint16_t)0x01FF);
2525:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         hirda->pRxBuffPtr += 2U;
2526:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       }
2527:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       else
2528:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       {
2529:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         *tmp = (uint16_t)(uhdata & (uint16_t)0x00FF);
2530:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         hirda->pRxBuffPtr += 1U;
2531:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       }
2532:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
2533:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     else
2534:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
2535:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       if (hirda->Init.Parity == IRDA_PARITY_NONE)
2536:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       {
2537:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         *hirda->pRxBuffPtr++ = (uint8_t)(uhdata & (uint8_t)0x00FF);
2538:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       }
2539:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       else
2540:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       {
2541:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         *hirda->pRxBuffPtr++ = (uint8_t)(uhdata & (uint8_t)0x007F);
2542:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       }
2543:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
2544:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
2545:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     if (--hirda->RxXferCount == 0U)
2546:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
2547:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       /* Disable the IRDA Data Register not empty Interrupt */
2548:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       CLEAR_BIT(hirda->Instance->CR1, USART_CR1_RXNEIE);
2549:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
2550:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       /* Disable the IRDA Parity Error Interrupt */
2551:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       CLEAR_BIT(hirda->Instance->CR1, USART_CR1_PEIE);
2552:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
2553:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       /* Disable the IRDA Error Interrupt: (Frame error, noise error, overrun error) */
2554:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       CLEAR_BIT(hirda->Instance->CR3, USART_CR3_EIE);
2555:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
2556:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       /* Rx process is completed, restore hirda->RxState to Ready */
2557:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       hirda->RxState = HAL_IRDA_STATE_READY;
2558:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
2559:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #if (USE_HAL_IRDA_REGISTER_CALLBACKS == 1)
2560:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       /* Call registered Rx complete callback */
2561:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       hirda->RxCpltCallback(hirda);
2562:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #else
2563:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       /* Call legacy weak Rx complete callback */
ARM GAS  /tmp/ccwOIEYW.s 			page 50


2564:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       HAL_IRDA_RxCpltCallback(hirda);
2565:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #endif /* USE_HAL_IRDA_REGISTER_CALLBACKS */
2566:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
2567:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       return HAL_OK;
2568:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
2569:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     return HAL_OK;
2570:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
2571:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   else
2572:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
2573:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     return HAL_BUSY;
2574:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
2575:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** }
2576:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
2577:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** /**
2578:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @brief  Configures the IRDA peripheral.
2579:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @param  hirda  Pointer to a IRDA_HandleTypeDef structure that contains
2580:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   *                the configuration information for the specified IRDA module.
2581:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   * @retval None
2582:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   */
2583:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** static void IRDA_SetConfig(IRDA_HandleTypeDef *hirda)
2584:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** {
 206              		.loc 1 2584 1 is_stmt 1 view -0
 207              		.cfi_startproc
 208              		@ args = 0, pretend = 0, frame = 0
 209              		@ frame_needed = 0, uses_anonymous_args = 0
 210              		.loc 1 2584 1 is_stmt 0 view .LVU51
 211 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 212              	.LCFI0:
 213              		.cfi_def_cfa_offset 32
 214              		.cfi_offset 3, -32
 215              		.cfi_offset 4, -28
 216              		.cfi_offset 5, -24
 217              		.cfi_offset 6, -20
 218              		.cfi_offset 7, -16
 219              		.cfi_offset 8, -12
 220              		.cfi_offset 9, -8
 221              		.cfi_offset 14, -4
 222 0004 0446     		mov	r4, r0
2585:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Check the parameters */
2586:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   assert_param(IS_IRDA_INSTANCE(hirda->Instance));
 223              		.loc 1 2586 3 is_stmt 1 view .LVU52
2587:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   assert_param(IS_IRDA_BAUDRATE(hirda->Init.BaudRate));
 224              		.loc 1 2587 3 view .LVU53
2588:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   assert_param(IS_IRDA_WORD_LENGTH(hirda->Init.WordLength));
 225              		.loc 1 2588 3 view .LVU54
2589:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   assert_param(IS_IRDA_PARITY(hirda->Init.Parity));
 226              		.loc 1 2589 3 view .LVU55
2590:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   assert_param(IS_IRDA_MODE(hirda->Init.Mode));
 227              		.loc 1 2590 3 view .LVU56
2591:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   assert_param(IS_IRDA_POWERMODE(hirda->Init.IrDAMode));
 228              		.loc 1 2591 3 view .LVU57
2592:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
2593:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /*-------------------------- USART CR2 Configuration ------------------------*/
2594:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Clear STOP[13:12] bits */
2595:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   CLEAR_BIT(hirda->Instance->CR2, USART_CR2_STOP);
 229              		.loc 1 2595 3 view .LVU58
 230 0006 0268     		ldr	r2, [r0]
ARM GAS  /tmp/ccwOIEYW.s 			page 51


 231 0008 1369     		ldr	r3, [r2, #16]
 232 000a 23F44053 		bic	r3, r3, #12288
 233 000e 1361     		str	r3, [r2, #16]
2596:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
2597:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
2598:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Clear M, PCE, PS, TE and RE bits */
2599:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   CLEAR_BIT(hirda->Instance->CR1, (USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USAR
 234              		.loc 1 2599 3 view .LVU59
 235 0010 0268     		ldr	r2, [r0]
 236 0012 D368     		ldr	r3, [r2, #12]
 237 0014 23F4B053 		bic	r3, r3, #5632
 238 0018 23F00C03 		bic	r3, r3, #12
 239 001c D360     		str	r3, [r2, #12]
2600:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
2601:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Configure the USART Word Length, Parity and mode:
2602:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****      Set the M bits according to hirda->Init.WordLength value
2603:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****      Set PCE and PS bits according to hirda->Init.Parity value
2604:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****      Set TE and RE bits according to hirda->Init.Mode value */
2605:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Write to USART CR1 */
2606:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   SET_BIT(hirda->Instance->CR1, (hirda->Init.WordLength | hirda->Init.Parity | hirda->Init.Mode));
 240              		.loc 1 2606 3 view .LVU60
 241 001e 0168     		ldr	r1, [r0]
 242 0020 CA68     		ldr	r2, [r1, #12]
 243 0022 8368     		ldr	r3, [r0, #8]
 244 0024 C068     		ldr	r0, [r0, #12]
 245              	.LVL11:
 246              		.loc 1 2606 3 is_stmt 0 view .LVU61
 247 0026 0343     		orrs	r3, r3, r0
 248 0028 2069     		ldr	r0, [r4, #16]
 249 002a 0343     		orrs	r3, r3, r0
 250 002c 1343     		orrs	r3, r3, r2
 251 002e CB60     		str	r3, [r1, #12]
2607:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
2608:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/
2609:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Clear CTSE and RTSE bits */
2610:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   CLEAR_BIT(hirda->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE));
 252              		.loc 1 2610 3 is_stmt 1 view .LVU62
 253 0030 2268     		ldr	r2, [r4]
 254 0032 5369     		ldr	r3, [r2, #20]
 255 0034 23F44073 		bic	r3, r3, #768
 256 0038 5361     		str	r3, [r2, #20]
2611:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
2612:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /*-------------------------- USART BRR Configuration -----------------------*/
2613:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #if defined(USART6)
2614:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   if((hirda->Instance == USART1) || (hirda->Instance == USART6))
 257              		.loc 1 2614 3 view .LVU63
 258              		.loc 1 2614 12 is_stmt 0 view .LVU64
 259 003a 2368     		ldr	r3, [r4]
 260              		.loc 1 2614 5 view .LVU65
 261 003c 5C4A     		ldr	r2, .L17
 262 003e 9342     		cmp	r3, r2
 263 0040 5CD0     		beq	.L13
 264              		.loc 1 2614 34 discriminator 1 view .LVU66
 265 0042 02F58062 		add	r2, r2, #1024
 266 0046 9342     		cmp	r3, r2
 267 0048 58D0     		beq	.L13
2615:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
ARM GAS  /tmp/ccwOIEYW.s 			page 52


2616:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     SET_BIT(hirda->Instance->BRR, IRDA_BRR(HAL_RCC_GetPCLK2Freq(), hirda->Init.BaudRate));
2617:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
2618:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #else
2619:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   if(hirda->Instance == USART1)
2620:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
2621:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     SET_BIT(hirda->Instance->BRR, IRDA_BRR(HAL_RCC_GetPCLK2Freq(), hirda->Init.BaudRate));
2622:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
2623:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #endif /* USART6 */
2624:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   else
2625:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
2626:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     SET_BIT(hirda->Instance->BRR, IRDA_BRR(HAL_RCC_GetPCLK1Freq(), hirda->Init.BaudRate));
 268              		.loc 1 2626 5 is_stmt 1 view .LVU67
 269 004a FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 270              	.LVL12:
 271 004e 00EB8000 		add	r0, r0, r0, lsl #2
 272 0052 00EB8000 		add	r0, r0, r0, lsl #2
 273 0056 6568     		ldr	r5, [r4, #4]
 274 0058 AD00     		lsls	r5, r5, #2
 275 005a B0FBF5F5 		udiv	r5, r0, r5
 276 005e 554E     		ldr	r6, .L17+4
 277 0060 A6FB0535 		umull	r3, r5, r6, r5
 278 0064 6D09     		lsrs	r5, r5, #5
 279 0066 2F01     		lsls	r7, r5, #4
 280 0068 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 281              	.LVL13:
 282 006c 00EB8005 		add	r5, r0, r0, lsl #2
 283 0070 05EB8505 		add	r5, r5, r5, lsl #2
 284 0074 6368     		ldr	r3, [r4, #4]
 285 0076 9B00     		lsls	r3, r3, #2
 286 0078 B5FBF3F9 		udiv	r9, r5, r3
 287 007c FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 288              	.LVL14:
 289 0080 00EB8000 		add	r0, r0, r0, lsl #2
 290 0084 00EB8000 		add	r0, r0, r0, lsl #2
 291 0088 6568     		ldr	r5, [r4, #4]
 292 008a AD00     		lsls	r5, r5, #2
 293 008c B0FBF5F5 		udiv	r5, r0, r5
 294 0090 A6FB0535 		umull	r3, r5, r6, r5
 295 0094 6D09     		lsrs	r5, r5, #5
 296 0096 4FF06408 		mov	r8, #100
 297 009a 08FB1595 		mls	r5, r8, r5, r9
 298 009e 2D01     		lsls	r5, r5, #4
 299 00a0 3235     		adds	r5, r5, #50
 300 00a2 A6FB0535 		umull	r3, r5, r6, r5
 301 00a6 6D09     		lsrs	r5, r5, #5
 302 00a8 05F0F005 		and	r5, r5, #240
 303 00ac 3D44     		add	r5, r5, r7
 304 00ae FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 305              	.LVL15:
 306 00b2 00EB8000 		add	r0, r0, r0, lsl #2
 307 00b6 00EB8000 		add	r0, r0, r0, lsl #2
 308 00ba 6768     		ldr	r7, [r4, #4]
 309 00bc BF00     		lsls	r7, r7, #2
 310 00be B0FBF7F7 		udiv	r7, r0, r7
 311 00c2 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 312              	.LVL16:
 313 00c6 00EB8000 		add	r0, r0, r0, lsl #2
ARM GAS  /tmp/ccwOIEYW.s 			page 53


 314 00ca 00EB8000 		add	r0, r0, r0, lsl #2
 315 00ce 6368     		ldr	r3, [r4, #4]
 316 00d0 9B00     		lsls	r3, r3, #2
 317 00d2 B0FBF3F0 		udiv	r0, r0, r3
 318 00d6 A6FB0030 		umull	r3, r0, r6, r0
 319 00da 4009     		lsrs	r0, r0, #5
 320 00dc 08FB1078 		mls	r8, r8, r0, r7
 321 00e0 4FEA0818 		lsl	r8, r8, #4
 322 00e4 08F13208 		add	r8, r8, #50
 323 00e8 A6FB0836 		umull	r3, r6, r6, r8
 324 00ec C6F34316 		ubfx	r6, r6, #5, #4
 325 00f0 3544     		add	r5, r5, r6
 326 00f2 2368     		ldr	r3, [r4]
 327 00f4 9E68     		ldr	r6, [r3, #8]
 328 00f6 2E43     		orrs	r6, r6, r5
 329 00f8 9E60     		str	r6, [r3, #8]
2627:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
2628:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** }
 330              		.loc 1 2628 1 is_stmt 0 view .LVU68
 331 00fa 57E0     		b	.L12
 332              	.L13:
2616:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
 333              		.loc 1 2616 5 is_stmt 1 view .LVU69
 334 00fc FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 335              	.LVL17:
 336 0100 00EB8000 		add	r0, r0, r0, lsl #2
 337 0104 00EB8000 		add	r0, r0, r0, lsl #2
 338 0108 6568     		ldr	r5, [r4, #4]
 339 010a AD00     		lsls	r5, r5, #2
 340 010c B0FBF5F5 		udiv	r5, r0, r5
 341 0110 284E     		ldr	r6, .L17+4
 342 0112 A6FB0535 		umull	r3, r5, r6, r5
 343 0116 6D09     		lsrs	r5, r5, #5
 344 0118 2F01     		lsls	r7, r5, #4
 345 011a FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 346              	.LVL18:
 347 011e 00EB8005 		add	r5, r0, r0, lsl #2
 348 0122 05EB8505 		add	r5, r5, r5, lsl #2
 349 0126 6368     		ldr	r3, [r4, #4]
 350 0128 9B00     		lsls	r3, r3, #2
 351 012a B5FBF3F9 		udiv	r9, r5, r3
 352 012e FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 353              	.LVL19:
 354 0132 00EB8000 		add	r0, r0, r0, lsl #2
 355 0136 00EB8000 		add	r0, r0, r0, lsl #2
 356 013a 6568     		ldr	r5, [r4, #4]
 357 013c AD00     		lsls	r5, r5, #2
 358 013e B0FBF5F5 		udiv	r5, r0, r5
 359 0142 A6FB0535 		umull	r3, r5, r6, r5
 360 0146 6D09     		lsrs	r5, r5, #5
 361 0148 4FF06408 		mov	r8, #100
 362 014c 08FB1595 		mls	r5, r8, r5, r9
 363 0150 2D01     		lsls	r5, r5, #4
 364 0152 3235     		adds	r5, r5, #50
 365 0154 A6FB0535 		umull	r3, r5, r6, r5
 366 0158 6D09     		lsrs	r5, r5, #5
 367 015a 05F0F005 		and	r5, r5, #240
ARM GAS  /tmp/ccwOIEYW.s 			page 54


 368 015e 3D44     		add	r5, r5, r7
 369 0160 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 370              	.LVL20:
 371 0164 00EB8000 		add	r0, r0, r0, lsl #2
 372 0168 00EB8000 		add	r0, r0, r0, lsl #2
 373 016c 6768     		ldr	r7, [r4, #4]
 374 016e BF00     		lsls	r7, r7, #2
 375 0170 B0FBF7F7 		udiv	r7, r0, r7
 376 0174 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 377              	.LVL21:
 378 0178 00EB8000 		add	r0, r0, r0, lsl #2
 379 017c 00EB8000 		add	r0, r0, r0, lsl #2
 380 0180 6368     		ldr	r3, [r4, #4]
 381 0182 9B00     		lsls	r3, r3, #2
 382 0184 B0FBF3F0 		udiv	r0, r0, r3
 383 0188 A6FB0030 		umull	r3, r0, r6, r0
 384 018c 4009     		lsrs	r0, r0, #5
 385 018e 08FB1078 		mls	r8, r8, r0, r7
 386 0192 4FEA0818 		lsl	r8, r8, #4
 387 0196 08F13208 		add	r8, r8, #50
 388 019a A6FB0836 		umull	r3, r6, r6, r8
 389 019e C6F34316 		ubfx	r6, r6, #5, #4
 390 01a2 3544     		add	r5, r5, r6
 391 01a4 2368     		ldr	r3, [r4]
 392 01a6 9E68     		ldr	r6, [r3, #8]
 393 01a8 2E43     		orrs	r6, r6, r5
 394 01aa 9E60     		str	r6, [r3, #8]
 395              	.L12:
 396              		.loc 1 2628 1 is_stmt 0 view .LVU70
 397 01ac BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 398              	.LVL22:
 399              	.L18:
 400              		.loc 1 2628 1 view .LVU71
 401              		.align	2
 402              	.L17:
 403 01b0 00100140 		.word	1073811456
 404 01b4 1F85EB51 		.word	1374389535
 405              		.cfi_endproc
 406              	.LFE178:
 408              		.section	.text.IRDA_WaitOnFlagUntilTimeout,"ax",%progbits
 409              		.align	1
 410              		.syntax unified
 411              		.thumb
 412              		.thumb_func
 413              		.fpu fpv4-sp-d16
 415              	IRDA_WaitOnFlagUntilTimeout:
 416              	.LVL23:
 417              	.LFB167:
2210:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Wait until flag is set */
 418              		.loc 1 2210 1 is_stmt 1 view -0
 419              		.cfi_startproc
 420              		@ args = 4, pretend = 0, frame = 0
 421              		@ frame_needed = 0, uses_anonymous_args = 0
2210:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Wait until flag is set */
 422              		.loc 1 2210 1 is_stmt 0 view .LVU73
 423 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 424              	.LCFI1:
ARM GAS  /tmp/ccwOIEYW.s 			page 55


 425              		.cfi_def_cfa_offset 32
 426              		.cfi_offset 3, -32
 427              		.cfi_offset 4, -28
 428              		.cfi_offset 5, -24
 429              		.cfi_offset 6, -20
 430              		.cfi_offset 7, -16
 431              		.cfi_offset 8, -12
 432              		.cfi_offset 9, -8
 433              		.cfi_offset 14, -4
 434 0004 0546     		mov	r5, r0
 435 0006 0F46     		mov	r7, r1
 436 0008 1646     		mov	r6, r2
 437 000a 9946     		mov	r9, r3
 438 000c DDF82080 		ldr	r8, [sp, #32]
2212:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 439              		.loc 1 2212 3 is_stmt 1 view .LVU74
 440              	.LVL24:
 441              	.L21:
2212:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 442              		.loc 1 2212 9 view .LVU75
2212:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 443              		.loc 1 2212 11 is_stmt 0 view .LVU76
 444 0010 2C68     		ldr	r4, [r5]
 445 0012 2468     		ldr	r4, [r4]
2212:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 446              		.loc 1 2212 50 view .LVU77
 447 0014 37EA0403 		bics	r3, r7, r4
 448 0018 0CBF     		ite	eq
 449 001a 0124     		moveq	r4, #1
 450 001c 0024     		movne	r4, #0
2212:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 451              		.loc 1 2212 9 view .LVU78
 452 001e B442     		cmp	r4, r6
 453 0020 1FD1     		bne	.L26
2215:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 454              		.loc 1 2215 5 is_stmt 1 view .LVU79
2215:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 455              		.loc 1 2215 8 is_stmt 0 view .LVU80
 456 0022 B8F1FF3F 		cmp	r8, #-1
 457 0026 F3D0     		beq	.L21
2217:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       {
 458              		.loc 1 2217 7 is_stmt 1 view .LVU81
2217:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       {
 459              		.loc 1 2217 10 is_stmt 0 view .LVU82
 460 0028 B8F1000F 		cmp	r8, #0
 461 002c 05D0     		beq	.L22
2217:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       {
 462              		.loc 1 2217 32 discriminator 1 view .LVU83
 463 002e FFF7FEFF 		bl	HAL_GetTick
 464              	.LVL25:
2217:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       {
 465              		.loc 1 2217 46 discriminator 1 view .LVU84
 466 0032 A0EB0900 		sub	r0, r0, r9
2217:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       {
 467              		.loc 1 2217 27 discriminator 1 view .LVU85
 468 0036 4045     		cmp	r0, r8
 469 0038 EAD9     		bls	.L21
ARM GAS  /tmp/ccwOIEYW.s 			page 56


 470              	.L22:
2220:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         CLEAR_BIT(hirda->Instance->CR3, USART_CR3_EIE);
 471              		.loc 1 2220 9 is_stmt 1 view .LVU86
 472 003a 2A68     		ldr	r2, [r5]
 473 003c D368     		ldr	r3, [r2, #12]
 474 003e 23F4D073 		bic	r3, r3, #416
 475 0042 D360     		str	r3, [r2, #12]
2221:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 476              		.loc 1 2221 9 view .LVU87
 477 0044 2A68     		ldr	r2, [r5]
 478 0046 5369     		ldr	r3, [r2, #20]
 479 0048 23F00103 		bic	r3, r3, #1
 480 004c 5361     		str	r3, [r2, #20]
2223:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         hirda->RxState = HAL_IRDA_STATE_READY;
 481              		.loc 1 2223 9 view .LVU88
2223:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         hirda->RxState = HAL_IRDA_STATE_READY;
 482              		.loc 1 2223 24 is_stmt 0 view .LVU89
 483 004e 2023     		movs	r3, #32
 484 0050 85F83530 		strb	r3, [r5, #53]
2224:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 485              		.loc 1 2224 9 is_stmt 1 view .LVU90
2224:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 486              		.loc 1 2224 24 is_stmt 0 view .LVU91
 487 0054 85F83630 		strb	r3, [r5, #54]
2227:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 488              		.loc 1 2227 9 is_stmt 1 view .LVU92
2227:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 489              		.loc 1 2227 9 view .LVU93
 490 0058 0023     		movs	r3, #0
 491 005a 85F83430 		strb	r3, [r5, #52]
2227:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 492              		.loc 1 2227 9 view .LVU94
2229:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       }
 493              		.loc 1 2229 9 view .LVU95
2229:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       }
 494              		.loc 1 2229 16 is_stmt 0 view .LVU96
 495 005e 0320     		movs	r0, #3
 496 0060 00E0     		b	.L23
 497              	.L26:
2233:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** }
 498              		.loc 1 2233 10 view .LVU97
 499 0062 0020     		movs	r0, #0
 500              	.L23:
2234:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 501              		.loc 1 2234 1 view .LVU98
 502 0064 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
2234:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 503              		.loc 1 2234 1 view .LVU99
 504              		.cfi_endproc
 505              	.LFE167:
 507              		.section	.text.HAL_IRDA_MspInit,"ax",%progbits
 508              		.align	1
 509              		.weak	HAL_IRDA_MspInit
 510              		.syntax unified
 511              		.thumb
 512              		.thumb_func
 513              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccwOIEYW.s 			page 57


 515              	HAL_IRDA_MspInit:
 516              	.LVL26:
 517              	.LFB134:
 412:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Prevent unused argument(s) compilation warning */
 518              		.loc 1 412 1 is_stmt 1 view -0
 519              		.cfi_startproc
 520              		@ args = 0, pretend = 0, frame = 0
 521              		@ frame_needed = 0, uses_anonymous_args = 0
 522              		@ link register save eliminated.
 414:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 523              		.loc 1 414 3 view .LVU101
 419:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 524              		.loc 1 419 1 is_stmt 0 view .LVU102
 525 0000 7047     		bx	lr
 526              		.cfi_endproc
 527              	.LFE134:
 529              		.section	.text.HAL_IRDA_Init,"ax",%progbits
 530              		.align	1
 531              		.global	HAL_IRDA_Init
 532              		.syntax unified
 533              		.thumb
 534              		.thumb_func
 535              		.fpu fpv4-sp-d16
 537              	HAL_IRDA_Init:
 538              	.LVL27:
 539              	.LFB132:
 293:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Check the IRDA handle allocation */
 540              		.loc 1 293 1 is_stmt 1 view -0
 541              		.cfi_startproc
 542              		@ args = 0, pretend = 0, frame = 0
 543              		@ frame_needed = 0, uses_anonymous_args = 0
 295:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 544              		.loc 1 295 3 view .LVU104
 295:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 545              		.loc 1 295 6 is_stmt 0 view .LVU105
 546 0000 0028     		cmp	r0, #0
 547 0002 3FD0     		beq	.L31
 293:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Check the IRDA handle allocation */
 548              		.loc 1 293 1 view .LVU106
 549 0004 10B5     		push	{r4, lr}
 550              	.LCFI2:
 551              		.cfi_def_cfa_offset 8
 552              		.cfi_offset 4, -8
 553              		.cfi_offset 14, -4
 554 0006 0446     		mov	r4, r0
 301:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Check the IRDA mode parameter in the IRDA handle */
 555              		.loc 1 301 3 is_stmt 1 view .LVU107
 303:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 556              		.loc 1 303 3 view .LVU108
 305:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 557              		.loc 1 305 3 view .LVU109
 305:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 558              		.loc 1 305 12 is_stmt 0 view .LVU110
 559 0008 90F83530 		ldrb	r3, [r0, #53]	@ zero_extendqisi2
 305:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 560              		.loc 1 305 6 view .LVU111
 561 000c 002B     		cmp	r3, #0
ARM GAS  /tmp/ccwOIEYW.s 			page 58


 562 000e 34D0     		beq	.L36
 563              	.LVL28:
 564              	.L30:
 326:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 565              		.loc 1 326 3 is_stmt 1 view .LVU112
 326:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 566              		.loc 1 326 17 is_stmt 0 view .LVU113
 567 0010 2423     		movs	r3, #36
 568 0012 84F83530 		strb	r3, [r4, #53]
 329:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 569              		.loc 1 329 3 is_stmt 1 view .LVU114
 570 0016 2268     		ldr	r2, [r4]
 571 0018 D368     		ldr	r3, [r2, #12]
 572 001a 23F40053 		bic	r3, r3, #8192
 573 001e D360     		str	r3, [r2, #12]
 332:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 574              		.loc 1 332 3 view .LVU115
 575 0020 2046     		mov	r0, r4
 576 0022 FFF7FEFF 		bl	IRDA_SetConfig
 577              	.LVL29:
 337:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   CLEAR_BIT(hirda->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL));
 578              		.loc 1 337 3 view .LVU116
 579 0026 2268     		ldr	r2, [r4]
 580 0028 1369     		ldr	r3, [r2, #16]
 581 002a 23F4F043 		bic	r3, r3, #30720
 582 002e 1361     		str	r3, [r2, #16]
 338:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 583              		.loc 1 338 3 view .LVU117
 584 0030 2268     		ldr	r2, [r4]
 585 0032 5369     		ldr	r3, [r2, #20]
 586 0034 23F02803 		bic	r3, r3, #40
 587 0038 5361     		str	r3, [r2, #20]
 341:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 588              		.loc 1 341 3 view .LVU118
 589 003a 2268     		ldr	r2, [r4]
 590 003c D368     		ldr	r3, [r2, #12]
 591 003e 43F40053 		orr	r3, r3, #8192
 592 0042 D360     		str	r3, [r2, #12]
 344:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 593              		.loc 1 344 3 view .LVU119
 594 0044 2268     		ldr	r2, [r4]
 595 0046 9369     		ldr	r3, [r2, #24]
 596 0048 23F0FF03 		bic	r3, r3, #255
 597 004c 217D     		ldrb	r1, [r4, #20]	@ zero_extendqisi2
 598 004e 0B43     		orrs	r3, r3, r1
 599 0050 9361     		str	r3, [r2, #24]
 347:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 600              		.loc 1 347 3 view .LVU120
 601 0052 2268     		ldr	r2, [r4]
 602 0054 5369     		ldr	r3, [r2, #20]
 603 0056 23F00403 		bic	r3, r3, #4
 604 005a A169     		ldr	r1, [r4, #24]
 605 005c 0B43     		orrs	r3, r3, r1
 606 005e 5361     		str	r3, [r2, #20]
 350:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 607              		.loc 1 350 3 view .LVU121
 608 0060 2268     		ldr	r2, [r4]
ARM GAS  /tmp/ccwOIEYW.s 			page 59


 609 0062 5369     		ldr	r3, [r2, #20]
 610 0064 43F00203 		orr	r3, r3, #2
 611 0068 5361     		str	r3, [r2, #20]
 353:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   hirda->gState = HAL_IRDA_STATE_READY;
 612              		.loc 1 353 3 view .LVU122
 353:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   hirda->gState = HAL_IRDA_STATE_READY;
 613              		.loc 1 353 20 is_stmt 0 view .LVU123
 614 006a 0020     		movs	r0, #0
 615 006c A063     		str	r0, [r4, #56]
 354:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   hirda->RxState = HAL_IRDA_STATE_READY;
 616              		.loc 1 354 3 is_stmt 1 view .LVU124
 354:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   hirda->RxState = HAL_IRDA_STATE_READY;
 617              		.loc 1 354 17 is_stmt 0 view .LVU125
 618 006e 2023     		movs	r3, #32
 619 0070 84F83530 		strb	r3, [r4, #53]
 355:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 620              		.loc 1 355 3 is_stmt 1 view .LVU126
 355:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 621              		.loc 1 355 18 is_stmt 0 view .LVU127
 622 0074 84F83630 		strb	r3, [r4, #54]
 357:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** }
 623              		.loc 1 357 3 is_stmt 1 view .LVU128
 358:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 624              		.loc 1 358 1 is_stmt 0 view .LVU129
 625 0078 10BD     		pop	{r4, pc}
 626              	.LVL30:
 627              	.L36:
 308:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 628              		.loc 1 308 5 is_stmt 1 view .LVU130
 308:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 629              		.loc 1 308 17 is_stmt 0 view .LVU131
 630 007a 80F83430 		strb	r3, [r0, #52]
 322:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #endif /* USE_HAL_IRDA_REGISTER_CALLBACKS */
 631              		.loc 1 322 5 is_stmt 1 view .LVU132
 632 007e FFF7FEFF 		bl	HAL_IRDA_MspInit
 633              	.LVL31:
 322:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #endif /* USE_HAL_IRDA_REGISTER_CALLBACKS */
 634              		.loc 1 322 5 is_stmt 0 view .LVU133
 635 0082 C5E7     		b	.L30
 636              	.LVL32:
 637              	.L31:
 638              	.LCFI3:
 639              		.cfi_def_cfa_offset 0
 640              		.cfi_restore 4
 641              		.cfi_restore 14
 297:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
 642              		.loc 1 297 12 view .LVU134
 643 0084 0120     		movs	r0, #1
 644              	.LVL33:
 358:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 645              		.loc 1 358 1 view .LVU135
 646 0086 7047     		bx	lr
 647              		.cfi_endproc
 648              	.LFE132:
 650              		.section	.text.HAL_IRDA_MspDeInit,"ax",%progbits
 651              		.align	1
 652              		.weak	HAL_IRDA_MspDeInit
ARM GAS  /tmp/ccwOIEYW.s 			page 60


 653              		.syntax unified
 654              		.thumb
 655              		.thumb_func
 656              		.fpu fpv4-sp-d16
 658              	HAL_IRDA_MspDeInit:
 659              	.LVL34:
 660              	.LFB135:
 428:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Prevent unused argument(s) compilation warning */
 661              		.loc 1 428 1 is_stmt 1 view -0
 662              		.cfi_startproc
 663              		@ args = 0, pretend = 0, frame = 0
 664              		@ frame_needed = 0, uses_anonymous_args = 0
 665              		@ link register save eliminated.
 430:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 666              		.loc 1 430 3 view .LVU137
 435:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 667              		.loc 1 435 1 is_stmt 0 view .LVU138
 668 0000 7047     		bx	lr
 669              		.cfi_endproc
 670              	.LFE135:
 672              		.section	.text.HAL_IRDA_DeInit,"ax",%progbits
 673              		.align	1
 674              		.global	HAL_IRDA_DeInit
 675              		.syntax unified
 676              		.thumb
 677              		.thumb_func
 678              		.fpu fpv4-sp-d16
 680              	HAL_IRDA_DeInit:
 681              	.LVL35:
 682              	.LFB133:
 367:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Check the IRDA handle allocation */
 683              		.loc 1 367 1 is_stmt 1 view -0
 684              		.cfi_startproc
 685              		@ args = 0, pretend = 0, frame = 0
 686              		@ frame_needed = 0, uses_anonymous_args = 0
 369:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 687              		.loc 1 369 3 view .LVU140
 369:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 688              		.loc 1 369 6 is_stmt 0 view .LVU141
 689 0000 A0B1     		cbz	r0, .L40
 367:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Check the IRDA handle allocation */
 690              		.loc 1 367 1 view .LVU142
 691 0002 10B5     		push	{r4, lr}
 692              	.LCFI4:
 693              		.cfi_def_cfa_offset 8
 694              		.cfi_offset 4, -8
 695              		.cfi_offset 14, -4
 696 0004 0446     		mov	r4, r0
 375:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 697              		.loc 1 375 3 is_stmt 1 view .LVU143
 377:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 698              		.loc 1 377 3 view .LVU144
 377:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 699              		.loc 1 377 17 is_stmt 0 view .LVU145
 700 0006 2423     		movs	r3, #36
 701 0008 80F83530 		strb	r3, [r0, #53]
 380:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
ARM GAS  /tmp/ccwOIEYW.s 			page 61


 702              		.loc 1 380 3 is_stmt 1 view .LVU146
 703 000c 0268     		ldr	r2, [r0]
 704 000e D368     		ldr	r3, [r2, #12]
 705 0010 23F40053 		bic	r3, r3, #8192
 706 0014 D360     		str	r3, [r2, #12]
 391:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #endif /* USE_HAL_IRDA_REGISTER_CALLBACKS */
 707              		.loc 1 391 3 view .LVU147
 708 0016 FFF7FEFF 		bl	HAL_IRDA_MspDeInit
 709              	.LVL36:
 394:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 710              		.loc 1 394 3 view .LVU148
 394:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 711              		.loc 1 394 20 is_stmt 0 view .LVU149
 712 001a 0020     		movs	r0, #0
 713 001c A063     		str	r0, [r4, #56]
 396:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   hirda->RxState = HAL_IRDA_STATE_RESET;
 714              		.loc 1 396 3 is_stmt 1 view .LVU150
 396:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   hirda->RxState = HAL_IRDA_STATE_RESET;
 715              		.loc 1 396 17 is_stmt 0 view .LVU151
 716 001e 84F83500 		strb	r0, [r4, #53]
 397:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 717              		.loc 1 397 3 is_stmt 1 view .LVU152
 397:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 718              		.loc 1 397 18 is_stmt 0 view .LVU153
 719 0022 84F83600 		strb	r0, [r4, #54]
 400:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 720              		.loc 1 400 3 is_stmt 1 view .LVU154
 400:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 721              		.loc 1 400 3 view .LVU155
 722 0026 84F83400 		strb	r0, [r4, #52]
 400:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 723              		.loc 1 400 3 view .LVU156
 402:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** }
 724              		.loc 1 402 3 view .LVU157
 403:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 725              		.loc 1 403 1 is_stmt 0 view .LVU158
 726 002a 10BD     		pop	{r4, pc}
 727              	.LVL37:
 728              	.L40:
 729              	.LCFI5:
 730              		.cfi_def_cfa_offset 0
 731              		.cfi_restore 4
 732              		.cfi_restore 14
 371:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
 733              		.loc 1 371 12 view .LVU159
 734 002c 0120     		movs	r0, #1
 735              	.LVL38:
 403:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 736              		.loc 1 403 1 view .LVU160
 737 002e 7047     		bx	lr
 738              		.cfi_endproc
 739              	.LFE133:
 741              		.section	.text.HAL_IRDA_Transmit,"ax",%progbits
 742              		.align	1
 743              		.global	HAL_IRDA_Transmit
 744              		.syntax unified
 745              		.thumb
ARM GAS  /tmp/ccwOIEYW.s 			page 62


 746              		.thumb_func
 747              		.fpu fpv4-sp-d16
 749              	HAL_IRDA_Transmit:
 750              	.LVL39:
 751              	.LFB136:
 768:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   uint16_t *tmp;
 752              		.loc 1 768 1 is_stmt 1 view -0
 753              		.cfi_startproc
 754              		@ args = 0, pretend = 0, frame = 0
 755              		@ frame_needed = 0, uses_anonymous_args = 0
 768:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   uint16_t *tmp;
 756              		.loc 1 768 1 is_stmt 0 view .LVU162
 757 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 758              	.LCFI6:
 759              		.cfi_def_cfa_offset 24
 760              		.cfi_offset 4, -24
 761              		.cfi_offset 5, -20
 762              		.cfi_offset 6, -16
 763              		.cfi_offset 7, -12
 764              		.cfi_offset 8, -8
 765              		.cfi_offset 14, -4
 766 0004 82B0     		sub	sp, sp, #8
 767              	.LCFI7:
 768              		.cfi_def_cfa_offset 32
 769 0006 1E46     		mov	r6, r3
 769:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   uint32_t tickstart = 0U;
 770              		.loc 1 769 3 is_stmt 1 view .LVU163
 770:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 771              		.loc 1 770 3 view .LVU164
 772              	.LVL40:
 773:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 773              		.loc 1 773 3 view .LVU165
 773:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 774              		.loc 1 773 12 is_stmt 0 view .LVU166
 775 0008 90F83530 		ldrb	r3, [r0, #53]	@ zero_extendqisi2
 776              	.LVL41:
 773:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 777              		.loc 1 773 12 view .LVU167
 778 000c DBB2     		uxtb	r3, r3
 773:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 779              		.loc 1 773 6 view .LVU168
 780 000e 202B     		cmp	r3, #32
 781 0010 58D1     		bne	.L52
 782 0012 0446     		mov	r4, r0
 783 0014 0D46     		mov	r5, r1
 784 0016 9046     		mov	r8, r2
 775:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 785              		.loc 1 775 5 is_stmt 1 view .LVU169
 775:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 786              		.loc 1 775 8 is_stmt 0 view .LVU170
 787 0018 0029     		cmp	r1, #0
 788 001a 57D0     		beq	.L53
 775:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 789              		.loc 1 775 25 discriminator 1 view .LVU171
 790 001c 002A     		cmp	r2, #0
 791 001e 57D0     		beq	.L54
 781:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
ARM GAS  /tmp/ccwOIEYW.s 			page 63


 792              		.loc 1 781 5 is_stmt 1 view .LVU172
 781:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 793              		.loc 1 781 5 view .LVU173
 794 0020 90F83430 		ldrb	r3, [r0, #52]	@ zero_extendqisi2
 795 0024 012B     		cmp	r3, #1
 796 0026 55D0     		beq	.L55
 781:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 797              		.loc 1 781 5 discriminator 2 view .LVU174
 798 0028 0123     		movs	r3, #1
 799 002a 80F83430 		strb	r3, [r0, #52]
 781:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 800              		.loc 1 781 5 discriminator 2 view .LVU175
 783:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->gState = HAL_IRDA_STATE_BUSY_TX;
 801              		.loc 1 783 5 discriminator 2 view .LVU176
 783:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->gState = HAL_IRDA_STATE_BUSY_TX;
 802              		.loc 1 783 22 is_stmt 0 discriminator 2 view .LVU177
 803 002e 0023     		movs	r3, #0
 804 0030 8363     		str	r3, [r0, #56]
 784:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 805              		.loc 1 784 5 is_stmt 1 discriminator 2 view .LVU178
 784:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 806              		.loc 1 784 19 is_stmt 0 discriminator 2 view .LVU179
 807 0032 2123     		movs	r3, #33
 808 0034 80F83530 		strb	r3, [r0, #53]
 787:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 809              		.loc 1 787 5 is_stmt 1 discriminator 2 view .LVU180
 787:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 810              		.loc 1 787 17 is_stmt 0 discriminator 2 view .LVU181
 811 0038 FFF7FEFF 		bl	HAL_GetTick
 812              	.LVL42:
 787:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 813              		.loc 1 787 17 discriminator 2 view .LVU182
 814 003c 0746     		mov	r7, r0
 815              	.LVL43:
 789:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->TxXferCount = Size;
 816              		.loc 1 789 5 is_stmt 1 discriminator 2 view .LVU183
 789:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->TxXferCount = Size;
 817              		.loc 1 789 23 is_stmt 0 discriminator 2 view .LVU184
 818 003e A4F82080 		strh	r8, [r4, #32]	@ movhi
 790:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     while (hirda->TxXferCount > 0U)
 819              		.loc 1 790 5 is_stmt 1 discriminator 2 view .LVU185
 790:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     while (hirda->TxXferCount > 0U)
 820              		.loc 1 790 24 is_stmt 0 discriminator 2 view .LVU186
 821 0042 A4F82280 		strh	r8, [r4, #34]	@ movhi
 791:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 822              		.loc 1 791 5 is_stmt 1 discriminator 2 view .LVU187
 791:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 823              		.loc 1 791 11 is_stmt 0 discriminator 2 view .LVU188
 824 0046 17E0     		b	.L47
 825              	.LVL44:
 826              	.L61:
 796:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         {
 827              		.loc 1 796 9 is_stmt 1 view .LVU189
 796:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         {
 828              		.loc 1 796 13 is_stmt 0 view .LVU190
 829 0048 0096     		str	r6, [sp]
 830 004a 3B46     		mov	r3, r7
ARM GAS  /tmp/ccwOIEYW.s 			page 64


 831 004c 0022     		movs	r2, #0
 832 004e 8021     		movs	r1, #128
 833 0050 2046     		mov	r0, r4
 834 0052 FFF7FEFF 		bl	IRDA_WaitOnFlagUntilTimeout
 835              	.LVL45:
 796:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         {
 836              		.loc 1 796 12 view .LVU191
 837 0056 0028     		cmp	r0, #0
 838 0058 3ED1     		bne	.L56
 800:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         hirda->Instance->DR = (*tmp & (uint16_t)0x01FF);
 839              		.loc 1 800 9 is_stmt 1 view .LVU192
 840              	.LVL46:
 801:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         if (hirda->Init.Parity == IRDA_PARITY_NONE)
 841              		.loc 1 801 9 view .LVU193
 801:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         if (hirda->Init.Parity == IRDA_PARITY_NONE)
 842              		.loc 1 801 32 is_stmt 0 view .LVU194
 843 005a 2B88     		ldrh	r3, [r5]
 801:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         if (hirda->Init.Parity == IRDA_PARITY_NONE)
 844              		.loc 1 801 14 view .LVU195
 845 005c 2268     		ldr	r2, [r4]
 801:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         if (hirda->Init.Parity == IRDA_PARITY_NONE)
 846              		.loc 1 801 37 view .LVU196
 847 005e C3F30803 		ubfx	r3, r3, #0, #9
 801:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         if (hirda->Init.Parity == IRDA_PARITY_NONE)
 848              		.loc 1 801 29 view .LVU197
 849 0062 5360     		str	r3, [r2, #4]
 802:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         {
 850              		.loc 1 802 9 is_stmt 1 view .LVU198
 802:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         {
 851              		.loc 1 802 24 is_stmt 0 view .LVU199
 852 0064 E368     		ldr	r3, [r4, #12]
 802:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         {
 853              		.loc 1 802 12 view .LVU200
 854 0066 0BB9     		cbnz	r3, .L49
 804:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         }
 855              		.loc 1 804 11 is_stmt 1 view .LVU201
 804:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         }
 856              		.loc 1 804 17 is_stmt 0 view .LVU202
 857 0068 0235     		adds	r5, r5, #2
 858              	.LVL47:
 804:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         }
 859              		.loc 1 804 17 view .LVU203
 860 006a 05E0     		b	.L47
 861              	.LVL48:
 862              	.L49:
 808:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         }
 863              		.loc 1 808 11 is_stmt 1 view .LVU204
 808:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         }
 864              		.loc 1 808 17 is_stmt 0 view .LVU205
 865 006c 0135     		adds	r5, r5, #1
 866              	.LVL49:
 808:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         }
 867              		.loc 1 808 17 view .LVU206
 868 006e 03E0     		b	.L47
 869              	.LVL50:
 870              	.L62:
 817:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       }
ARM GAS  /tmp/ccwOIEYW.s 			page 65


 871              		.loc 1 817 9 is_stmt 1 view .LVU207
 817:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       }
 872              		.loc 1 817 32 is_stmt 0 view .LVU208
 873 0070 15F8012B 		ldrb	r2, [r5], #1	@ zero_extendqisi2
 874              	.LVL51:
 817:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       }
 875              		.loc 1 817 14 view .LVU209
 876 0074 2368     		ldr	r3, [r4]
 817:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       }
 877              		.loc 1 817 29 view .LVU210
 878 0076 5A60     		str	r2, [r3, #4]
 879              	.L47:
 791:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 880              		.loc 1 791 11 is_stmt 1 view .LVU211
 791:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 881              		.loc 1 791 17 is_stmt 0 view .LVU212
 882 0078 638C     		ldrh	r3, [r4, #34]
 883 007a 9BB2     		uxth	r3, r3
 791:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 884              		.loc 1 791 11 view .LVU213
 885 007c 9BB1     		cbz	r3, .L60
 793:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       if (hirda->Init.WordLength == IRDA_WORDLENGTH_9B)
 886              		.loc 1 793 7 is_stmt 1 view .LVU214
 793:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       if (hirda->Init.WordLength == IRDA_WORDLENGTH_9B)
 887              		.loc 1 793 12 is_stmt 0 view .LVU215
 888 007e 628C     		ldrh	r2, [r4, #34]
 889 0080 92B2     		uxth	r2, r2
 793:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       if (hirda->Init.WordLength == IRDA_WORDLENGTH_9B)
 890              		.loc 1 793 25 view .LVU216
 891 0082 013A     		subs	r2, r2, #1
 892 0084 92B2     		uxth	r2, r2
 893 0086 6284     		strh	r2, [r4, #34]	@ movhi
 794:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       {
 894              		.loc 1 794 7 is_stmt 1 view .LVU217
 794:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       {
 895              		.loc 1 794 22 is_stmt 0 view .LVU218
 896 0088 A368     		ldr	r3, [r4, #8]
 794:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       {
 897              		.loc 1 794 10 view .LVU219
 898 008a B3F5805F 		cmp	r3, #4096
 899 008e DBD0     		beq	.L61
 813:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         {
 900              		.loc 1 813 9 is_stmt 1 view .LVU220
 813:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         {
 901              		.loc 1 813 13 is_stmt 0 view .LVU221
 902 0090 0096     		str	r6, [sp]
 903 0092 3B46     		mov	r3, r7
 904 0094 0022     		movs	r2, #0
 905 0096 8021     		movs	r1, #128
 906 0098 2046     		mov	r0, r4
 907 009a FFF7FEFF 		bl	IRDA_WaitOnFlagUntilTimeout
 908              	.LVL52:
 813:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         {
 909              		.loc 1 813 12 view .LVU222
 910 009e 0028     		cmp	r0, #0
 911 00a0 E6D0     		beq	.L62
 815:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         }
ARM GAS  /tmp/ccwOIEYW.s 			page 66


 912              		.loc 1 815 18 view .LVU223
 913 00a2 0320     		movs	r0, #3
 914 00a4 0FE0     		b	.L46
 915              	.L60:
 821:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 916              		.loc 1 821 5 is_stmt 1 view .LVU224
 821:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 917              		.loc 1 821 9 is_stmt 0 view .LVU225
 918 00a6 0096     		str	r6, [sp]
 919 00a8 3B46     		mov	r3, r7
 920 00aa 0022     		movs	r2, #0
 921 00ac 4021     		movs	r1, #64
 922 00ae 2046     		mov	r0, r4
 923 00b0 FFF7FEFF 		bl	IRDA_WaitOnFlagUntilTimeout
 924              	.LVL53:
 821:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 925              		.loc 1 821 8 view .LVU226
 926 00b4 90B9     		cbnz	r0, .L58
 827:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 927              		.loc 1 827 5 is_stmt 1 view .LVU227
 827:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 928              		.loc 1 827 19 is_stmt 0 view .LVU228
 929 00b6 2023     		movs	r3, #32
 930 00b8 84F83530 		strb	r3, [r4, #53]
 830:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 931              		.loc 1 830 5 is_stmt 1 view .LVU229
 830:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 932              		.loc 1 830 5 view .LVU230
 933 00bc 0023     		movs	r3, #0
 934 00be 84F83430 		strb	r3, [r4, #52]
 830:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 935              		.loc 1 830 5 view .LVU231
 832:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
 936              		.loc 1 832 5 view .LVU232
 832:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
 937              		.loc 1 832 12 is_stmt 0 view .LVU233
 938 00c2 00E0     		b	.L46
 939              	.LVL54:
 940              	.L52:
 836:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
 941              		.loc 1 836 12 view .LVU234
 942 00c4 0220     		movs	r0, #2
 943              	.LVL55:
 944              	.L46:
 838:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 945              		.loc 1 838 1 view .LVU235
 946 00c6 02B0     		add	sp, sp, #8
 947              	.LCFI8:
 948              		.cfi_remember_state
 949              		.cfi_def_cfa_offset 24
 950              		@ sp needed
 951 00c8 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 952              	.LVL56:
 953              	.L53:
 954              	.LCFI9:
 955              		.cfi_restore_state
 777:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
ARM GAS  /tmp/ccwOIEYW.s 			page 67


 956              		.loc 1 777 15 view .LVU236
 957 00cc 0120     		movs	r0, #1
 958              	.LVL57:
 777:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
 959              		.loc 1 777 15 view .LVU237
 960 00ce FAE7     		b	.L46
 961              	.LVL58:
 962              	.L54:
 777:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
 963              		.loc 1 777 15 view .LVU238
 964 00d0 0120     		movs	r0, #1
 965              	.LVL59:
 777:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
 966              		.loc 1 777 15 view .LVU239
 967 00d2 F8E7     		b	.L46
 968              	.LVL60:
 969              	.L55:
 781:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 970              		.loc 1 781 5 view .LVU240
 971 00d4 0220     		movs	r0, #2
 972              	.LVL61:
 781:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 973              		.loc 1 781 5 view .LVU241
 974 00d6 F6E7     		b	.L46
 975              	.LVL62:
 976              	.L56:
 798:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         }
 977              		.loc 1 798 18 view .LVU242
 978 00d8 0320     		movs	r0, #3
 979 00da F4E7     		b	.L46
 980              	.L58:
 823:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
 981              		.loc 1 823 14 view .LVU243
 982 00dc 0320     		movs	r0, #3
 983 00de F2E7     		b	.L46
 984              		.cfi_endproc
 985              	.LFE136:
 987              		.section	.text.HAL_IRDA_Receive,"ax",%progbits
 988              		.align	1
 989              		.global	HAL_IRDA_Receive
 990              		.syntax unified
 991              		.thumb
 992              		.thumb_func
 993              		.fpu fpv4-sp-d16
 995              	HAL_IRDA_Receive:
 996              	.LVL63:
 997              	.LFB137:
 850:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   uint16_t *tmp;
 998              		.loc 1 850 1 is_stmt 1 view -0
 999              		.cfi_startproc
 1000              		@ args = 0, pretend = 0, frame = 0
 1001              		@ frame_needed = 0, uses_anonymous_args = 0
 850:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   uint16_t *tmp;
 1002              		.loc 1 850 1 is_stmt 0 view .LVU245
 1003 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1004              	.LCFI10:
 1005              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/ccwOIEYW.s 			page 68


 1006              		.cfi_offset 4, -24
 1007              		.cfi_offset 5, -20
 1008              		.cfi_offset 6, -16
 1009              		.cfi_offset 7, -12
 1010              		.cfi_offset 8, -8
 1011              		.cfi_offset 14, -4
 1012 0004 82B0     		sub	sp, sp, #8
 1013              	.LCFI11:
 1014              		.cfi_def_cfa_offset 32
 1015 0006 1E46     		mov	r6, r3
 851:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   uint32_t tickstart = 0U;
 1016              		.loc 1 851 3 is_stmt 1 view .LVU246
 852:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1017              		.loc 1 852 3 view .LVU247
 1018              	.LVL64:
 855:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 1019              		.loc 1 855 3 view .LVU248
 855:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 1020              		.loc 1 855 12 is_stmt 0 view .LVU249
 1021 0008 90F83630 		ldrb	r3, [r0, #54]	@ zero_extendqisi2
 1022              	.LVL65:
 855:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 1023              		.loc 1 855 12 view .LVU250
 1024 000c DBB2     		uxtb	r3, r3
 855:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 1025              		.loc 1 855 6 view .LVU251
 1026 000e 202B     		cmp	r3, #32
 1027 0010 5BD1     		bne	.L71
 1028 0012 0446     		mov	r4, r0
 1029 0014 0D46     		mov	r5, r1
 1030 0016 9046     		mov	r8, r2
 857:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 1031              		.loc 1 857 5 is_stmt 1 view .LVU252
 857:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 1032              		.loc 1 857 8 is_stmt 0 view .LVU253
 1033 0018 0029     		cmp	r1, #0
 1034 001a 5AD0     		beq	.L72
 857:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 1035              		.loc 1 857 25 discriminator 1 view .LVU254
 1036 001c 002A     		cmp	r2, #0
 1037 001e 5AD0     		beq	.L73
 863:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1038              		.loc 1 863 5 is_stmt 1 view .LVU255
 863:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1039              		.loc 1 863 5 view .LVU256
 1040 0020 90F83430 		ldrb	r3, [r0, #52]	@ zero_extendqisi2
 1041 0024 012B     		cmp	r3, #1
 1042 0026 58D0     		beq	.L74
 863:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1043              		.loc 1 863 5 discriminator 2 view .LVU257
 1044 0028 0123     		movs	r3, #1
 1045 002a 80F83430 		strb	r3, [r0, #52]
 863:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1046              		.loc 1 863 5 discriminator 2 view .LVU258
 865:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->RxState = HAL_IRDA_STATE_BUSY_RX;
 1047              		.loc 1 865 5 discriminator 2 view .LVU259
 865:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->RxState = HAL_IRDA_STATE_BUSY_RX;
ARM GAS  /tmp/ccwOIEYW.s 			page 69


 1048              		.loc 1 865 22 is_stmt 0 discriminator 2 view .LVU260
 1049 002e 0023     		movs	r3, #0
 1050 0030 8363     		str	r3, [r0, #56]
 866:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1051              		.loc 1 866 5 is_stmt 1 discriminator 2 view .LVU261
 866:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1052              		.loc 1 866 20 is_stmt 0 discriminator 2 view .LVU262
 1053 0032 2223     		movs	r3, #34
 1054 0034 80F83630 		strb	r3, [r0, #54]
 869:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1055              		.loc 1 869 5 is_stmt 1 discriminator 2 view .LVU263
 869:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1056              		.loc 1 869 17 is_stmt 0 discriminator 2 view .LVU264
 1057 0038 FFF7FEFF 		bl	HAL_GetTick
 1058              	.LVL66:
 869:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1059              		.loc 1 869 17 discriminator 2 view .LVU265
 1060 003c 0746     		mov	r7, r0
 1061              	.LVL67:
 871:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->RxXferCount = Size;
 1062              		.loc 1 871 5 is_stmt 1 discriminator 2 view .LVU266
 871:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->RxXferCount = Size;
 1063              		.loc 1 871 23 is_stmt 0 discriminator 2 view .LVU267
 1064 003e A4F82880 		strh	r8, [r4, #40]	@ movhi
 872:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1065              		.loc 1 872 5 is_stmt 1 discriminator 2 view .LVU268
 872:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1066              		.loc 1 872 24 is_stmt 0 discriminator 2 view .LVU269
 1067 0042 A4F82A80 		strh	r8, [r4, #42]	@ movhi
 875:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 1068              		.loc 1 875 5 is_stmt 1 discriminator 2 view .LVU270
 875:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 1069              		.loc 1 875 11 is_stmt 0 discriminator 2 view .LVU271
 1070 0046 1DE0     		b	.L65
 1071              	.LVL68:
 1072              	.L79:
 881:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         {
 1073              		.loc 1 881 9 is_stmt 1 view .LVU272
 881:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         {
 1074              		.loc 1 881 13 is_stmt 0 view .LVU273
 1075 0048 0096     		str	r6, [sp]
 1076 004a 3B46     		mov	r3, r7
 1077 004c 0022     		movs	r2, #0
 1078 004e 2021     		movs	r1, #32
 1079 0050 2046     		mov	r0, r4
 1080 0052 FFF7FEFF 		bl	IRDA_WaitOnFlagUntilTimeout
 1081              	.LVL69:
 881:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         {
 1082              		.loc 1 881 12 view .LVU274
 1083 0056 0028     		cmp	r0, #0
 1084 0058 41D1     		bne	.L75
 885:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         if (hirda->Init.Parity == IRDA_PARITY_NONE)
 1085              		.loc 1 885 9 is_stmt 1 view .LVU275
 1086              	.LVL70:
 886:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         {
 1087              		.loc 1 886 9 view .LVU276
 886:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         {
ARM GAS  /tmp/ccwOIEYW.s 			page 70


 1088              		.loc 1 886 24 is_stmt 0 view .LVU277
 1089 005a E368     		ldr	r3, [r4, #12]
 886:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         {
 1090              		.loc 1 886 12 view .LVU278
 1091 005c 33B9     		cbnz	r3, .L67
 888:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****           pData += 2U;
 1092              		.loc 1 888 11 is_stmt 1 view .LVU279
 888:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****           pData += 2U;
 1093              		.loc 1 888 34 is_stmt 0 view .LVU280
 1094 005e 2368     		ldr	r3, [r4]
 888:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****           pData += 2U;
 1095              		.loc 1 888 44 view .LVU281
 1096 0060 5B68     		ldr	r3, [r3, #4]
 888:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****           pData += 2U;
 1097              		.loc 1 888 18 view .LVU282
 1098 0062 C3F30803 		ubfx	r3, r3, #0, #9
 888:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****           pData += 2U;
 1099              		.loc 1 888 16 view .LVU283
 1100 0066 25F8023B 		strh	r3, [r5], #2	@ movhi
 1101              	.LVL71:
 889:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         }
 1102              		.loc 1 889 11 is_stmt 1 view .LVU284
 889:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         }
 1103              		.loc 1 889 11 is_stmt 0 view .LVU285
 1104 006a 0BE0     		b	.L65
 1105              	.LVL72:
 1106              	.L67:
 893:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****           pData += 1U;
 1107              		.loc 1 893 11 is_stmt 1 view .LVU286
 893:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****           pData += 1U;
 1108              		.loc 1 893 34 is_stmt 0 view .LVU287
 1109 006c 2368     		ldr	r3, [r4]
 893:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****           pData += 1U;
 1110              		.loc 1 893 44 view .LVU288
 1111 006e 5B68     		ldr	r3, [r3, #4]
 893:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****           pData += 1U;
 1112              		.loc 1 893 18 view .LVU289
 1113 0070 DBB2     		uxtb	r3, r3
 893:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****           pData += 1U;
 1114              		.loc 1 893 16 view .LVU290
 1115 0072 25F8013B 		strh	r3, [r5], #1	@ movhi
 1116              	.LVL73:
 894:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         }
 1117              		.loc 1 894 11 is_stmt 1 view .LVU291
 894:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         }
 1118              		.loc 1 894 11 is_stmt 0 view .LVU292
 1119 0076 05E0     		b	.L65
 1120              	.LVL74:
 1121              	.L69:
 909:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         }
 1122              		.loc 1 909 11 is_stmt 1 view .LVU293
 909:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         }
 1123              		.loc 1 909 37 is_stmt 0 view .LVU294
 1124 0078 2368     		ldr	r3, [r4]
 909:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         }
 1125              		.loc 1 909 47 view .LVU295
 1126 007a 5B68     		ldr	r3, [r3, #4]
ARM GAS  /tmp/ccwOIEYW.s 			page 71


 1127              	.LVL75:
 909:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         }
 1128              		.loc 1 909 22 view .LVU296
 1129 007c 03F07F03 		and	r3, r3, #127
 909:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         }
 1130              		.loc 1 909 20 view .LVU297
 1131 0080 05F8013B 		strb	r3, [r5], #1
 1132              	.LVL76:
 1133              	.L65:
 875:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 1134              		.loc 1 875 11 is_stmt 1 view .LVU298
 875:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 1135              		.loc 1 875 17 is_stmt 0 view .LVU299
 1136 0084 638D     		ldrh	r3, [r4, #42]
 1137 0086 9BB2     		uxth	r3, r3
 875:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 1138              		.loc 1 875 11 view .LVU300
 1139 0088 C3B1     		cbz	r3, .L78
 877:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1140              		.loc 1 877 7 is_stmt 1 view .LVU301
 877:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1141              		.loc 1 877 12 is_stmt 0 view .LVU302
 1142 008a 628D     		ldrh	r2, [r4, #42]
 1143 008c 92B2     		uxth	r2, r2
 877:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1144              		.loc 1 877 25 view .LVU303
 1145 008e 013A     		subs	r2, r2, #1
 1146 0090 92B2     		uxth	r2, r2
 1147 0092 6285     		strh	r2, [r4, #42]	@ movhi
 879:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       {
 1148              		.loc 1 879 7 is_stmt 1 view .LVU304
 879:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       {
 1149              		.loc 1 879 22 is_stmt 0 view .LVU305
 1150 0094 A368     		ldr	r3, [r4, #8]
 879:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       {
 1151              		.loc 1 879 10 view .LVU306
 1152 0096 B3F5805F 		cmp	r3, #4096
 1153 009a D5D0     		beq	.L79
 899:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         {
 1154              		.loc 1 899 9 is_stmt 1 view .LVU307
 899:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         {
 1155              		.loc 1 899 13 is_stmt 0 view .LVU308
 1156 009c 0096     		str	r6, [sp]
 1157 009e 3B46     		mov	r3, r7
 1158 00a0 0022     		movs	r2, #0
 1159 00a2 2021     		movs	r1, #32
 1160 00a4 2046     		mov	r0, r4
 1161 00a6 FFF7FEFF 		bl	IRDA_WaitOnFlagUntilTimeout
 1162              	.LVL77:
 899:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         {
 1163              		.loc 1 899 12 view .LVU309
 1164 00aa D0B9     		cbnz	r0, .L76
 903:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         {
 1165              		.loc 1 903 9 is_stmt 1 view .LVU310
 903:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         {
 1166              		.loc 1 903 24 is_stmt 0 view .LVU311
 1167 00ac E368     		ldr	r3, [r4, #12]
ARM GAS  /tmp/ccwOIEYW.s 			page 72


 903:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         {
 1168              		.loc 1 903 12 view .LVU312
 1169 00ae 002B     		cmp	r3, #0
 1170 00b0 E2D1     		bne	.L69
 905:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         }
 1171              		.loc 1 905 11 is_stmt 1 view .LVU313
 905:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         }
 1172              		.loc 1 905 37 is_stmt 0 view .LVU314
 1173 00b2 2368     		ldr	r3, [r4]
 905:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         }
 1174              		.loc 1 905 47 view .LVU315
 1175 00b4 5B68     		ldr	r3, [r3, #4]
 1176              	.LVL78:
 905:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         }
 1177              		.loc 1 905 20 view .LVU316
 1178 00b6 05F8013B 		strb	r3, [r5], #1
 1179              	.LVL79:
 905:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         }
 1180              		.loc 1 905 20 view .LVU317
 1181 00ba E3E7     		b	.L65
 1182              	.L78:
 915:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1183              		.loc 1 915 5 is_stmt 1 view .LVU318
 915:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1184              		.loc 1 915 20 is_stmt 0 view .LVU319
 1185 00bc 2023     		movs	r3, #32
 1186 00be 84F83630 		strb	r3, [r4, #54]
 918:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1187              		.loc 1 918 5 is_stmt 1 view .LVU320
 918:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1188              		.loc 1 918 5 view .LVU321
 1189 00c2 0020     		movs	r0, #0
 1190 00c4 84F83400 		strb	r0, [r4, #52]
 918:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1191              		.loc 1 918 5 view .LVU322
 920:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
 1192              		.loc 1 920 5 view .LVU323
 920:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
 1193              		.loc 1 920 12 is_stmt 0 view .LVU324
 1194 00c8 00E0     		b	.L64
 1195              	.LVL80:
 1196              	.L71:
 924:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
 1197              		.loc 1 924 12 view .LVU325
 1198 00ca 0220     		movs	r0, #2
 1199              	.LVL81:
 1200              	.L64:
 926:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1201              		.loc 1 926 1 view .LVU326
 1202 00cc 02B0     		add	sp, sp, #8
 1203              	.LCFI12:
 1204              		.cfi_remember_state
 1205              		.cfi_def_cfa_offset 24
 1206              		@ sp needed
 1207 00ce BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1208              	.LVL82:
 1209              	.L72:
ARM GAS  /tmp/ccwOIEYW.s 			page 73


 1210              	.LCFI13:
 1211              		.cfi_restore_state
 859:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
 1212              		.loc 1 859 15 view .LVU327
 1213 00d2 0120     		movs	r0, #1
 1214              	.LVL83:
 859:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
 1215              		.loc 1 859 15 view .LVU328
 1216 00d4 FAE7     		b	.L64
 1217              	.LVL84:
 1218              	.L73:
 859:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
 1219              		.loc 1 859 15 view .LVU329
 1220 00d6 0120     		movs	r0, #1
 1221              	.LVL85:
 859:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
 1222              		.loc 1 859 15 view .LVU330
 1223 00d8 F8E7     		b	.L64
 1224              	.LVL86:
 1225              	.L74:
 863:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1226              		.loc 1 863 5 view .LVU331
 1227 00da 0220     		movs	r0, #2
 1228              	.LVL87:
 863:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1229              		.loc 1 863 5 view .LVU332
 1230 00dc F6E7     		b	.L64
 1231              	.LVL88:
 1232              	.L75:
 883:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         }
 1233              		.loc 1 883 18 view .LVU333
 1234 00de 0320     		movs	r0, #3
 1235 00e0 F4E7     		b	.L64
 1236              	.L76:
 901:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         }
 1237              		.loc 1 901 18 view .LVU334
 1238 00e2 0320     		movs	r0, #3
 1239 00e4 F2E7     		b	.L64
 1240              		.cfi_endproc
 1241              	.LFE137:
 1243              		.section	.text.HAL_IRDA_Transmit_IT,"ax",%progbits
 1244              		.align	1
 1245              		.global	HAL_IRDA_Transmit_IT
 1246              		.syntax unified
 1247              		.thumb
 1248              		.thumb_func
 1249              		.fpu fpv4-sp-d16
 1251              	HAL_IRDA_Transmit_IT:
 1252              	.LVL89:
 1253              	.LFB138:
 937:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Check that a Tx process is not already ongoing */
 1254              		.loc 1 937 1 is_stmt 1 view -0
 1255              		.cfi_startproc
 1256              		@ args = 0, pretend = 0, frame = 0
 1257              		@ frame_needed = 0, uses_anonymous_args = 0
 1258              		@ link register save eliminated.
 939:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
ARM GAS  /tmp/ccwOIEYW.s 			page 74


 1259              		.loc 1 939 3 view .LVU336
 939:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 1260              		.loc 1 939 12 is_stmt 0 view .LVU337
 1261 0000 90F83530 		ldrb	r3, [r0, #53]	@ zero_extendqisi2
 1262 0004 DBB2     		uxtb	r3, r3
 939:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 1263              		.loc 1 939 6 view .LVU338
 1264 0006 202B     		cmp	r3, #32
 1265 0008 16D1     		bne	.L82
 941:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 1266              		.loc 1 941 5 is_stmt 1 view .LVU339
 941:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 1267              		.loc 1 941 8 is_stmt 0 view .LVU340
 1268 000a B9B1     		cbz	r1, .L83
 941:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 1269              		.loc 1 941 25 discriminator 1 view .LVU341
 1270 000c C2B1     		cbz	r2, .L84
 947:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1271              		.loc 1 947 5 is_stmt 1 view .LVU342
 947:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1272              		.loc 1 947 5 view .LVU343
 1273 000e 90F83430 		ldrb	r3, [r0, #52]	@ zero_extendqisi2
 1274 0012 012B     		cmp	r3, #1
 1275 0014 16D0     		beq	.L85
 947:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1276              		.loc 1 947 5 discriminator 2 view .LVU344
 947:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1277              		.loc 1 947 5 discriminator 2 view .LVU345
 949:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->TxXferSize = Size;
 1278              		.loc 1 949 5 discriminator 2 view .LVU346
 949:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->TxXferSize = Size;
 1279              		.loc 1 949 23 is_stmt 0 discriminator 2 view .LVU347
 1280 0016 C161     		str	r1, [r0, #28]
 950:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->TxXferCount = Size;
 1281              		.loc 1 950 5 is_stmt 1 discriminator 2 view .LVU348
 950:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->TxXferCount = Size;
 1282              		.loc 1 950 23 is_stmt 0 discriminator 2 view .LVU349
 1283 0018 0284     		strh	r2, [r0, #32]	@ movhi
 951:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1284              		.loc 1 951 5 is_stmt 1 discriminator 2 view .LVU350
 951:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1285              		.loc 1 951 24 is_stmt 0 discriminator 2 view .LVU351
 1286 001a 4284     		strh	r2, [r0, #34]	@ movhi
 953:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->gState = HAL_IRDA_STATE_BUSY_TX;
 1287              		.loc 1 953 5 is_stmt 1 discriminator 2 view .LVU352
 953:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->gState = HAL_IRDA_STATE_BUSY_TX;
 1288              		.loc 1 953 22 is_stmt 0 discriminator 2 view .LVU353
 1289 001c 0023     		movs	r3, #0
 1290 001e 8363     		str	r3, [r0, #56]
 954:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1291              		.loc 1 954 5 is_stmt 1 discriminator 2 view .LVU354
 954:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1292              		.loc 1 954 19 is_stmt 0 discriminator 2 view .LVU355
 1293 0020 2122     		movs	r2, #33
 1294              	.LVL90:
 954:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1295              		.loc 1 954 19 discriminator 2 view .LVU356
ARM GAS  /tmp/ccwOIEYW.s 			page 75


 1296 0022 80F83520 		strb	r2, [r0, #53]
 957:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1297              		.loc 1 957 5 is_stmt 1 discriminator 2 view .LVU357
 957:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1298              		.loc 1 957 5 discriminator 2 view .LVU358
 1299 0026 80F83430 		strb	r3, [r0, #52]
 957:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1300              		.loc 1 957 5 discriminator 2 view .LVU359
 960:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1301              		.loc 1 960 5 discriminator 2 view .LVU360
 1302 002a 0168     		ldr	r1, [r0]
 1303              	.LVL91:
 960:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1304              		.loc 1 960 5 is_stmt 0 discriminator 2 view .LVU361
 1305 002c CA68     		ldr	r2, [r1, #12]
 1306 002e 42F08002 		orr	r2, r2, #128
 1307 0032 CA60     		str	r2, [r1, #12]
 1308              	.LVL92:
 962:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
 1309              		.loc 1 962 5 is_stmt 1 discriminator 2 view .LVU362
 962:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
 1310              		.loc 1 962 12 is_stmt 0 discriminator 2 view .LVU363
 1311 0034 1846     		mov	r0, r3
 1312              	.LVL93:
 962:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
 1313              		.loc 1 962 12 discriminator 2 view .LVU364
 1314 0036 7047     		bx	lr
 1315              	.LVL94:
 1316              	.L82:
 966:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
 1317              		.loc 1 966 12 view .LVU365
 1318 0038 0220     		movs	r0, #2
 1319              	.LVL95:
 966:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
 1320              		.loc 1 966 12 view .LVU366
 1321 003a 7047     		bx	lr
 1322              	.LVL96:
 1323              	.L83:
 943:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
 1324              		.loc 1 943 14 view .LVU367
 1325 003c 0120     		movs	r0, #1
 1326              	.LVL97:
 943:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
 1327              		.loc 1 943 14 view .LVU368
 1328 003e 7047     		bx	lr
 1329              	.LVL98:
 1330              	.L84:
 943:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
 1331              		.loc 1 943 14 view .LVU369
 1332 0040 0120     		movs	r0, #1
 1333              	.LVL99:
 943:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
 1334              		.loc 1 943 14 view .LVU370
 1335 0042 7047     		bx	lr
 1336              	.LVL100:
 1337              	.L85:
 947:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
ARM GAS  /tmp/ccwOIEYW.s 			page 76


 1338              		.loc 1 947 5 view .LVU371
 1339 0044 0220     		movs	r0, #2
 1340              	.LVL101:
 968:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1341              		.loc 1 968 1 view .LVU372
 1342 0046 7047     		bx	lr
 1343              		.cfi_endproc
 1344              	.LFE138:
 1346              		.section	.text.HAL_IRDA_Receive_IT,"ax",%progbits
 1347              		.align	1
 1348              		.global	HAL_IRDA_Receive_IT
 1349              		.syntax unified
 1350              		.thumb
 1351              		.thumb_func
 1352              		.fpu fpv4-sp-d16
 1354              	HAL_IRDA_Receive_IT:
 1355              	.LVL102:
 1356              	.LFB139:
 979:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Check that a Rx process is not already ongoing */
 1357              		.loc 1 979 1 is_stmt 1 view -0
 1358              		.cfi_startproc
 1359              		@ args = 0, pretend = 0, frame = 0
 1360              		@ frame_needed = 0, uses_anonymous_args = 0
 1361              		@ link register save eliminated.
 981:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 1362              		.loc 1 981 3 view .LVU374
 981:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 1363              		.loc 1 981 12 is_stmt 0 view .LVU375
 1364 0000 90F83630 		ldrb	r3, [r0, #54]	@ zero_extendqisi2
 1365 0004 DBB2     		uxtb	r3, r3
 981:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 1366              		.loc 1 981 6 view .LVU376
 1367 0006 202B     		cmp	r3, #32
 1368 0008 1BD1     		bne	.L88
 983:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 1369              		.loc 1 983 5 is_stmt 1 view .LVU377
 983:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 1370              		.loc 1 983 8 is_stmt 0 view .LVU378
 1371 000a E1B1     		cbz	r1, .L89
 983:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 1372              		.loc 1 983 25 discriminator 1 view .LVU379
 1373 000c EAB1     		cbz	r2, .L90
 989:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1374              		.loc 1 989 5 is_stmt 1 view .LVU380
 989:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1375              		.loc 1 989 5 view .LVU381
 1376 000e 90F83430 		ldrb	r3, [r0, #52]	@ zero_extendqisi2
 1377 0012 012B     		cmp	r3, #1
 1378 0014 1BD0     		beq	.L91
 989:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1379              		.loc 1 989 5 discriminator 2 view .LVU382
 989:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1380              		.loc 1 989 5 discriminator 2 view .LVU383
 991:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->RxXferSize = Size;
 1381              		.loc 1 991 5 discriminator 2 view .LVU384
 991:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->RxXferSize = Size;
 1382              		.loc 1 991 23 is_stmt 0 discriminator 2 view .LVU385
ARM GAS  /tmp/ccwOIEYW.s 			page 77


 1383 0016 4162     		str	r1, [r0, #36]
 992:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->RxXferCount = Size;
 1384              		.loc 1 992 5 is_stmt 1 discriminator 2 view .LVU386
 992:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->RxXferCount = Size;
 1385              		.loc 1 992 23 is_stmt 0 discriminator 2 view .LVU387
 1386 0018 0285     		strh	r2, [r0, #40]	@ movhi
 993:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1387              		.loc 1 993 5 is_stmt 1 discriminator 2 view .LVU388
 993:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1388              		.loc 1 993 24 is_stmt 0 discriminator 2 view .LVU389
 1389 001a 4285     		strh	r2, [r0, #42]	@ movhi
 995:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->RxState = HAL_IRDA_STATE_BUSY_RX;
 1390              		.loc 1 995 5 is_stmt 1 discriminator 2 view .LVU390
 995:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->RxState = HAL_IRDA_STATE_BUSY_RX;
 1391              		.loc 1 995 22 is_stmt 0 discriminator 2 view .LVU391
 1392 001c 0023     		movs	r3, #0
 1393 001e 8363     		str	r3, [r0, #56]
 996:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1394              		.loc 1 996 5 is_stmt 1 discriminator 2 view .LVU392
 996:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1395              		.loc 1 996 20 is_stmt 0 discriminator 2 view .LVU393
 1396 0020 2222     		movs	r2, #34
 1397              	.LVL103:
 996:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1398              		.loc 1 996 20 discriminator 2 view .LVU394
 1399 0022 80F83620 		strb	r2, [r0, #54]
 999:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1400              		.loc 1 999 5 is_stmt 1 discriminator 2 view .LVU395
 999:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1401              		.loc 1 999 5 discriminator 2 view .LVU396
 1402 0026 80F83430 		strb	r3, [r0, #52]
 999:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1403              		.loc 1 999 5 discriminator 2 view .LVU397
1002:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1404              		.loc 1 1002 5 discriminator 2 view .LVU398
 1405 002a 0168     		ldr	r1, [r0]
 1406              	.LVL104:
1002:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1407              		.loc 1 1002 5 is_stmt 0 discriminator 2 view .LVU399
 1408 002c CA68     		ldr	r2, [r1, #12]
 1409 002e 42F49072 		orr	r2, r2, #288
 1410 0032 CA60     		str	r2, [r1, #12]
 1411              	.LVL105:
1005:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1412              		.loc 1 1005 5 is_stmt 1 discriminator 2 view .LVU400
 1413 0034 0168     		ldr	r1, [r0]
 1414 0036 4A69     		ldr	r2, [r1, #20]
 1415 0038 42F00102 		orr	r2, r2, #1
 1416 003c 4A61     		str	r2, [r1, #20]
1007:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
 1417              		.loc 1 1007 5 discriminator 2 view .LVU401
1007:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
 1418              		.loc 1 1007 12 is_stmt 0 discriminator 2 view .LVU402
 1419 003e 1846     		mov	r0, r3
 1420              	.LVL106:
1007:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
 1421              		.loc 1 1007 12 discriminator 2 view .LVU403
ARM GAS  /tmp/ccwOIEYW.s 			page 78


 1422 0040 7047     		bx	lr
 1423              	.LVL107:
 1424              	.L88:
1011:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
 1425              		.loc 1 1011 12 view .LVU404
 1426 0042 0220     		movs	r0, #2
 1427              	.LVL108:
1011:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
 1428              		.loc 1 1011 12 view .LVU405
 1429 0044 7047     		bx	lr
 1430              	.LVL109:
 1431              	.L89:
 985:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
 1432              		.loc 1 985 14 view .LVU406
 1433 0046 0120     		movs	r0, #1
 1434              	.LVL110:
 985:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
 1435              		.loc 1 985 14 view .LVU407
 1436 0048 7047     		bx	lr
 1437              	.LVL111:
 1438              	.L90:
 985:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
 1439              		.loc 1 985 14 view .LVU408
 1440 004a 0120     		movs	r0, #1
 1441              	.LVL112:
 985:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
 1442              		.loc 1 985 14 view .LVU409
 1443 004c 7047     		bx	lr
 1444              	.LVL113:
 1445              	.L91:
 989:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1446              		.loc 1 989 5 view .LVU410
 1447 004e 0220     		movs	r0, #2
 1448              	.LVL114:
1013:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1449              		.loc 1 1013 1 view .LVU411
 1450 0050 7047     		bx	lr
 1451              		.cfi_endproc
 1452              	.LFE139:
 1454              		.section	.text.HAL_IRDA_Transmit_DMA,"ax",%progbits
 1455              		.align	1
 1456              		.global	HAL_IRDA_Transmit_DMA
 1457              		.syntax unified
 1458              		.thumb
 1459              		.thumb_func
 1460              		.fpu fpv4-sp-d16
 1462              	HAL_IRDA_Transmit_DMA:
 1463              	.LVL115:
 1464              	.LFB140:
1024:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   uint32_t *tmp;
 1465              		.loc 1 1024 1 is_stmt 1 view -0
 1466              		.cfi_startproc
 1467              		@ args = 0, pretend = 0, frame = 0
 1468              		@ frame_needed = 0, uses_anonymous_args = 0
1024:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   uint32_t *tmp;
 1469              		.loc 1 1024 1 is_stmt 0 view .LVU413
 1470 0000 38B5     		push	{r3, r4, r5, lr}
ARM GAS  /tmp/ccwOIEYW.s 			page 79


 1471              	.LCFI14:
 1472              		.cfi_def_cfa_offset 16
 1473              		.cfi_offset 3, -16
 1474              		.cfi_offset 4, -12
 1475              		.cfi_offset 5, -8
 1476              		.cfi_offset 14, -4
1025:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1477              		.loc 1 1025 3 is_stmt 1 view .LVU414
1028:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 1478              		.loc 1 1028 3 view .LVU415
1028:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 1479              		.loc 1 1028 12 is_stmt 0 view .LVU416
 1480 0002 90F83530 		ldrb	r3, [r0, #53]	@ zero_extendqisi2
 1481 0006 DBB2     		uxtb	r3, r3
1028:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 1482              		.loc 1 1028 6 view .LVU417
 1483 0008 202B     		cmp	r3, #32
 1484 000a 31D1     		bne	.L94
 1485 000c 0446     		mov	r4, r0
1030:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 1486              		.loc 1 1030 5 is_stmt 1 view .LVU418
1030:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 1487              		.loc 1 1030 8 is_stmt 0 view .LVU419
 1488 000e 0029     		cmp	r1, #0
 1489 0010 30D0     		beq	.L95
1030:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 1490              		.loc 1 1030 25 discriminator 1 view .LVU420
 1491 0012 002A     		cmp	r2, #0
 1492 0014 30D0     		beq	.L96
1036:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1493              		.loc 1 1036 5 is_stmt 1 view .LVU421
1036:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1494              		.loc 1 1036 5 view .LVU422
 1495 0016 90F83430 		ldrb	r3, [r0, #52]	@ zero_extendqisi2
 1496 001a 012B     		cmp	r3, #1
 1497 001c 2ED0     		beq	.L97
1036:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1498              		.loc 1 1036 5 discriminator 2 view .LVU423
 1499 001e 0123     		movs	r3, #1
 1500 0020 80F83430 		strb	r3, [r0, #52]
1036:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1501              		.loc 1 1036 5 discriminator 2 view .LVU424
1038:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->TxXferSize = Size;
 1502              		.loc 1 1038 5 discriminator 2 view .LVU425
1038:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->TxXferSize = Size;
 1503              		.loc 1 1038 23 is_stmt 0 discriminator 2 view .LVU426
 1504 0024 C161     		str	r1, [r0, #28]
1039:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->TxXferCount = Size;
 1505              		.loc 1 1039 5 is_stmt 1 discriminator 2 view .LVU427
1039:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->TxXferCount = Size;
 1506              		.loc 1 1039 23 is_stmt 0 discriminator 2 view .LVU428
 1507 0026 0284     		strh	r2, [r0, #32]	@ movhi
1040:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1508              		.loc 1 1040 5 is_stmt 1 discriminator 2 view .LVU429
1040:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1509              		.loc 1 1040 24 is_stmt 0 discriminator 2 view .LVU430
 1510 0028 4284     		strh	r2, [r0, #34]	@ movhi
ARM GAS  /tmp/ccwOIEYW.s 			page 80


1042:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->gState = HAL_IRDA_STATE_BUSY_TX;
 1511              		.loc 1 1042 5 is_stmt 1 discriminator 2 view .LVU431
1042:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->gState = HAL_IRDA_STATE_BUSY_TX;
 1512              		.loc 1 1042 22 is_stmt 0 discriminator 2 view .LVU432
 1513 002a 0025     		movs	r5, #0
 1514 002c 8563     		str	r5, [r0, #56]
1043:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1515              		.loc 1 1043 5 is_stmt 1 discriminator 2 view .LVU433
1043:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1516              		.loc 1 1043 19 is_stmt 0 discriminator 2 view .LVU434
 1517 002e 2123     		movs	r3, #33
 1518 0030 80F83530 		strb	r3, [r0, #53]
1046:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1519              		.loc 1 1046 5 is_stmt 1 discriminator 2 view .LVU435
1046:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1520              		.loc 1 1046 10 is_stmt 0 discriminator 2 view .LVU436
 1521 0034 C36A     		ldr	r3, [r0, #44]
1046:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1522              		.loc 1 1046 37 discriminator 2 view .LVU437
 1523 0036 1248     		ldr	r0, .L99
 1524              	.LVL116:
1046:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1525              		.loc 1 1046 37 discriminator 2 view .LVU438
 1526 0038 D863     		str	r0, [r3, #60]
1049:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1527              		.loc 1 1049 5 is_stmt 1 discriminator 2 view .LVU439
1049:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1528              		.loc 1 1049 10 is_stmt 0 discriminator 2 view .LVU440
 1529 003a E36A     		ldr	r3, [r4, #44]
1049:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1530              		.loc 1 1049 41 discriminator 2 view .LVU441
 1531 003c 1148     		ldr	r0, .L99+4
 1532 003e 1864     		str	r0, [r3, #64]
1052:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1533              		.loc 1 1052 5 is_stmt 1 discriminator 2 view .LVU442
1052:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1534              		.loc 1 1052 10 is_stmt 0 discriminator 2 view .LVU443
 1535 0040 E36A     		ldr	r3, [r4, #44]
1052:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1536              		.loc 1 1052 38 discriminator 2 view .LVU444
 1537 0042 1148     		ldr	r0, .L99+8
 1538 0044 D864     		str	r0, [r3, #76]
1055:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1539              		.loc 1 1055 5 is_stmt 1 discriminator 2 view .LVU445
1055:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1540              		.loc 1 1055 10 is_stmt 0 discriminator 2 view .LVU446
 1541 0046 E36A     		ldr	r3, [r4, #44]
1055:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1542              		.loc 1 1055 38 discriminator 2 view .LVU447
 1543 0048 1D65     		str	r5, [r3, #80]
1058:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     HAL_DMA_Start_IT(hirda->hdmatx, *(uint32_t *)tmp, (uint32_t)&hirda->Instance->DR, Size);
 1544              		.loc 1 1058 5 is_stmt 1 discriminator 2 view .LVU448
 1545              	.LVL117:
1059:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1546              		.loc 1 1059 5 discriminator 2 view .LVU449
1059:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1547              		.loc 1 1059 71 is_stmt 0 discriminator 2 view .LVU450
ARM GAS  /tmp/ccwOIEYW.s 			page 81


 1548 004a 2068     		ldr	r0, [r4]
1059:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1549              		.loc 1 1059 5 discriminator 2 view .LVU451
 1550 004c 1346     		mov	r3, r2
 1551 004e 021D     		adds	r2, r0, #4
 1552              	.LVL118:
1059:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1553              		.loc 1 1059 5 discriminator 2 view .LVU452
 1554 0050 E06A     		ldr	r0, [r4, #44]
 1555 0052 FFF7FEFF 		bl	HAL_DMA_Start_IT
 1556              	.LVL119:
1062:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1557              		.loc 1 1062 5 is_stmt 1 discriminator 2 view .LVU453
 1558 0056 2368     		ldr	r3, [r4]
 1559 0058 6FF04002 		mvn	r2, #64
 1560 005c 1A60     		str	r2, [r3]
1065:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1561              		.loc 1 1065 5 discriminator 2 view .LVU454
1065:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1562              		.loc 1 1065 5 discriminator 2 view .LVU455
 1563 005e 84F83450 		strb	r5, [r4, #52]
1065:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1564              		.loc 1 1065 5 discriminator 2 view .LVU456
1069:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1565              		.loc 1 1069 5 discriminator 2 view .LVU457
 1566 0062 2268     		ldr	r2, [r4]
 1567 0064 5369     		ldr	r3, [r2, #20]
 1568 0066 43F08003 		orr	r3, r3, #128
 1569 006a 5361     		str	r3, [r2, #20]
1071:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
 1570              		.loc 1 1071 5 discriminator 2 view .LVU458
1071:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
 1571              		.loc 1 1071 12 is_stmt 0 discriminator 2 view .LVU459
 1572 006c 2846     		mov	r0, r5
 1573 006e 00E0     		b	.L93
 1574              	.LVL120:
 1575              	.L94:
1075:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
 1576              		.loc 1 1075 12 view .LVU460
 1577 0070 0220     		movs	r0, #2
 1578              	.LVL121:
 1579              	.L93:
1077:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1580              		.loc 1 1077 1 view .LVU461
 1581 0072 38BD     		pop	{r3, r4, r5, pc}
 1582              	.LVL122:
 1583              	.L95:
1032:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
 1584              		.loc 1 1032 14 view .LVU462
 1585 0074 0120     		movs	r0, #1
 1586              	.LVL123:
1032:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
 1587              		.loc 1 1032 14 view .LVU463
 1588 0076 FCE7     		b	.L93
 1589              	.LVL124:
 1590              	.L96:
1032:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
ARM GAS  /tmp/ccwOIEYW.s 			page 82


 1591              		.loc 1 1032 14 view .LVU464
 1592 0078 0120     		movs	r0, #1
 1593              	.LVL125:
1032:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
 1594              		.loc 1 1032 14 view .LVU465
 1595 007a FAE7     		b	.L93
 1596              	.LVL126:
 1597              	.L97:
1036:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1598              		.loc 1 1036 5 view .LVU466
 1599 007c 0220     		movs	r0, #2
 1600              	.LVL127:
1036:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1601              		.loc 1 1036 5 view .LVU467
 1602 007e F8E7     		b	.L93
 1603              	.L100:
 1604              		.align	2
 1605              	.L99:
 1606 0080 00000000 		.word	IRDA_DMATransmitCplt
 1607 0084 00000000 		.word	IRDA_DMATransmitHalfCplt
 1608 0088 00000000 		.word	IRDA_DMAError
 1609              		.cfi_endproc
 1610              	.LFE140:
 1612              		.section	.text.HAL_IRDA_Receive_DMA,"ax",%progbits
 1613              		.align	1
 1614              		.global	HAL_IRDA_Receive_DMA
 1615              		.syntax unified
 1616              		.thumb
 1617              		.thumb_func
 1618              		.fpu fpv4-sp-d16
 1620              	HAL_IRDA_Receive_DMA:
 1621              	.LVL128:
 1622              	.LFB141:
1089:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   uint32_t *tmp;
 1623              		.loc 1 1089 1 is_stmt 1 view -0
 1624              		.cfi_startproc
 1625              		@ args = 0, pretend = 0, frame = 8
 1626              		@ frame_needed = 0, uses_anonymous_args = 0
1089:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   uint32_t *tmp;
 1627              		.loc 1 1089 1 is_stmt 0 view .LVU469
 1628 0000 30B5     		push	{r4, r5, lr}
 1629              	.LCFI15:
 1630              		.cfi_def_cfa_offset 12
 1631              		.cfi_offset 4, -12
 1632              		.cfi_offset 5, -8
 1633              		.cfi_offset 14, -4
 1634 0002 83B0     		sub	sp, sp, #12
 1635              	.LCFI16:
 1636              		.cfi_def_cfa_offset 24
 1637 0004 0446     		mov	r4, r0
1090:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1638              		.loc 1 1090 3 is_stmt 1 view .LVU470
1093:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 1639              		.loc 1 1093 3 view .LVU471
1093:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 1640              		.loc 1 1093 12 is_stmt 0 view .LVU472
 1641 0006 90F83600 		ldrb	r0, [r0, #54]	@ zero_extendqisi2
ARM GAS  /tmp/ccwOIEYW.s 			page 83


 1642              	.LVL129:
1093:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 1643              		.loc 1 1093 12 view .LVU473
 1644 000a C0B2     		uxtb	r0, r0
1093:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 1645              		.loc 1 1093 6 view .LVU474
 1646 000c 2028     		cmp	r0, #32
 1647 000e 3CD1     		bne	.L103
1095:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 1648              		.loc 1 1095 5 is_stmt 1 view .LVU475
1095:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 1649              		.loc 1 1095 8 is_stmt 0 view .LVU476
 1650 0010 0029     		cmp	r1, #0
 1651 0012 3DD0     		beq	.L104
1095:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 1652              		.loc 1 1095 25 discriminator 1 view .LVU477
 1653 0014 002A     		cmp	r2, #0
 1654 0016 3DD0     		beq	.L105
1101:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1655              		.loc 1 1101 5 is_stmt 1 view .LVU478
1101:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1656              		.loc 1 1101 5 view .LVU479
 1657 0018 94F83430 		ldrb	r3, [r4, #52]	@ zero_extendqisi2
 1658 001c 012B     		cmp	r3, #1
 1659 001e 3BD0     		beq	.L106
1101:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1660              		.loc 1 1101 5 discriminator 2 view .LVU480
 1661 0020 0123     		movs	r3, #1
 1662 0022 84F83430 		strb	r3, [r4, #52]
1101:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1663              		.loc 1 1101 5 discriminator 2 view .LVU481
1103:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->RxXferSize = Size;
 1664              		.loc 1 1103 5 discriminator 2 view .LVU482
1103:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->RxXferSize = Size;
 1665              		.loc 1 1103 23 is_stmt 0 discriminator 2 view .LVU483
 1666 0026 6162     		str	r1, [r4, #36]
1104:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1667              		.loc 1 1104 5 is_stmt 1 discriminator 2 view .LVU484
1104:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1668              		.loc 1 1104 23 is_stmt 0 discriminator 2 view .LVU485
 1669 0028 2285     		strh	r2, [r4, #40]	@ movhi
1106:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->RxState = HAL_IRDA_STATE_BUSY_RX;
 1670              		.loc 1 1106 5 is_stmt 1 discriminator 2 view .LVU486
1106:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->RxState = HAL_IRDA_STATE_BUSY_RX;
 1671              		.loc 1 1106 22 is_stmt 0 discriminator 2 view .LVU487
 1672 002a 0025     		movs	r5, #0
 1673 002c A563     		str	r5, [r4, #56]
1107:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1674              		.loc 1 1107 5 is_stmt 1 discriminator 2 view .LVU488
1107:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1675              		.loc 1 1107 20 is_stmt 0 discriminator 2 view .LVU489
 1676 002e 2223     		movs	r3, #34
 1677 0030 84F83630 		strb	r3, [r4, #54]
1110:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1678              		.loc 1 1110 5 is_stmt 1 discriminator 2 view .LVU490
1110:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1679              		.loc 1 1110 10 is_stmt 0 discriminator 2 view .LVU491
ARM GAS  /tmp/ccwOIEYW.s 			page 84


 1680 0034 236B     		ldr	r3, [r4, #48]
1110:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1681              		.loc 1 1110 37 discriminator 2 view .LVU492
 1682 0036 1948     		ldr	r0, .L108
 1683 0038 D863     		str	r0, [r3, #60]
1113:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1684              		.loc 1 1113 5 is_stmt 1 discriminator 2 view .LVU493
1113:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1685              		.loc 1 1113 10 is_stmt 0 discriminator 2 view .LVU494
 1686 003a 236B     		ldr	r3, [r4, #48]
1113:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1687              		.loc 1 1113 41 discriminator 2 view .LVU495
 1688 003c 1848     		ldr	r0, .L108+4
 1689 003e 1864     		str	r0, [r3, #64]
1116:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1690              		.loc 1 1116 5 is_stmt 1 discriminator 2 view .LVU496
1116:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1691              		.loc 1 1116 10 is_stmt 0 discriminator 2 view .LVU497
 1692 0040 236B     		ldr	r3, [r4, #48]
1116:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1693              		.loc 1 1116 38 discriminator 2 view .LVU498
 1694 0042 1848     		ldr	r0, .L108+8
 1695 0044 D864     		str	r0, [r3, #76]
1119:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1696              		.loc 1 1119 5 is_stmt 1 discriminator 2 view .LVU499
1119:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1697              		.loc 1 1119 10 is_stmt 0 discriminator 2 view .LVU500
 1698 0046 236B     		ldr	r3, [r4, #48]
1119:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1699              		.loc 1 1119 38 discriminator 2 view .LVU501
 1700 0048 1D65     		str	r5, [r3, #80]
1122:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     HAL_DMA_Start_IT(hirda->hdmarx, (uint32_t)&hirda->Instance->DR, *(uint32_t *)tmp, Size);
 1701              		.loc 1 1122 5 is_stmt 1 discriminator 2 view .LVU502
 1702              	.LVL130:
1123:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1703              		.loc 1 1123 5 discriminator 2 view .LVU503
1123:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1704              		.loc 1 1123 53 is_stmt 0 discriminator 2 view .LVU504
 1705 004a 2068     		ldr	r0, [r4]
1123:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1706              		.loc 1 1123 5 discriminator 2 view .LVU505
 1707 004c 1346     		mov	r3, r2
 1708 004e 0A46     		mov	r2, r1
 1709              	.LVL131:
1123:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1710              		.loc 1 1123 5 discriminator 2 view .LVU506
 1711 0050 011D     		adds	r1, r0, #4
 1712              	.LVL132:
1123:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1713              		.loc 1 1123 5 discriminator 2 view .LVU507
 1714 0052 206B     		ldr	r0, [r4, #48]
 1715 0054 FFF7FEFF 		bl	HAL_DMA_Start_IT
 1716              	.LVL133:
1126:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1717              		.loc 1 1126 5 is_stmt 1 discriminator 2 view .LVU508
 1718              	.LBB2:
1126:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
ARM GAS  /tmp/ccwOIEYW.s 			page 85


 1719              		.loc 1 1126 5 discriminator 2 view .LVU509
 1720 0058 0195     		str	r5, [sp, #4]
1126:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1721              		.loc 1 1126 5 discriminator 2 view .LVU510
 1722 005a 2368     		ldr	r3, [r4]
 1723 005c 1A68     		ldr	r2, [r3]
 1724 005e 0192     		str	r2, [sp, #4]
1126:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1725              		.loc 1 1126 5 discriminator 2 view .LVU511
 1726 0060 5A68     		ldr	r2, [r3, #4]
 1727 0062 0192     		str	r2, [sp, #4]
1126:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1728              		.loc 1 1126 5 discriminator 2 view .LVU512
 1729 0064 019A     		ldr	r2, [sp, #4]
 1730              	.LBE2:
1126:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1731              		.loc 1 1126 5 discriminator 2 view .LVU513
1129:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1732              		.loc 1 1129 5 discriminator 2 view .LVU514
1129:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1733              		.loc 1 1129 5 discriminator 2 view .LVU515
 1734 0066 84F83450 		strb	r5, [r4, #52]
1129:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1735              		.loc 1 1129 5 discriminator 2 view .LVU516
1132:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1736              		.loc 1 1132 5 discriminator 2 view .LVU517
 1737 006a DA68     		ldr	r2, [r3, #12]
 1738 006c 42F48072 		orr	r2, r2, #256
 1739 0070 DA60     		str	r2, [r3, #12]
1135:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1740              		.loc 1 1135 5 discriminator 2 view .LVU518
 1741 0072 2268     		ldr	r2, [r4]
 1742 0074 5369     		ldr	r3, [r2, #20]
 1743 0076 43F00103 		orr	r3, r3, #1
 1744 007a 5361     		str	r3, [r2, #20]
1139:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1745              		.loc 1 1139 5 discriminator 2 view .LVU519
 1746 007c 2268     		ldr	r2, [r4]
 1747 007e 5369     		ldr	r3, [r2, #20]
 1748 0080 43F04003 		orr	r3, r3, #64
 1749 0084 5361     		str	r3, [r2, #20]
1141:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
 1750              		.loc 1 1141 5 discriminator 2 view .LVU520
1141:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
 1751              		.loc 1 1141 12 is_stmt 0 discriminator 2 view .LVU521
 1752 0086 2846     		mov	r0, r5
 1753 0088 00E0     		b	.L102
 1754              	.LVL134:
 1755              	.L103:
1145:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
 1756              		.loc 1 1145 12 view .LVU522
 1757 008a 0220     		movs	r0, #2
 1758              	.LVL135:
 1759              	.L102:
1147:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1760              		.loc 1 1147 1 view .LVU523
 1761 008c 03B0     		add	sp, sp, #12
ARM GAS  /tmp/ccwOIEYW.s 			page 86


 1762              	.LCFI17:
 1763              		.cfi_remember_state
 1764              		.cfi_def_cfa_offset 12
 1765              		@ sp needed
 1766 008e 30BD     		pop	{r4, r5, pc}
 1767              	.LVL136:
 1768              	.L104:
 1769              	.LCFI18:
 1770              		.cfi_restore_state
1097:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
 1771              		.loc 1 1097 14 view .LVU524
 1772 0090 0120     		movs	r0, #1
 1773 0092 FBE7     		b	.L102
 1774              	.L105:
 1775 0094 0120     		movs	r0, #1
 1776 0096 F9E7     		b	.L102
 1777              	.L106:
1101:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1778              		.loc 1 1101 5 view .LVU525
 1779 0098 0220     		movs	r0, #2
 1780 009a F7E7     		b	.L102
 1781              	.L109:
 1782              		.align	2
 1783              	.L108:
 1784 009c 00000000 		.word	IRDA_DMAReceiveCplt
 1785 00a0 00000000 		.word	IRDA_DMAReceiveHalfCplt
 1786 00a4 00000000 		.word	IRDA_DMAError
 1787              		.cfi_endproc
 1788              	.LFE141:
 1790              		.section	.text.HAL_IRDA_DMAPause,"ax",%progbits
 1791              		.align	1
 1792              		.global	HAL_IRDA_DMAPause
 1793              		.syntax unified
 1794              		.thumb
 1795              		.thumb_func
 1796              		.fpu fpv4-sp-d16
 1798              	HAL_IRDA_DMAPause:
 1799              	.LVL137:
 1800              	.LFB142:
1156:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   uint32_t dmarequest = 0x00U;
 1801              		.loc 1 1156 1 is_stmt 1 view -0
 1802              		.cfi_startproc
 1803              		@ args = 0, pretend = 0, frame = 0
 1804              		@ frame_needed = 0, uses_anonymous_args = 0
 1805              		@ link register save eliminated.
1157:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1806              		.loc 1 1157 3 view .LVU527
1160:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1807              		.loc 1 1160 3 view .LVU528
1160:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1808              		.loc 1 1160 3 view .LVU529
 1809 0000 90F83430 		ldrb	r3, [r0, #52]	@ zero_extendqisi2
 1810 0004 012B     		cmp	r3, #1
 1811 0006 31D0     		beq	.L114
1160:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1812              		.loc 1 1160 3 discriminator 2 view .LVU530
 1813 0008 0123     		movs	r3, #1
ARM GAS  /tmp/ccwOIEYW.s 			page 87


 1814 000a 80F83430 		strb	r3, [r0, #52]
1160:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1815              		.loc 1 1160 3 discriminator 2 view .LVU531
1162:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   if ((hirda->gState == HAL_IRDA_STATE_BUSY_TX) && dmarequest)
 1816              		.loc 1 1162 3 discriminator 2 view .LVU532
1162:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   if ((hirda->gState == HAL_IRDA_STATE_BUSY_TX) && dmarequest)
 1817              		.loc 1 1162 16 is_stmt 0 discriminator 2 view .LVU533
 1818 000e 0168     		ldr	r1, [r0]
 1819 0010 4A69     		ldr	r2, [r1, #20]
 1820 0012 02F08002 		and	r2, r2, #128
 1821              	.LVL138:
1163:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 1822              		.loc 1 1163 3 is_stmt 1 discriminator 2 view .LVU534
1163:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 1823              		.loc 1 1163 13 is_stmt 0 discriminator 2 view .LVU535
 1824 0016 90F83530 		ldrb	r3, [r0, #53]	@ zero_extendqisi2
 1825 001a DBB2     		uxtb	r3, r3
1163:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 1826              		.loc 1 1163 6 discriminator 2 view .LVU536
 1827 001c 212B     		cmp	r3, #33
 1828 001e 0DD0     		beq	.L115
 1829              	.L112:
1169:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   if ((hirda->RxState == HAL_IRDA_STATE_BUSY_RX) && dmarequest)
 1830              		.loc 1 1169 3 is_stmt 1 view .LVU537
1169:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   if ((hirda->RxState == HAL_IRDA_STATE_BUSY_RX) && dmarequest)
 1831              		.loc 1 1169 16 is_stmt 0 view .LVU538
 1832 0020 0168     		ldr	r1, [r0]
 1833 0022 4A69     		ldr	r2, [r1, #20]
 1834              	.LVL139:
1169:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   if ((hirda->RxState == HAL_IRDA_STATE_BUSY_RX) && dmarequest)
 1835              		.loc 1 1169 16 view .LVU539
 1836 0024 02F04002 		and	r2, r2, #64
 1837              	.LVL140:
1170:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 1838              		.loc 1 1170 3 is_stmt 1 view .LVU540
1170:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 1839              		.loc 1 1170 13 is_stmt 0 view .LVU541
 1840 0028 90F83630 		ldrb	r3, [r0, #54]	@ zero_extendqisi2
 1841 002c DBB2     		uxtb	r3, r3
1170:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 1842              		.loc 1 1170 6 view .LVU542
 1843 002e 222B     		cmp	r3, #34
 1844 0030 0BD0     		beq	.L116
 1845              	.LVL141:
 1846              	.L113:
1181:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1847              		.loc 1 1181 3 is_stmt 1 view .LVU543
1181:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1848              		.loc 1 1181 3 view .LVU544
 1849 0032 0023     		movs	r3, #0
 1850 0034 80F83430 		strb	r3, [r0, #52]
1181:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1851              		.loc 1 1181 3 view .LVU545
1183:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** }
 1852              		.loc 1 1183 3 view .LVU546
1183:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** }
 1853              		.loc 1 1183 10 is_stmt 0 view .LVU547
ARM GAS  /tmp/ccwOIEYW.s 			page 88


 1854 0038 1846     		mov	r0, r3
 1855              	.LVL142:
1183:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** }
 1856              		.loc 1 1183 10 view .LVU548
 1857 003a 7047     		bx	lr
 1858              	.LVL143:
 1859              	.L115:
1163:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 1860              		.loc 1 1163 49 discriminator 1 view .LVU549
 1861 003c 002A     		cmp	r2, #0
 1862 003e EFD0     		beq	.L112
1166:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
 1863              		.loc 1 1166 5 is_stmt 1 view .LVU550
 1864 0040 4B69     		ldr	r3, [r1, #20]
 1865 0042 23F08003 		bic	r3, r3, #128
 1866 0046 4B61     		str	r3, [r1, #20]
 1867 0048 EAE7     		b	.L112
 1868              	.L116:
1170:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 1869              		.loc 1 1170 50 is_stmt 0 discriminator 1 view .LVU551
 1870 004a 002A     		cmp	r2, #0
 1871 004c F1D0     		beq	.L113
1173:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     CLEAR_BIT(hirda->Instance->CR3, USART_CR3_EIE);
 1872              		.loc 1 1173 5 is_stmt 1 view .LVU552
 1873 004e CB68     		ldr	r3, [r1, #12]
 1874 0050 23F48073 		bic	r3, r3, #256
 1875 0054 CB60     		str	r3, [r1, #12]
1174:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1876              		.loc 1 1174 5 view .LVU553
 1877 0056 0268     		ldr	r2, [r0]
 1878              	.LVL144:
1174:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1879              		.loc 1 1174 5 is_stmt 0 view .LVU554
 1880 0058 5369     		ldr	r3, [r2, #20]
 1881 005a 23F00103 		bic	r3, r3, #1
 1882 005e 5361     		str	r3, [r2, #20]
1177:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
 1883              		.loc 1 1177 5 is_stmt 1 view .LVU555
 1884 0060 0268     		ldr	r2, [r0]
 1885 0062 5369     		ldr	r3, [r2, #20]
 1886 0064 23F04003 		bic	r3, r3, #64
 1887 0068 5361     		str	r3, [r2, #20]
 1888 006a E2E7     		b	.L113
 1889              	.LVL145:
 1890              	.L114:
1160:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1891              		.loc 1 1160 3 is_stmt 0 view .LVU556
 1892 006c 0220     		movs	r0, #2
 1893              	.LVL146:
1184:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1894              		.loc 1 1184 1 view .LVU557
 1895 006e 7047     		bx	lr
 1896              		.cfi_endproc
 1897              	.LFE142:
 1899              		.section	.text.HAL_IRDA_DMAResume,"ax",%progbits
 1900              		.align	1
 1901              		.global	HAL_IRDA_DMAResume
ARM GAS  /tmp/ccwOIEYW.s 			page 89


 1902              		.syntax unified
 1903              		.thumb
 1904              		.thumb_func
 1905              		.fpu fpv4-sp-d16
 1907              	HAL_IRDA_DMAResume:
 1908              	.LVL147:
 1909              	.LFB143:
1193:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Process Locked */
 1910              		.loc 1 1193 1 is_stmt 1 view -0
 1911              		.cfi_startproc
 1912              		@ args = 0, pretend = 0, frame = 8
 1913              		@ frame_needed = 0, uses_anonymous_args = 0
 1914              		@ link register save eliminated.
1195:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1915              		.loc 1 1195 3 view .LVU559
1195:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1916              		.loc 1 1195 3 view .LVU560
 1917 0000 90F83430 		ldrb	r3, [r0, #52]	@ zero_extendqisi2
 1918 0004 012B     		cmp	r3, #1
 1919 0006 34D0     		beq	.L121
1195:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1920              		.loc 1 1195 3 discriminator 2 view .LVU561
 1921 0008 0123     		movs	r3, #1
 1922 000a 80F83430 		strb	r3, [r0, #52]
1195:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1923              		.loc 1 1195 3 discriminator 2 view .LVU562
1197:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 1924              		.loc 1 1197 3 discriminator 2 view .LVU563
1197:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 1925              		.loc 1 1197 12 is_stmt 0 discriminator 2 view .LVU564
 1926 000e 90F83530 		ldrb	r3, [r0, #53]	@ zero_extendqisi2
 1927 0012 DBB2     		uxtb	r3, r3
1197:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 1928              		.loc 1 1197 6 discriminator 2 view .LVU565
 1929 0014 212B     		cmp	r3, #33
 1930 0016 09D0     		beq	.L127
 1931              	.L119:
1203:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 1932              		.loc 1 1203 3 is_stmt 1 view .LVU566
1203:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 1933              		.loc 1 1203 12 is_stmt 0 view .LVU567
 1934 0018 90F83630 		ldrb	r3, [r0, #54]	@ zero_extendqisi2
 1935 001c DBB2     		uxtb	r3, r3
1203:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 1936              		.loc 1 1203 6 view .LVU568
 1937 001e 222B     		cmp	r3, #34
 1938 0020 0AD0     		beq	.L128
1217:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1939              		.loc 1 1217 3 is_stmt 1 view .LVU569
1217:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1940              		.loc 1 1217 3 view .LVU570
 1941 0022 0023     		movs	r3, #0
 1942 0024 80F83430 		strb	r3, [r0, #52]
1217:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1943              		.loc 1 1217 3 view .LVU571
1219:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** }
 1944              		.loc 1 1219 3 view .LVU572
ARM GAS  /tmp/ccwOIEYW.s 			page 90


1219:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** }
 1945              		.loc 1 1219 10 is_stmt 0 view .LVU573
 1946 0028 1846     		mov	r0, r3
 1947              	.LVL148:
1220:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1948              		.loc 1 1220 1 view .LVU574
 1949 002a 7047     		bx	lr
 1950              	.LVL149:
 1951              	.L127:
1200:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
 1952              		.loc 1 1200 5 is_stmt 1 view .LVU575
 1953 002c 0268     		ldr	r2, [r0]
 1954 002e 5369     		ldr	r3, [r2, #20]
 1955 0030 43F08003 		orr	r3, r3, #128
 1956 0034 5361     		str	r3, [r2, #20]
 1957 0036 EFE7     		b	.L119
 1958              	.L128:
1193:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Process Locked */
 1959              		.loc 1 1193 1 is_stmt 0 view .LVU576
 1960 0038 82B0     		sub	sp, sp, #8
 1961              	.LCFI19:
 1962              		.cfi_def_cfa_offset 8
1206:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1963              		.loc 1 1206 5 is_stmt 1 view .LVU577
 1964              	.LBB3:
1206:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1965              		.loc 1 1206 5 view .LVU578
 1966 003a 0023     		movs	r3, #0
 1967 003c 0193     		str	r3, [sp, #4]
1206:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1968              		.loc 1 1206 5 view .LVU579
 1969 003e 0368     		ldr	r3, [r0]
 1970 0040 1A68     		ldr	r2, [r3]
 1971 0042 0192     		str	r2, [sp, #4]
1206:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1972              		.loc 1 1206 5 view .LVU580
 1973 0044 5A68     		ldr	r2, [r3, #4]
 1974 0046 0192     		str	r2, [sp, #4]
1206:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1975              		.loc 1 1206 5 view .LVU581
 1976 0048 019A     		ldr	r2, [sp, #4]
 1977              	.LBE3:
1206:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1978              		.loc 1 1206 5 view .LVU582
1209:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     SET_BIT(hirda->Instance->CR3, USART_CR3_EIE);
 1979              		.loc 1 1209 5 view .LVU583
 1980 004a DA68     		ldr	r2, [r3, #12]
 1981 004c 42F48072 		orr	r2, r2, #256
 1982 0050 DA60     		str	r2, [r3, #12]
1210:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1983              		.loc 1 1210 5 view .LVU584
 1984 0052 0268     		ldr	r2, [r0]
 1985 0054 5369     		ldr	r3, [r2, #20]
 1986 0056 43F00103 		orr	r3, r3, #1
 1987 005a 5361     		str	r3, [r2, #20]
1213:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
 1988              		.loc 1 1213 5 view .LVU585
ARM GAS  /tmp/ccwOIEYW.s 			page 91


 1989 005c 0268     		ldr	r2, [r0]
 1990 005e 5369     		ldr	r3, [r2, #20]
 1991 0060 43F04003 		orr	r3, r3, #64
 1992 0064 5361     		str	r3, [r2, #20]
1217:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1993              		.loc 1 1217 3 view .LVU586
1217:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1994              		.loc 1 1217 3 view .LVU587
 1995 0066 0023     		movs	r3, #0
 1996 0068 80F83430 		strb	r3, [r0, #52]
1217:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 1997              		.loc 1 1217 3 view .LVU588
1219:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** }
 1998              		.loc 1 1219 3 view .LVU589
1219:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** }
 1999              		.loc 1 1219 10 is_stmt 0 view .LVU590
 2000 006c 1846     		mov	r0, r3
 2001              	.LVL150:
1220:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 2002              		.loc 1 1220 1 view .LVU591
 2003 006e 02B0     		add	sp, sp, #8
 2004              	.LCFI20:
 2005              		.cfi_def_cfa_offset 0
 2006              		@ sp needed
 2007 0070 7047     		bx	lr
 2008              	.LVL151:
 2009              	.L121:
1195:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 2010              		.loc 1 1195 3 view .LVU592
 2011 0072 0220     		movs	r0, #2
 2012              	.LVL152:
1195:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 2013              		.loc 1 1195 3 view .LVU593
 2014 0074 7047     		bx	lr
 2015              		.cfi_endproc
 2016              	.LFE143:
 2018              		.section	.text.HAL_IRDA_DMAStop,"ax",%progbits
 2019              		.align	1
 2020              		.global	HAL_IRDA_DMAStop
 2021              		.syntax unified
 2022              		.thumb
 2023              		.thumb_func
 2024              		.fpu fpv4-sp-d16
 2026              	HAL_IRDA_DMAStop:
 2027              	.LVL153:
 2028              	.LFB144:
1229:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   uint32_t dmarequest = 0x00U;
 2029              		.loc 1 1229 1 is_stmt 1 view -0
 2030              		.cfi_startproc
 2031              		@ args = 0, pretend = 0, frame = 0
 2032              		@ frame_needed = 0, uses_anonymous_args = 0
1229:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   uint32_t dmarequest = 0x00U;
 2033              		.loc 1 1229 1 is_stmt 0 view .LVU595
 2034 0000 10B5     		push	{r4, lr}
 2035              	.LCFI21:
 2036              		.cfi_def_cfa_offset 8
 2037              		.cfi_offset 4, -8
ARM GAS  /tmp/ccwOIEYW.s 			page 92


 2038              		.cfi_offset 14, -4
 2039 0002 0446     		mov	r4, r0
1230:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* The Lock is not implemented on this API to allow the user application
 2040              		.loc 1 1230 3 is_stmt 1 view .LVU596
 2041              	.LVL154:
1238:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   if ((hirda->gState == HAL_IRDA_STATE_BUSY_TX) && dmarequest)
 2042              		.loc 1 1238 3 view .LVU597
1238:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   if ((hirda->gState == HAL_IRDA_STATE_BUSY_TX) && dmarequest)
 2043              		.loc 1 1238 16 is_stmt 0 view .LVU598
 2044 0004 0168     		ldr	r1, [r0]
 2045 0006 4A69     		ldr	r2, [r1, #20]
 2046              	.LVL155:
1239:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 2047              		.loc 1 1239 3 is_stmt 1 view .LVU599
1239:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 2048              		.loc 1 1239 13 is_stmt 0 view .LVU600
 2049 0008 90F83530 		ldrb	r3, [r0, #53]	@ zero_extendqisi2
 2050 000c DBB2     		uxtb	r3, r3
1239:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 2051              		.loc 1 1239 6 view .LVU601
 2052 000e 212B     		cmp	r3, #33
 2053 0010 0AD0     		beq	.L135
 2054              	.LVL156:
 2055              	.L130:
1252:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   if ((hirda->RxState == HAL_IRDA_STATE_BUSY_RX) && dmarequest)
 2056              		.loc 1 1252 3 is_stmt 1 view .LVU602
1252:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   if ((hirda->RxState == HAL_IRDA_STATE_BUSY_RX) && dmarequest)
 2057              		.loc 1 1252 16 is_stmt 0 view .LVU603
 2058 0012 2168     		ldr	r1, [r4]
 2059 0014 4A69     		ldr	r2, [r1, #20]
 2060 0016 02F04002 		and	r2, r2, #64
 2061              	.LVL157:
1253:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 2062              		.loc 1 1253 3 is_stmt 1 view .LVU604
1253:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 2063              		.loc 1 1253 13 is_stmt 0 view .LVU605
 2064 001a 94F83630 		ldrb	r3, [r4, #54]	@ zero_extendqisi2
 2065 001e DBB2     		uxtb	r3, r3
1253:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 2066              		.loc 1 1253 6 view .LVU606
 2067 0020 222B     		cmp	r3, #34
 2068 0022 11D0     		beq	.L136
 2069              	.LVL158:
 2070              	.L132:
1265:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** }
 2071              		.loc 1 1265 3 is_stmt 1 view .LVU607
1266:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 2072              		.loc 1 1266 1 is_stmt 0 view .LVU608
 2073 0024 0020     		movs	r0, #0
 2074 0026 10BD     		pop	{r4, pc}
 2075              	.LVL159:
 2076              	.L135:
1266:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 2077              		.loc 1 1266 1 view .LVU609
 2078 0028 02F08002 		and	r2, r2, #128
 2079              	.LVL160:
1239:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
ARM GAS  /tmp/ccwOIEYW.s 			page 93


 2080              		.loc 1 1239 49 discriminator 1 view .LVU610
 2081 002c 002A     		cmp	r2, #0
 2082 002e F0D0     		beq	.L130
1241:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 2083              		.loc 1 1241 5 is_stmt 1 view .LVU611
 2084 0030 4B69     		ldr	r3, [r1, #20]
 2085 0032 23F08003 		bic	r3, r3, #128
 2086 0036 4B61     		str	r3, [r1, #20]
1244:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 2087              		.loc 1 1244 5 view .LVU612
1244:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 2088              		.loc 1 1244 14 is_stmt 0 view .LVU613
 2089 0038 C06A     		ldr	r0, [r0, #44]
 2090              	.LVL161:
1244:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 2091              		.loc 1 1244 8 view .LVU614
 2092 003a 08B1     		cbz	r0, .L131
1246:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
 2093              		.loc 1 1246 7 is_stmt 1 view .LVU615
 2094 003c FFF7FEFF 		bl	HAL_DMA_Abort
 2095              	.LVL162:
 2096              	.L131:
1248:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
 2097              		.loc 1 1248 5 view .LVU616
 2098 0040 2046     		mov	r0, r4
 2099 0042 FFF7FEFF 		bl	IRDA_EndTxTransfer
 2100              	.LVL163:
 2101 0046 E4E7     		b	.L130
 2102              	.LVL164:
 2103              	.L136:
1253:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 2104              		.loc 1 1253 50 is_stmt 0 discriminator 1 view .LVU617
 2105 0048 002A     		cmp	r2, #0
 2106 004a EBD0     		beq	.L132
1255:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 2107              		.loc 1 1255 5 is_stmt 1 view .LVU618
 2108 004c 4B69     		ldr	r3, [r1, #20]
 2109 004e 23F04003 		bic	r3, r3, #64
 2110 0052 4B61     		str	r3, [r1, #20]
1258:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 2111              		.loc 1 1258 5 view .LVU619
1258:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 2112              		.loc 1 1258 14 is_stmt 0 view .LVU620
 2113 0054 206B     		ldr	r0, [r4, #48]
1258:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 2114              		.loc 1 1258 8 view .LVU621
 2115 0056 08B1     		cbz	r0, .L133
1260:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
 2116              		.loc 1 1260 7 is_stmt 1 view .LVU622
 2117 0058 FFF7FEFF 		bl	HAL_DMA_Abort
 2118              	.LVL165:
 2119              	.L133:
1262:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
 2120              		.loc 1 1262 5 view .LVU623
 2121 005c 2046     		mov	r0, r4
 2122 005e FFF7FEFF 		bl	IRDA_EndRxTransfer
 2123              	.LVL166:
ARM GAS  /tmp/ccwOIEYW.s 			page 94


 2124 0062 DFE7     		b	.L132
 2125              		.cfi_endproc
 2126              	.LFE144:
 2128              		.section	.text.HAL_IRDA_Abort,"ax",%progbits
 2129              		.align	1
 2130              		.global	HAL_IRDA_Abort
 2131              		.syntax unified
 2132              		.thumb
 2133              		.thumb_func
 2134              		.fpu fpv4-sp-d16
 2136              	HAL_IRDA_Abort:
 2137              	.LVL167:
 2138              	.LFB145:
1281:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 2139              		.loc 1 1281 1 view -0
 2140              		.cfi_startproc
 2141              		@ args = 0, pretend = 0, frame = 0
 2142              		@ frame_needed = 0, uses_anonymous_args = 0
1281:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 2143              		.loc 1 1281 1 is_stmt 0 view .LVU625
 2144 0000 10B5     		push	{r4, lr}
 2145              	.LCFI22:
 2146              		.cfi_def_cfa_offset 8
 2147              		.cfi_offset 4, -8
 2148              		.cfi_offset 14, -4
 2149 0002 0446     		mov	r4, r0
1283:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   CLEAR_BIT(hirda->Instance->CR3, USART_CR3_EIE);
 2150              		.loc 1 1283 3 is_stmt 1 view .LVU626
 2151 0004 0268     		ldr	r2, [r0]
 2152 0006 D368     		ldr	r3, [r2, #12]
 2153 0008 23F4F073 		bic	r3, r3, #480
 2154 000c D360     		str	r3, [r2, #12]
1284:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 2155              		.loc 1 1284 3 view .LVU627
 2156 000e 0268     		ldr	r2, [r0]
 2157 0010 5369     		ldr	r3, [r2, #20]
 2158 0012 23F00103 		bic	r3, r3, #1
 2159 0016 5361     		str	r3, [r2, #20]
1287:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 2160              		.loc 1 1287 3 view .LVU628
1287:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 2161              		.loc 1 1287 7 is_stmt 0 view .LVU629
 2162 0018 0368     		ldr	r3, [r0]
 2163 001a 5A69     		ldr	r2, [r3, #20]
1287:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 2164              		.loc 1 1287 6 view .LVU630
 2165 001c 12F0800F 		tst	r2, #128
 2166 0020 0AD0     		beq	.L138
1289:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 2167              		.loc 1 1289 5 is_stmt 1 view .LVU631
 2168 0022 5A69     		ldr	r2, [r3, #20]
 2169 0024 22F08002 		bic	r2, r2, #128
 2170 0028 5A61     		str	r2, [r3, #20]
1292:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 2171              		.loc 1 1292 5 view .LVU632
1292:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 2172              		.loc 1 1292 14 is_stmt 0 view .LVU633
ARM GAS  /tmp/ccwOIEYW.s 			page 95


 2173 002a C36A     		ldr	r3, [r0, #44]
1292:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 2174              		.loc 1 1292 8 view .LVU634
 2175 002c 23B1     		cbz	r3, .L138
1296:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 2176              		.loc 1 1296 7 is_stmt 1 view .LVU635
1296:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 2177              		.loc 1 1296 40 is_stmt 0 view .LVU636
 2178 002e 0022     		movs	r2, #0
 2179 0030 1A65     		str	r2, [r3, #80]
1298:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
 2180              		.loc 1 1298 7 is_stmt 1 view .LVU637
 2181 0032 C06A     		ldr	r0, [r0, #44]
 2182              	.LVL168:
1298:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
 2183              		.loc 1 1298 7 is_stmt 0 view .LVU638
 2184 0034 FFF7FEFF 		bl	HAL_DMA_Abort
 2185              	.LVL169:
 2186              	.L138:
1303:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 2187              		.loc 1 1303 3 is_stmt 1 view .LVU639
1303:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 2188              		.loc 1 1303 7 is_stmt 0 view .LVU640
 2189 0038 2368     		ldr	r3, [r4]
 2190 003a 5A69     		ldr	r2, [r3, #20]
1303:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 2191              		.loc 1 1303 6 view .LVU641
 2192 003c 12F0400F 		tst	r2, #64
 2193 0040 0AD0     		beq	.L139
1305:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 2194              		.loc 1 1305 5 is_stmt 1 view .LVU642
 2195 0042 5A69     		ldr	r2, [r3, #20]
 2196 0044 22F04002 		bic	r2, r2, #64
 2197 0048 5A61     		str	r2, [r3, #20]
1308:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 2198              		.loc 1 1308 5 view .LVU643
1308:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 2199              		.loc 1 1308 14 is_stmt 0 view .LVU644
 2200 004a 236B     		ldr	r3, [r4, #48]
1308:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 2201              		.loc 1 1308 8 view .LVU645
 2202 004c 23B1     		cbz	r3, .L139
1312:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 2203              		.loc 1 1312 7 is_stmt 1 view .LVU646
1312:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 2204              		.loc 1 1312 40 is_stmt 0 view .LVU647
 2205 004e 0022     		movs	r2, #0
 2206 0050 1A65     		str	r2, [r3, #80]
1314:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
 2207              		.loc 1 1314 7 is_stmt 1 view .LVU648
 2208 0052 206B     		ldr	r0, [r4, #48]
 2209 0054 FFF7FEFF 		bl	HAL_DMA_Abort
 2210              	.LVL170:
 2211              	.L139:
1319:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   hirda->RxXferCount = 0x00U;
 2212              		.loc 1 1319 3 view .LVU649
1319:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   hirda->RxXferCount = 0x00U;
ARM GAS  /tmp/ccwOIEYW.s 			page 96


 2213              		.loc 1 1319 22 is_stmt 0 view .LVU650
 2214 0058 0020     		movs	r0, #0
 2215 005a 6084     		strh	r0, [r4, #34]	@ movhi
1320:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 2216              		.loc 1 1320 3 is_stmt 1 view .LVU651
1320:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 2217              		.loc 1 1320 22 is_stmt 0 view .LVU652
 2218 005c 6085     		strh	r0, [r4, #42]	@ movhi
1323:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 2219              		.loc 1 1323 3 is_stmt 1 view .LVU653
1323:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 2220              		.loc 1 1323 20 is_stmt 0 view .LVU654
 2221 005e A063     		str	r0, [r4, #56]
1326:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   hirda->gState = HAL_IRDA_STATE_READY;
 2222              		.loc 1 1326 3 is_stmt 1 view .LVU655
1326:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   hirda->gState = HAL_IRDA_STATE_READY;
 2223              		.loc 1 1326 18 is_stmt 0 view .LVU656
 2224 0060 2023     		movs	r3, #32
 2225 0062 84F83630 		strb	r3, [r4, #54]
1327:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 2226              		.loc 1 1327 3 is_stmt 1 view .LVU657
1327:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 2227              		.loc 1 1327 17 is_stmt 0 view .LVU658
 2228 0066 84F83530 		strb	r3, [r4, #53]
1329:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** }
 2229              		.loc 1 1329 3 is_stmt 1 view .LVU659
1330:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 2230              		.loc 1 1330 1 is_stmt 0 view .LVU660
 2231 006a 10BD     		pop	{r4, pc}
1330:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 2232              		.loc 1 1330 1 view .LVU661
 2233              		.cfi_endproc
 2234              	.LFE145:
 2236              		.section	.text.HAL_IRDA_AbortTransmit,"ax",%progbits
 2237              		.align	1
 2238              		.global	HAL_IRDA_AbortTransmit
 2239              		.syntax unified
 2240              		.thumb
 2241              		.thumb_func
 2242              		.fpu fpv4-sp-d16
 2244              	HAL_IRDA_AbortTransmit:
 2245              	.LVL171:
 2246              	.LFB146:
1345:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Disable TXEIE and TCIE interrupts */
 2247              		.loc 1 1345 1 is_stmt 1 view -0
 2248              		.cfi_startproc
 2249              		@ args = 0, pretend = 0, frame = 0
 2250              		@ frame_needed = 0, uses_anonymous_args = 0
1345:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Disable TXEIE and TCIE interrupts */
 2251              		.loc 1 1345 1 is_stmt 0 view .LVU663
 2252 0000 10B5     		push	{r4, lr}
 2253              	.LCFI23:
 2254              		.cfi_def_cfa_offset 8
 2255              		.cfi_offset 4, -8
 2256              		.cfi_offset 14, -4
 2257 0002 0446     		mov	r4, r0
1347:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
ARM GAS  /tmp/ccwOIEYW.s 			page 97


 2258              		.loc 1 1347 3 is_stmt 1 view .LVU664
 2259 0004 0268     		ldr	r2, [r0]
 2260 0006 D368     		ldr	r3, [r2, #12]
 2261 0008 23F0C003 		bic	r3, r3, #192
 2262 000c D360     		str	r3, [r2, #12]
1350:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 2263              		.loc 1 1350 3 view .LVU665
1350:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 2264              		.loc 1 1350 7 is_stmt 0 view .LVU666
 2265 000e 0368     		ldr	r3, [r0]
 2266 0010 5A69     		ldr	r2, [r3, #20]
1350:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 2267              		.loc 1 1350 6 view .LVU667
 2268 0012 12F0800F 		tst	r2, #128
 2269 0016 0AD0     		beq	.L142
1352:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 2270              		.loc 1 1352 5 is_stmt 1 view .LVU668
 2271 0018 5A69     		ldr	r2, [r3, #20]
 2272 001a 22F08002 		bic	r2, r2, #128
 2273 001e 5A61     		str	r2, [r3, #20]
1355:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 2274              		.loc 1 1355 5 view .LVU669
1355:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 2275              		.loc 1 1355 14 is_stmt 0 view .LVU670
 2276 0020 C36A     		ldr	r3, [r0, #44]
1355:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 2277              		.loc 1 1355 8 view .LVU671
 2278 0022 23B1     		cbz	r3, .L142
1359:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 2279              		.loc 1 1359 7 is_stmt 1 view .LVU672
1359:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 2280              		.loc 1 1359 40 is_stmt 0 view .LVU673
 2281 0024 0022     		movs	r2, #0
 2282 0026 1A65     		str	r2, [r3, #80]
1361:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
 2283              		.loc 1 1361 7 is_stmt 1 view .LVU674
 2284 0028 C06A     		ldr	r0, [r0, #44]
 2285              	.LVL172:
1361:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
 2286              		.loc 1 1361 7 is_stmt 0 view .LVU675
 2287 002a FFF7FEFF 		bl	HAL_DMA_Abort
 2288              	.LVL173:
 2289              	.L142:
1366:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 2290              		.loc 1 1366 3 is_stmt 1 view .LVU676
1366:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 2291              		.loc 1 1366 22 is_stmt 0 view .LVU677
 2292 002e 0020     		movs	r0, #0
 2293 0030 6084     		strh	r0, [r4, #34]	@ movhi
1369:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 2294              		.loc 1 1369 3 is_stmt 1 view .LVU678
1369:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 2295              		.loc 1 1369 17 is_stmt 0 view .LVU679
 2296 0032 2023     		movs	r3, #32
 2297 0034 84F83530 		strb	r3, [r4, #53]
1371:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** }
 2298              		.loc 1 1371 3 is_stmt 1 view .LVU680
ARM GAS  /tmp/ccwOIEYW.s 			page 98


1372:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 2299              		.loc 1 1372 1 is_stmt 0 view .LVU681
 2300 0038 10BD     		pop	{r4, pc}
1372:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 2301              		.loc 1 1372 1 view .LVU682
 2302              		.cfi_endproc
 2303              	.LFE146:
 2305              		.section	.text.HAL_IRDA_AbortReceive,"ax",%progbits
 2306              		.align	1
 2307              		.global	HAL_IRDA_AbortReceive
 2308              		.syntax unified
 2309              		.thumb
 2310              		.thumb_func
 2311              		.fpu fpv4-sp-d16
 2313              	HAL_IRDA_AbortReceive:
 2314              	.LVL174:
 2315              	.LFB147:
1387:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 2316              		.loc 1 1387 1 is_stmt 1 view -0
 2317              		.cfi_startproc
 2318              		@ args = 0, pretend = 0, frame = 0
 2319              		@ frame_needed = 0, uses_anonymous_args = 0
1387:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 2320              		.loc 1 1387 1 is_stmt 0 view .LVU684
 2321 0000 10B5     		push	{r4, lr}
 2322              	.LCFI24:
 2323              		.cfi_def_cfa_offset 8
 2324              		.cfi_offset 4, -8
 2325              		.cfi_offset 14, -4
 2326 0002 0446     		mov	r4, r0
1389:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   CLEAR_BIT(hirda->Instance->CR3, USART_CR3_EIE);
 2327              		.loc 1 1389 3 is_stmt 1 view .LVU685
 2328 0004 0268     		ldr	r2, [r0]
 2329 0006 D368     		ldr	r3, [r2, #12]
 2330 0008 23F49073 		bic	r3, r3, #288
 2331 000c D360     		str	r3, [r2, #12]
1390:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 2332              		.loc 1 1390 3 view .LVU686
 2333 000e 0268     		ldr	r2, [r0]
 2334 0010 5369     		ldr	r3, [r2, #20]
 2335 0012 23F00103 		bic	r3, r3, #1
 2336 0016 5361     		str	r3, [r2, #20]
1393:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 2337              		.loc 1 1393 3 view .LVU687
1393:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 2338              		.loc 1 1393 7 is_stmt 0 view .LVU688
 2339 0018 0368     		ldr	r3, [r0]
 2340 001a 5A69     		ldr	r2, [r3, #20]
1393:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 2341              		.loc 1 1393 6 view .LVU689
 2342 001c 12F0400F 		tst	r2, #64
 2343 0020 0AD0     		beq	.L145
1395:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 2344              		.loc 1 1395 5 is_stmt 1 view .LVU690
 2345 0022 5A69     		ldr	r2, [r3, #20]
 2346 0024 22F04002 		bic	r2, r2, #64
 2347 0028 5A61     		str	r2, [r3, #20]
ARM GAS  /tmp/ccwOIEYW.s 			page 99


1398:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 2348              		.loc 1 1398 5 view .LVU691
1398:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 2349              		.loc 1 1398 14 is_stmt 0 view .LVU692
 2350 002a 036B     		ldr	r3, [r0, #48]
1398:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 2351              		.loc 1 1398 8 view .LVU693
 2352 002c 23B1     		cbz	r3, .L145
1402:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 2353              		.loc 1 1402 7 is_stmt 1 view .LVU694
1402:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 2354              		.loc 1 1402 40 is_stmt 0 view .LVU695
 2355 002e 0022     		movs	r2, #0
 2356 0030 1A65     		str	r2, [r3, #80]
1404:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
 2357              		.loc 1 1404 7 is_stmt 1 view .LVU696
 2358 0032 006B     		ldr	r0, [r0, #48]
 2359              	.LVL175:
1404:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
 2360              		.loc 1 1404 7 is_stmt 0 view .LVU697
 2361 0034 FFF7FEFF 		bl	HAL_DMA_Abort
 2362              	.LVL176:
 2363              	.L145:
1409:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 2364              		.loc 1 1409 3 is_stmt 1 view .LVU698
1409:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 2365              		.loc 1 1409 22 is_stmt 0 view .LVU699
 2366 0038 0020     		movs	r0, #0
 2367 003a 6085     		strh	r0, [r4, #42]	@ movhi
1412:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 2368              		.loc 1 1412 3 is_stmt 1 view .LVU700
1412:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 2369              		.loc 1 1412 18 is_stmt 0 view .LVU701
 2370 003c 2023     		movs	r3, #32
 2371 003e 84F83630 		strb	r3, [r4, #54]
1414:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** }
 2372              		.loc 1 1414 3 is_stmt 1 view .LVU702
1415:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 2373              		.loc 1 1415 1 is_stmt 0 view .LVU703
 2374 0042 10BD     		pop	{r4, pc}
1415:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 2375              		.loc 1 1415 1 view .LVU704
 2376              		.cfi_endproc
 2377              	.LFE147:
 2379              		.section	.text.HAL_IRDA_TxCpltCallback,"ax",%progbits
 2380              		.align	1
 2381              		.weak	HAL_IRDA_TxCpltCallback
 2382              		.syntax unified
 2383              		.thumb
 2384              		.thumb_func
 2385              		.fpu fpv4-sp-d16
 2387              	HAL_IRDA_TxCpltCallback:
 2388              	.LVL177:
 2389              	.LFB152:
1852:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Prevent unused argument(s) compilation warning */
 2390              		.loc 1 1852 1 is_stmt 1 view -0
 2391              		.cfi_startproc
ARM GAS  /tmp/ccwOIEYW.s 			page 100


 2392              		@ args = 0, pretend = 0, frame = 0
 2393              		@ frame_needed = 0, uses_anonymous_args = 0
 2394              		@ link register save eliminated.
1854:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 2395              		.loc 1 1854 3 view .LVU706
1859:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 2396              		.loc 1 1859 1 is_stmt 0 view .LVU707
 2397 0000 7047     		bx	lr
 2398              		.cfi_endproc
 2399              	.LFE152:
 2401              		.section	.text.IRDA_DMATransmitCplt,"ax",%progbits
 2402              		.align	1
 2403              		.syntax unified
 2404              		.thumb
 2405              		.thumb_func
 2406              		.fpu fpv4-sp-d16
 2408              	IRDA_DMATransmitCplt:
 2409              	.LVL178:
 2410              	.LFB162:
2060:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   IRDA_HandleTypeDef *hirda = (IRDA_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 2411              		.loc 1 2060 1 is_stmt 1 view -0
 2412              		.cfi_startproc
 2413              		@ args = 0, pretend = 0, frame = 0
 2414              		@ frame_needed = 0, uses_anonymous_args = 0
2060:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   IRDA_HandleTypeDef *hirda = (IRDA_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 2415              		.loc 1 2060 1 is_stmt 0 view .LVU709
 2416 0000 08B5     		push	{r3, lr}
 2417              	.LCFI25:
 2418              		.cfi_def_cfa_offset 8
 2419              		.cfi_offset 3, -8
 2420              		.cfi_offset 14, -4
 2421 0002 0346     		mov	r3, r0
2061:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* DMA Normal mode */
 2422              		.loc 1 2061 3 is_stmt 1 view .LVU710
2061:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* DMA Normal mode */
 2423              		.loc 1 2061 23 is_stmt 0 view .LVU711
 2424 0004 806B     		ldr	r0, [r0, #56]
 2425              	.LVL179:
2063:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 2426              		.loc 1 2063 3 is_stmt 1 view .LVU712
2063:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 2427              		.loc 1 2063 12 is_stmt 0 view .LVU713
 2428 0006 1B68     		ldr	r3, [r3]
 2429              	.LVL180:
2063:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 2430              		.loc 1 2063 22 view .LVU714
 2431 0008 1B68     		ldr	r3, [r3]
2063:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 2432              		.loc 1 2063 6 view .LVU715
 2433 000a 13F4807F 		tst	r3, #256
 2434 000e 0CD1     		bne	.L149
2065:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 2435              		.loc 1 2065 5 is_stmt 1 view .LVU716
2065:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 2436              		.loc 1 2065 24 is_stmt 0 view .LVU717
 2437 0010 0023     		movs	r3, #0
 2438 0012 4384     		strh	r3, [r0, #34]	@ movhi
ARM GAS  /tmp/ccwOIEYW.s 			page 101


2069:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 2439              		.loc 1 2069 5 is_stmt 1 view .LVU718
 2440 0014 0268     		ldr	r2, [r0]
 2441 0016 5369     		ldr	r3, [r2, #20]
 2442 0018 23F08003 		bic	r3, r3, #128
 2443 001c 5361     		str	r3, [r2, #20]
2072:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
 2444              		.loc 1 2072 5 view .LVU719
 2445 001e 0268     		ldr	r2, [r0]
 2446 0020 D368     		ldr	r3, [r2, #12]
 2447 0022 43F04003 		orr	r3, r3, #64
 2448 0026 D360     		str	r3, [r2, #12]
 2449              	.LVL181:
 2450              	.L148:
2085:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 2451              		.loc 1 2085 1 is_stmt 0 view .LVU720
 2452 0028 08BD     		pop	{r3, pc}
 2453              	.LVL182:
 2454              	.L149:
2082:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #endif /* USE_HAL_IRDA_REGISTER_CALLBACK */
 2455              		.loc 1 2082 5 is_stmt 1 view .LVU721
 2456 002a FFF7FEFF 		bl	HAL_IRDA_TxCpltCallback
 2457              	.LVL183:
2085:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 2458              		.loc 1 2085 1 is_stmt 0 view .LVU722
 2459 002e FBE7     		b	.L148
 2460              		.cfi_endproc
 2461              	.LFE162:
 2463              		.section	.text.IRDA_EndTransmit_IT,"ax",%progbits
 2464              		.align	1
 2465              		.syntax unified
 2466              		.thumb
 2467              		.thumb_func
 2468              		.fpu fpv4-sp-d16
 2470              	IRDA_EndTransmit_IT:
 2471              	.LVL184:
 2472              	.LFB176:
2483:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Disable the IRDA Transmit Complete Interrupt */
 2473              		.loc 1 2483 1 is_stmt 1 view -0
 2474              		.cfi_startproc
 2475              		@ args = 0, pretend = 0, frame = 0
 2476              		@ frame_needed = 0, uses_anonymous_args = 0
2483:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Disable the IRDA Transmit Complete Interrupt */
 2477              		.loc 1 2483 1 is_stmt 0 view .LVU724
 2478 0000 08B5     		push	{r3, lr}
 2479              	.LCFI26:
 2480              		.cfi_def_cfa_offset 8
 2481              		.cfi_offset 3, -8
 2482              		.cfi_offset 14, -4
2485:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 2483              		.loc 1 2485 3 is_stmt 1 view .LVU725
 2484 0002 0168     		ldr	r1, [r0]
 2485 0004 CA68     		ldr	r2, [r1, #12]
 2486 0006 22F04002 		bic	r2, r2, #64
 2487 000a CA60     		str	r2, [r1, #12]
2488:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 2488              		.loc 1 2488 3 view .LVU726
ARM GAS  /tmp/ccwOIEYW.s 			page 102


 2489 000c 0168     		ldr	r1, [r0]
 2490 000e 4A69     		ldr	r2, [r1, #20]
 2491 0010 22F00102 		bic	r2, r2, #1
 2492 0014 4A61     		str	r2, [r1, #20]
2491:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 2493              		.loc 1 2491 3 view .LVU727
2491:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 2494              		.loc 1 2491 17 is_stmt 0 view .LVU728
 2495 0016 2022     		movs	r2, #32
 2496 0018 80F83520 		strb	r2, [r0, #53]
2498:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #endif /* USE_HAL_IRDA_REGISTER_CALLBACK */
 2497              		.loc 1 2498 3 is_stmt 1 view .LVU729
 2498 001c FFF7FEFF 		bl	HAL_IRDA_TxCpltCallback
 2499              	.LVL185:
2501:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** }
 2500              		.loc 1 2501 3 view .LVU730
2502:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 2501              		.loc 1 2502 1 is_stmt 0 view .LVU731
 2502 0020 0020     		movs	r0, #0
 2503 0022 08BD     		pop	{r3, pc}
 2504              		.cfi_endproc
 2505              	.LFE176:
 2507              		.section	.text.HAL_IRDA_TxHalfCpltCallback,"ax",%progbits
 2508              		.align	1
 2509              		.weak	HAL_IRDA_TxHalfCpltCallback
 2510              		.syntax unified
 2511              		.thumb
 2512              		.thumb_func
 2513              		.fpu fpv4-sp-d16
 2515              	HAL_IRDA_TxHalfCpltCallback:
 2516              	.LVL186:
 2517              	.LFB153:
1868:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Prevent unused argument(s) compilation warning */
 2518              		.loc 1 1868 1 is_stmt 1 view -0
 2519              		.cfi_startproc
 2520              		@ args = 0, pretend = 0, frame = 0
 2521              		@ frame_needed = 0, uses_anonymous_args = 0
 2522              		@ link register save eliminated.
1870:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 2523              		.loc 1 1870 3 view .LVU733
1875:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 2524              		.loc 1 1875 1 is_stmt 0 view .LVU734
 2525 0000 7047     		bx	lr
 2526              		.cfi_endproc
 2527              	.LFE153:
 2529              		.section	.text.IRDA_DMATransmitHalfCplt,"ax",%progbits
 2530              		.align	1
 2531              		.syntax unified
 2532              		.thumb
 2533              		.thumb_func
 2534              		.fpu fpv4-sp-d16
 2536              	IRDA_DMATransmitHalfCplt:
 2537              	.LVL187:
 2538              	.LFB163:
2094:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   IRDA_HandleTypeDef *hirda = (IRDA_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 2539              		.loc 1 2094 1 is_stmt 1 view -0
 2540              		.cfi_startproc
ARM GAS  /tmp/ccwOIEYW.s 			page 103


 2541              		@ args = 0, pretend = 0, frame = 0
 2542              		@ frame_needed = 0, uses_anonymous_args = 0
2094:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   IRDA_HandleTypeDef *hirda = (IRDA_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 2543              		.loc 1 2094 1 is_stmt 0 view .LVU736
 2544 0000 08B5     		push	{r3, lr}
 2545              	.LCFI27:
 2546              		.cfi_def_cfa_offset 8
 2547              		.cfi_offset 3, -8
 2548              		.cfi_offset 14, -4
2095:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 2549              		.loc 1 2095 3 is_stmt 1 view .LVU737
 2550              	.LVL188:
2102:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #endif /* USE_HAL_IRDA_REGISTER_CALLBACK */
 2551              		.loc 1 2102 3 view .LVU738
 2552 0002 806B     		ldr	r0, [r0, #56]
 2553              	.LVL189:
2102:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #endif /* USE_HAL_IRDA_REGISTER_CALLBACK */
 2554              		.loc 1 2102 3 is_stmt 0 view .LVU739
 2555 0004 FFF7FEFF 		bl	HAL_IRDA_TxHalfCpltCallback
 2556              	.LVL190:
2104:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 2557              		.loc 1 2104 1 view .LVU740
 2558 0008 08BD     		pop	{r3, pc}
 2559              		.cfi_endproc
 2560              	.LFE163:
 2562              		.section	.text.HAL_IRDA_RxCpltCallback,"ax",%progbits
 2563              		.align	1
 2564              		.weak	HAL_IRDA_RxCpltCallback
 2565              		.syntax unified
 2566              		.thumb
 2567              		.thumb_func
 2568              		.fpu fpv4-sp-d16
 2570              	HAL_IRDA_RxCpltCallback:
 2571              	.LVL191:
 2572              	.LFB154:
1884:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Prevent unused argument(s) compilation warning */
 2573              		.loc 1 1884 1 is_stmt 1 view -0
 2574              		.cfi_startproc
 2575              		@ args = 0, pretend = 0, frame = 0
 2576              		@ frame_needed = 0, uses_anonymous_args = 0
 2577              		@ link register save eliminated.
1886:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 2578              		.loc 1 1886 3 view .LVU742
1891:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 2579              		.loc 1 1891 1 is_stmt 0 view .LVU743
 2580 0000 7047     		bx	lr
 2581              		.cfi_endproc
 2582              	.LFE154:
 2584              		.section	.text.IRDA_DMAReceiveCplt,"ax",%progbits
 2585              		.align	1
 2586              		.syntax unified
 2587              		.thumb
 2588              		.thumb_func
 2589              		.fpu fpv4-sp-d16
 2591              	IRDA_DMAReceiveCplt:
 2592              	.LVL192:
 2593              	.LFB164:
ARM GAS  /tmp/ccwOIEYW.s 			page 104


2113:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   IRDA_HandleTypeDef *hirda = (IRDA_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 2594              		.loc 1 2113 1 is_stmt 1 view -0
 2595              		.cfi_startproc
 2596              		@ args = 0, pretend = 0, frame = 0
 2597              		@ frame_needed = 0, uses_anonymous_args = 0
2113:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   IRDA_HandleTypeDef *hirda = (IRDA_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 2598              		.loc 1 2113 1 is_stmt 0 view .LVU745
 2599 0000 08B5     		push	{r3, lr}
 2600              	.LCFI28:
 2601              		.cfi_def_cfa_offset 8
 2602              		.cfi_offset 3, -8
 2603              		.cfi_offset 14, -4
 2604 0002 0346     		mov	r3, r0
2114:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 2605              		.loc 1 2114 3 is_stmt 1 view .LVU746
2114:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 2606              		.loc 1 2114 23 is_stmt 0 view .LVU747
 2607 0004 806B     		ldr	r0, [r0, #56]
 2608              	.LVL193:
2117:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 2609              		.loc 1 2117 3 is_stmt 1 view .LVU748
2117:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 2610              		.loc 1 2117 12 is_stmt 0 view .LVU749
 2611 0006 1B68     		ldr	r3, [r3]
 2612              	.LVL194:
2117:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 2613              		.loc 1 2117 22 view .LVU750
 2614 0008 1B68     		ldr	r3, [r3]
2117:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 2615              		.loc 1 2117 6 view .LVU751
 2616 000a 13F4807F 		tst	r3, #256
 2617 000e 13D1     		bne	.L159
2119:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 2618              		.loc 1 2119 5 is_stmt 1 view .LVU752
2119:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 2619              		.loc 1 2119 24 is_stmt 0 view .LVU753
 2620 0010 0023     		movs	r3, #0
 2621 0012 4385     		strh	r3, [r0, #42]	@ movhi
2122:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     CLEAR_BIT(hirda->Instance->CR3, USART_CR3_EIE);
 2622              		.loc 1 2122 5 is_stmt 1 view .LVU754
 2623 0014 0268     		ldr	r2, [r0]
 2624 0016 D368     		ldr	r3, [r2, #12]
 2625 0018 23F48073 		bic	r3, r3, #256
 2626 001c D360     		str	r3, [r2, #12]
2123:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 2627              		.loc 1 2123 5 view .LVU755
 2628 001e 0268     		ldr	r2, [r0]
 2629 0020 5369     		ldr	r3, [r2, #20]
 2630 0022 23F00103 		bic	r3, r3, #1
 2631 0026 5361     		str	r3, [r2, #20]
2127:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 2632              		.loc 1 2127 5 view .LVU756
 2633 0028 0268     		ldr	r2, [r0]
 2634 002a 5369     		ldr	r3, [r2, #20]
 2635 002c 23F04003 		bic	r3, r3, #64
 2636 0030 5361     		str	r3, [r2, #20]
2130:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
ARM GAS  /tmp/ccwOIEYW.s 			page 105


 2637              		.loc 1 2130 5 view .LVU757
2130:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
 2638              		.loc 1 2130 20 is_stmt 0 view .LVU758
 2639 0032 2023     		movs	r3, #32
 2640 0034 80F83630 		strb	r3, [r0, #54]
 2641              	.L159:
2138:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #endif /* USE_HAL_IRDA_REGISTER_CALLBACKS */
 2642              		.loc 1 2138 3 is_stmt 1 view .LVU759
 2643 0038 FFF7FEFF 		bl	HAL_IRDA_RxCpltCallback
 2644              	.LVL195:
2140:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 2645              		.loc 1 2140 1 is_stmt 0 view .LVU760
 2646 003c 08BD     		pop	{r3, pc}
 2647              		.cfi_endproc
 2648              	.LFE164:
 2650              		.section	.text.IRDA_Receive_IT,"ax",%progbits
 2651              		.align	1
 2652              		.syntax unified
 2653              		.thumb
 2654              		.thumb_func
 2655              		.fpu fpv4-sp-d16
 2657              	IRDA_Receive_IT:
 2658              	.LVL196:
 2659              	.LFB177:
2511:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   uint16_t *tmp;
 2660              		.loc 1 2511 1 is_stmt 1 view -0
 2661              		.cfi_startproc
 2662              		@ args = 0, pretend = 0, frame = 0
 2663              		@ frame_needed = 0, uses_anonymous_args = 0
2511:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   uint16_t *tmp;
 2664              		.loc 1 2511 1 is_stmt 0 view .LVU762
 2665 0000 08B5     		push	{r3, lr}
 2666              	.LCFI29:
 2667              		.cfi_def_cfa_offset 8
 2668              		.cfi_offset 3, -8
 2669              		.cfi_offset 14, -4
2512:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   uint16_t  uhdata;
 2670              		.loc 1 2512 3 is_stmt 1 view .LVU763
2513:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 2671              		.loc 1 2513 3 view .LVU764
2516:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 2672              		.loc 1 2516 3 view .LVU765
2516:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 2673              		.loc 1 2516 12 is_stmt 0 view .LVU766
 2674 0002 90F83630 		ldrb	r3, [r0, #54]	@ zero_extendqisi2
 2675 0006 DBB2     		uxtb	r3, r3
2516:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 2676              		.loc 1 2516 6 view .LVU767
 2677 0008 222B     		cmp	r3, #34
 2678 000a 41D1     		bne	.L167
2518:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     if (hirda->Init.WordLength == IRDA_WORDLENGTH_9B)
 2679              		.loc 1 2518 5 is_stmt 1 view .LVU768
2518:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     if (hirda->Init.WordLength == IRDA_WORDLENGTH_9B)
 2680              		.loc 1 2518 25 is_stmt 0 view .LVU769
 2681 000c 0368     		ldr	r3, [r0]
 2682 000e 5B68     		ldr	r3, [r3, #4]
2518:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     if (hirda->Init.WordLength == IRDA_WORDLENGTH_9B)
ARM GAS  /tmp/ccwOIEYW.s 			page 106


 2683              		.loc 1 2518 12 view .LVU770
 2684 0010 9AB2     		uxth	r2, r3
 2685              	.LVL197:
2519:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 2686              		.loc 1 2519 5 is_stmt 1 view .LVU771
2519:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 2687              		.loc 1 2519 20 is_stmt 0 view .LVU772
 2688 0012 8168     		ldr	r1, [r0, #8]
2519:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 2689              		.loc 1 2519 8 view .LVU773
 2690 0014 B1F5805F 		cmp	r1, #4096
 2691 0018 0DD0     		beq	.L170
2535:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       {
 2692              		.loc 1 2535 7 is_stmt 1 view .LVU774
2535:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       {
 2693              		.loc 1 2535 22 is_stmt 0 view .LVU775
 2694 001a C268     		ldr	r2, [r0, #12]
 2695              	.LVL198:
2535:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       {
 2696              		.loc 1 2535 10 view .LVU776
 2697 001c DAB9     		cbnz	r2, .L166
2537:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       }
 2698              		.loc 1 2537 9 is_stmt 1 view .LVU777
2537:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       }
 2699              		.loc 1 2537 15 is_stmt 0 view .LVU778
 2700 001e 426A     		ldr	r2, [r0, #36]
2537:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       }
 2701              		.loc 1 2537 27 view .LVU779
 2702 0020 511C     		adds	r1, r2, #1
 2703 0022 4162     		str	r1, [r0, #36]
2537:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       }
 2704              		.loc 1 2537 30 view .LVU780
 2705 0024 1370     		strb	r3, [r2]
 2706              	.LVL199:
 2707              	.L165:
2545:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 2708              		.loc 1 2545 5 is_stmt 1 view .LVU781
2545:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 2709              		.loc 1 2545 16 is_stmt 0 view .LVU782
 2710 0026 438D     		ldrh	r3, [r0, #42]
 2711 0028 9BB2     		uxth	r3, r3
2545:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 2712              		.loc 1 2545 9 view .LVU783
 2713 002a 013B     		subs	r3, r3, #1
 2714 002c 9BB2     		uxth	r3, r3
2545:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 2715              		.loc 1 2545 8 view .LVU784
 2716 002e 4385     		strh	r3, [r0, #42]	@ movhi
 2717 0030 C3B1     		cbz	r3, .L171
2569:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
 2718              		.loc 1 2569 12 view .LVU785
 2719 0032 0020     		movs	r0, #0
 2720              	.LVL200:
 2721              	.L162:
2575:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 2722              		.loc 1 2575 1 view .LVU786
 2723 0034 08BD     		pop	{r3, pc}
ARM GAS  /tmp/ccwOIEYW.s 			page 107


 2724              	.LVL201:
 2725              	.L170:
2521:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       if (hirda->Init.Parity == IRDA_PARITY_NONE)
 2726              		.loc 1 2521 7 is_stmt 1 view .LVU787
2521:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       if (hirda->Init.Parity == IRDA_PARITY_NONE)
 2727              		.loc 1 2521 11 is_stmt 0 view .LVU788
 2728 0036 416A     		ldr	r1, [r0, #36]
 2729              	.LVL202:
2522:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       {
 2730              		.loc 1 2522 7 is_stmt 1 view .LVU789
2522:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       {
 2731              		.loc 1 2522 22 is_stmt 0 view .LVU790
 2732 0038 C368     		ldr	r3, [r0, #12]
2522:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       {
 2733              		.loc 1 2522 10 view .LVU791
 2734 003a 33B9     		cbnz	r3, .L164
2524:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         hirda->pRxBuffPtr += 2U;
 2735              		.loc 1 2524 9 is_stmt 1 view .LVU792
2524:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         hirda->pRxBuffPtr += 2U;
 2736              		.loc 1 2524 16 is_stmt 0 view .LVU793
 2737 003c C2F30802 		ubfx	r2, r2, #0, #9
 2738              	.LVL203:
2524:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         hirda->pRxBuffPtr += 2U;
 2739              		.loc 1 2524 14 view .LVU794
 2740 0040 0A80     		strh	r2, [r1]	@ movhi
2525:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       }
 2741              		.loc 1 2525 9 is_stmt 1 view .LVU795
2525:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       }
 2742              		.loc 1 2525 27 is_stmt 0 view .LVU796
 2743 0042 436A     		ldr	r3, [r0, #36]
 2744 0044 0233     		adds	r3, r3, #2
 2745 0046 4362     		str	r3, [r0, #36]
 2746 0048 EDE7     		b	.L165
 2747              	.LVL204:
 2748              	.L164:
2529:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         hirda->pRxBuffPtr += 1U;
 2749              		.loc 1 2529 9 is_stmt 1 view .LVU797
2529:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         hirda->pRxBuffPtr += 1U;
 2750              		.loc 1 2529 16 is_stmt 0 view .LVU798
 2751 004a D2B2     		uxtb	r2, r2
 2752              	.LVL205:
2529:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         hirda->pRxBuffPtr += 1U;
 2753              		.loc 1 2529 14 view .LVU799
 2754 004c 0A80     		strh	r2, [r1]	@ movhi
2530:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       }
 2755              		.loc 1 2530 9 is_stmt 1 view .LVU800
2530:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       }
 2756              		.loc 1 2530 27 is_stmt 0 view .LVU801
 2757 004e 436A     		ldr	r3, [r0, #36]
 2758 0050 0133     		adds	r3, r3, #1
 2759 0052 4362     		str	r3, [r0, #36]
 2760 0054 E7E7     		b	.L165
 2761              	.LVL206:
 2762              	.L166:
2541:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       }
 2763              		.loc 1 2541 9 is_stmt 1 view .LVU802
2541:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       }
ARM GAS  /tmp/ccwOIEYW.s 			page 108


 2764              		.loc 1 2541 15 is_stmt 0 view .LVU803
 2765 0056 426A     		ldr	r2, [r0, #36]
2541:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       }
 2766              		.loc 1 2541 27 view .LVU804
 2767 0058 511C     		adds	r1, r2, #1
 2768 005a 4162     		str	r1, [r0, #36]
2541:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       }
 2769              		.loc 1 2541 32 view .LVU805
 2770 005c 03F07F03 		and	r3, r3, #127
 2771              	.LVL207:
2541:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       }
 2772              		.loc 1 2541 30 view .LVU806
 2773 0060 1370     		strb	r3, [r2]
 2774 0062 E0E7     		b	.L165
 2775              	.L171:
2548:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 2776              		.loc 1 2548 7 is_stmt 1 view .LVU807
 2777 0064 0268     		ldr	r2, [r0]
 2778 0066 D368     		ldr	r3, [r2, #12]
 2779 0068 23F02003 		bic	r3, r3, #32
 2780 006c D360     		str	r3, [r2, #12]
2551:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 2781              		.loc 1 2551 7 view .LVU808
 2782 006e 0268     		ldr	r2, [r0]
 2783 0070 D368     		ldr	r3, [r2, #12]
 2784 0072 23F48073 		bic	r3, r3, #256
 2785 0076 D360     		str	r3, [r2, #12]
2554:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 2786              		.loc 1 2554 7 view .LVU809
 2787 0078 0268     		ldr	r2, [r0]
 2788 007a 5369     		ldr	r3, [r2, #20]
 2789 007c 23F00103 		bic	r3, r3, #1
 2790 0080 5361     		str	r3, [r2, #20]
2557:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 2791              		.loc 1 2557 7 view .LVU810
2557:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 2792              		.loc 1 2557 22 is_stmt 0 view .LVU811
 2793 0082 2023     		movs	r3, #32
 2794 0084 80F83630 		strb	r3, [r0, #54]
2564:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #endif /* USE_HAL_IRDA_REGISTER_CALLBACKS */
 2795              		.loc 1 2564 7 is_stmt 1 view .LVU812
 2796 0088 FFF7FEFF 		bl	HAL_IRDA_RxCpltCallback
 2797              	.LVL208:
2567:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
 2798              		.loc 1 2567 7 view .LVU813
2567:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
 2799              		.loc 1 2567 14 is_stmt 0 view .LVU814
 2800 008c 0020     		movs	r0, #0
 2801 008e D1E7     		b	.L162
 2802              	.LVL209:
 2803              	.L167:
2573:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
 2804              		.loc 1 2573 12 view .LVU815
 2805 0090 0220     		movs	r0, #2
 2806              	.LVL210:
2573:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
 2807              		.loc 1 2573 12 view .LVU816
ARM GAS  /tmp/ccwOIEYW.s 			page 109


 2808 0092 CFE7     		b	.L162
 2809              		.cfi_endproc
 2810              	.LFE177:
 2812              		.section	.text.HAL_IRDA_RxHalfCpltCallback,"ax",%progbits
 2813              		.align	1
 2814              		.weak	HAL_IRDA_RxHalfCpltCallback
 2815              		.syntax unified
 2816              		.thumb
 2817              		.thumb_func
 2818              		.fpu fpv4-sp-d16
 2820              	HAL_IRDA_RxHalfCpltCallback:
 2821              	.LVL211:
 2822              	.LFB155:
1900:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Prevent unused argument(s) compilation warning */
 2823              		.loc 1 1900 1 is_stmt 1 view -0
 2824              		.cfi_startproc
 2825              		@ args = 0, pretend = 0, frame = 0
 2826              		@ frame_needed = 0, uses_anonymous_args = 0
 2827              		@ link register save eliminated.
1902:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 2828              		.loc 1 1902 3 view .LVU818
1907:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 2829              		.loc 1 1907 1 is_stmt 0 view .LVU819
 2830 0000 7047     		bx	lr
 2831              		.cfi_endproc
 2832              	.LFE155:
 2834              		.section	.text.IRDA_DMAReceiveHalfCplt,"ax",%progbits
 2835              		.align	1
 2836              		.syntax unified
 2837              		.thumb
 2838              		.thumb_func
 2839              		.fpu fpv4-sp-d16
 2841              	IRDA_DMAReceiveHalfCplt:
 2842              	.LVL212:
 2843              	.LFB165:
2149:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   IRDA_HandleTypeDef *hirda = (IRDA_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 2844              		.loc 1 2149 1 is_stmt 1 view -0
 2845              		.cfi_startproc
 2846              		@ args = 0, pretend = 0, frame = 0
 2847              		@ frame_needed = 0, uses_anonymous_args = 0
2149:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   IRDA_HandleTypeDef *hirda = (IRDA_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 2848              		.loc 1 2149 1 is_stmt 0 view .LVU821
 2849 0000 08B5     		push	{r3, lr}
 2850              	.LCFI30:
 2851              		.cfi_def_cfa_offset 8
 2852              		.cfi_offset 3, -8
 2853              		.cfi_offset 14, -4
2150:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 2854              		.loc 1 2150 3 is_stmt 1 view .LVU822
 2855              	.LVL213:
2157:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #endif /* USE_HAL_IRDA_REGISTER_CALLBACK */
 2856              		.loc 1 2157 3 view .LVU823
 2857 0002 806B     		ldr	r0, [r0, #56]
 2858              	.LVL214:
2157:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #endif /* USE_HAL_IRDA_REGISTER_CALLBACK */
 2859              		.loc 1 2157 3 is_stmt 0 view .LVU824
 2860 0004 FFF7FEFF 		bl	HAL_IRDA_RxHalfCpltCallback
ARM GAS  /tmp/ccwOIEYW.s 			page 110


 2861              	.LVL215:
2159:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 2862              		.loc 1 2159 1 view .LVU825
 2863 0008 08BD     		pop	{r3, pc}
 2864              		.cfi_endproc
 2865              	.LFE165:
 2867              		.section	.text.HAL_IRDA_ErrorCallback,"ax",%progbits
 2868              		.align	1
 2869              		.weak	HAL_IRDA_ErrorCallback
 2870              		.syntax unified
 2871              		.thumb
 2872              		.thumb_func
 2873              		.fpu fpv4-sp-d16
 2875              	HAL_IRDA_ErrorCallback:
 2876              	.LVL216:
 2877              	.LFB156:
1916:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Prevent unused argument(s) compilation warning */
 2878              		.loc 1 1916 1 is_stmt 1 view -0
 2879              		.cfi_startproc
 2880              		@ args = 0, pretend = 0, frame = 0
 2881              		@ frame_needed = 0, uses_anonymous_args = 0
 2882              		@ link register save eliminated.
1918:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 2883              		.loc 1 1918 3 view .LVU827
1923:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 2884              		.loc 1 1923 1 is_stmt 0 view .LVU828
 2885 0000 7047     		bx	lr
 2886              		.cfi_endproc
 2887              	.LFE156:
 2889              		.section	.text.IRDA_DMAError,"ax",%progbits
 2890              		.align	1
 2891              		.syntax unified
 2892              		.thumb
 2893              		.thumb_func
 2894              		.fpu fpv4-sp-d16
 2896              	IRDA_DMAError:
 2897              	.LVL217:
 2898              	.LFB166:
2168:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   uint32_t dmarequest = 0x00U;
 2899              		.loc 1 2168 1 is_stmt 1 view -0
 2900              		.cfi_startproc
 2901              		@ args = 0, pretend = 0, frame = 0
 2902              		@ frame_needed = 0, uses_anonymous_args = 0
2168:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   uint32_t dmarequest = 0x00U;
 2903              		.loc 1 2168 1 is_stmt 0 view .LVU830
 2904 0000 10B5     		push	{r4, lr}
 2905              	.LCFI31:
 2906              		.cfi_def_cfa_offset 8
 2907              		.cfi_offset 4, -8
 2908              		.cfi_offset 14, -4
2169:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   IRDA_HandleTypeDef *hirda = (IRDA_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 2909              		.loc 1 2169 3 is_stmt 1 view .LVU831
 2910              	.LVL218:
2170:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 2911              		.loc 1 2170 3 view .LVU832
2170:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 2912              		.loc 1 2170 23 is_stmt 0 view .LVU833
ARM GAS  /tmp/ccwOIEYW.s 			page 111


 2913 0002 846B     		ldr	r4, [r0, #56]
 2914              	.LVL219:
2173:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   if ((hirda->gState == HAL_IRDA_STATE_BUSY_TX) && dmarequest)
 2915              		.loc 1 2173 3 is_stmt 1 view .LVU834
2173:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   if ((hirda->gState == HAL_IRDA_STATE_BUSY_TX) && dmarequest)
 2916              		.loc 1 2173 16 is_stmt 0 view .LVU835
 2917 0004 2368     		ldr	r3, [r4]
 2918 0006 5A69     		ldr	r2, [r3, #20]
 2919              	.LVL220:
2174:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 2920              		.loc 1 2174 3 is_stmt 1 view .LVU836
2174:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 2921              		.loc 1 2174 13 is_stmt 0 view .LVU837
 2922 0008 94F83530 		ldrb	r3, [r4, #53]	@ zero_extendqisi2
 2923 000c DBB2     		uxtb	r3, r3
2174:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 2924              		.loc 1 2174 6 view .LVU838
 2925 000e 212B     		cmp	r3, #33
 2926 0010 10D0     		beq	.L180
 2927              	.LVL221:
 2928              	.L177:
2181:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   if ((hirda->RxState == HAL_IRDA_STATE_BUSY_RX) && dmarequest)
 2929              		.loc 1 2181 3 is_stmt 1 view .LVU839
2181:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   if ((hirda->RxState == HAL_IRDA_STATE_BUSY_RX) && dmarequest)
 2930              		.loc 1 2181 16 is_stmt 0 view .LVU840
 2931 0012 2368     		ldr	r3, [r4]
 2932 0014 5A69     		ldr	r2, [r3, #20]
 2933 0016 02F04002 		and	r2, r2, #64
 2934              	.LVL222:
2182:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 2935              		.loc 1 2182 3 is_stmt 1 view .LVU841
2182:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 2936              		.loc 1 2182 13 is_stmt 0 view .LVU842
 2937 001a 94F83630 		ldrb	r3, [r4, #54]	@ zero_extendqisi2
 2938 001e DBB2     		uxtb	r3, r3
2182:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 2939              		.loc 1 2182 6 view .LVU843
 2940 0020 222B     		cmp	r3, #34
 2941 0022 11D0     		beq	.L181
 2942              	.LVL223:
 2943              	.L178:
2188:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 2944              		.loc 1 2188 3 is_stmt 1 view .LVU844
2188:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 2945              		.loc 1 2188 20 is_stmt 0 view .LVU845
 2946 0024 A36B     		ldr	r3, [r4, #56]
 2947 0026 43F01003 		orr	r3, r3, #16
 2948 002a A363     		str	r3, [r4, #56]
2195:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #endif /* USE_HAL_IRDA_REGISTER_CALLBACK */
 2949              		.loc 1 2195 3 is_stmt 1 view .LVU846
 2950 002c 2046     		mov	r0, r4
 2951 002e FFF7FEFF 		bl	HAL_IRDA_ErrorCallback
 2952              	.LVL224:
2197:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 2953              		.loc 1 2197 1 is_stmt 0 view .LVU847
 2954 0032 10BD     		pop	{r4, pc}
 2955              	.LVL225:
ARM GAS  /tmp/ccwOIEYW.s 			page 112


 2956              	.L180:
2197:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 2957              		.loc 1 2197 1 view .LVU848
 2958 0034 02F08002 		and	r2, r2, #128
 2959              	.LVL226:
2174:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 2960              		.loc 1 2174 49 discriminator 1 view .LVU849
 2961 0038 002A     		cmp	r2, #0
 2962 003a EAD0     		beq	.L177
2176:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     IRDA_EndTxTransfer(hirda);
 2963              		.loc 1 2176 5 is_stmt 1 view .LVU850
2176:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     IRDA_EndTxTransfer(hirda);
 2964              		.loc 1 2176 24 is_stmt 0 view .LVU851
 2965 003c 0023     		movs	r3, #0
 2966 003e 6384     		strh	r3, [r4, #34]	@ movhi
2177:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
 2967              		.loc 1 2177 5 is_stmt 1 view .LVU852
 2968 0040 2046     		mov	r0, r4
 2969              	.LVL227:
2177:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
 2970              		.loc 1 2177 5 is_stmt 0 view .LVU853
 2971 0042 FFF7FEFF 		bl	IRDA_EndTxTransfer
 2972              	.LVL228:
 2973 0046 E4E7     		b	.L177
 2974              	.LVL229:
 2975              	.L181:
2182:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 2976              		.loc 1 2182 50 discriminator 1 view .LVU854
 2977 0048 002A     		cmp	r2, #0
 2978 004a EBD0     		beq	.L178
2184:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     IRDA_EndRxTransfer(hirda);
 2979              		.loc 1 2184 5 is_stmt 1 view .LVU855
2184:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     IRDA_EndRxTransfer(hirda);
 2980              		.loc 1 2184 24 is_stmt 0 view .LVU856
 2981 004c 0023     		movs	r3, #0
 2982 004e 6385     		strh	r3, [r4, #42]	@ movhi
2185:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
 2983              		.loc 1 2185 5 is_stmt 1 view .LVU857
 2984 0050 2046     		mov	r0, r4
 2985 0052 FFF7FEFF 		bl	IRDA_EndRxTransfer
 2986              	.LVL230:
2185:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
 2987              		.loc 1 2185 5 is_stmt 0 view .LVU858
 2988 0056 E5E7     		b	.L178
 2989              		.cfi_endproc
 2990              	.LFE166:
 2992              		.section	.text.HAL_IRDA_IRQHandler,"ax",%progbits
 2993              		.align	1
 2994              		.global	HAL_IRDA_IRQHandler
 2995              		.syntax unified
 2996              		.thumb
 2997              		.thumb_func
 2998              		.fpu fpv4-sp-d16
 3000              	HAL_IRDA_IRQHandler:
 3001              	.LVL231:
 3002              	.LFB151:
1707:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   uint32_t isrflags   = READ_REG(hirda->Instance->SR);
ARM GAS  /tmp/ccwOIEYW.s 			page 113


 3003              		.loc 1 1707 1 is_stmt 1 view -0
 3004              		.cfi_startproc
 3005              		@ args = 0, pretend = 0, frame = 0
 3006              		@ frame_needed = 0, uses_anonymous_args = 0
1707:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   uint32_t isrflags   = READ_REG(hirda->Instance->SR);
 3007              		.loc 1 1707 1 is_stmt 0 view .LVU860
 3008 0000 10B5     		push	{r4, lr}
 3009              	.LCFI32:
 3010              		.cfi_def_cfa_offset 8
 3011              		.cfi_offset 4, -8
 3012              		.cfi_offset 14, -4
 3013 0002 0446     		mov	r4, r0
1708:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   uint32_t cr1its     = READ_REG(hirda->Instance->CR1);
 3014              		.loc 1 1708 3 is_stmt 1 view .LVU861
1708:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   uint32_t cr1its     = READ_REG(hirda->Instance->CR1);
 3015              		.loc 1 1708 25 is_stmt 0 view .LVU862
 3016 0004 0268     		ldr	r2, [r0]
1708:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   uint32_t cr1its     = READ_REG(hirda->Instance->CR1);
 3017              		.loc 1 1708 12 view .LVU863
 3018 0006 1368     		ldr	r3, [r2]
 3019              	.LVL232:
1709:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   uint32_t cr3its     = READ_REG(hirda->Instance->CR3);
 3020              		.loc 1 1709 3 is_stmt 1 view .LVU864
1709:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   uint32_t cr3its     = READ_REG(hirda->Instance->CR3);
 3021              		.loc 1 1709 12 is_stmt 0 view .LVU865
 3022 0008 D168     		ldr	r1, [r2, #12]
 3023              	.LVL233:
1710:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   uint32_t errorflags = 0x00U;
 3024              		.loc 1 1710 3 is_stmt 1 view .LVU866
1710:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   uint32_t errorflags = 0x00U;
 3025              		.loc 1 1710 12 is_stmt 0 view .LVU867
 3026 000a 5269     		ldr	r2, [r2, #20]
 3027              	.LVL234:
1711:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   uint32_t dmarequest = 0x00U;
 3028              		.loc 1 1711 3 is_stmt 1 view .LVU868
1712:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3029              		.loc 1 1712 3 view .LVU869
1715:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   if (errorflags == RESET)
 3030              		.loc 1 1715 3 view .LVU870
1716:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 3031              		.loc 1 1716 3 view .LVU871
1716:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 3032              		.loc 1 1716 6 is_stmt 0 view .LVU872
 3033 000c 13F00F00 		ands	r0, r3, #15
 3034              	.LVL235:
1716:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 3035              		.loc 1 1716 6 view .LVU873
 3036 0010 05D1     		bne	.L183
1719:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 3037              		.loc 1 1719 5 is_stmt 1 view .LVU874
1719:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 3038              		.loc 1 1719 8 is_stmt 0 view .LVU875
 3039 0012 13F0200F 		tst	r3, #32
 3040 0016 02D0     		beq	.L183
1719:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 3041              		.loc 1 1719 47 discriminator 1 view .LVU876
 3042 0018 11F0200F 		tst	r1, #32
ARM GAS  /tmp/ccwOIEYW.s 			page 114


 3043 001c 13D1     		bne	.L199
 3044              	.L183:
1727:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 3045              		.loc 1 1727 3 is_stmt 1 view .LVU877
1727:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 3046              		.loc 1 1727 6 is_stmt 0 view .LVU878
 3047 001e 28B1     		cbz	r0, .L185
1727:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 3048              		.loc 1 1727 29 discriminator 1 view .LVU879
 3049 0020 12F00102 		ands	r2, r2, #1
 3050              	.LVL236:
1727:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 3051              		.loc 1 1727 29 discriminator 1 view .LVU880
 3052 0024 13D1     		bne	.L186
1727:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 3053              		.loc 1 1727 69 discriminator 2 view .LVU881
 3054 0026 11F4907F 		tst	r1, #288
 3055 002a 10D1     		bne	.L186
 3056              	.L185:
1831:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 3057              		.loc 1 1831 3 is_stmt 1 view .LVU882
1831:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 3058              		.loc 1 1831 6 is_stmt 0 view .LVU883
 3059 002c 13F0800F 		tst	r3, #128
 3060 0030 02D0     		beq	.L197
1831:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 3061              		.loc 1 1831 44 discriminator 1 view .LVU884
 3062 0032 11F0800F 		tst	r1, #128
 3063 0036 69D1     		bne	.L200
 3064              	.L197:
1838:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 3065              		.loc 1 1838 3 is_stmt 1 view .LVU885
1838:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 3066              		.loc 1 1838 6 is_stmt 0 view .LVU886
 3067 0038 13F0400F 		tst	r3, #64
 3068 003c 02D0     		beq	.L182
1838:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 3069              		.loc 1 1838 43 discriminator 1 view .LVU887
 3070 003e 11F0400F 		tst	r1, #64
 3071 0042 67D1     		bne	.L201
 3072              	.LVL237:
 3073              	.L182:
1843:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3074              		.loc 1 1843 1 view .LVU888
 3075 0044 10BD     		pop	{r4, pc}
 3076              	.LVL238:
 3077              	.L199:
1721:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       return;
 3078              		.loc 1 1721 7 is_stmt 1 view .LVU889
 3079 0046 2046     		mov	r0, r4
 3080              	.LVL239:
1721:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       return;
 3081              		.loc 1 1721 7 is_stmt 0 view .LVU890
 3082 0048 FFF7FEFF 		bl	IRDA_Receive_IT
 3083              	.LVL240:
1722:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
 3084              		.loc 1 1722 7 is_stmt 1 view .LVU891
ARM GAS  /tmp/ccwOIEYW.s 			page 115


 3085 004c FAE7     		b	.L182
 3086              	.LVL241:
 3087              	.L186:
1730:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 3088              		.loc 1 1730 5 view .LVU892
1730:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 3089              		.loc 1 1730 8 is_stmt 0 view .LVU893
 3090 004e 13F0010F 		tst	r3, #1
 3091 0052 06D0     		beq	.L187
1730:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 3092              		.loc 1 1730 45 discriminator 1 view .LVU894
 3093 0054 11F4807F 		tst	r1, #256
 3094 0058 03D0     		beq	.L187
1732:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
 3095              		.loc 1 1732 7 is_stmt 1 view .LVU895
1732:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
 3096              		.loc 1 1732 24 is_stmt 0 view .LVU896
 3097 005a A06B     		ldr	r0, [r4, #56]
 3098              	.LVL242:
1732:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
 3099              		.loc 1 1732 24 view .LVU897
 3100 005c 40F00100 		orr	r0, r0, #1
 3101 0060 A063     		str	r0, [r4, #56]
 3102              	.L187:
1736:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 3103              		.loc 1 1736 5 is_stmt 1 view .LVU898
1736:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 3104              		.loc 1 1736 8 is_stmt 0 view .LVU899
 3105 0062 13F0040F 		tst	r3, #4
 3106 0066 04D0     		beq	.L188
1736:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 3107              		.loc 1 1736 45 discriminator 1 view .LVU900
 3108 0068 1AB1     		cbz	r2, .L188
1738:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
 3109              		.loc 1 1738 7 is_stmt 1 view .LVU901
1738:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
 3110              		.loc 1 1738 24 is_stmt 0 view .LVU902
 3111 006a A06B     		ldr	r0, [r4, #56]
 3112 006c 40F00200 		orr	r0, r0, #2
 3113 0070 A063     		str	r0, [r4, #56]
 3114              	.L188:
1742:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 3115              		.loc 1 1742 5 is_stmt 1 view .LVU903
1742:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 3116              		.loc 1 1742 8 is_stmt 0 view .LVU904
 3117 0072 13F0020F 		tst	r3, #2
 3118 0076 04D0     		beq	.L189
1742:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 3119              		.loc 1 1742 45 discriminator 1 view .LVU905
 3120 0078 1AB1     		cbz	r2, .L189
1744:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
 3121              		.loc 1 1744 7 is_stmt 1 view .LVU906
1744:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
 3122              		.loc 1 1744 24 is_stmt 0 view .LVU907
 3123 007a A06B     		ldr	r0, [r4, #56]
 3124 007c 40F00400 		orr	r0, r0, #4
 3125 0080 A063     		str	r0, [r4, #56]
ARM GAS  /tmp/ccwOIEYW.s 			page 116


 3126              	.L189:
1748:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 3127              		.loc 1 1748 5 is_stmt 1 view .LVU908
1748:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 3128              		.loc 1 1748 8 is_stmt 0 view .LVU909
 3129 0082 13F0080F 		tst	r3, #8
 3130 0086 04D0     		beq	.L190
1748:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 3131              		.loc 1 1748 46 discriminator 1 view .LVU910
 3132 0088 1AB1     		cbz	r2, .L190
1750:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
 3133              		.loc 1 1750 7 is_stmt 1 view .LVU911
1750:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
 3134              		.loc 1 1750 24 is_stmt 0 view .LVU912
 3135 008a A26B     		ldr	r2, [r4, #56]
 3136 008c 42F00802 		orr	r2, r2, #8
 3137 0090 A263     		str	r2, [r4, #56]
 3138              	.L190:
1753:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 3139              		.loc 1 1753 5 is_stmt 1 view .LVU913
1753:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 3140              		.loc 1 1753 14 is_stmt 0 view .LVU914
 3141 0092 A26B     		ldr	r2, [r4, #56]
1753:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 3142              		.loc 1 1753 8 view .LVU915
 3143 0094 002A     		cmp	r2, #0
 3144 0096 D5D0     		beq	.L182
1756:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       {
 3145              		.loc 1 1756 7 is_stmt 1 view .LVU916
1756:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       {
 3146              		.loc 1 1756 10 is_stmt 0 view .LVU917
 3147 0098 13F0200F 		tst	r3, #32
 3148 009c 02D0     		beq	.L192
1756:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       {
 3149              		.loc 1 1756 49 discriminator 1 view .LVU918
 3150 009e 11F0200F 		tst	r1, #32
 3151 00a2 21D1     		bne	.L202
 3152              	.LVL243:
 3153              	.L192:
1763:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       if (((hirda->ErrorCode & HAL_IRDA_ERROR_ORE) != RESET) || dmarequest)
 3154              		.loc 1 1763 7 is_stmt 1 view .LVU919
1763:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       if (((hirda->ErrorCode & HAL_IRDA_ERROR_ORE) != RESET) || dmarequest)
 3155              		.loc 1 1763 20 is_stmt 0 view .LVU920
 3156 00a4 2368     		ldr	r3, [r4]
 3157 00a6 5B69     		ldr	r3, [r3, #20]
 3158 00a8 03F04003 		and	r3, r3, #64
 3159              	.LVL244:
1764:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       {
 3160              		.loc 1 1764 7 is_stmt 1 view .LVU921
1764:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       {
 3161              		.loc 1 1764 18 is_stmt 0 view .LVU922
 3162 00ac A26B     		ldr	r2, [r4, #56]
1764:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       {
 3163              		.loc 1 1764 10 view .LVU923
 3164 00ae 12F0080F 		tst	r2, #8
 3165 00b2 00D1     		bne	.L193
1764:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       {
ARM GAS  /tmp/ccwOIEYW.s 			page 117


 3166              		.loc 1 1764 62 discriminator 1 view .LVU924
 3167 00b4 23B3     		cbz	r3, .L194
 3168              	.L193:
1769:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3169              		.loc 1 1769 9 is_stmt 1 view .LVU925
 3170 00b6 2046     		mov	r0, r4
 3171 00b8 FFF7FEFF 		bl	IRDA_EndRxTransfer
 3172              	.LVL245:
1772:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         {
 3173              		.loc 1 1772 9 view .LVU926
1772:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         {
 3174              		.loc 1 1772 13 is_stmt 0 view .LVU927
 3175 00bc 2368     		ldr	r3, [r4]
 3176 00be 5A69     		ldr	r2, [r3, #20]
1772:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         {
 3177              		.loc 1 1772 12 view .LVU928
 3178 00c0 12F0400F 		tst	r2, #64
 3179 00c4 18D0     		beq	.L195
1774:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3180              		.loc 1 1774 11 is_stmt 1 view .LVU929
 3181 00c6 5A69     		ldr	r2, [r3, #20]
 3182 00c8 22F04002 		bic	r2, r2, #64
 3183 00cc 5A61     		str	r2, [r3, #20]
1777:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****           {
 3184              		.loc 1 1777 11 view .LVU930
1777:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****           {
 3185              		.loc 1 1777 20 is_stmt 0 view .LVU931
 3186 00ce 236B     		ldr	r3, [r4, #48]
1777:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****           {
 3187              		.loc 1 1777 14 view .LVU932
 3188 00d0 73B1     		cbz	r3, .L196
1781:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3189              		.loc 1 1781 13 is_stmt 1 view .LVU933
1781:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3190              		.loc 1 1781 46 is_stmt 0 view .LVU934
 3191 00d2 124A     		ldr	r2, .L203
 3192 00d4 1A65     		str	r2, [r3, #80]
1784:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****             {
 3193              		.loc 1 1784 13 is_stmt 1 view .LVU935
1784:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****             {
 3194              		.loc 1 1784 17 is_stmt 0 view .LVU936
 3195 00d6 206B     		ldr	r0, [r4, #48]
 3196 00d8 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3197              	.LVL246:
1784:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****             {
 3198              		.loc 1 1784 16 view .LVU937
 3199 00dc 0028     		cmp	r0, #0
 3200 00de B1D0     		beq	.L182
1787:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****             }
 3201              		.loc 1 1787 15 is_stmt 1 view .LVU938
1787:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****             }
 3202              		.loc 1 1787 20 is_stmt 0 view .LVU939
 3203 00e0 206B     		ldr	r0, [r4, #48]
1787:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****             }
 3204              		.loc 1 1787 28 view .LVU940
 3205 00e2 036D     		ldr	r3, [r0, #80]
1787:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****             }
ARM GAS  /tmp/ccwOIEYW.s 			page 118


 3206              		.loc 1 1787 15 view .LVU941
 3207 00e4 9847     		blx	r3
 3208              	.LVL247:
 3209 00e6 ADE7     		b	.L182
 3210              	.LVL248:
 3211              	.L202:
1758:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       }
 3212              		.loc 1 1758 9 is_stmt 1 view .LVU942
 3213 00e8 2046     		mov	r0, r4
 3214 00ea FFF7FEFF 		bl	IRDA_Receive_IT
 3215              	.LVL249:
1758:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       }
 3216              		.loc 1 1758 9 is_stmt 0 view .LVU943
 3217 00ee D9E7     		b	.L192
 3218              	.LVL250:
 3219              	.L196:
1797:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #endif /* USE_HAL_IRDA_REGISTER_CALLBACK */
 3220              		.loc 1 1797 13 is_stmt 1 view .LVU944
 3221 00f0 2046     		mov	r0, r4
 3222 00f2 FFF7FEFF 		bl	HAL_IRDA_ErrorCallback
 3223              	.LVL251:
 3224 00f6 A5E7     		b	.L182
 3225              	.L195:
1808:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #endif /* USE_HAL_IRDA_REGISTER_CALLBACK */
 3226              		.loc 1 1808 11 view .LVU945
 3227 00f8 2046     		mov	r0, r4
 3228 00fa FFF7FEFF 		bl	HAL_IRDA_ErrorCallback
 3229              	.LVL252:
 3230 00fe A1E7     		b	.L182
 3231              	.LVL253:
 3232              	.L194:
1821:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #endif /* USE_HAL_IRDA_REGISTER_CALLBACK */
 3233              		.loc 1 1821 9 view .LVU946
 3234 0100 2046     		mov	r0, r4
 3235 0102 FFF7FEFF 		bl	HAL_IRDA_ErrorCallback
 3236              	.LVL254:
1824:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       }
 3237              		.loc 1 1824 9 view .LVU947
1824:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       }
 3238              		.loc 1 1824 26 is_stmt 0 view .LVU948
 3239 0106 0023     		movs	r3, #0
 3240 0108 A363     		str	r3, [r4, #56]
1827:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   } /* End if some error occurs */
 3241              		.loc 1 1827 5 is_stmt 1 view .LVU949
 3242 010a 9BE7     		b	.L182
 3243              	.LVL255:
 3244              	.L200:
1833:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     return;
 3245              		.loc 1 1833 5 view .LVU950
 3246 010c 2046     		mov	r0, r4
 3247              	.LVL256:
1833:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     return;
 3248              		.loc 1 1833 5 is_stmt 0 view .LVU951
 3249 010e FFF7FEFF 		bl	IRDA_Transmit_IT
 3250              	.LVL257:
1834:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
 3251              		.loc 1 1834 5 is_stmt 1 view .LVU952
ARM GAS  /tmp/ccwOIEYW.s 			page 119


 3252 0112 97E7     		b	.L182
 3253              	.LVL258:
 3254              	.L201:
1840:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     return;
 3255              		.loc 1 1840 5 view .LVU953
 3256 0114 2046     		mov	r0, r4
 3257              	.LVL259:
1840:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     return;
 3258              		.loc 1 1840 5 is_stmt 0 view .LVU954
 3259 0116 FFF7FEFF 		bl	IRDA_EndTransmit_IT
 3260              	.LVL260:
1841:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   }
 3261              		.loc 1 1841 5 is_stmt 1 view .LVU955
 3262 011a 93E7     		b	.L182
 3263              	.L204:
 3264              		.align	2
 3265              	.L203:
 3266 011c 00000000 		.word	IRDA_DMAAbortOnError
 3267              		.cfi_endproc
 3268              	.LFE151:
 3270              		.section	.text.IRDA_DMAAbortOnError,"ax",%progbits
 3271              		.align	1
 3272              		.syntax unified
 3273              		.thumb
 3274              		.thumb_func
 3275              		.fpu fpv4-sp-d16
 3277              	IRDA_DMAAbortOnError:
 3278              	.LVL261:
 3279              	.LFB170:
2272:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   IRDA_HandleTypeDef *hirda = (IRDA_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 3280              		.loc 1 2272 1 view -0
 3281              		.cfi_startproc
 3282              		@ args = 0, pretend = 0, frame = 0
 3283              		@ frame_needed = 0, uses_anonymous_args = 0
2272:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   IRDA_HandleTypeDef *hirda = (IRDA_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 3284              		.loc 1 2272 1 is_stmt 0 view .LVU957
 3285 0000 08B5     		push	{r3, lr}
 3286              	.LCFI33:
 3287              		.cfi_def_cfa_offset 8
 3288              		.cfi_offset 3, -8
 3289              		.cfi_offset 14, -4
2273:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   hirda->RxXferCount = 0x00U;
 3290              		.loc 1 2273 3 is_stmt 1 view .LVU958
2273:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   hirda->RxXferCount = 0x00U;
 3291              		.loc 1 2273 23 is_stmt 0 view .LVU959
 3292 0002 806B     		ldr	r0, [r0, #56]
 3293              	.LVL262:
2274:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   hirda->TxXferCount = 0x00U;
 3294              		.loc 1 2274 3 is_stmt 1 view .LVU960
2274:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   hirda->TxXferCount = 0x00U;
 3295              		.loc 1 2274 22 is_stmt 0 view .LVU961
 3296 0004 0023     		movs	r3, #0
 3297 0006 4385     		strh	r3, [r0, #42]	@ movhi
2275:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3298              		.loc 1 2275 3 is_stmt 1 view .LVU962
2275:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3299              		.loc 1 2275 22 is_stmt 0 view .LVU963
ARM GAS  /tmp/ccwOIEYW.s 			page 120


 3300 0008 4384     		strh	r3, [r0, #34]	@ movhi
2282:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #endif /* USE_HAL_IRDA_REGISTER_CALLBACK */
 3301              		.loc 1 2282 3 is_stmt 1 view .LVU964
 3302 000a FFF7FEFF 		bl	HAL_IRDA_ErrorCallback
 3303              	.LVL263:
2284:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3304              		.loc 1 2284 1 is_stmt 0 view .LVU965
 3305 000e 08BD     		pop	{r3, pc}
 3306              		.cfi_endproc
 3307              	.LFE170:
 3309              		.section	.text.HAL_IRDA_AbortCpltCallback,"ax",%progbits
 3310              		.align	1
 3311              		.weak	HAL_IRDA_AbortCpltCallback
 3312              		.syntax unified
 3313              		.thumb
 3314              		.thumb_func
 3315              		.fpu fpv4-sp-d16
 3317              	HAL_IRDA_AbortCpltCallback:
 3318              	.LVL264:
 3319              	.LFB157:
1932:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Prevent unused argument(s) compilation warning */
 3320              		.loc 1 1932 1 is_stmt 1 view -0
 3321              		.cfi_startproc
 3322              		@ args = 0, pretend = 0, frame = 0
 3323              		@ frame_needed = 0, uses_anonymous_args = 0
 3324              		@ link register save eliminated.
1934:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3325              		.loc 1 1934 3 view .LVU967
1939:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3326              		.loc 1 1939 1 is_stmt 0 view .LVU968
 3327 0000 7047     		bx	lr
 3328              		.cfi_endproc
 3329              	.LFE157:
 3331              		.section	.text.HAL_IRDA_Abort_IT,"ax",%progbits
 3332              		.align	1
 3333              		.global	HAL_IRDA_Abort_IT
 3334              		.syntax unified
 3335              		.thumb
 3336              		.thumb_func
 3337              		.fpu fpv4-sp-d16
 3339              	HAL_IRDA_Abort_IT:
 3340              	.LVL265:
 3341              	.LFB148:
1432:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   uint32_t AbortCplt = 0x01U;
 3342              		.loc 1 1432 1 is_stmt 1 view -0
 3343              		.cfi_startproc
 3344              		@ args = 0, pretend = 0, frame = 0
 3345              		@ frame_needed = 0, uses_anonymous_args = 0
1432:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   uint32_t AbortCplt = 0x01U;
 3346              		.loc 1 1432 1 is_stmt 0 view .LVU970
 3347 0000 10B5     		push	{r4, lr}
 3348              	.LCFI34:
 3349              		.cfi_def_cfa_offset 8
 3350              		.cfi_offset 4, -8
 3351              		.cfi_offset 14, -4
 3352 0002 0446     		mov	r4, r0
1433:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
ARM GAS  /tmp/ccwOIEYW.s 			page 121


 3353              		.loc 1 1433 3 is_stmt 1 view .LVU971
 3354              	.LVL266:
1436:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   CLEAR_BIT(hirda->Instance->CR3, USART_CR3_EIE);
 3355              		.loc 1 1436 3 view .LVU972
 3356 0004 0268     		ldr	r2, [r0]
 3357 0006 D368     		ldr	r3, [r2, #12]
 3358 0008 23F4F073 		bic	r3, r3, #480
 3359 000c D360     		str	r3, [r2, #12]
1437:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3360              		.loc 1 1437 3 view .LVU973
 3361 000e 0268     		ldr	r2, [r0]
 3362 0010 5369     		ldr	r3, [r2, #20]
 3363 0012 23F00103 		bic	r3, r3, #1
 3364 0016 5361     		str	r3, [r2, #20]
1442:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 3365              		.loc 1 1442 3 view .LVU974
1442:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 3366              		.loc 1 1442 12 is_stmt 0 view .LVU975
 3367 0018 C36A     		ldr	r3, [r0, #44]
1442:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 3368              		.loc 1 1442 6 view .LVU976
 3369 001a 33B1     		cbz	r3, .L209
1446:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 3370              		.loc 1 1446 5 is_stmt 1 view .LVU977
1446:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 3371              		.loc 1 1446 9 is_stmt 0 view .LVU978
 3372 001c 0268     		ldr	r2, [r0]
 3373 001e 5269     		ldr	r2, [r2, #20]
1446:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 3374              		.loc 1 1446 8 view .LVU979
 3375 0020 12F0800F 		tst	r2, #128
 3376 0024 1DD0     		beq	.L210
1448:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
 3377              		.loc 1 1448 7 is_stmt 1 view .LVU980
1448:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
 3378              		.loc 1 1448 40 is_stmt 0 view .LVU981
 3379 0026 254A     		ldr	r2, .L221
 3380 0028 1A65     		str	r2, [r3, #80]
 3381              	.L209:
1456:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 3382              		.loc 1 1456 3 is_stmt 1 view .LVU982
1456:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 3383              		.loc 1 1456 12 is_stmt 0 view .LVU983
 3384 002a 236B     		ldr	r3, [r4, #48]
1456:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 3385              		.loc 1 1456 6 view .LVU984
 3386 002c 33B1     		cbz	r3, .L211
1460:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 3387              		.loc 1 1460 5 is_stmt 1 view .LVU985
1460:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 3388              		.loc 1 1460 9 is_stmt 0 view .LVU986
 3389 002e 2268     		ldr	r2, [r4]
 3390 0030 5269     		ldr	r2, [r2, #20]
1460:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 3391              		.loc 1 1460 8 view .LVU987
 3392 0032 12F0400F 		tst	r2, #64
 3393 0036 17D0     		beq	.L212
ARM GAS  /tmp/ccwOIEYW.s 			page 122


1462:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
 3394              		.loc 1 1462 7 is_stmt 1 view .LVU988
1462:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
 3395              		.loc 1 1462 40 is_stmt 0 view .LVU989
 3396 0038 214A     		ldr	r2, .L221+4
 3397 003a 1A65     		str	r2, [r3, #80]
 3398              	.L211:
1471:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 3399              		.loc 1 1471 3 is_stmt 1 view .LVU990
1471:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 3400              		.loc 1 1471 7 is_stmt 0 view .LVU991
 3401 003c 2368     		ldr	r3, [r4]
 3402 003e 5A69     		ldr	r2, [r3, #20]
1471:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 3403              		.loc 1 1471 6 view .LVU992
 3404 0040 12F0800F 		tst	r2, #128
 3405 0044 13D0     		beq	.L217
1474:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3406              		.loc 1 1474 5 is_stmt 1 view .LVU993
 3407 0046 5A69     		ldr	r2, [r3, #20]
 3408 0048 22F08002 		bic	r2, r2, #128
 3409 004c 5A61     		str	r2, [r3, #20]
1477:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 3410              		.loc 1 1477 5 view .LVU994
1477:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 3411              		.loc 1 1477 14 is_stmt 0 view .LVU995
 3412 004e E06A     		ldr	r0, [r4, #44]
 3413              	.LVL267:
1477:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 3414              		.loc 1 1477 8 view .LVU996
 3415 0050 60B3     		cbz	r0, .L218
1483:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       {
 3416              		.loc 1 1483 7 is_stmt 1 view .LVU997
1483:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       {
 3417              		.loc 1 1483 11 is_stmt 0 view .LVU998
 3418 0052 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3419              	.LVL268:
1483:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       {
 3420              		.loc 1 1483 10 view .LVU999
 3421 0056 58B3     		cbz	r0, .L219
1485:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       }
 3422              		.loc 1 1485 9 is_stmt 1 view .LVU1000
1485:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       }
 3423              		.loc 1 1485 14 is_stmt 0 view .LVU1001
 3424 0058 E36A     		ldr	r3, [r4, #44]
1485:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       }
 3425              		.loc 1 1485 42 view .LVU1002
 3426 005a 0022     		movs	r2, #0
 3427 005c 1A65     		str	r2, [r3, #80]
1433:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3428              		.loc 1 1433 12 view .LVU1003
 3429 005e 0121     		movs	r1, #1
 3430 0060 06E0     		b	.L213
 3431              	.LVL269:
 3432              	.L210:
1452:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
 3433              		.loc 1 1452 7 is_stmt 1 view .LVU1004
ARM GAS  /tmp/ccwOIEYW.s 			page 123


1452:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
 3434              		.loc 1 1452 40 is_stmt 0 view .LVU1005
 3435 0062 0022     		movs	r2, #0
 3436 0064 1A65     		str	r2, [r3, #80]
 3437 0066 E0E7     		b	.L209
 3438              	.L212:
1466:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
 3439              		.loc 1 1466 7 is_stmt 1 view .LVU1006
1466:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     }
 3440              		.loc 1 1466 40 is_stmt 0 view .LVU1007
 3441 0068 0022     		movs	r2, #0
 3442 006a 1A65     		str	r2, [r3, #80]
 3443 006c E6E7     		b	.L211
 3444              	.L217:
1433:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3445              		.loc 1 1433 12 view .LVU1008
 3446 006e 0121     		movs	r1, #1
 3447              	.LVL270:
 3448              	.L213:
1495:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 3449              		.loc 1 1495 3 is_stmt 1 view .LVU1009
1495:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 3450              		.loc 1 1495 7 is_stmt 0 view .LVU1010
 3451 0070 2368     		ldr	r3, [r4]
 3452 0072 5A69     		ldr	r2, [r3, #20]
1495:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 3453              		.loc 1 1495 6 view .LVU1011
 3454 0074 12F0400F 		tst	r2, #64
 3455 0078 1CD0     		beq	.L214
1497:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3456              		.loc 1 1497 5 is_stmt 1 view .LVU1012
 3457 007a 5A69     		ldr	r2, [r3, #20]
 3458 007c 22F04002 		bic	r2, r2, #64
 3459 0080 5A61     		str	r2, [r3, #20]
1500:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 3460              		.loc 1 1500 5 view .LVU1013
1500:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 3461              		.loc 1 1500 14 is_stmt 0 view .LVU1014
 3462 0082 206B     		ldr	r0, [r4, #48]
1500:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 3463              		.loc 1 1500 8 view .LVU1015
 3464 0084 B0B1     		cbz	r0, .L214
1506:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       {
 3465              		.loc 1 1506 7 is_stmt 1 view .LVU1016
1506:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       {
 3466              		.loc 1 1506 11 is_stmt 0 view .LVU1017
 3467 0086 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3468              	.LVL271:
1506:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       {
 3469              		.loc 1 1506 10 view .LVU1018
 3470 008a A8B1     		cbz	r0, .L215
1508:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         AbortCplt = 0x01U;
 3471              		.loc 1 1508 9 is_stmt 1 view .LVU1019
1508:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         AbortCplt = 0x01U;
 3472              		.loc 1 1508 14 is_stmt 0 view .LVU1020
 3473 008c 236B     		ldr	r3, [r4, #48]
1508:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****         AbortCplt = 0x01U;
ARM GAS  /tmp/ccwOIEYW.s 			page 124


 3474              		.loc 1 1508 42 view .LVU1021
 3475 008e 0022     		movs	r2, #0
 3476 0090 1A65     		str	r2, [r3, #80]
1509:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       }
 3477              		.loc 1 1509 9 is_stmt 1 view .LVU1022
 3478              	.LVL272:
1519:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 3479              		.loc 1 1519 3 view .LVU1023
 3480              	.L216:
1522:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->RxXferCount = 0x00U;
 3481              		.loc 1 1522 5 view .LVU1024
1522:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->RxXferCount = 0x00U;
 3482              		.loc 1 1522 24 is_stmt 0 view .LVU1025
 3483 0092 0023     		movs	r3, #0
 3484 0094 6384     		strh	r3, [r4, #34]	@ movhi
1523:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3485              		.loc 1 1523 5 is_stmt 1 view .LVU1026
1523:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3486              		.loc 1 1523 24 is_stmt 0 view .LVU1027
 3487 0096 6385     		strh	r3, [r4, #42]	@ movhi
1526:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3488              		.loc 1 1526 5 is_stmt 1 view .LVU1028
1526:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3489              		.loc 1 1526 22 is_stmt 0 view .LVU1029
 3490 0098 A363     		str	r3, [r4, #56]
1529:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->RxState = HAL_IRDA_STATE_READY;
 3491              		.loc 1 1529 5 is_stmt 1 view .LVU1030
1529:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     hirda->RxState = HAL_IRDA_STATE_READY;
 3492              		.loc 1 1529 20 is_stmt 0 view .LVU1031
 3493 009a 2023     		movs	r3, #32
 3494 009c 84F83530 		strb	r3, [r4, #53]
1530:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3495              		.loc 1 1530 5 is_stmt 1 view .LVU1032
1530:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3496              		.loc 1 1530 20 is_stmt 0 view .LVU1033
 3497 00a0 84F83630 		strb	r3, [r4, #54]
1538:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #endif /* USE_HAL_IRDA_REGISTER_CALLBACK */
 3498              		.loc 1 1538 5 is_stmt 1 view .LVU1034
 3499 00a4 2046     		mov	r0, r4
 3500 00a6 FFF7FEFF 		bl	HAL_IRDA_AbortCpltCallback
 3501              	.LVL273:
 3502 00aa 05E0     		b	.L215
 3503              	.LVL274:
 3504              	.L218:
1433:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3505              		.loc 1 1433 12 is_stmt 0 view .LVU1035
 3506 00ac 0121     		movs	r1, #1
 3507 00ae DFE7     		b	.L213
 3508              	.L219:
1489:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       }
 3509              		.loc 1 1489 19 view .LVU1036
 3510 00b0 0021     		movs	r1, #0
 3511 00b2 DDE7     		b	.L213
 3512              	.LVL275:
 3513              	.L214:
1519:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 3514              		.loc 1 1519 3 is_stmt 1 view .LVU1037
ARM GAS  /tmp/ccwOIEYW.s 			page 125


1519:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 3515              		.loc 1 1519 6 is_stmt 0 view .LVU1038
 3516 00b4 0029     		cmp	r1, #0
 3517 00b6 ECD1     		bne	.L216
 3518              	.LVL276:
 3519              	.L215:
1542:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** }
 3520              		.loc 1 1542 3 is_stmt 1 view .LVU1039
1543:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3521              		.loc 1 1543 1 is_stmt 0 view .LVU1040
 3522 00b8 0020     		movs	r0, #0
 3523 00ba 10BD     		pop	{r4, pc}
 3524              	.LVL277:
 3525              	.L222:
1543:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3526              		.loc 1 1543 1 view .LVU1041
 3527              		.align	2
 3528              	.L221:
 3529 00bc 00000000 		.word	IRDA_DMATxAbortCallback
 3530 00c0 00000000 		.word	IRDA_DMARxAbortCallback
 3531              		.cfi_endproc
 3532              	.LFE148:
 3534              		.section	.text.IRDA_DMARxAbortCallback,"ax",%progbits
 3535              		.align	1
 3536              		.syntax unified
 3537              		.thumb
 3538              		.thumb_func
 3539              		.fpu fpv4-sp-d16
 3541              	IRDA_DMARxAbortCallback:
 3542              	.LVL278:
 3543              	.LFB172:
2339:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   IRDA_HandleTypeDef *hirda = (IRDA_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 3544              		.loc 1 2339 1 is_stmt 1 view -0
 3545              		.cfi_startproc
 3546              		@ args = 0, pretend = 0, frame = 0
 3547              		@ frame_needed = 0, uses_anonymous_args = 0
2339:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   IRDA_HandleTypeDef *hirda = (IRDA_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 3548              		.loc 1 2339 1 is_stmt 0 view .LVU1043
 3549 0000 08B5     		push	{r3, lr}
 3550              	.LCFI35:
 3551              		.cfi_def_cfa_offset 8
 3552              		.cfi_offset 3, -8
 3553              		.cfi_offset 14, -4
2340:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3554              		.loc 1 2340 3 is_stmt 1 view .LVU1044
2340:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3555              		.loc 1 2340 23 is_stmt 0 view .LVU1045
 3556 0002 806B     		ldr	r0, [r0, #56]
 3557              	.LVL279:
2342:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3558              		.loc 1 2342 3 is_stmt 1 view .LVU1046
2342:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3559              		.loc 1 2342 8 is_stmt 0 view .LVU1047
 3560 0004 036B     		ldr	r3, [r0, #48]
2342:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3561              		.loc 1 2342 36 view .LVU1048
 3562 0006 0022     		movs	r2, #0
ARM GAS  /tmp/ccwOIEYW.s 			page 126


 3563 0008 1A65     		str	r2, [r3, #80]
2345:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 3564              		.loc 1 2345 3 is_stmt 1 view .LVU1049
2345:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 3565              		.loc 1 2345 12 is_stmt 0 view .LVU1050
 3566 000a C36A     		ldr	r3, [r0, #44]
2345:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 3567              		.loc 1 2345 6 view .LVU1051
 3568 000c 0BB1     		cbz	r3, .L224
2347:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 3569              		.loc 1 2347 5 is_stmt 1 view .LVU1052
2347:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 3570              		.loc 1 2347 22 is_stmt 0 view .LVU1053
 3571 000e 1B6D     		ldr	r3, [r3, #80]
2347:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 3572              		.loc 1 2347 8 view .LVU1054
 3573 0010 53B9     		cbnz	r3, .L223
 3574              	.L224:
2354:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   hirda->RxXferCount = 0x00U;
 3575              		.loc 1 2354 3 is_stmt 1 view .LVU1055
2354:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   hirda->RxXferCount = 0x00U;
 3576              		.loc 1 2354 22 is_stmt 0 view .LVU1056
 3577 0012 0023     		movs	r3, #0
 3578 0014 4384     		strh	r3, [r0, #34]	@ movhi
2355:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3579              		.loc 1 2355 3 is_stmt 1 view .LVU1057
2355:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3580              		.loc 1 2355 22 is_stmt 0 view .LVU1058
 3581 0016 4385     		strh	r3, [r0, #42]	@ movhi
2358:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3582              		.loc 1 2358 3 is_stmt 1 view .LVU1059
2358:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3583              		.loc 1 2358 20 is_stmt 0 view .LVU1060
 3584 0018 8363     		str	r3, [r0, #56]
2361:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   hirda->RxState = HAL_IRDA_STATE_READY;
 3585              		.loc 1 2361 3 is_stmt 1 view .LVU1061
2361:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   hirda->RxState = HAL_IRDA_STATE_READY;
 3586              		.loc 1 2361 18 is_stmt 0 view .LVU1062
 3587 001a 2023     		movs	r3, #32
 3588 001c 80F83530 		strb	r3, [r0, #53]
2362:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3589              		.loc 1 2362 3 is_stmt 1 view .LVU1063
2362:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3590              		.loc 1 2362 18 is_stmt 0 view .LVU1064
 3591 0020 80F83630 		strb	r3, [r0, #54]
2370:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #endif /* USE_HAL_IRDA_REGISTER_CALLBACK */
 3592              		.loc 1 2370 3 is_stmt 1 view .LVU1065
 3593 0024 FFF7FEFF 		bl	HAL_IRDA_AbortCpltCallback
 3594              	.LVL280:
 3595              	.L223:
2372:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3596              		.loc 1 2372 1 is_stmt 0 view .LVU1066
 3597 0028 08BD     		pop	{r3, pc}
 3598              		.cfi_endproc
 3599              	.LFE172:
 3601              		.section	.text.IRDA_DMATxAbortCallback,"ax",%progbits
 3602              		.align	1
ARM GAS  /tmp/ccwOIEYW.s 			page 127


 3603              		.syntax unified
 3604              		.thumb
 3605              		.thumb_func
 3606              		.fpu fpv4-sp-d16
 3608              	IRDA_DMATxAbortCallback:
 3609              	.LVL281:
 3610              	.LFB171:
2295:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   IRDA_HandleTypeDef *hirda = (IRDA_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 3611              		.loc 1 2295 1 is_stmt 1 view -0
 3612              		.cfi_startproc
 3613              		@ args = 0, pretend = 0, frame = 0
 3614              		@ frame_needed = 0, uses_anonymous_args = 0
2295:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   IRDA_HandleTypeDef *hirda = (IRDA_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 3615              		.loc 1 2295 1 is_stmt 0 view .LVU1068
 3616 0000 08B5     		push	{r3, lr}
 3617              	.LCFI36:
 3618              		.cfi_def_cfa_offset 8
 3619              		.cfi_offset 3, -8
 3620              		.cfi_offset 14, -4
2296:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3621              		.loc 1 2296 3 is_stmt 1 view .LVU1069
2296:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3622              		.loc 1 2296 23 is_stmt 0 view .LVU1070
 3623 0002 806B     		ldr	r0, [r0, #56]
 3624              	.LVL282:
2298:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3625              		.loc 1 2298 3 is_stmt 1 view .LVU1071
2298:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3626              		.loc 1 2298 8 is_stmt 0 view .LVU1072
 3627 0004 C36A     		ldr	r3, [r0, #44]
2298:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3628              		.loc 1 2298 36 view .LVU1073
 3629 0006 0022     		movs	r2, #0
 3630 0008 1A65     		str	r2, [r3, #80]
2301:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 3631              		.loc 1 2301 3 is_stmt 1 view .LVU1074
2301:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 3632              		.loc 1 2301 12 is_stmt 0 view .LVU1075
 3633 000a 036B     		ldr	r3, [r0, #48]
2301:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 3634              		.loc 1 2301 6 view .LVU1076
 3635 000c 0BB1     		cbz	r3, .L228
2303:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 3636              		.loc 1 2303 5 is_stmt 1 view .LVU1077
2303:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 3637              		.loc 1 2303 22 is_stmt 0 view .LVU1078
 3638 000e 1B6D     		ldr	r3, [r3, #80]
2303:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 3639              		.loc 1 2303 8 view .LVU1079
 3640 0010 53B9     		cbnz	r3, .L227
 3641              	.L228:
2310:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   hirda->RxXferCount = 0x00U;
 3642              		.loc 1 2310 3 is_stmt 1 view .LVU1080
2310:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   hirda->RxXferCount = 0x00U;
 3643              		.loc 1 2310 22 is_stmt 0 view .LVU1081
 3644 0012 0023     		movs	r3, #0
 3645 0014 4384     		strh	r3, [r0, #34]	@ movhi
ARM GAS  /tmp/ccwOIEYW.s 			page 128


2311:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3646              		.loc 1 2311 3 is_stmt 1 view .LVU1082
2311:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3647              		.loc 1 2311 22 is_stmt 0 view .LVU1083
 3648 0016 4385     		strh	r3, [r0, #42]	@ movhi
2314:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3649              		.loc 1 2314 3 is_stmt 1 view .LVU1084
2314:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3650              		.loc 1 2314 20 is_stmt 0 view .LVU1085
 3651 0018 8363     		str	r3, [r0, #56]
2317:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   hirda->RxState = HAL_IRDA_STATE_READY;
 3652              		.loc 1 2317 3 is_stmt 1 view .LVU1086
2317:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   hirda->RxState = HAL_IRDA_STATE_READY;
 3653              		.loc 1 2317 18 is_stmt 0 view .LVU1087
 3654 001a 2023     		movs	r3, #32
 3655 001c 80F83530 		strb	r3, [r0, #53]
2318:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3656              		.loc 1 2318 3 is_stmt 1 view .LVU1088
2318:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3657              		.loc 1 2318 18 is_stmt 0 view .LVU1089
 3658 0020 80F83630 		strb	r3, [r0, #54]
2326:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #endif /* USE_HAL_IRDA_REGISTER_CALLBACK */
 3659              		.loc 1 2326 3 is_stmt 1 view .LVU1090
 3660 0024 FFF7FEFF 		bl	HAL_IRDA_AbortCpltCallback
 3661              	.LVL283:
 3662              	.L227:
2328:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3663              		.loc 1 2328 1 is_stmt 0 view .LVU1091
 3664 0028 08BD     		pop	{r3, pc}
 3665              		.cfi_endproc
 3666              	.LFE171:
 3668              		.section	.text.HAL_IRDA_AbortTransmitCpltCallback,"ax",%progbits
 3669              		.align	1
 3670              		.weak	HAL_IRDA_AbortTransmitCpltCallback
 3671              		.syntax unified
 3672              		.thumb
 3673              		.thumb_func
 3674              		.fpu fpv4-sp-d16
 3676              	HAL_IRDA_AbortTransmitCpltCallback:
 3677              	.LVL284:
 3678              	.LFB158:
1948:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Prevent unused argument(s) compilation warning */
 3679              		.loc 1 1948 1 is_stmt 1 view -0
 3680              		.cfi_startproc
 3681              		@ args = 0, pretend = 0, frame = 0
 3682              		@ frame_needed = 0, uses_anonymous_args = 0
 3683              		@ link register save eliminated.
1950:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3684              		.loc 1 1950 3 view .LVU1093
1955:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3685              		.loc 1 1955 1 is_stmt 0 view .LVU1094
 3686 0000 7047     		bx	lr
 3687              		.cfi_endproc
 3688              	.LFE158:
 3690              		.section	.text.HAL_IRDA_AbortTransmit_IT,"ax",%progbits
 3691              		.align	1
 3692              		.global	HAL_IRDA_AbortTransmit_IT
ARM GAS  /tmp/ccwOIEYW.s 			page 129


 3693              		.syntax unified
 3694              		.thumb
 3695              		.thumb_func
 3696              		.fpu fpv4-sp-d16
 3698              	HAL_IRDA_AbortTransmit_IT:
 3699              	.LVL285:
 3700              	.LFB149:
1560:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Disable TXEIE and TCIE interrupts */
 3701              		.loc 1 1560 1 is_stmt 1 view -0
 3702              		.cfi_startproc
 3703              		@ args = 0, pretend = 0, frame = 0
 3704              		@ frame_needed = 0, uses_anonymous_args = 0
1560:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Disable TXEIE and TCIE interrupts */
 3705              		.loc 1 1560 1 is_stmt 0 view .LVU1096
 3706 0000 10B5     		push	{r4, lr}
 3707              	.LCFI37:
 3708              		.cfi_def_cfa_offset 8
 3709              		.cfi_offset 4, -8
 3710              		.cfi_offset 14, -4
 3711 0002 0446     		mov	r4, r0
1562:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3712              		.loc 1 1562 3 is_stmt 1 view .LVU1097
 3713 0004 0268     		ldr	r2, [r0]
 3714 0006 D368     		ldr	r3, [r2, #12]
 3715 0008 23F0C003 		bic	r3, r3, #192
 3716 000c D360     		str	r3, [r2, #12]
1565:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 3717              		.loc 1 1565 3 view .LVU1098
1565:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 3718              		.loc 1 1565 7 is_stmt 0 view .LVU1099
 3719 000e 0368     		ldr	r3, [r0]
 3720 0010 5A69     		ldr	r2, [r3, #20]
1565:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 3721              		.loc 1 1565 6 view .LVU1100
 3722 0012 12F0800F 		tst	r2, #128
 3723 0016 17D0     		beq	.L233
1567:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3724              		.loc 1 1567 5 is_stmt 1 view .LVU1101
 3725 0018 5A69     		ldr	r2, [r3, #20]
 3726 001a 22F08002 		bic	r2, r2, #128
 3727 001e 5A61     		str	r2, [r3, #20]
1570:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 3728              		.loc 1 1570 5 view .LVU1102
1570:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 3729              		.loc 1 1570 14 is_stmt 0 view .LVU1103
 3730 0020 C36A     		ldr	r3, [r0, #44]
1570:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 3731              		.loc 1 1570 8 view .LVU1104
 3732 0022 4BB1     		cbz	r3, .L234
1574:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3733              		.loc 1 1574 7 is_stmt 1 view .LVU1105
1574:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3734              		.loc 1 1574 40 is_stmt 0 view .LVU1106
 3735 0024 0D4A     		ldr	r2, .L237
 3736 0026 1A65     		str	r2, [r3, #80]
1577:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       {
 3737              		.loc 1 1577 7 is_stmt 1 view .LVU1107
ARM GAS  /tmp/ccwOIEYW.s 			page 130


1577:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       {
 3738              		.loc 1 1577 11 is_stmt 0 view .LVU1108
 3739 0028 C06A     		ldr	r0, [r0, #44]
 3740              	.LVL286:
1577:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       {
 3741              		.loc 1 1577 11 view .LVU1109
 3742 002a FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3743              	.LVL287:
1577:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       {
 3744              		.loc 1 1577 10 view .LVU1110
 3745 002e 90B1     		cbz	r0, .L235
1580:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       }
 3746              		.loc 1 1580 9 is_stmt 1 view .LVU1111
1580:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       }
 3747              		.loc 1 1580 14 is_stmt 0 view .LVU1112
 3748 0030 E06A     		ldr	r0, [r4, #44]
1580:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       }
 3749              		.loc 1 1580 22 view .LVU1113
 3750 0032 036D     		ldr	r3, [r0, #80]
1580:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       }
 3751              		.loc 1 1580 9 view .LVU1114
 3752 0034 9847     		blx	r3
 3753              	.LVL288:
 3754 0036 0EE0     		b	.L235
 3755              	.LVL289:
 3756              	.L234:
1586:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3757              		.loc 1 1586 7 is_stmt 1 view .LVU1115
1586:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3758              		.loc 1 1586 26 is_stmt 0 view .LVU1116
 3759 0038 0023     		movs	r3, #0
 3760 003a 4384     		strh	r3, [r0, #34]	@ movhi
1589:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3761              		.loc 1 1589 7 is_stmt 1 view .LVU1117
1589:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3762              		.loc 1 1589 21 is_stmt 0 view .LVU1118
 3763 003c 2023     		movs	r3, #32
 3764 003e 80F83530 		strb	r3, [r0, #53]
1597:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #endif /* USE_HAL_IRDA_REGISTER_CALLBACK */
 3765              		.loc 1 1597 7 is_stmt 1 view .LVU1119
 3766 0042 FFF7FEFF 		bl	HAL_IRDA_AbortTransmitCpltCallback
 3767              	.LVL290:
1597:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #endif /* USE_HAL_IRDA_REGISTER_CALLBACK */
 3768              		.loc 1 1597 7 is_stmt 0 view .LVU1120
 3769 0046 06E0     		b	.L235
 3770              	.LVL291:
 3771              	.L233:
1604:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3772              		.loc 1 1604 5 is_stmt 1 view .LVU1121
1604:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3773              		.loc 1 1604 24 is_stmt 0 view .LVU1122
 3774 0048 0023     		movs	r3, #0
 3775 004a 4384     		strh	r3, [r0, #34]	@ movhi
1607:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3776              		.loc 1 1607 5 is_stmt 1 view .LVU1123
1607:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3777              		.loc 1 1607 19 is_stmt 0 view .LVU1124
ARM GAS  /tmp/ccwOIEYW.s 			page 131


 3778 004c 2023     		movs	r3, #32
 3779 004e 80F83530 		strb	r3, [r0, #53]
1615:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #endif /* USE_HAL_IRDA_REGISTER_CALLBACK */
 3780              		.loc 1 1615 5 is_stmt 1 view .LVU1125
 3781 0052 FFF7FEFF 		bl	HAL_IRDA_AbortTransmitCpltCallback
 3782              	.LVL292:
 3783              	.L235:
1619:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** }
 3784              		.loc 1 1619 3 view .LVU1126
1620:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3785              		.loc 1 1620 1 is_stmt 0 view .LVU1127
 3786 0056 0020     		movs	r0, #0
 3787 0058 10BD     		pop	{r4, pc}
 3788              	.LVL293:
 3789              	.L238:
1620:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3790              		.loc 1 1620 1 view .LVU1128
 3791 005a 00BF     		.align	2
 3792              	.L237:
 3793 005c 00000000 		.word	IRDA_DMATxOnlyAbortCallback
 3794              		.cfi_endproc
 3795              	.LFE149:
 3797              		.section	.text.IRDA_DMATxOnlyAbortCallback,"ax",%progbits
 3798              		.align	1
 3799              		.syntax unified
 3800              		.thumb
 3801              		.thumb_func
 3802              		.fpu fpv4-sp-d16
 3804              	IRDA_DMATxOnlyAbortCallback:
 3805              	.LVL294:
 3806              	.LFB173:
2383:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   IRDA_HandleTypeDef *hirda = (IRDA_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 3807              		.loc 1 2383 1 is_stmt 1 view -0
 3808              		.cfi_startproc
 3809              		@ args = 0, pretend = 0, frame = 0
 3810              		@ frame_needed = 0, uses_anonymous_args = 0
2383:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   IRDA_HandleTypeDef *hirda = (IRDA_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 3811              		.loc 1 2383 1 is_stmt 0 view .LVU1130
 3812 0000 08B5     		push	{r3, lr}
 3813              	.LCFI38:
 3814              		.cfi_def_cfa_offset 8
 3815              		.cfi_offset 3, -8
 3816              		.cfi_offset 14, -4
2384:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3817              		.loc 1 2384 3 is_stmt 1 view .LVU1131
2384:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3818              		.loc 1 2384 23 is_stmt 0 view .LVU1132
 3819 0002 806B     		ldr	r0, [r0, #56]
 3820              	.LVL295:
2386:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3821              		.loc 1 2386 3 is_stmt 1 view .LVU1133
2386:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3822              		.loc 1 2386 22 is_stmt 0 view .LVU1134
 3823 0004 0023     		movs	r3, #0
 3824 0006 4384     		strh	r3, [r0, #34]	@ movhi
2389:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3825              		.loc 1 2389 3 is_stmt 1 view .LVU1135
ARM GAS  /tmp/ccwOIEYW.s 			page 132


2389:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3826              		.loc 1 2389 17 is_stmt 0 view .LVU1136
 3827 0008 2023     		movs	r3, #32
 3828 000a 80F83530 		strb	r3, [r0, #53]
2397:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #endif /* USE_HAL_IRDA_REGISTER_CALLBACK */
 3829              		.loc 1 2397 3 is_stmt 1 view .LVU1137
 3830 000e FFF7FEFF 		bl	HAL_IRDA_AbortTransmitCpltCallback
 3831              	.LVL296:
2399:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3832              		.loc 1 2399 1 is_stmt 0 view .LVU1138
 3833 0012 08BD     		pop	{r3, pc}
 3834              		.cfi_endproc
 3835              	.LFE173:
 3837              		.section	.text.HAL_IRDA_AbortReceiveCpltCallback,"ax",%progbits
 3838              		.align	1
 3839              		.weak	HAL_IRDA_AbortReceiveCpltCallback
 3840              		.syntax unified
 3841              		.thumb
 3842              		.thumb_func
 3843              		.fpu fpv4-sp-d16
 3845              	HAL_IRDA_AbortReceiveCpltCallback:
 3846              	.LVL297:
 3847              	.LFB159:
1964:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Prevent unused argument(s) compilation warning */
 3848              		.loc 1 1964 1 is_stmt 1 view -0
 3849              		.cfi_startproc
 3850              		@ args = 0, pretend = 0, frame = 0
 3851              		@ frame_needed = 0, uses_anonymous_args = 0
 3852              		@ link register save eliminated.
1966:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3853              		.loc 1 1966 3 view .LVU1140
1971:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3854              		.loc 1 1971 1 is_stmt 0 view .LVU1141
 3855 0000 7047     		bx	lr
 3856              		.cfi_endproc
 3857              	.LFE159:
 3859              		.section	.text.HAL_IRDA_AbortReceive_IT,"ax",%progbits
 3860              		.align	1
 3861              		.global	HAL_IRDA_AbortReceive_IT
 3862              		.syntax unified
 3863              		.thumb
 3864              		.thumb_func
 3865              		.fpu fpv4-sp-d16
 3867              	HAL_IRDA_AbortReceive_IT:
 3868              	.LVL298:
 3869              	.LFB150:
1637:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 3870              		.loc 1 1637 1 is_stmt 1 view -0
 3871              		.cfi_startproc
 3872              		@ args = 0, pretend = 0, frame = 0
 3873              		@ frame_needed = 0, uses_anonymous_args = 0
1637:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 3874              		.loc 1 1637 1 is_stmt 0 view .LVU1143
 3875 0000 10B5     		push	{r4, lr}
 3876              	.LCFI39:
 3877              		.cfi_def_cfa_offset 8
 3878              		.cfi_offset 4, -8
ARM GAS  /tmp/ccwOIEYW.s 			page 133


 3879              		.cfi_offset 14, -4
 3880 0002 0446     		mov	r4, r0
1639:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   CLEAR_BIT(hirda->Instance->CR3, USART_CR3_EIE);
 3881              		.loc 1 1639 3 is_stmt 1 view .LVU1144
 3882 0004 0268     		ldr	r2, [r0]
 3883 0006 D368     		ldr	r3, [r2, #12]
 3884 0008 23F49073 		bic	r3, r3, #288
 3885 000c D360     		str	r3, [r2, #12]
1640:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3886              		.loc 1 1640 3 view .LVU1145
 3887 000e 0268     		ldr	r2, [r0]
 3888 0010 5369     		ldr	r3, [r2, #20]
 3889 0012 23F00103 		bic	r3, r3, #1
 3890 0016 5361     		str	r3, [r2, #20]
1643:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 3891              		.loc 1 1643 3 view .LVU1146
1643:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 3892              		.loc 1 1643 7 is_stmt 0 view .LVU1147
 3893 0018 0368     		ldr	r3, [r0]
 3894 001a 5A69     		ldr	r2, [r3, #20]
1643:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   {
 3895              		.loc 1 1643 6 view .LVU1148
 3896 001c 12F0400F 		tst	r2, #64
 3897 0020 17D0     		beq	.L243
1645:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3898              		.loc 1 1645 5 is_stmt 1 view .LVU1149
 3899 0022 5A69     		ldr	r2, [r3, #20]
 3900 0024 22F04002 		bic	r2, r2, #64
 3901 0028 5A61     		str	r2, [r3, #20]
1648:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 3902              		.loc 1 1648 5 view .LVU1150
1648:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 3903              		.loc 1 1648 14 is_stmt 0 view .LVU1151
 3904 002a 036B     		ldr	r3, [r0, #48]
1648:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****     {
 3905              		.loc 1 1648 8 view .LVU1152
 3906 002c 4BB1     		cbz	r3, .L244
1652:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3907              		.loc 1 1652 7 is_stmt 1 view .LVU1153
1652:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3908              		.loc 1 1652 40 is_stmt 0 view .LVU1154
 3909 002e 0D4A     		ldr	r2, .L247
 3910 0030 1A65     		str	r2, [r3, #80]
1655:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       {
 3911              		.loc 1 1655 7 is_stmt 1 view .LVU1155
1655:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       {
 3912              		.loc 1 1655 11 is_stmt 0 view .LVU1156
 3913 0032 006B     		ldr	r0, [r0, #48]
 3914              	.LVL299:
1655:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       {
 3915              		.loc 1 1655 11 view .LVU1157
 3916 0034 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3917              	.LVL300:
1655:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       {
 3918              		.loc 1 1655 10 view .LVU1158
 3919 0038 90B1     		cbz	r0, .L245
1658:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       }
ARM GAS  /tmp/ccwOIEYW.s 			page 134


 3920              		.loc 1 1658 9 is_stmt 1 view .LVU1159
1658:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       }
 3921              		.loc 1 1658 14 is_stmt 0 view .LVU1160
 3922 003a 206B     		ldr	r0, [r4, #48]
1658:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       }
 3923              		.loc 1 1658 22 view .LVU1161
 3924 003c 036D     		ldr	r3, [r0, #80]
1658:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****       }
 3925              		.loc 1 1658 9 view .LVU1162
 3926 003e 9847     		blx	r3
 3927              	.LVL301:
 3928 0040 0EE0     		b	.L245
 3929              	.LVL302:
 3930              	.L244:
1664:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3931              		.loc 1 1664 7 is_stmt 1 view .LVU1163
1664:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3932              		.loc 1 1664 26 is_stmt 0 view .LVU1164
 3933 0042 0023     		movs	r3, #0
 3934 0044 4385     		strh	r3, [r0, #42]	@ movhi
1667:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3935              		.loc 1 1667 7 is_stmt 1 view .LVU1165
1667:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3936              		.loc 1 1667 22 is_stmt 0 view .LVU1166
 3937 0046 2023     		movs	r3, #32
 3938 0048 80F83630 		strb	r3, [r0, #54]
1675:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #endif /* USE_HAL_IRDA_REGISTER_CALLBACK */
 3939              		.loc 1 1675 7 is_stmt 1 view .LVU1167
 3940 004c FFF7FEFF 		bl	HAL_IRDA_AbortReceiveCpltCallback
 3941              	.LVL303:
1675:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #endif /* USE_HAL_IRDA_REGISTER_CALLBACK */
 3942              		.loc 1 1675 7 is_stmt 0 view .LVU1168
 3943 0050 06E0     		b	.L245
 3944              	.LVL304:
 3945              	.L243:
1682:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3946              		.loc 1 1682 5 is_stmt 1 view .LVU1169
1682:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3947              		.loc 1 1682 24 is_stmt 0 view .LVU1170
 3948 0052 0023     		movs	r3, #0
 3949 0054 4385     		strh	r3, [r0, #42]	@ movhi
1685:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3950              		.loc 1 1685 5 is_stmt 1 view .LVU1171
1685:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3951              		.loc 1 1685 20 is_stmt 0 view .LVU1172
 3952 0056 2023     		movs	r3, #32
 3953 0058 80F83630 		strb	r3, [r0, #54]
1693:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #endif /* USE_HAL_IRDA_REGISTER_CALLBACK */
 3954              		.loc 1 1693 5 is_stmt 1 view .LVU1173
 3955 005c FFF7FEFF 		bl	HAL_IRDA_AbortReceiveCpltCallback
 3956              	.LVL305:
 3957              	.L245:
1697:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** }
 3958              		.loc 1 1697 3 view .LVU1174
1698:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3959              		.loc 1 1698 1 is_stmt 0 view .LVU1175
 3960 0060 0020     		movs	r0, #0
ARM GAS  /tmp/ccwOIEYW.s 			page 135


 3961 0062 10BD     		pop	{r4, pc}
 3962              	.LVL306:
 3963              	.L248:
1698:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3964              		.loc 1 1698 1 view .LVU1176
 3965              		.align	2
 3966              	.L247:
 3967 0064 00000000 		.word	IRDA_DMARxOnlyAbortCallback
 3968              		.cfi_endproc
 3969              	.LFE150:
 3971              		.section	.text.IRDA_DMARxOnlyAbortCallback,"ax",%progbits
 3972              		.align	1
 3973              		.syntax unified
 3974              		.thumb
 3975              		.thumb_func
 3976              		.fpu fpv4-sp-d16
 3978              	IRDA_DMARxOnlyAbortCallback:
 3979              	.LVL307:
 3980              	.LFB174:
2410:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   IRDA_HandleTypeDef *hirda = (IRDA_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 3981              		.loc 1 2410 1 is_stmt 1 view -0
 3982              		.cfi_startproc
 3983              		@ args = 0, pretend = 0, frame = 0
 3984              		@ frame_needed = 0, uses_anonymous_args = 0
2410:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   IRDA_HandleTypeDef *hirda = (IRDA_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 3985              		.loc 1 2410 1 is_stmt 0 view .LVU1178
 3986 0000 08B5     		push	{r3, lr}
 3987              	.LCFI40:
 3988              		.cfi_def_cfa_offset 8
 3989              		.cfi_offset 3, -8
 3990              		.cfi_offset 14, -4
2411:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3991              		.loc 1 2411 3 is_stmt 1 view .LVU1179
2411:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3992              		.loc 1 2411 23 is_stmt 0 view .LVU1180
 3993 0002 806B     		ldr	r0, [r0, #56]
 3994              	.LVL308:
2413:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3995              		.loc 1 2413 3 is_stmt 1 view .LVU1181
2413:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3996              		.loc 1 2413 22 is_stmt 0 view .LVU1182
 3997 0004 0023     		movs	r3, #0
 3998 0006 4385     		strh	r3, [r0, #42]	@ movhi
2416:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 3999              		.loc 1 2416 3 is_stmt 1 view .LVU1183
2416:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 4000              		.loc 1 2416 18 is_stmt 0 view .LVU1184
 4001 0008 2023     		movs	r3, #32
 4002 000a 80F83630 		strb	r3, [r0, #54]
2424:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** #endif /* USE_HAL_IRDA_REGISTER_CALLBACK */
 4003              		.loc 1 2424 3 is_stmt 1 view .LVU1185
 4004 000e FFF7FEFF 		bl	HAL_IRDA_AbortReceiveCpltCallback
 4005              	.LVL309:
2426:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 4006              		.loc 1 2426 1 is_stmt 0 view .LVU1186
 4007 0012 08BD     		pop	{r3, pc}
 4008              		.cfi_endproc
ARM GAS  /tmp/ccwOIEYW.s 			page 136


 4009              	.LFE174:
 4011              		.section	.text.HAL_IRDA_GetState,"ax",%progbits
 4012              		.align	1
 4013              		.global	HAL_IRDA_GetState
 4014              		.syntax unified
 4015              		.thumb
 4016              		.thumb_func
 4017              		.fpu fpv4-sp-d16
 4019              	HAL_IRDA_GetState:
 4020              	.LVL310:
 4021              	.LFB160:
2001:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   uint32_t temp1 = 0x00U, temp2 = 0x00U;
 4022              		.loc 1 2001 1 is_stmt 1 view -0
 4023              		.cfi_startproc
 4024              		@ args = 0, pretend = 0, frame = 0
 4025              		@ frame_needed = 0, uses_anonymous_args = 0
 4026              		@ link register save eliminated.
2002:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   temp1 = hirda->gState;
 4027              		.loc 1 2002 3 view .LVU1188
2003:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   temp2 = hirda->RxState;
 4028              		.loc 1 2003 3 view .LVU1189
2003:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   temp2 = hirda->RxState;
 4029              		.loc 1 2003 16 is_stmt 0 view .LVU1190
 4030 0000 90F83530 		ldrb	r3, [r0, #53]	@ zero_extendqisi2
 4031              	.LVL311:
2004:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 4032              		.loc 1 2004 3 is_stmt 1 view .LVU1191
2004:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 4033              		.loc 1 2004 16 is_stmt 0 view .LVU1192
 4034 0004 90F83600 		ldrb	r0, [r0, #54]	@ zero_extendqisi2
 4035              	.LVL312:
2006:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** }
 4036              		.loc 1 2006 3 is_stmt 1 view .LVU1193
2007:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 4037              		.loc 1 2007 1 is_stmt 0 view .LVU1194
 4038 0008 1843     		orrs	r0, r0, r3
 4039              	.LVL313:
2007:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 4040              		.loc 1 2007 1 view .LVU1195
 4041 000a 7047     		bx	lr
 4042              		.cfi_endproc
 4043              	.LFE160:
 4045              		.section	.text.HAL_IRDA_GetError,"ax",%progbits
 4046              		.align	1
 4047              		.global	HAL_IRDA_GetError
 4048              		.syntax unified
 4049              		.thumb
 4050              		.thumb_func
 4051              		.fpu fpv4-sp-d16
 4053              	HAL_IRDA_GetError:
 4054              	.LVL314:
 4055              	.LFB161:
2016:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c ****   return hirda->ErrorCode;
 4056              		.loc 1 2016 1 is_stmt 1 view -0
 4057              		.cfi_startproc
 4058              		@ args = 0, pretend = 0, frame = 0
 4059              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccwOIEYW.s 			page 137


 4060              		@ link register save eliminated.
2017:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** }
 4061              		.loc 1 2017 3 view .LVU1197
2017:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** }
 4062              		.loc 1 2017 15 is_stmt 0 view .LVU1198
 4063 0000 806B     		ldr	r0, [r0, #56]
 4064              	.LVL315:
2018:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_irda.c **** 
 4065              		.loc 1 2018 1 view .LVU1199
 4066 0002 7047     		bx	lr
 4067              		.cfi_endproc
 4068              	.LFE161:
 4070              		.text
 4071              	.Letext0:
 4072              		.file 2 "/opt/gcc_arm/gcc-arm-none-eabi-9-2019-q4-major/arm-none-eabi/include/machine/_default_typ
 4073              		.file 3 "/opt/gcc_arm/gcc-arm-none-eabi-9-2019-q4-major/arm-none-eabi/include/sys/_stdint.h"
 4074              		.file 4 "CORE/core_cm4.h"
 4075              		.file 5 "USER/system_stm32f4xx.h"
 4076              		.file 6 "USER/stm32f407xx.h"
 4077              		.file 7 "USER/stm32f4xx.h"
 4078              		.file 8 "HALLIB/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 4079              		.file 9 "HALLIB/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 4080              		.file 10 "HALLIB/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_irda.h"
 4081              		.file 11 "HALLIB/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 4082              		.file 12 "HALLIB/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/ccwOIEYW.s 			page 138


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_hal_irda.c
     /tmp/ccwOIEYW.s:18     .text.IRDA_EndTxTransfer:0000000000000000 $t
     /tmp/ccwOIEYW.s:25     .text.IRDA_EndTxTransfer:0000000000000000 IRDA_EndTxTransfer
     /tmp/ccwOIEYW.s:49     .text.IRDA_EndRxTransfer:0000000000000000 $t
     /tmp/ccwOIEYW.s:55     .text.IRDA_EndRxTransfer:0000000000000000 IRDA_EndRxTransfer
     /tmp/ccwOIEYW.s:83     .text.IRDA_Transmit_IT:0000000000000000 $t
     /tmp/ccwOIEYW.s:89     .text.IRDA_Transmit_IT:0000000000000000 IRDA_Transmit_IT
     /tmp/ccwOIEYW.s:197    .text.IRDA_SetConfig:0000000000000000 $t
     /tmp/ccwOIEYW.s:203    .text.IRDA_SetConfig:0000000000000000 IRDA_SetConfig
     /tmp/ccwOIEYW.s:403    .text.IRDA_SetConfig:00000000000001b0 $d
     /tmp/ccwOIEYW.s:409    .text.IRDA_WaitOnFlagUntilTimeout:0000000000000000 $t
     /tmp/ccwOIEYW.s:415    .text.IRDA_WaitOnFlagUntilTimeout:0000000000000000 IRDA_WaitOnFlagUntilTimeout
     /tmp/ccwOIEYW.s:508    .text.HAL_IRDA_MspInit:0000000000000000 $t
     /tmp/ccwOIEYW.s:515    .text.HAL_IRDA_MspInit:0000000000000000 HAL_IRDA_MspInit
     /tmp/ccwOIEYW.s:530    .text.HAL_IRDA_Init:0000000000000000 $t
     /tmp/ccwOIEYW.s:537    .text.HAL_IRDA_Init:0000000000000000 HAL_IRDA_Init
     /tmp/ccwOIEYW.s:651    .text.HAL_IRDA_MspDeInit:0000000000000000 $t
     /tmp/ccwOIEYW.s:658    .text.HAL_IRDA_MspDeInit:0000000000000000 HAL_IRDA_MspDeInit
     /tmp/ccwOIEYW.s:673    .text.HAL_IRDA_DeInit:0000000000000000 $t
     /tmp/ccwOIEYW.s:680    .text.HAL_IRDA_DeInit:0000000000000000 HAL_IRDA_DeInit
     /tmp/ccwOIEYW.s:742    .text.HAL_IRDA_Transmit:0000000000000000 $t
     /tmp/ccwOIEYW.s:749    .text.HAL_IRDA_Transmit:0000000000000000 HAL_IRDA_Transmit
     /tmp/ccwOIEYW.s:988    .text.HAL_IRDA_Receive:0000000000000000 $t
     /tmp/ccwOIEYW.s:995    .text.HAL_IRDA_Receive:0000000000000000 HAL_IRDA_Receive
     /tmp/ccwOIEYW.s:1244   .text.HAL_IRDA_Transmit_IT:0000000000000000 $t
     /tmp/ccwOIEYW.s:1251   .text.HAL_IRDA_Transmit_IT:0000000000000000 HAL_IRDA_Transmit_IT
     /tmp/ccwOIEYW.s:1347   .text.HAL_IRDA_Receive_IT:0000000000000000 $t
     /tmp/ccwOIEYW.s:1354   .text.HAL_IRDA_Receive_IT:0000000000000000 HAL_IRDA_Receive_IT
     /tmp/ccwOIEYW.s:1455   .text.HAL_IRDA_Transmit_DMA:0000000000000000 $t
     /tmp/ccwOIEYW.s:1462   .text.HAL_IRDA_Transmit_DMA:0000000000000000 HAL_IRDA_Transmit_DMA
     /tmp/ccwOIEYW.s:1606   .text.HAL_IRDA_Transmit_DMA:0000000000000080 $d
     /tmp/ccwOIEYW.s:2408   .text.IRDA_DMATransmitCplt:0000000000000000 IRDA_DMATransmitCplt
     /tmp/ccwOIEYW.s:2536   .text.IRDA_DMATransmitHalfCplt:0000000000000000 IRDA_DMATransmitHalfCplt
     /tmp/ccwOIEYW.s:2896   .text.IRDA_DMAError:0000000000000000 IRDA_DMAError
     /tmp/ccwOIEYW.s:1613   .text.HAL_IRDA_Receive_DMA:0000000000000000 $t
     /tmp/ccwOIEYW.s:1620   .text.HAL_IRDA_Receive_DMA:0000000000000000 HAL_IRDA_Receive_DMA
     /tmp/ccwOIEYW.s:1784   .text.HAL_IRDA_Receive_DMA:000000000000009c $d
     /tmp/ccwOIEYW.s:2591   .text.IRDA_DMAReceiveCplt:0000000000000000 IRDA_DMAReceiveCplt
     /tmp/ccwOIEYW.s:2841   .text.IRDA_DMAReceiveHalfCplt:0000000000000000 IRDA_DMAReceiveHalfCplt
     /tmp/ccwOIEYW.s:1791   .text.HAL_IRDA_DMAPause:0000000000000000 $t
     /tmp/ccwOIEYW.s:1798   .text.HAL_IRDA_DMAPause:0000000000000000 HAL_IRDA_DMAPause
     /tmp/ccwOIEYW.s:1900   .text.HAL_IRDA_DMAResume:0000000000000000 $t
     /tmp/ccwOIEYW.s:1907   .text.HAL_IRDA_DMAResume:0000000000000000 HAL_IRDA_DMAResume
     /tmp/ccwOIEYW.s:2019   .text.HAL_IRDA_DMAStop:0000000000000000 $t
     /tmp/ccwOIEYW.s:2026   .text.HAL_IRDA_DMAStop:0000000000000000 HAL_IRDA_DMAStop
     /tmp/ccwOIEYW.s:2129   .text.HAL_IRDA_Abort:0000000000000000 $t
     /tmp/ccwOIEYW.s:2136   .text.HAL_IRDA_Abort:0000000000000000 HAL_IRDA_Abort
     /tmp/ccwOIEYW.s:2237   .text.HAL_IRDA_AbortTransmit:0000000000000000 $t
     /tmp/ccwOIEYW.s:2244   .text.HAL_IRDA_AbortTransmit:0000000000000000 HAL_IRDA_AbortTransmit
     /tmp/ccwOIEYW.s:2306   .text.HAL_IRDA_AbortReceive:0000000000000000 $t
     /tmp/ccwOIEYW.s:2313   .text.HAL_IRDA_AbortReceive:0000000000000000 HAL_IRDA_AbortReceive
     /tmp/ccwOIEYW.s:2380   .text.HAL_IRDA_TxCpltCallback:0000000000000000 $t
     /tmp/ccwOIEYW.s:2387   .text.HAL_IRDA_TxCpltCallback:0000000000000000 HAL_IRDA_TxCpltCallback
     /tmp/ccwOIEYW.s:2402   .text.IRDA_DMATransmitCplt:0000000000000000 $t
     /tmp/ccwOIEYW.s:2464   .text.IRDA_EndTransmit_IT:0000000000000000 $t
     /tmp/ccwOIEYW.s:2470   .text.IRDA_EndTransmit_IT:0000000000000000 IRDA_EndTransmit_IT
ARM GAS  /tmp/ccwOIEYW.s 			page 139


     /tmp/ccwOIEYW.s:2508   .text.HAL_IRDA_TxHalfCpltCallback:0000000000000000 $t
     /tmp/ccwOIEYW.s:2515   .text.HAL_IRDA_TxHalfCpltCallback:0000000000000000 HAL_IRDA_TxHalfCpltCallback
     /tmp/ccwOIEYW.s:2530   .text.IRDA_DMATransmitHalfCplt:0000000000000000 $t
     /tmp/ccwOIEYW.s:2563   .text.HAL_IRDA_RxCpltCallback:0000000000000000 $t
     /tmp/ccwOIEYW.s:2570   .text.HAL_IRDA_RxCpltCallback:0000000000000000 HAL_IRDA_RxCpltCallback
     /tmp/ccwOIEYW.s:2585   .text.IRDA_DMAReceiveCplt:0000000000000000 $t
     /tmp/ccwOIEYW.s:2651   .text.IRDA_Receive_IT:0000000000000000 $t
     /tmp/ccwOIEYW.s:2657   .text.IRDA_Receive_IT:0000000000000000 IRDA_Receive_IT
     /tmp/ccwOIEYW.s:2813   .text.HAL_IRDA_RxHalfCpltCallback:0000000000000000 $t
     /tmp/ccwOIEYW.s:2820   .text.HAL_IRDA_RxHalfCpltCallback:0000000000000000 HAL_IRDA_RxHalfCpltCallback
     /tmp/ccwOIEYW.s:2835   .text.IRDA_DMAReceiveHalfCplt:0000000000000000 $t
     /tmp/ccwOIEYW.s:2868   .text.HAL_IRDA_ErrorCallback:0000000000000000 $t
     /tmp/ccwOIEYW.s:2875   .text.HAL_IRDA_ErrorCallback:0000000000000000 HAL_IRDA_ErrorCallback
     /tmp/ccwOIEYW.s:2890   .text.IRDA_DMAError:0000000000000000 $t
     /tmp/ccwOIEYW.s:2993   .text.HAL_IRDA_IRQHandler:0000000000000000 $t
     /tmp/ccwOIEYW.s:3000   .text.HAL_IRDA_IRQHandler:0000000000000000 HAL_IRDA_IRQHandler
     /tmp/ccwOIEYW.s:3266   .text.HAL_IRDA_IRQHandler:000000000000011c $d
     /tmp/ccwOIEYW.s:3277   .text.IRDA_DMAAbortOnError:0000000000000000 IRDA_DMAAbortOnError
     /tmp/ccwOIEYW.s:3271   .text.IRDA_DMAAbortOnError:0000000000000000 $t
     /tmp/ccwOIEYW.s:3310   .text.HAL_IRDA_AbortCpltCallback:0000000000000000 $t
     /tmp/ccwOIEYW.s:3317   .text.HAL_IRDA_AbortCpltCallback:0000000000000000 HAL_IRDA_AbortCpltCallback
     /tmp/ccwOIEYW.s:3332   .text.HAL_IRDA_Abort_IT:0000000000000000 $t
     /tmp/ccwOIEYW.s:3339   .text.HAL_IRDA_Abort_IT:0000000000000000 HAL_IRDA_Abort_IT
     /tmp/ccwOIEYW.s:3529   .text.HAL_IRDA_Abort_IT:00000000000000bc $d
     /tmp/ccwOIEYW.s:3608   .text.IRDA_DMATxAbortCallback:0000000000000000 IRDA_DMATxAbortCallback
     /tmp/ccwOIEYW.s:3541   .text.IRDA_DMARxAbortCallback:0000000000000000 IRDA_DMARxAbortCallback
     /tmp/ccwOIEYW.s:3535   .text.IRDA_DMARxAbortCallback:0000000000000000 $t
     /tmp/ccwOIEYW.s:3602   .text.IRDA_DMATxAbortCallback:0000000000000000 $t
     /tmp/ccwOIEYW.s:3669   .text.HAL_IRDA_AbortTransmitCpltCallback:0000000000000000 $t
     /tmp/ccwOIEYW.s:3676   .text.HAL_IRDA_AbortTransmitCpltCallback:0000000000000000 HAL_IRDA_AbortTransmitCpltCallback
     /tmp/ccwOIEYW.s:3691   .text.HAL_IRDA_AbortTransmit_IT:0000000000000000 $t
     /tmp/ccwOIEYW.s:3698   .text.HAL_IRDA_AbortTransmit_IT:0000000000000000 HAL_IRDA_AbortTransmit_IT
     /tmp/ccwOIEYW.s:3793   .text.HAL_IRDA_AbortTransmit_IT:000000000000005c $d
     /tmp/ccwOIEYW.s:3804   .text.IRDA_DMATxOnlyAbortCallback:0000000000000000 IRDA_DMATxOnlyAbortCallback
     /tmp/ccwOIEYW.s:3798   .text.IRDA_DMATxOnlyAbortCallback:0000000000000000 $t
     /tmp/ccwOIEYW.s:3838   .text.HAL_IRDA_AbortReceiveCpltCallback:0000000000000000 $t
     /tmp/ccwOIEYW.s:3845   .text.HAL_IRDA_AbortReceiveCpltCallback:0000000000000000 HAL_IRDA_AbortReceiveCpltCallback
     /tmp/ccwOIEYW.s:3860   .text.HAL_IRDA_AbortReceive_IT:0000000000000000 $t
     /tmp/ccwOIEYW.s:3867   .text.HAL_IRDA_AbortReceive_IT:0000000000000000 HAL_IRDA_AbortReceive_IT
     /tmp/ccwOIEYW.s:3967   .text.HAL_IRDA_AbortReceive_IT:0000000000000064 $d
     /tmp/ccwOIEYW.s:3978   .text.IRDA_DMARxOnlyAbortCallback:0000000000000000 IRDA_DMARxOnlyAbortCallback
     /tmp/ccwOIEYW.s:3972   .text.IRDA_DMARxOnlyAbortCallback:0000000000000000 $t
     /tmp/ccwOIEYW.s:4012   .text.HAL_IRDA_GetState:0000000000000000 $t
     /tmp/ccwOIEYW.s:4019   .text.HAL_IRDA_GetState:0000000000000000 HAL_IRDA_GetState
     /tmp/ccwOIEYW.s:4046   .text.HAL_IRDA_GetError:0000000000000000 $t
     /tmp/ccwOIEYW.s:4053   .text.HAL_IRDA_GetError:0000000000000000 HAL_IRDA_GetError

UNDEFINED SYMBOLS
HAL_RCC_GetPCLK1Freq
HAL_RCC_GetPCLK2Freq
HAL_GetTick
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_Abort_IT

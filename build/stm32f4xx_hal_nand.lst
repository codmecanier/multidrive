ARM GAS  /tmp/ccHfptsR.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_hal_nand.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_NAND_MspInit,"ax",%progbits
  18              		.align	1
  19              		.weak	HAL_NAND_MspInit
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	HAL_NAND_MspInit:
  27              	.LVL0:
  28              	.LFB134:
  29              		.file 1 "HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c"
   1:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** /**
   2:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   ******************************************************************************
   3:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @file    stm32f4xx_hal_nand.c
   4:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @author  MCD Application Team
   5:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @brief   NAND HAL module driver.
   6:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   *          This file provides a generic firmware to drive NAND memories mounted 
   7:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   *          as external device.
   8:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   *         
   9:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   @verbatim
  10:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   ==============================================================================
  11:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****                          ##### How to use this driver #####
  12:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   ==============================================================================    
  13:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     [..]
  14:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       This driver is a generic layered driver which contains a set of APIs used to 
  15:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       control NAND flash memories. It uses the FMC/FSMC layer functions to interface 
  16:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       with NAND devices. This driver is used as follows:
  17:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
  18:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       (+) NAND flash memory configuration sequence using the function HAL_NAND_Init() 
  19:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****           with control and timing parameters for both common and attribute spaces.
  20:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****             
  21:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       (+) Read NAND flash memory maker and device IDs using the function
  22:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****           HAL_NAND_Read_ID(). The read information is stored in the NAND_ID_TypeDef 
  23:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****           structure declared by the function caller. 
  24:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         
  25:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       (+) Access NAND flash memory by read/write operations using the functions
  26:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****           HAL_NAND_Read_Page_8b()/HAL_NAND_Read_SpareArea_8b(), 
  27:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****           HAL_NAND_Write_Page_8b()/HAL_NAND_Write_SpareArea_8b(),
  28:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****           HAL_NAND_Read_Page_16b()/HAL_NAND_Read_SpareArea_16b(), 
  29:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****           HAL_NAND_Write_Page_16b()/HAL_NAND_Write_SpareArea_16b()
ARM GAS  /tmp/ccHfptsR.s 			page 2


  30:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****           to read/write page(s)/spare area(s). These functions use specific device 
  31:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****           information (Block, page size..) predefined by the user in the HAL_NAND_Info_TypeDef 
  32:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****           structure. The read/write address information is contained by the Nand_Address_Typedef
  33:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****           structure passed as parameter.
  34:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         
  35:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       (+) Perform NAND flash Reset chip operation using the function HAL_NAND_Reset().
  36:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         
  37:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       (+) Perform NAND flash erase block operation using the function HAL_NAND_Erase_Block().
  38:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****           The erase block address information is contained in the Nand_Address_Typedef 
  39:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****           structure passed as parameter.
  40:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
  41:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       (+) Read the NAND flash status operation using the function HAL_NAND_Read_Status().
  42:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         
  43:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       (+) You can also control the NAND device by calling the control APIs HAL_NAND_ECC_Enable()/
  44:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****           HAL_NAND_ECC_Disable() to respectively enable/disable the ECC code correction
  45:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****           feature or the function HAL_NAND_GetECC() to get the ECC correction code. 
  46:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****        
  47:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       (+) You can monitor the NAND device HAL state by calling the function
  48:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****           HAL_NAND_GetState()  
  49:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
  50:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     [..]
  51:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       (@) This driver is a set of generic APIs which handle standard NAND flash operations.
  52:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****           If a NAND flash device contains different operations and/or implementations, 
  53:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****           it should be implemented separately.
  54:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
  55:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     *** Callback registration ***
  56:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     =============================================
  57:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     [..]
  58:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       The compilation define  USE_HAL_NAND_REGISTER_CALLBACKS when set to 1
  59:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       allows the user to configure dynamically the driver callbacks.
  60:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
  61:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       Use Functions @ref HAL_NAND_RegisterCallback() to register a user callback,
  62:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       it allows to register following callbacks:
  63:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         (+) MspInitCallback    : NAND MspInit.
  64:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         (+) MspDeInitCallback  : NAND MspDeInit.
  65:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       This function takes as parameters the HAL peripheral handle, the Callback ID
  66:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       and a pointer to the user callback function.
  67:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
  68:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       Use function @ref HAL_NAND_UnRegisterCallback() to reset a callback to the default
  69:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       weak (surcharged) function. It allows to reset following callbacks:
  70:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         (+) MspInitCallback    : NAND MspInit.
  71:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         (+) MspDeInitCallback  : NAND MspDeInit.
  72:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       This function) takes as parameters the HAL peripheral handle and the Callback ID.
  73:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
  74:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       By default, after the @ref HAL_NAND_Init and if the state is HAL_NAND_STATE_RESET
  75:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       all callbacks are reset to the corresponding legacy weak (surcharged) functions.
  76:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       Exception done for MspInit and MspDeInit callbacks that are respectively
  77:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       reset to the legacy weak (surcharged) functions in the @ref HAL_NAND_Init
  78:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       and @ref  HAL_NAND_DeInit only when these callbacks are null (not registered beforehand).
  79:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       If not, MspInit or MspDeInit are not null, the @ref HAL_NAND_Init and @ref HAL_NAND_DeInit
  80:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       keep and use the user MspInit/MspDeInit callbacks (registered beforehand)
  81:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
  82:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       Callbacks can be registered/unregistered in READY state only.
  83:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       Exception done for MspInit/MspDeInit callbacks that can be registered/unregistered
  84:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       in READY or RESET state, thus registered (user) MspInit/DeInit callbacks can be used
  85:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       during the Init/DeInit.
  86:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       In that case first register the MspInit/MspDeInit user callbacks
ARM GAS  /tmp/ccHfptsR.s 			page 3


  87:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       using @ref HAL_NAND_RegisterCallback before calling @ref HAL_NAND_DeInit
  88:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       or @ref HAL_NAND_Init function.
  89:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
  90:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       When The compilation define USE_HAL_NAND_REGISTER_CALLBACKS is set to 0 or
  91:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       not defined, the callback registering feature is not available
  92:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       and weak (surcharged) callbacks are used.
  93:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
  94:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   @endverbatim
  95:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   ******************************************************************************
  96:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @attention
  97:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   *
  98:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
  99:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * All rights reserved.</center></h2>
 100:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   *
 101:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 102:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * the "License"; You may not use this file except in compliance with the
 103:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * License. You may obtain a copy of the License at:
 104:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   *                        opensource.org/licenses/BSD-3-Clause
 105:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   *
 106:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   ******************************************************************************
 107:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   */ 
 108:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 109:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** /* Includes ------------------------------------------------------------------*/
 110:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** #include "stm32f4xx_hal.h"
 111:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 112:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** /** @addtogroup STM32F4xx_HAL_Driver
 113:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @{
 114:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   */
 115:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 116:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 117:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** #ifdef HAL_NAND_MODULE_ENABLED
 118:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 119:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** #if defined(STM32F405xx) || defined(STM32F415xx) || defined(STM32F407xx) || defined(STM32F417xx) ||
 120:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     defined(STM32F427xx) || defined(STM32F437xx) || defined(STM32F429xx) || defined(STM32F439xx) ||
 121:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     defined(STM32F446xx) || defined(STM32F469xx) || defined(STM32F479xx)
 122:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 123:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** /** @defgroup NAND NAND 
 124:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @brief NAND HAL module driver
 125:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @{
 126:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   */
 127:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 128:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** /* Private typedef -----------------------------------------------------------*/
 129:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** /* Private define ------------------------------------------------------------*/
 130:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** /** @defgroup NAND_Private_Constants NAND Private Constants
 131:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @{
 132:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   */
 133:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 134:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** /**
 135:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @}
 136:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   */
 137:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 138:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** /* Private macro -------------------------------------------------------------*/    
 139:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** /** @defgroup NAND_Private_Macros NAND Private Macros
 140:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @{
 141:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   */
 142:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 143:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** /**
ARM GAS  /tmp/ccHfptsR.s 			page 4


 144:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @}
 145:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   */
 146:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** /* Private variables ---------------------------------------------------------*/
 147:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** /* Private function prototypes -----------------------------------------------*/
 148:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** /* Exported functions --------------------------------------------------------*/
 149:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** /** @defgroup NAND_Exported_Functions NAND Exported Functions
 150:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @{
 151:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   */
 152:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 153:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** /** @defgroup NAND_Exported_Functions_Group1 Initialization and de-initialization functions 
 154:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @brief    Initialization and Configuration functions 
 155:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   *
 156:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   @verbatim    
 157:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   ==============================================================================
 158:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****             ##### NAND Initialization and de-initialization functions #####
 159:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   ==============================================================================
 160:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   [..]  
 161:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     This section provides functions allowing to initialize/de-initialize
 162:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     the NAND memory
 163:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 164:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** @endverbatim
 165:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @{
 166:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   */
 167:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 168:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** /**
 169:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @brief  Perform NAND memory Initialization sequence
 170:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @param  hnand pointer to a NAND_HandleTypeDef structure that contains
 171:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   *                the configuration information for NAND module.
 172:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @param  ComSpace_Timing pointer to Common space timing structure
 173:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @param  AttSpace_Timing pointer to Attribute space timing structure
 174:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @retval HAL status
 175:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   */
 176:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** HAL_StatusTypeDef  HAL_NAND_Init(NAND_HandleTypeDef *hnand, FMC_NAND_PCC_TimingTypeDef *ComSpace_Ti
 177:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** {
 178:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Check the NAND handle state */
 179:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   if(hnand == NULL)
 180:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 181:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****      return HAL_ERROR;
 182:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
 183:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 184:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   if(hnand->State == HAL_NAND_STATE_RESET)
 185:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 186:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     /* Allocate lock resource and initialize it */
 187:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     hnand->Lock = HAL_UNLOCKED;
 188:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 189:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** #if (USE_HAL_NAND_REGISTER_CALLBACKS == 1)
 190:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     if(hnand->MspInitCallback == NULL)
 191:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 192:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       hnand->MspInitCallback = HAL_NAND_MspInit;
 193:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     }
 194:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     hnand->ItCallback = HAL_NAND_ITCallback;
 195:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 196:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     /* Init the low level hardware */
 197:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     hnand->MspInitCallback(hnand);
 198:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** #else
 199:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     /* Initialize the low level hardware (MSP) */
 200:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     HAL_NAND_MspInit(hnand);
ARM GAS  /tmp/ccHfptsR.s 			page 5


 201:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** #endif
 202:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
 203:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 204:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Initialize NAND control Interface */
 205:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   FMC_NAND_Init(hnand->Instance, &(hnand->Init));
 206:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 207:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Initialize NAND common space timing Interface */  
 208:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   FMC_NAND_CommonSpace_Timing_Init(hnand->Instance, ComSpace_Timing, hnand->Init.NandBank);
 209:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 210:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Initialize NAND attribute space timing Interface */  
 211:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   FMC_NAND_AttributeSpace_Timing_Init(hnand->Instance, AttSpace_Timing, hnand->Init.NandBank);
 212:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 213:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Enable the NAND device */
 214:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   __FMC_NAND_ENABLE(hnand->Instance, hnand->Init.NandBank);
 215:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 216:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Update the NAND controller state */
 217:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   hnand->State = HAL_NAND_STATE_READY;
 218:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 219:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   return HAL_OK;
 220:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** }
 221:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 222:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** /**
 223:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @brief  Perform NAND memory De-Initialization sequence
 224:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @param  hnand pointer to a NAND_HandleTypeDef structure that contains
 225:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   *                the configuration information for NAND module.
 226:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @retval HAL status
 227:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   */
 228:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** HAL_StatusTypeDef HAL_NAND_DeInit(NAND_HandleTypeDef *hnand)  
 229:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** {
 230:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** #if (USE_HAL_NAND_REGISTER_CALLBACKS == 1)
 231:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   if(hnand->MspDeInitCallback == NULL)
 232:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 233:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     hnand->MspDeInitCallback = HAL_NAND_MspDeInit;
 234:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
 235:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 236:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* DeInit the low level hardware */
 237:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   hnand->MspDeInitCallback(hnand);
 238:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** #else
 239:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Initialize the low level hardware (MSP) */
 240:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   HAL_NAND_MspDeInit(hnand);
 241:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** #endif
 242:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 243:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Configure the NAND registers with their reset values */
 244:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   FMC_NAND_DeInit(hnand->Instance, hnand->Init.NandBank);
 245:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 246:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Reset the NAND controller state */
 247:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   hnand->State = HAL_NAND_STATE_RESET;
 248:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 249:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Release Lock */
 250:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   __HAL_UNLOCK(hnand);
 251:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 252:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   return HAL_OK;
 253:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** }
 254:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 255:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** /**
 256:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @brief  NAND MSP Init
 257:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @param  hnand pointer to a NAND_HandleTypeDef structure that contains
ARM GAS  /tmp/ccHfptsR.s 			page 6


 258:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   *                the configuration information for NAND module.
 259:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @retval None
 260:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   */
 261:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** __weak void HAL_NAND_MspInit(NAND_HandleTypeDef *hnand)
 262:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** {
  30              		.loc 1 262 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
 263:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Prevent unused argument(s) compilation warning */
 264:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   UNUSED(hnand);
  35              		.loc 1 264 3 view .LVU1
 265:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 266:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****             the HAL_NAND_MspInit could be implemented in the user file
 267:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****    */ 
 268:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** }
  36              		.loc 1 268 1 is_stmt 0 view .LVU2
  37 0000 7047     		bx	lr
  38              		.cfi_endproc
  39              	.LFE134:
  41              		.section	.text.HAL_NAND_Init,"ax",%progbits
  42              		.align	1
  43              		.global	HAL_NAND_Init
  44              		.syntax unified
  45              		.thumb
  46              		.thumb_func
  47              		.fpu fpv4-sp-d16
  49              	HAL_NAND_Init:
  50              	.LVL1:
  51              	.LFB132:
 177:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Check the NAND handle state */
  52              		.loc 1 177 1 is_stmt 1 view -0
  53              		.cfi_startproc
  54              		@ args = 0, pretend = 0, frame = 0
  55              		@ frame_needed = 0, uses_anonymous_args = 0
 179:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
  56              		.loc 1 179 3 view .LVU4
 179:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
  57              		.loc 1 179 5 is_stmt 0 view .LVU5
  58 0000 68B3     		cbz	r0, .L7
 177:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Check the NAND handle state */
  59              		.loc 1 177 1 view .LVU6
  60 0002 70B5     		push	{r4, r5, r6, lr}
  61              	.LCFI0:
  62              		.cfi_def_cfa_offset 16
  63              		.cfi_offset 4, -16
  64              		.cfi_offset 5, -12
  65              		.cfi_offset 6, -8
  66              		.cfi_offset 14, -4
  67 0004 0E46     		mov	r6, r1
  68 0006 1546     		mov	r5, r2
  69 0008 0446     		mov	r4, r0
 184:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
  70              		.loc 1 184 3 is_stmt 1 view .LVU7
 184:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
  71              		.loc 1 184 11 is_stmt 0 view .LVU8
ARM GAS  /tmp/ccHfptsR.s 			page 7


  72 000a 90F82130 		ldrb	r3, [r0, #33]	@ zero_extendqisi2
 184:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
  73              		.loc 1 184 5 view .LVU9
  74 000e DBB1     		cbz	r3, .L12
  75              	.LVL2:
  76              	.L4:
 205:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
  77              		.loc 1 205 3 is_stmt 1 view .LVU10
  78 0010 2146     		mov	r1, r4
  79 0012 51F8040B 		ldr	r0, [r1], #4
  80 0016 FFF7FEFF 		bl	FSMC_NAND_Init
  81              	.LVL3:
 208:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
  82              		.loc 1 208 3 view .LVU11
  83 001a 6268     		ldr	r2, [r4, #4]
  84 001c 3146     		mov	r1, r6
  85 001e 2068     		ldr	r0, [r4]
  86 0020 FFF7FEFF 		bl	FSMC_NAND_CommonSpace_Timing_Init
  87              	.LVL4:
 211:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
  88              		.loc 1 211 3 view .LVU12
  89 0024 6268     		ldr	r2, [r4, #4]
  90 0026 2946     		mov	r1, r5
  91 0028 2068     		ldr	r0, [r4]
  92 002a FFF7FEFF 		bl	FSMC_NAND_AttributeSpace_Timing_Init
  93              	.LVL5:
 214:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
  94              		.loc 1 214 3 view .LVU13
  95 002e 6368     		ldr	r3, [r4, #4]
  96 0030 102B     		cmp	r3, #16
  97 0032 0ED0     		beq	.L13
 214:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
  98              		.loc 1 214 3 is_stmt 0 discriminator 2 view .LVU14
  99 0034 2268     		ldr	r2, [r4]
 100 0036 136A     		ldr	r3, [r2, #32]
 101 0038 43F00403 		orr	r3, r3, #4
 102 003c 1362     		str	r3, [r2, #32]
 103              	.L6:
 217:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 104              		.loc 1 217 3 is_stmt 1 view .LVU15
 217:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 105              		.loc 1 217 16 is_stmt 0 view .LVU16
 106 003e 0123     		movs	r3, #1
 107 0040 84F82130 		strb	r3, [r4, #33]
 219:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** }
 108              		.loc 1 219 3 is_stmt 1 view .LVU17
 219:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** }
 109              		.loc 1 219 10 is_stmt 0 view .LVU18
 110 0044 0020     		movs	r0, #0
 220:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 111              		.loc 1 220 1 view .LVU19
 112 0046 70BD     		pop	{r4, r5, r6, pc}
 113              	.LVL6:
 114              	.L12:
 187:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 115              		.loc 1 187 5 is_stmt 1 view .LVU20
 187:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
ARM GAS  /tmp/ccHfptsR.s 			page 8


 116              		.loc 1 187 17 is_stmt 0 view .LVU21
 117 0048 80F82030 		strb	r3, [r0, #32]
 200:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** #endif
 118              		.loc 1 200 5 is_stmt 1 view .LVU22
 119 004c FFF7FEFF 		bl	HAL_NAND_MspInit
 120              	.LVL7:
 200:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** #endif
 121              		.loc 1 200 5 is_stmt 0 view .LVU23
 122 0050 DEE7     		b	.L4
 123              	.L13:
 214:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 124              		.loc 1 214 3 discriminator 1 view .LVU24
 125 0052 2268     		ldr	r2, [r4]
 126 0054 1368     		ldr	r3, [r2]
 127 0056 43F00403 		orr	r3, r3, #4
 128 005a 1360     		str	r3, [r2]
 129 005c EFE7     		b	.L6
 130              	.LVL8:
 131              	.L7:
 132              	.LCFI1:
 133              		.cfi_def_cfa_offset 0
 134              		.cfi_restore 4
 135              		.cfi_restore 5
 136              		.cfi_restore 6
 137              		.cfi_restore 14
 181:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
 138              		.loc 1 181 13 view .LVU25
 139 005e 0120     		movs	r0, #1
 140              	.LVL9:
 220:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 141              		.loc 1 220 1 view .LVU26
 142 0060 7047     		bx	lr
 143              		.cfi_endproc
 144              	.LFE132:
 146              		.section	.text.HAL_NAND_MspDeInit,"ax",%progbits
 147              		.align	1
 148              		.weak	HAL_NAND_MspDeInit
 149              		.syntax unified
 150              		.thumb
 151              		.thumb_func
 152              		.fpu fpv4-sp-d16
 154              	HAL_NAND_MspDeInit:
 155              	.LVL10:
 156              	.LFB135:
 269:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 270:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** /**
 271:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @brief  NAND MSP DeInit
 272:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @param  hnand pointer to a NAND_HandleTypeDef structure that contains
 273:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   *                the configuration information for NAND module.
 274:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @retval None
 275:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   */
 276:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** __weak void HAL_NAND_MspDeInit(NAND_HandleTypeDef *hnand)
 277:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** {
 157              		.loc 1 277 1 is_stmt 1 view -0
 158              		.cfi_startproc
 159              		@ args = 0, pretend = 0, frame = 0
 160              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccHfptsR.s 			page 9


 161              		@ link register save eliminated.
 278:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Prevent unused argument(s) compilation warning */
 279:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   UNUSED(hnand);
 162              		.loc 1 279 3 view .LVU28
 280:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 281:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****             the HAL_NAND_MspDeInit could be implemented in the user file
 282:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****    */ 
 283:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** }
 163              		.loc 1 283 1 is_stmt 0 view .LVU29
 164 0000 7047     		bx	lr
 165              		.cfi_endproc
 166              	.LFE135:
 168              		.section	.text.HAL_NAND_DeInit,"ax",%progbits
 169              		.align	1
 170              		.global	HAL_NAND_DeInit
 171              		.syntax unified
 172              		.thumb
 173              		.thumb_func
 174              		.fpu fpv4-sp-d16
 176              	HAL_NAND_DeInit:
 177              	.LVL11:
 178              	.LFB133:
 229:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** #if (USE_HAL_NAND_REGISTER_CALLBACKS == 1)
 179              		.loc 1 229 1 is_stmt 1 view -0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 0
 182              		@ frame_needed = 0, uses_anonymous_args = 0
 229:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** #if (USE_HAL_NAND_REGISTER_CALLBACKS == 1)
 183              		.loc 1 229 1 is_stmt 0 view .LVU31
 184 0000 10B5     		push	{r4, lr}
 185              	.LCFI2:
 186              		.cfi_def_cfa_offset 8
 187              		.cfi_offset 4, -8
 188              		.cfi_offset 14, -4
 189 0002 0446     		mov	r4, r0
 240:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** #endif
 190              		.loc 1 240 3 is_stmt 1 view .LVU32
 191 0004 FFF7FEFF 		bl	HAL_NAND_MspDeInit
 192              	.LVL12:
 244:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 193              		.loc 1 244 3 view .LVU33
 194 0008 6168     		ldr	r1, [r4, #4]
 195 000a 2068     		ldr	r0, [r4]
 196 000c FFF7FEFF 		bl	FSMC_NAND_DeInit
 197              	.LVL13:
 247:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 198              		.loc 1 247 3 view .LVU34
 247:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 199              		.loc 1 247 16 is_stmt 0 view .LVU35
 200 0010 0020     		movs	r0, #0
 201 0012 84F82100 		strb	r0, [r4, #33]
 250:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 202              		.loc 1 250 3 is_stmt 1 view .LVU36
 250:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 203              		.loc 1 250 3 view .LVU37
 204 0016 84F82000 		strb	r0, [r4, #32]
 250:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
ARM GAS  /tmp/ccHfptsR.s 			page 10


 205              		.loc 1 250 3 view .LVU38
 252:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** }
 206              		.loc 1 252 3 view .LVU39
 253:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 207              		.loc 1 253 1 is_stmt 0 view .LVU40
 208 001a 10BD     		pop	{r4, pc}
 253:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 209              		.loc 1 253 1 view .LVU41
 210              		.cfi_endproc
 211              	.LFE133:
 213              		.section	.text.HAL_NAND_ITCallback,"ax",%progbits
 214              		.align	1
 215              		.weak	HAL_NAND_ITCallback
 216              		.syntax unified
 217              		.thumb
 218              		.thumb_func
 219              		.fpu fpv4-sp-d16
 221              	HAL_NAND_ITCallback:
 222              	.LVL14:
 223              	.LFB137:
 284:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 285:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 286:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** /**
 287:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @brief  This function handles NAND device interrupt request.
 288:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @param  hnand pointer to a NAND_HandleTypeDef structure that contains
 289:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   *                the configuration information for NAND module.
 290:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @retval HAL status
 291:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** */
 292:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** void HAL_NAND_IRQHandler(NAND_HandleTypeDef *hnand)
 293:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** {
 294:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Check NAND interrupt Rising edge flag */
 295:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   if(__FMC_NAND_GET_FLAG(hnand->Instance, hnand->Init.NandBank, FMC_FLAG_RISING_EDGE))
 296:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 297:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     /* NAND interrupt callback*/
 298:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** #if (USE_HAL_NAND_REGISTER_CALLBACKS == 1)
 299:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     hnand->ItCallback(hnand);
 300:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** #else
 301:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     HAL_NAND_ITCallback(hnand);
 302:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** #endif
 303:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 304:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     /* Clear NAND interrupt Rising edge pending bit */
 305:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     __FMC_NAND_CLEAR_FLAG(hnand->Instance, hnand->Init.NandBank, FMC_FLAG_RISING_EDGE);
 306:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
 307:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 308:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Check NAND interrupt Level flag */
 309:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   if(__FMC_NAND_GET_FLAG(hnand->Instance, hnand->Init.NandBank, FMC_FLAG_LEVEL))
 310:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 311:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     /* NAND interrupt callback*/
 312:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** #if (USE_HAL_NAND_REGISTER_CALLBACKS == 1)
 313:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     hnand->ItCallback(hnand);
 314:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** #else
 315:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     HAL_NAND_ITCallback(hnand);
 316:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** #endif
 317:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 318:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     /* Clear NAND interrupt Level pending bit */
 319:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     __FMC_NAND_CLEAR_FLAG(hnand->Instance, hnand->Init.NandBank, FMC_FLAG_LEVEL);
 320:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
ARM GAS  /tmp/ccHfptsR.s 			page 11


 321:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 322:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Check NAND interrupt Falling edge flag */
 323:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   if(__FMC_NAND_GET_FLAG(hnand->Instance, hnand->Init.NandBank, FMC_FLAG_FALLING_EDGE))
 324:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 325:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     /* NAND interrupt callback*/
 326:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** #if (USE_HAL_NAND_REGISTER_CALLBACKS == 1)
 327:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     hnand->ItCallback(hnand);
 328:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** #else
 329:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     HAL_NAND_ITCallback(hnand);
 330:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** #endif
 331:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 332:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     /* Clear NAND interrupt Falling edge pending bit */
 333:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     __FMC_NAND_CLEAR_FLAG(hnand->Instance, hnand->Init.NandBank, FMC_FLAG_FALLING_EDGE);
 334:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
 335:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 336:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Check NAND interrupt FIFO empty flag */
 337:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   if(__FMC_NAND_GET_FLAG(hnand->Instance, hnand->Init.NandBank, FMC_FLAG_FEMPT))
 338:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 339:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     /* NAND interrupt callback*/
 340:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** #if (USE_HAL_NAND_REGISTER_CALLBACKS == 1)
 341:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     hnand->ItCallback(hnand);
 342:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** #else
 343:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     HAL_NAND_ITCallback(hnand);
 344:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** #endif
 345:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 346:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     /* Clear NAND interrupt FIFO empty pending bit */
 347:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     __FMC_NAND_CLEAR_FLAG(hnand->Instance, hnand->Init.NandBank, FMC_FLAG_FEMPT);
 348:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
 349:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** }
 350:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 351:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** /**
 352:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @brief  NAND interrupt feature callback
 353:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @param  hnand pointer to a NAND_HandleTypeDef structure that contains
 354:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   *                the configuration information for NAND module.
 355:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @retval None
 356:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   */
 357:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** __weak void HAL_NAND_ITCallback(NAND_HandleTypeDef *hnand)
 358:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** {
 224              		.loc 1 358 1 is_stmt 1 view -0
 225              		.cfi_startproc
 226              		@ args = 0, pretend = 0, frame = 0
 227              		@ frame_needed = 0, uses_anonymous_args = 0
 228              		@ link register save eliminated.
 359:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Prevent unused argument(s) compilation warning */
 360:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   UNUSED(hnand);
 229              		.loc 1 360 3 view .LVU43
 361:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 362:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****             the HAL_NAND_ITCallback could be implemented in the user file
 363:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****    */
 364:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** }
 230              		.loc 1 364 1 is_stmt 0 view .LVU44
 231 0000 7047     		bx	lr
 232              		.cfi_endproc
 233              	.LFE137:
 235              		.section	.text.HAL_NAND_IRQHandler,"ax",%progbits
 236              		.align	1
 237              		.global	HAL_NAND_IRQHandler
ARM GAS  /tmp/ccHfptsR.s 			page 12


 238              		.syntax unified
 239              		.thumb
 240              		.thumb_func
 241              		.fpu fpv4-sp-d16
 243              	HAL_NAND_IRQHandler:
 244              	.LVL15:
 245              	.LFB136:
 293:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Check NAND interrupt Rising edge flag */
 246              		.loc 1 293 1 is_stmt 1 view -0
 247              		.cfi_startproc
 248              		@ args = 0, pretend = 0, frame = 0
 249              		@ frame_needed = 0, uses_anonymous_args = 0
 293:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Check NAND interrupt Rising edge flag */
 250              		.loc 1 293 1 is_stmt 0 view .LVU46
 251 0000 10B5     		push	{r4, lr}
 252              	.LCFI3:
 253              		.cfi_def_cfa_offset 8
 254              		.cfi_offset 4, -8
 255              		.cfi_offset 14, -4
 256 0002 0446     		mov	r4, r0
 295:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 257              		.loc 1 295 3 is_stmt 1 view .LVU47
 295:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 258              		.loc 1 295 6 is_stmt 0 view .LVU48
 259 0004 4368     		ldr	r3, [r0, #4]
 260 0006 102B     		cmp	r3, #16
 261 0008 20D0     		beq	.L36
 295:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 262              		.loc 1 295 6 discriminator 2 view .LVU49
 263 000a 0368     		ldr	r3, [r0]
 264 000c 5B6A     		ldr	r3, [r3, #36]
 265 000e 03F00103 		and	r3, r3, #1
 266              	.L20:
 295:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 267              		.loc 1 295 5 discriminator 4 view .LVU50
 268 0012 03BB     		cbnz	r3, .L37
 269              	.LVL16:
 270              	.L21:
 309:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 271              		.loc 1 309 3 is_stmt 1 view .LVU51
 309:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 272              		.loc 1 309 6 is_stmt 0 view .LVU52
 273 0014 6368     		ldr	r3, [r4, #4]
 274 0016 102B     		cmp	r3, #16
 275 0018 2FD0     		beq	.L38
 309:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 276              		.loc 1 309 6 discriminator 2 view .LVU53
 277 001a 2368     		ldr	r3, [r4]
 278 001c 5B6A     		ldr	r3, [r3, #36]
 279 001e C3F34003 		ubfx	r3, r3, #1, #1
 280              	.L24:
 309:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 281              		.loc 1 309 5 discriminator 4 view .LVU54
 282 0022 002B     		cmp	r3, #0
 283 0024 2ED1     		bne	.L39
 284              	.L25:
 323:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
ARM GAS  /tmp/ccHfptsR.s 			page 13


 285              		.loc 1 323 3 is_stmt 1 view .LVU55
 323:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 286              		.loc 1 323 6 is_stmt 0 view .LVU56
 287 0026 6368     		ldr	r3, [r4, #4]
 288 0028 102B     		cmp	r3, #16
 289 002a 3DD0     		beq	.L40
 323:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 290              		.loc 1 323 6 discriminator 2 view .LVU57
 291 002c 2368     		ldr	r3, [r4]
 292 002e 5B6A     		ldr	r3, [r3, #36]
 293 0030 C3F38003 		ubfx	r3, r3, #2, #1
 294              	.L28:
 323:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 295              		.loc 1 323 5 discriminator 4 view .LVU58
 296 0034 002B     		cmp	r3, #0
 297 0036 3CD1     		bne	.L41
 298              	.L29:
 337:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 299              		.loc 1 337 3 is_stmt 1 view .LVU59
 337:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 300              		.loc 1 337 6 is_stmt 0 view .LVU60
 301 0038 6368     		ldr	r3, [r4, #4]
 302 003a 102B     		cmp	r3, #16
 303 003c 4BD0     		beq	.L42
 337:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 304              		.loc 1 337 6 discriminator 2 view .LVU61
 305 003e 2368     		ldr	r3, [r4]
 306 0040 5B6A     		ldr	r3, [r3, #36]
 307 0042 C3F38013 		ubfx	r3, r3, #6, #1
 308              	.L32:
 337:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 309              		.loc 1 337 5 discriminator 4 view .LVU62
 310 0046 002B     		cmp	r3, #0
 311 0048 4AD1     		bne	.L43
 312              	.L18:
 349:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 313              		.loc 1 349 1 view .LVU63
 314 004a 10BD     		pop	{r4, pc}
 315              	.LVL17:
 316              	.L36:
 295:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 317              		.loc 1 295 6 discriminator 1 view .LVU64
 318 004c 0368     		ldr	r3, [r0]
 319 004e 5B68     		ldr	r3, [r3, #4]
 320 0050 03F00103 		and	r3, r3, #1
 321 0054 DDE7     		b	.L20
 322              	.L37:
 301:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** #endif
 323              		.loc 1 301 5 is_stmt 1 view .LVU65
 324 0056 2046     		mov	r0, r4
 325              	.LVL18:
 301:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** #endif
 326              		.loc 1 301 5 is_stmt 0 view .LVU66
 327 0058 FFF7FEFF 		bl	HAL_NAND_ITCallback
 328              	.LVL19:
 305:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
 329              		.loc 1 305 5 is_stmt 1 view .LVU67
ARM GAS  /tmp/ccHfptsR.s 			page 14


 330 005c 6368     		ldr	r3, [r4, #4]
 331 005e 102B     		cmp	r3, #16
 332 0060 05D0     		beq	.L44
 305:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
 333              		.loc 1 305 5 is_stmt 0 discriminator 2 view .LVU68
 334 0062 2268     		ldr	r2, [r4]
 335 0064 536A     		ldr	r3, [r2, #36]
 336 0066 23F00103 		bic	r3, r3, #1
 337 006a 5362     		str	r3, [r2, #36]
 338 006c D2E7     		b	.L21
 339              	.L44:
 305:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
 340              		.loc 1 305 5 discriminator 1 view .LVU69
 341 006e 2268     		ldr	r2, [r4]
 342 0070 5368     		ldr	r3, [r2, #4]
 343 0072 23F00103 		bic	r3, r3, #1
 344 0076 5360     		str	r3, [r2, #4]
 345 0078 CCE7     		b	.L21
 346              	.L38:
 309:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 347              		.loc 1 309 6 discriminator 1 view .LVU70
 348 007a 2368     		ldr	r3, [r4]
 349 007c 5B68     		ldr	r3, [r3, #4]
 350 007e C3F34003 		ubfx	r3, r3, #1, #1
 351 0082 CEE7     		b	.L24
 352              	.L39:
 315:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** #endif
 353              		.loc 1 315 5 is_stmt 1 view .LVU71
 354 0084 2046     		mov	r0, r4
 355 0086 FFF7FEFF 		bl	HAL_NAND_ITCallback
 356              	.LVL20:
 319:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
 357              		.loc 1 319 5 view .LVU72
 358 008a 6368     		ldr	r3, [r4, #4]
 359 008c 102B     		cmp	r3, #16
 360 008e 05D0     		beq	.L45
 319:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
 361              		.loc 1 319 5 is_stmt 0 discriminator 2 view .LVU73
 362 0090 2268     		ldr	r2, [r4]
 363 0092 536A     		ldr	r3, [r2, #36]
 364 0094 23F00203 		bic	r3, r3, #2
 365 0098 5362     		str	r3, [r2, #36]
 366 009a C4E7     		b	.L25
 367              	.L45:
 319:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
 368              		.loc 1 319 5 discriminator 1 view .LVU74
 369 009c 2268     		ldr	r2, [r4]
 370 009e 5368     		ldr	r3, [r2, #4]
 371 00a0 23F00203 		bic	r3, r3, #2
 372 00a4 5360     		str	r3, [r2, #4]
 373 00a6 BEE7     		b	.L25
 374              	.L40:
 323:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 375              		.loc 1 323 6 discriminator 1 view .LVU75
 376 00a8 2368     		ldr	r3, [r4]
 377 00aa 5B68     		ldr	r3, [r3, #4]
 378 00ac C3F38003 		ubfx	r3, r3, #2, #1
ARM GAS  /tmp/ccHfptsR.s 			page 15


 379 00b0 C0E7     		b	.L28
 380              	.L41:
 329:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** #endif
 381              		.loc 1 329 5 is_stmt 1 view .LVU76
 382 00b2 2046     		mov	r0, r4
 383 00b4 FFF7FEFF 		bl	HAL_NAND_ITCallback
 384              	.LVL21:
 333:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
 385              		.loc 1 333 5 view .LVU77
 386 00b8 6368     		ldr	r3, [r4, #4]
 387 00ba 102B     		cmp	r3, #16
 388 00bc 05D0     		beq	.L46
 333:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
 389              		.loc 1 333 5 is_stmt 0 discriminator 2 view .LVU78
 390 00be 2268     		ldr	r2, [r4]
 391 00c0 536A     		ldr	r3, [r2, #36]
 392 00c2 23F00403 		bic	r3, r3, #4
 393 00c6 5362     		str	r3, [r2, #36]
 394 00c8 B6E7     		b	.L29
 395              	.L46:
 333:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
 396              		.loc 1 333 5 discriminator 1 view .LVU79
 397 00ca 2268     		ldr	r2, [r4]
 398 00cc 5368     		ldr	r3, [r2, #4]
 399 00ce 23F00403 		bic	r3, r3, #4
 400 00d2 5360     		str	r3, [r2, #4]
 401 00d4 B0E7     		b	.L29
 402              	.L42:
 337:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 403              		.loc 1 337 6 discriminator 1 view .LVU80
 404 00d6 2368     		ldr	r3, [r4]
 405 00d8 5B68     		ldr	r3, [r3, #4]
 406 00da C3F38013 		ubfx	r3, r3, #6, #1
 407 00de B2E7     		b	.L32
 408              	.L43:
 343:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** #endif
 409              		.loc 1 343 5 is_stmt 1 view .LVU81
 410 00e0 2046     		mov	r0, r4
 411 00e2 FFF7FEFF 		bl	HAL_NAND_ITCallback
 412              	.LVL22:
 347:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
 413              		.loc 1 347 5 view .LVU82
 414 00e6 6368     		ldr	r3, [r4, #4]
 415 00e8 102B     		cmp	r3, #16
 416 00ea 05D0     		beq	.L47
 347:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
 417              		.loc 1 347 5 is_stmt 0 discriminator 2 view .LVU83
 418 00ec 2268     		ldr	r2, [r4]
 419 00ee 536A     		ldr	r3, [r2, #36]
 420 00f0 23F04003 		bic	r3, r3, #64
 421 00f4 5362     		str	r3, [r2, #36]
 349:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 422              		.loc 1 349 1 discriminator 2 view .LVU84
 423 00f6 A8E7     		b	.L18
 424              	.L47:
 347:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
 425              		.loc 1 347 5 discriminator 1 view .LVU85
ARM GAS  /tmp/ccHfptsR.s 			page 16


 426 00f8 2268     		ldr	r2, [r4]
 427 00fa 5368     		ldr	r3, [r2, #4]
 428 00fc 23F04003 		bic	r3, r3, #64
 429 0100 5360     		str	r3, [r2, #4]
 430 0102 A2E7     		b	.L18
 431              		.cfi_endproc
 432              	.LFE136:
 434              		.section	.text.HAL_NAND_Read_ID,"ax",%progbits
 435              		.align	1
 436              		.global	HAL_NAND_Read_ID
 437              		.syntax unified
 438              		.thumb
 439              		.thumb_func
 440              		.fpu fpv4-sp-d16
 442              	HAL_NAND_Read_ID:
 443              	.LVL23:
 444              	.LFB138:
 365:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****  
 366:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** /**
 367:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @}
 368:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   */
 369:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 370:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** /** @defgroup NAND_Exported_Functions_Group2 Input and Output functions 
 371:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @brief    Input Output and memory control functions 
 372:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   *
 373:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   @verbatim    
 374:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   ==============================================================================
 375:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****                     ##### NAND Input and Output functions #####
 376:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   ==============================================================================
 377:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   [..]  
 378:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     This section provides functions allowing to use and control the NAND 
 379:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     memory
 380:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 381:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** @endverbatim
 382:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @{
 383:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   */
 384:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 385:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** /**
 386:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @brief  Read the NAND memory electronic signature
 387:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @param  hnand pointer to a NAND_HandleTypeDef structure that contains
 388:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   *                the configuration information for NAND module.
 389:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @param  pNAND_ID NAND ID structure
 390:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @retval HAL status
 391:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   */
 392:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** HAL_StatusTypeDef HAL_NAND_Read_ID(NAND_HandleTypeDef *hnand, NAND_IDTypeDef *pNAND_ID)
 393:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** {
 445              		.loc 1 393 1 is_stmt 1 view -0
 446              		.cfi_startproc
 447              		@ args = 0, pretend = 0, frame = 8
 448              		@ frame_needed = 0, uses_anonymous_args = 0
 449              		@ link register save eliminated.
 450              		.loc 1 393 1 is_stmt 0 view .LVU87
 451 0000 10B4     		push	{r4}
 452              	.LCFI4:
 453              		.cfi_def_cfa_offset 4
 454              		.cfi_offset 4, -4
 455 0002 83B0     		sub	sp, sp, #12
ARM GAS  /tmp/ccHfptsR.s 			page 17


 456              	.LCFI5:
 457              		.cfi_def_cfa_offset 16
 394:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   __IO uint32_t data = 0U;
 458              		.loc 1 394 3 is_stmt 1 view .LVU88
 459              		.loc 1 394 17 is_stmt 0 view .LVU89
 460 0004 0022     		movs	r2, #0
 461 0006 0192     		str	r2, [sp, #4]
 395:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   __IO uint32_t data1 = 0U;
 462              		.loc 1 395 3 is_stmt 1 view .LVU90
 463              		.loc 1 395 17 is_stmt 0 view .LVU91
 464 0008 0092     		str	r2, [sp]
 396:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   uint32_t deviceaddress = 0U;
 465              		.loc 1 396 3 is_stmt 1 view .LVU92
 466              	.LVL24:
 397:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 398:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Process Locked */
 399:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   __HAL_LOCK(hnand);  
 467              		.loc 1 399 3 view .LVU93
 468              		.loc 1 399 3 view .LVU94
 469 000a 90F82020 		ldrb	r2, [r0, #32]	@ zero_extendqisi2
 470 000e 012A     		cmp	r2, #1
 471 0010 47D0     		beq	.L53
 472 0012 0346     		mov	r3, r0
 473              		.loc 1 399 3 discriminator 2 view .LVU95
 474 0014 0122     		movs	r2, #1
 475 0016 80F82020 		strb	r2, [r0, #32]
 476              		.loc 1 399 3 discriminator 2 view .LVU96
 400:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 401:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Check the NAND controller state */
 402:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   if(hnand->State == HAL_NAND_STATE_BUSY)
 477              		.loc 1 402 3 discriminator 2 view .LVU97
 478              		.loc 1 402 11 is_stmt 0 discriminator 2 view .LVU98
 479 001a 90F82100 		ldrb	r0, [r0, #33]	@ zero_extendqisi2
 480              	.LVL25:
 481              		.loc 1 402 11 discriminator 2 view .LVU99
 482 001e C0B2     		uxtb	r0, r0
 483              		.loc 1 402 5 discriminator 2 view .LVU100
 484 0020 0228     		cmp	r0, #2
 485 0022 26D0     		beq	.L49
 403:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 404:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****      return HAL_BUSY;
 405:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
 406:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 407:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Identify the device address */
 408:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   if(hnand->Init.NandBank == FMC_NAND_BANK2)
 486              		.loc 1 408 3 is_stmt 1 view .LVU101
 487              		.loc 1 408 17 is_stmt 0 view .LVU102
 488 0024 5A68     		ldr	r2, [r3, #4]
 489              		.loc 1 408 5 view .LVU103
 490 0026 102A     		cmp	r2, #16
 491 0028 27D0     		beq	.L56
 409:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 410:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     deviceaddress = NAND_DEVICE1;
 411:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
 412:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   else
 413:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 414:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     deviceaddress = NAND_DEVICE2;
ARM GAS  /tmp/ccHfptsR.s 			page 18


 492              		.loc 1 414 19 view .LVU104
 493 002a 4FF00042 		mov	r2, #-2147483648
 494              	.L50:
 495              	.LVL26:
 415:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
 416:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 417:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Update the NAND controller state */ 
 418:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   hnand->State = HAL_NAND_STATE_BUSY;
 496              		.loc 1 418 3 is_stmt 1 view .LVU105
 497              		.loc 1 418 16 is_stmt 0 view .LVU106
 498 002e 0220     		movs	r0, #2
 499 0030 83F82100 		strb	r0, [r3, #33]
 419:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 420:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Send Read ID command sequence */   
 421:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA))  = NAND_CMD_READID;
 500              		.loc 1 421 3 is_stmt 1 view .LVU107
 501              		.loc 1 421 21 is_stmt 0 view .LVU108
 502 0034 42F48030 		orr	r0, r2, #65536
 503              		.loc 1 421 60 view .LVU109
 504 0038 9024     		movs	r4, #144
 505 003a 0470     		strb	r4, [r0]
 422:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
 506              		.loc 1 422 3 is_stmt 1 view .LVU110
 507              		.loc 1 422 21 is_stmt 0 view .LVU111
 508 003c 42F40030 		orr	r0, r2, #131072
 509              		.loc 1 422 60 view .LVU112
 510 0040 0024     		movs	r4, #0
 511 0042 0470     		strb	r4, [r0]
 423:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 424:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Read the electronic signature from NAND flash */
 425:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** #ifdef FSMC_PCR2_PWID
 426:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   if (hnand->Init.MemoryDataWidth == FSMC_NAND_PCC_MEM_BUS_WIDTH_8)
 512              		.loc 1 426 3 is_stmt 1 view .LVU113
 513              		.loc 1 426 18 is_stmt 0 view .LVU114
 514 0044 D868     		ldr	r0, [r3, #12]
 515              		.loc 1 426 6 view .LVU115
 516 0046 D8B9     		cbnz	r0, .L51
 427:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** #else /* FMC_PCR2_PWID is defined */
 428:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   if (hnand->Init.MemoryDataWidth == FMC_NAND_PCC_MEM_BUS_WIDTH_8)
 429:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** #endif
 430:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 431:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     data = *(__IO uint32_t *)deviceaddress;
 517              		.loc 1 431 5 is_stmt 1 view .LVU116
 518              		.loc 1 431 12 is_stmt 0 view .LVU117
 519 0048 1268     		ldr	r2, [r2]
 520              	.LVL27:
 521              		.loc 1 431 10 view .LVU118
 522 004a 0192     		str	r2, [sp, #4]
 432:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 433:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     /* Return the data read */
 434:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     pNAND_ID->Maker_Id   = ADDR_1ST_CYCLE(data);
 523              		.loc 1 434 5 is_stmt 1 view .LVU119
 524              		.loc 1 434 28 is_stmt 0 view .LVU120
 525 004c 019A     		ldr	r2, [sp, #4]
 526              		.loc 1 434 26 view .LVU121
 527 004e 0A70     		strb	r2, [r1]
 435:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     pNAND_ID->Device_Id  = ADDR_2ND_CYCLE(data);
ARM GAS  /tmp/ccHfptsR.s 			page 19


 528              		.loc 1 435 5 is_stmt 1 view .LVU122
 529              		.loc 1 435 28 is_stmt 0 view .LVU123
 530 0050 019A     		ldr	r2, [sp, #4]
 531 0052 C2F30722 		ubfx	r2, r2, #8, #8
 532              		.loc 1 435 26 view .LVU124
 533 0056 4A70     		strb	r2, [r1, #1]
 436:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     pNAND_ID->Third_Id   = ADDR_3RD_CYCLE(data);
 534              		.loc 1 436 5 is_stmt 1 view .LVU125
 535              		.loc 1 436 28 is_stmt 0 view .LVU126
 536 0058 019A     		ldr	r2, [sp, #4]
 537 005a C2F30742 		ubfx	r2, r2, #16, #8
 538              		.loc 1 436 26 view .LVU127
 539 005e 8A70     		strb	r2, [r1, #2]
 437:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     pNAND_ID->Fourth_Id  = ADDR_4TH_CYCLE(data);
 540              		.loc 1 437 5 is_stmt 1 view .LVU128
 541              		.loc 1 437 28 is_stmt 0 view .LVU129
 542 0060 019A     		ldr	r2, [sp, #4]
 543 0062 120E     		lsrs	r2, r2, #24
 544              		.loc 1 437 26 view .LVU130
 545 0064 CA70     		strb	r2, [r1, #3]
 546              	.L52:
 438:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
 439:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   else
 440:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 441:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     data = *(__IO uint32_t *)deviceaddress;
 442:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     data1 = *((__IO uint32_t *)deviceaddress + 4U);
 443:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 444:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     /* Return the data read */
 445:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     pNAND_ID->Maker_Id   = ADDR_1ST_CYCLE(data);
 446:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     pNAND_ID->Device_Id  = ADDR_3RD_CYCLE(data);
 447:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     pNAND_ID->Third_Id   = ADDR_1ST_CYCLE(data1);
 448:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     pNAND_ID->Fourth_Id  = ADDR_3RD_CYCLE(data1);
 449:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
 450:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 451:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Update the NAND controller state */ 
 452:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   hnand->State = HAL_NAND_STATE_READY;
 547              		.loc 1 452 3 is_stmt 1 view .LVU131
 548              		.loc 1 452 16 is_stmt 0 view .LVU132
 549 0066 0122     		movs	r2, #1
 550 0068 83F82120 		strb	r2, [r3, #33]
 453:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 454:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Process unlocked */
 455:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   __HAL_UNLOCK(hnand);
 551              		.loc 1 455 3 is_stmt 1 view .LVU133
 552              		.loc 1 455 3 view .LVU134
 553 006c 0020     		movs	r0, #0
 554 006e 83F82000 		strb	r0, [r3, #32]
 555              		.loc 1 455 3 view .LVU135
 456:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****    
 457:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   return HAL_OK;
 556              		.loc 1 457 3 view .LVU136
 557              	.LVL28:
 558              	.L49:
 458:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** }
 559              		.loc 1 458 1 is_stmt 0 view .LVU137
 560 0072 03B0     		add	sp, sp, #12
 561              	.LCFI6:
ARM GAS  /tmp/ccHfptsR.s 			page 20


 562              		.cfi_remember_state
 563              		.cfi_def_cfa_offset 4
 564              		@ sp needed
 565 0074 5DF8044B 		ldr	r4, [sp], #4
 566              	.LCFI7:
 567              		.cfi_restore 4
 568              		.cfi_def_cfa_offset 0
 569 0078 7047     		bx	lr
 570              	.LVL29:
 571              	.L56:
 572              	.LCFI8:
 573              		.cfi_restore_state
 410:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
 574              		.loc 1 410 19 view .LVU138
 575 007a 4FF0E042 		mov	r2, #1879048192
 576 007e D6E7     		b	.L50
 577              	.LVL30:
 578              	.L51:
 441:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     data1 = *((__IO uint32_t *)deviceaddress + 4U);
 579              		.loc 1 441 5 is_stmt 1 view .LVU139
 441:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     data1 = *((__IO uint32_t *)deviceaddress + 4U);
 580              		.loc 1 441 12 is_stmt 0 view .LVU140
 581 0080 1068     		ldr	r0, [r2]
 441:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     data1 = *((__IO uint32_t *)deviceaddress + 4U);
 582              		.loc 1 441 10 view .LVU141
 583 0082 0190     		str	r0, [sp, #4]
 442:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 584              		.loc 1 442 5 is_stmt 1 view .LVU142
 442:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 585              		.loc 1 442 13 is_stmt 0 view .LVU143
 586 0084 1269     		ldr	r2, [r2, #16]
 587              	.LVL31:
 442:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 588              		.loc 1 442 11 view .LVU144
 589 0086 0092     		str	r2, [sp]
 445:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     pNAND_ID->Device_Id  = ADDR_3RD_CYCLE(data);
 590              		.loc 1 445 5 is_stmt 1 view .LVU145
 445:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     pNAND_ID->Device_Id  = ADDR_3RD_CYCLE(data);
 591              		.loc 1 445 28 is_stmt 0 view .LVU146
 592 0088 019A     		ldr	r2, [sp, #4]
 445:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     pNAND_ID->Device_Id  = ADDR_3RD_CYCLE(data);
 593              		.loc 1 445 26 view .LVU147
 594 008a 0A70     		strb	r2, [r1]
 446:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     pNAND_ID->Third_Id   = ADDR_1ST_CYCLE(data1);
 595              		.loc 1 446 5 is_stmt 1 view .LVU148
 446:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     pNAND_ID->Third_Id   = ADDR_1ST_CYCLE(data1);
 596              		.loc 1 446 28 is_stmt 0 view .LVU149
 597 008c 019A     		ldr	r2, [sp, #4]
 598 008e C2F30742 		ubfx	r2, r2, #16, #8
 446:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     pNAND_ID->Third_Id   = ADDR_1ST_CYCLE(data1);
 599              		.loc 1 446 26 view .LVU150
 600 0092 4A70     		strb	r2, [r1, #1]
 447:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     pNAND_ID->Fourth_Id  = ADDR_3RD_CYCLE(data1);
 601              		.loc 1 447 5 is_stmt 1 view .LVU151
 447:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     pNAND_ID->Fourth_Id  = ADDR_3RD_CYCLE(data1);
 602              		.loc 1 447 28 is_stmt 0 view .LVU152
 603 0094 009A     		ldr	r2, [sp]
ARM GAS  /tmp/ccHfptsR.s 			page 21


 447:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     pNAND_ID->Fourth_Id  = ADDR_3RD_CYCLE(data1);
 604              		.loc 1 447 26 view .LVU153
 605 0096 8A70     		strb	r2, [r1, #2]
 448:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
 606              		.loc 1 448 5 is_stmt 1 view .LVU154
 448:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
 607              		.loc 1 448 28 is_stmt 0 view .LVU155
 608 0098 009A     		ldr	r2, [sp]
 609 009a C2F30742 		ubfx	r2, r2, #16, #8
 448:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
 610              		.loc 1 448 26 view .LVU156
 611 009e CA70     		strb	r2, [r1, #3]
 612 00a0 E1E7     		b	.L52
 613              	.LVL32:
 614              	.L53:
 399:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 615              		.loc 1 399 3 view .LVU157
 616 00a2 0220     		movs	r0, #2
 617              	.LVL33:
 399:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 618              		.loc 1 399 3 view .LVU158
 619 00a4 E5E7     		b	.L49
 620              		.cfi_endproc
 621              	.LFE138:
 623              		.section	.text.HAL_NAND_Reset,"ax",%progbits
 624              		.align	1
 625              		.global	HAL_NAND_Reset
 626              		.syntax unified
 627              		.thumb
 628              		.thumb_func
 629              		.fpu fpv4-sp-d16
 631              	HAL_NAND_Reset:
 632              	.LVL34:
 633              	.LFB139:
 459:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 460:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** /**
 461:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @brief  NAND memory reset
 462:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @param  hnand pointer to a NAND_HandleTypeDef structure that contains
 463:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   *                the configuration information for NAND module.
 464:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @retval HAL status
 465:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   */
 466:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** HAL_StatusTypeDef HAL_NAND_Reset(NAND_HandleTypeDef *hnand)
 467:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** {
 634              		.loc 1 467 1 is_stmt 1 view -0
 635              		.cfi_startproc
 636              		@ args = 0, pretend = 0, frame = 0
 637              		@ frame_needed = 0, uses_anonymous_args = 0
 638              		@ link register save eliminated.
 639              		.loc 1 467 1 is_stmt 0 view .LVU160
 640 0000 0346     		mov	r3, r0
 468:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   uint32_t deviceaddress = 0U;
 641              		.loc 1 468 3 is_stmt 1 view .LVU161
 642              	.LVL35:
 469:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 470:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Process Locked */
 471:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   __HAL_LOCK(hnand);
 643              		.loc 1 471 3 view .LVU162
ARM GAS  /tmp/ccHfptsR.s 			page 22


 644              		.loc 1 471 3 view .LVU163
 645 0002 90F82020 		ldrb	r2, [r0, #32]	@ zero_extendqisi2
 646 0006 012A     		cmp	r2, #1
 647 0008 1DD0     		beq	.L60
 648              		.loc 1 471 3 discriminator 2 view .LVU164
 649 000a 0122     		movs	r2, #1
 650 000c 80F82020 		strb	r2, [r0, #32]
 651              		.loc 1 471 3 discriminator 2 view .LVU165
 472:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 473:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Check the NAND controller state */
 474:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   if(hnand->State == HAL_NAND_STATE_BUSY)
 652              		.loc 1 474 3 discriminator 2 view .LVU166
 653              		.loc 1 474 11 is_stmt 0 discriminator 2 view .LVU167
 654 0010 90F82100 		ldrb	r0, [r0, #33]	@ zero_extendqisi2
 655              	.LVL36:
 656              		.loc 1 474 11 discriminator 2 view .LVU168
 657 0014 C0B2     		uxtb	r0, r0
 658              		.loc 1 474 5 discriminator 2 view .LVU169
 659 0016 0228     		cmp	r0, #2
 660 0018 16D0     		beq	.L58
 475:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 476:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****      return HAL_BUSY;
 477:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
 478:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 479:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Identify the device address */
 480:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   if(hnand->Init.NandBank == FMC_NAND_BANK2)
 661              		.loc 1 480 3 is_stmt 1 view .LVU170
 662              		.loc 1 480 17 is_stmt 0 view .LVU171
 663 001a 5A68     		ldr	r2, [r3, #4]
 664              		.loc 1 480 5 view .LVU172
 665 001c 102A     		cmp	r2, #16
 666 001e 0FD0     		beq	.L62
 481:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 482:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     deviceaddress = NAND_DEVICE1;
 483:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
 484:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   else
 485:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 486:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     deviceaddress = NAND_DEVICE2;
 667              		.loc 1 486 19 view .LVU173
 668 0020 4FF00042 		mov	r2, #-2147483648
 669              	.L59:
 670              	.LVL37:
 487:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }  
 488:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 489:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Update the NAND controller state */
 490:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   hnand->State = HAL_NAND_STATE_BUSY; 
 671              		.loc 1 490 3 is_stmt 1 view .LVU174
 672              		.loc 1 490 16 is_stmt 0 view .LVU175
 673 0024 0221     		movs	r1, #2
 674 0026 83F82110 		strb	r1, [r3, #33]
 491:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 492:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Send NAND reset command */  
 493:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = 0xFF;
 675              		.loc 1 493 3 is_stmt 1 view .LVU176
 676              		.loc 1 493 21 is_stmt 0 view .LVU177
 677 002a 42F48032 		orr	r2, r2, #65536
 678              	.LVL38:
ARM GAS  /tmp/ccHfptsR.s 			page 23


 679              		.loc 1 493 59 view .LVU178
 680 002e FF21     		movs	r1, #255
 681 0030 1170     		strb	r1, [r2]
 494:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 495:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 496:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Update the NAND controller state */
 497:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   hnand->State = HAL_NAND_STATE_READY;
 682              		.loc 1 497 3 is_stmt 1 view .LVU179
 683              		.loc 1 497 16 is_stmt 0 view .LVU180
 684 0032 0122     		movs	r2, #1
 685 0034 83F82120 		strb	r2, [r3, #33]
 498:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 499:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Process unlocked */
 500:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   __HAL_UNLOCK(hnand);
 686              		.loc 1 500 3 is_stmt 1 view .LVU181
 687              		.loc 1 500 3 view .LVU182
 688 0038 0020     		movs	r0, #0
 689 003a 83F82000 		strb	r0, [r3, #32]
 690              		.loc 1 500 3 view .LVU183
 501:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 502:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   return HAL_OK;
 691              		.loc 1 502 3 view .LVU184
 692              		.loc 1 502 10 is_stmt 0 view .LVU185
 693 003e 7047     		bx	lr
 694              	.LVL39:
 695              	.L62:
 482:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
 696              		.loc 1 482 19 view .LVU186
 697 0040 4FF0E042 		mov	r2, #1879048192
 698 0044 EEE7     		b	.L59
 699              	.LVL40:
 700              	.L60:
 471:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 701              		.loc 1 471 3 view .LVU187
 702 0046 0220     		movs	r0, #2
 703              	.LVL41:
 704              	.L58:
 503:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 504:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** }
 705              		.loc 1 504 1 view .LVU188
 706 0048 7047     		bx	lr
 707              		.cfi_endproc
 708              	.LFE139:
 710              		.section	.text.HAL_NAND_ConfigDevice,"ax",%progbits
 711              		.align	1
 712              		.global	HAL_NAND_ConfigDevice
 713              		.syntax unified
 714              		.thumb
 715              		.thumb_func
 716              		.fpu fpv4-sp-d16
 718              	HAL_NAND_ConfigDevice:
 719              	.LVL42:
 720              	.LFB140:
 505:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 506:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** /**
 507:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @brief  Configure the device: Enter the physical parameters of the device
 508:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @param  hnand pointer to a NAND_HandleTypeDef structure that contains
ARM GAS  /tmp/ccHfptsR.s 			page 24


 509:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   *                the configuration information for NAND module.
 510:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @param  pDeviceConfig  pointer to NAND_DeviceConfigTypeDef structure
 511:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @retval HAL status
 512:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   */
 513:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** HAL_StatusTypeDef  HAL_NAND_ConfigDevice(NAND_HandleTypeDef *hnand, NAND_DeviceConfigTypeDef *pDevi
 514:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** {
 721              		.loc 1 514 1 is_stmt 1 view -0
 722              		.cfi_startproc
 723              		@ args = 0, pretend = 0, frame = 0
 724              		@ frame_needed = 0, uses_anonymous_args = 0
 725              		@ link register save eliminated.
 515:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   hnand->Config.PageSize           = pDeviceConfig->PageSize;
 726              		.loc 1 515 3 view .LVU190
 727              		.loc 1 515 51 is_stmt 0 view .LVU191
 728 0000 0B68     		ldr	r3, [r1]
 729              		.loc 1 515 36 view .LVU192
 730 0002 4362     		str	r3, [r0, #36]
 516:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   hnand->Config.SpareAreaSize      = pDeviceConfig->SpareAreaSize;
 731              		.loc 1 516 3 is_stmt 1 view .LVU193
 732              		.loc 1 516 51 is_stmt 0 view .LVU194
 733 0004 4B68     		ldr	r3, [r1, #4]
 734              		.loc 1 516 36 view .LVU195
 735 0006 8362     		str	r3, [r0, #40]
 517:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   hnand->Config.BlockSize          = pDeviceConfig->BlockSize;
 736              		.loc 1 517 3 is_stmt 1 view .LVU196
 737              		.loc 1 517 51 is_stmt 0 view .LVU197
 738 0008 8B68     		ldr	r3, [r1, #8]
 739              		.loc 1 517 36 view .LVU198
 740 000a C362     		str	r3, [r0, #44]
 518:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   hnand->Config.BlockNbr           = pDeviceConfig->BlockNbr;
 741              		.loc 1 518 3 is_stmt 1 view .LVU199
 742              		.loc 1 518 51 is_stmt 0 view .LVU200
 743 000c CB68     		ldr	r3, [r1, #12]
 744              		.loc 1 518 36 view .LVU201
 745 000e 0363     		str	r3, [r0, #48]
 519:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   hnand->Config.PlaneSize          = pDeviceConfig->PlaneSize;
 746              		.loc 1 519 3 is_stmt 1 view .LVU202
 747              		.loc 1 519 51 is_stmt 0 view .LVU203
 748 0010 4B69     		ldr	r3, [r1, #20]
 749              		.loc 1 519 36 view .LVU204
 750 0012 8363     		str	r3, [r0, #56]
 520:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   hnand->Config.PlaneNbr           = pDeviceConfig->PlaneNbr;
 751              		.loc 1 520 3 is_stmt 1 view .LVU205
 752              		.loc 1 520 51 is_stmt 0 view .LVU206
 753 0014 0B69     		ldr	r3, [r1, #16]
 754              		.loc 1 520 36 view .LVU207
 755 0016 4363     		str	r3, [r0, #52]
 521:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   hnand->Config.ExtraCommandEnable = pDeviceConfig->ExtraCommandEnable;
 756              		.loc 1 521 3 is_stmt 1 view .LVU208
 757              		.loc 1 521 51 is_stmt 0 view .LVU209
 758 0018 0B7E     		ldrb	r3, [r1, #24]	@ zero_extendqisi2
 759              		.loc 1 521 36 view .LVU210
 760 001a 80F83C30 		strb	r3, [r0, #60]
 522:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 523:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   return HAL_OK;
 761              		.loc 1 523 3 is_stmt 1 view .LVU211
 524:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** }
ARM GAS  /tmp/ccHfptsR.s 			page 25


 762              		.loc 1 524 1 is_stmt 0 view .LVU212
 763 001e 0020     		movs	r0, #0
 764              	.LVL43:
 765              		.loc 1 524 1 view .LVU213
 766 0020 7047     		bx	lr
 767              		.cfi_endproc
 768              	.LFE140:
 770              		.section	.text.HAL_NAND_Read_Status,"ax",%progbits
 771              		.align	1
 772              		.global	HAL_NAND_Read_Status
 773              		.syntax unified
 774              		.thumb
 775              		.thumb_func
 776              		.fpu fpv4-sp-d16
 778              	HAL_NAND_Read_Status:
 779              	.LVL44:
 780              	.LFB150:
 525:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 526:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** /**
 527:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @brief  Read Page(s) from NAND memory block (8-bits addressing)
 528:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @param  hnand pointer to a NAND_HandleTypeDef structure that contains
 529:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   *                the configuration information for NAND module.
 530:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @param  pAddress  pointer to NAND address structure
 531:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @param  pBuffer  pointer to destination read buffer
 532:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @param  NumPageToRead  number of pages to read from block 
 533:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @retval HAL status
 534:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   */
 535:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** HAL_StatusTypeDef HAL_NAND_Read_Page_8b(NAND_HandleTypeDef *hnand, NAND_AddressTypeDef *pAddress, u
 536:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** {   
 537:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   __IO uint32_t index  = 0U;
 538:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   uint32_t tickstart = 0U;
 539:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   uint32_t deviceaddress = 0U, size = 0U, numPagesRead = 0U, nandaddress = 0U;
 540:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 541:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Process Locked */
 542:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   __HAL_LOCK(hnand); 
 543:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 544:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Check the NAND controller state */
 545:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   if(hnand->State == HAL_NAND_STATE_BUSY)
 546:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 547:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****      return HAL_BUSY;
 548:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
 549:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 550:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Identify the device address */
 551:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   if(hnand->Init.NandBank == FMC_NAND_BANK2)
 552:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 553:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     deviceaddress = NAND_DEVICE1;
 554:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
 555:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   else
 556:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 557:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     deviceaddress = NAND_DEVICE2;
 558:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
 559:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 560:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Update the NAND controller state */
 561:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   hnand->State = HAL_NAND_STATE_BUSY;
 562:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 563:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* NAND raw address calculation */
 564:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   nandaddress = ARRAY_ADDRESS(pAddress, hnand);
ARM GAS  /tmp/ccHfptsR.s 			page 26


 565:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 566:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Page(s) read loop */  
 567:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   while((NumPageToRead != 0U) && (nandaddress < ((hnand->Config.BlockSize) * (hnand->Config.BlockNb
 568:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 569:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     /* update the buffer size */
 570:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     size = (hnand->Config.PageSize) + ((hnand->Config.PageSize) * numPagesRead);
 571:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 572:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     /* Send read page command sequence */
 573:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_AREA_A;
 574:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****    
 575:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     /* Cards with page size <= 512 bytes */
 576:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     if((hnand->Config.PageSize) <= 512U)
 577:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 578:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       if (((hnand->Config.BlockSize)*(hnand->Config.BlockNbr)) <= 65535U)
 579:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 580:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
 581:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 582:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 583:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 584:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       else /* ((hnand->Config.BlockSize)*(hnand->Config.BlockNbr)) > 65535 */
 585:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 586:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
 587:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 588:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 589:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
 590:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 591:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     }
 592:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     else /* (hnand->Config.PageSize) > 512 */
 593:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 594:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       if (((hnand->Config.BlockSize)*(hnand->Config.BlockNbr)) <= 65535U)
 595:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 596:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
 597:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
 598:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 599:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 600:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 601:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       else /* ((hnand->Config.BlockSize)*(hnand->Config.BlockNbr)) > 65535 */
 602:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 603:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
 604:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
 605:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 606:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 607:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
 608:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 609:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     }
 610:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 611:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA))  = NAND_CMD_AREA_TRUE1;
 612:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       
 613:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     /* Check if an extra command is needed for reading pages  */
 614:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     if(hnand->Config.ExtraCommandEnable == ENABLE)
 615:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 616:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       /* Get tick */
 617:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       tickstart = HAL_GetTick();
 618:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       
 619:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       /* Read status until NAND is ready */
 620:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       while(HAL_NAND_Read_Status(hnand) != NAND_READY)
 621:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
ARM GAS  /tmp/ccHfptsR.s 			page 27


 622:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         if((HAL_GetTick() - tickstart ) > NAND_WRITE_TIMEOUT)
 623:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         {
 624:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****           return HAL_TIMEOUT; 
 625:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         }
 626:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 627:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       
 628:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       /* Go back to read mode */
 629:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = ((uint8_t)0x00);
 630:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       __DSB();
 631:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     }
 632:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 633:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     /* Get Data into Buffer */    
 634:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     for(; index < size; index++)
 635:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 636:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       *(uint8_t *)pBuffer++ = *(uint8_t *)deviceaddress;
 637:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     }
 638:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 639:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     /* Increment read pages number */
 640:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     numPagesRead++;
 641:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 642:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     /* Decrement pages to read */
 643:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     NumPageToRead--;
 644:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 645:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     /* Increment the NAND address */
 646:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     nandaddress = (uint32_t)(nandaddress + 1U);
 647:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
 648:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 649:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Update the NAND controller state */
 650:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   hnand->State = HAL_NAND_STATE_READY;
 651:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 652:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Process unlocked */
 653:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   __HAL_UNLOCK(hnand);
 654:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 655:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   return HAL_OK;
 656:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** }
 657:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 658:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** /**
 659:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @brief  Read Page(s) from NAND memory block (16-bits addressing)
 660:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @param  hnand pointer to a NAND_HandleTypeDef structure that contains
 661:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   *                the configuration information for NAND module.
 662:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @param  pAddress  pointer to NAND address structure
 663:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @param  pBuffer  pointer to destination read buffer. pBuffer should be 16bits aligned
 664:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @param  NumPageToRead  number of pages to read from block 
 665:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @retval HAL status
 666:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   */
 667:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** HAL_StatusTypeDef HAL_NAND_Read_Page_16b(NAND_HandleTypeDef *hnand, NAND_AddressTypeDef *pAddress, 
 668:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** {   
 669:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   __IO uint32_t index  = 0U;
 670:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   uint32_t tickstart = 0U;
 671:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   uint32_t deviceaddress = 0U, size = 0U, numPagesRead = 0U, nandaddress = 0U;
 672:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 673:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Process Locked */
 674:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   __HAL_LOCK(hnand); 
 675:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 676:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Check the NAND controller state */
 677:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   if(hnand->State == HAL_NAND_STATE_BUSY)
 678:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
ARM GAS  /tmp/ccHfptsR.s 			page 28


 679:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****      return HAL_BUSY;
 680:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
 681:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 682:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Identify the device address */
 683:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   if(hnand->Init.NandBank == FMC_NAND_BANK2)
 684:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 685:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     deviceaddress = NAND_DEVICE1;
 686:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
 687:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   else
 688:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 689:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     deviceaddress = NAND_DEVICE2;
 690:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
 691:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 692:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Update the NAND controller state */ 
 693:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   hnand->State = HAL_NAND_STATE_BUSY;
 694:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 695:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* NAND raw address calculation */
 696:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   nandaddress = ARRAY_ADDRESS(pAddress, hnand);
 697:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 698:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Page(s) read loop */  
 699:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   while((NumPageToRead != 0U) && (nandaddress < ((hnand->Config.BlockSize) * (hnand->Config.BlockNb
 700:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 701:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     /* update the buffer size */
 702:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     size = (hnand->Config.PageSize) + ((hnand->Config.PageSize) * numPagesRead);
 703:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 704:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     /* Send read page command sequence */
 705:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_AREA_A;  
 706:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     __DSB();
 707:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 708:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     /* Cards with page size <= 512 bytes */
 709:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     if((hnand->Config.PageSize) <= 512U)
 710:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 711:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       if (((hnand->Config.BlockSize)*(hnand->Config.BlockNbr)) <= 65535U)
 712:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 713:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
 714:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 715:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 716:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 717:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       else /* ((hnand->Config.BlockSize)*(hnand->Config.BlockNbr)) > 65535 */
 718:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 719:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
 720:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 721:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 722:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
 723:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 724:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     }
 725:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     else /* (hnand->Config.PageSize) > 512 */
 726:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 727:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       if (((hnand->Config.BlockSize)*(hnand->Config.BlockNbr)) <= 65535U)
 728:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 729:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
 730:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
 731:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 732:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 733:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 734:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       else /* ((hnand->Config.BlockSize)*(hnand->Config.BlockNbr)) > 65535 */
 735:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
ARM GAS  /tmp/ccHfptsR.s 			page 29


 736:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
 737:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
 738:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 739:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 740:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
 741:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 742:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     }
 743:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 744:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA))  = NAND_CMD_AREA_TRUE1;
 745:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 746:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     if(hnand->Config.ExtraCommandEnable == ENABLE)
 747:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 748:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       /* Get tick */
 749:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       tickstart = HAL_GetTick();
 750:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       
 751:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       /* Read status until NAND is ready */
 752:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       while(HAL_NAND_Read_Status(hnand) != NAND_READY)
 753:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 754:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         if((HAL_GetTick() - tickstart ) > NAND_WRITE_TIMEOUT)
 755:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         {
 756:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****           return HAL_TIMEOUT; 
 757:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         }
 758:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 759:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       
 760:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       /* Go back to read mode */
 761:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = ((uint8_t)0x00);
 762:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     }
 763:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 764:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     /* Get Data into Buffer */    
 765:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     for(; index < size; index++)
 766:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 767:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       *(uint16_t *)pBuffer++ = *(uint16_t *)deviceaddress;
 768:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     }
 769:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 770:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     /* Increment read pages number */
 771:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     numPagesRead++;
 772:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 773:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     /* Decrement pages to read */
 774:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     NumPageToRead--;
 775:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 776:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     /* Increment the NAND address */
 777:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     nandaddress = (uint32_t)(nandaddress + 1U);
 778:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
 779:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 780:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Update the NAND controller state */ 
 781:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   hnand->State = HAL_NAND_STATE_READY;
 782:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 783:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Process unlocked */
 784:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   __HAL_UNLOCK(hnand);  
 785:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 786:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   return HAL_OK;
 787:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** }
 788:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 789:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** /**
 790:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @brief  Write Page(s) to NAND memory block (8-bits addressing)
 791:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @param  hnand pointer to a NAND_HandleTypeDef structure that contains
 792:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   *                the configuration information for NAND module.
ARM GAS  /tmp/ccHfptsR.s 			page 30


 793:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @param  pAddress  pointer to NAND address structure
 794:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @param  pBuffer  pointer to source buffer to write  
 795:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @param  NumPageToWrite   number of pages to write to block 
 796:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @retval HAL status
 797:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   */
 798:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** HAL_StatusTypeDef HAL_NAND_Write_Page_8b(NAND_HandleTypeDef *hnand, NAND_AddressTypeDef *pAddress, 
 799:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** {
 800:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   __IO uint32_t index = 0U;
 801:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   uint32_t tickstart = 0U;
 802:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   uint32_t deviceaddress = 0U, size = 0U, numPagesWritten = 0U, nandaddress = 0U;
 803:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 804:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Process Locked */
 805:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   __HAL_LOCK(hnand);  
 806:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 807:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Check the NAND controller state */
 808:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   if(hnand->State == HAL_NAND_STATE_BUSY)
 809:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 810:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****      return HAL_BUSY;
 811:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
 812:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 813:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Identify the device address */
 814:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   if(hnand->Init.NandBank == FMC_NAND_BANK2)
 815:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 816:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     deviceaddress = NAND_DEVICE1;
 817:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
 818:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   else
 819:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 820:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     deviceaddress = NAND_DEVICE2;
 821:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
 822:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 823:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Update the NAND controller state */ 
 824:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   hnand->State = HAL_NAND_STATE_BUSY;
 825:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 826:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* NAND raw address calculation */
 827:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   nandaddress = ARRAY_ADDRESS(pAddress, hnand);
 828:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 829:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Page(s) write loop */
 830:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   while((NumPageToWrite != 0U) && (nandaddress < ((hnand->Config.BlockSize) * (hnand->Config.BlockN
 831:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 832:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     /* update the buffer size */
 833:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     size = hnand->Config.PageSize + ((hnand->Config.PageSize) * numPagesWritten);
 834:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 835:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     /* Send write page command sequence */
 836:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_AREA_A;
 837:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_WRITE0;
 838:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 839:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     /* Cards with page size <= 512 bytes */
 840:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     if((hnand->Config.PageSize) <= 512U)
 841:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 842:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       if (((hnand->Config.BlockSize)*(hnand->Config.BlockNbr)) <= 65535U)
 843:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 844:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
 845:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 846:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 847:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 848:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       else /* ((hnand->Config.BlockSize)*(hnand->Config.BlockNbr)) > 65535 */
 849:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
ARM GAS  /tmp/ccHfptsR.s 			page 31


 850:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
 851:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 852:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 853:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
 854:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 855:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     }
 856:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     else /* (hnand->Config.PageSize) > 512 */
 857:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 858:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       if (((hnand->Config.BlockSize)*(hnand->Config.BlockNbr)) <= 65535U)
 859:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 860:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
 861:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
 862:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 863:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 864:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 865:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       else /* ((hnand->Config.BlockSize)*(hnand->Config.BlockNbr)) > 65535 */
 866:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 867:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
 868:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
 869:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 870:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 871:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         __DSB();
 872:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
 873:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         __DSB();
 874:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 875:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     }
 876:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 877:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 878:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     /* Write data to memory */
 879:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     for(; index < size; index++)
 880:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 881:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       *(__IO uint8_t *)deviceaddress = *(uint8_t *)pBuffer++;
 882:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     }
 883:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****    
 884:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_WRITE_TRUE1;
 885:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 886:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     /* Read status until NAND is ready */
 887:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     while(HAL_NAND_Read_Status(hnand) != NAND_READY)
 888:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 889:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       /* Get tick */
 890:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       tickstart = HAL_GetTick();
 891:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       
 892:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       if((HAL_GetTick() - tickstart ) > NAND_WRITE_TIMEOUT)
 893:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 894:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         return HAL_TIMEOUT; 
 895:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 896:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     }
 897:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****  
 898:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     /* Increment written pages number */
 899:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     numPagesWritten++;
 900:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 901:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     /* Decrement pages to write */
 902:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     NumPageToWrite--;
 903:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 904:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     /* Increment the NAND address */
 905:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     nandaddress = (uint32_t)(nandaddress + 1U);
 906:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
ARM GAS  /tmp/ccHfptsR.s 			page 32


 907:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 908:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Update the NAND controller state */ 
 909:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   hnand->State = HAL_NAND_STATE_READY;
 910:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 911:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Process unlocked */
 912:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   __HAL_UNLOCK(hnand);
 913:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 914:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   return HAL_OK;
 915:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** }
 916:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 917:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** /**
 918:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @brief  Write Page(s) to NAND memory block (16-bits addressing)
 919:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @param  hnand pointer to a NAND_HandleTypeDef structure that contains
 920:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   *                the configuration information for NAND module.
 921:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @param  pAddress  pointer to NAND address structure
 922:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @param  pBuffer  pointer to source buffer to write. pBuffer should be 16bits aligned
 923:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @param  NumPageToWrite   number of pages to write to block 
 924:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @retval HAL status
 925:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   */
 926:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** HAL_StatusTypeDef HAL_NAND_Write_Page_16b(NAND_HandleTypeDef *hnand, NAND_AddressTypeDef *pAddress,
 927:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** {
 928:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   __IO uint32_t index = 0U;
 929:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   uint32_t tickstart = 0U;
 930:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   uint32_t deviceaddress = 0U, size = 0U, numPagesWritten = 0U, nandaddress = 0U;
 931:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 932:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Process Locked */
 933:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   __HAL_LOCK(hnand);  
 934:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 935:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Check the NAND controller state */
 936:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   if(hnand->State == HAL_NAND_STATE_BUSY)
 937:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 938:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****      return HAL_BUSY;
 939:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
 940:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 941:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Identify the device address */
 942:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   if(hnand->Init.NandBank == FMC_NAND_BANK2)
 943:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 944:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     deviceaddress = NAND_DEVICE1;
 945:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
 946:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   else
 947:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 948:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     deviceaddress = NAND_DEVICE2;
 949:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
 950:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 951:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Update the NAND controller state */ 
 952:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   hnand->State = HAL_NAND_STATE_BUSY;
 953:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 954:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* NAND raw address calculation */
 955:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   nandaddress = ARRAY_ADDRESS(pAddress, hnand);
 956:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 957:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Page(s) write loop */
 958:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   while((NumPageToWrite != 0U) && (nandaddress < ((hnand->Config.BlockSize) * (hnand->Config.BlockN
 959:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 960:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     /* update the buffer size */
 961:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     size = (hnand->Config.PageSize) + ((hnand->Config.PageSize) * numPagesWritten);
 962:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****  
 963:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     /* Send write page command sequence */
ARM GAS  /tmp/ccHfptsR.s 			page 33


 964:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_AREA_A;
 965:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     __DSB();
 966:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_WRITE0;
 967:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     __DSB();
 968:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 969:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     /* Cards with page size <= 512 bytes */
 970:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     if((hnand->Config.PageSize) <= 512U)
 971:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 972:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       if (((hnand->Config.BlockSize)*(hnand->Config.BlockNbr)) <= 65535U)
 973:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 974:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
 975:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 976:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 977:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 978:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       else /* ((hnand->Config.BlockSize)*(hnand->Config.BlockNbr)) > 65535 */
 979:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 980:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
 981:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 982:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 983:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
 984:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 985:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     }
 986:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     else /* (hnand->Config.PageSize) > 512 */
 987:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 988:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       if (((hnand->Config.BlockSize)*(hnand->Config.BlockNbr)) <= 65535U)
 989:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 990:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
 991:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
 992:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 993:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 994:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 995:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       else /* ((hnand->Config.BlockSize)*(hnand->Config.BlockNbr)) > 65535 */
 996:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 997:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
 998:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
 999:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
1000:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
1001:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
1002:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
1003:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     }
1004:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
1005:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     /* Write data to memory */
1006:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     for(; index < size; index++)
1007:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
1008:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       *(__IO uint16_t *)deviceaddress = *(uint16_t *)pBuffer++;
1009:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     }
1010:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****    
1011:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_WRITE_TRUE1;
1012:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
1013:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     /* Read status until NAND is ready */
1014:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     while(HAL_NAND_Read_Status(hnand) != NAND_READY)
1015:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
1016:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       /* Get tick */
1017:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       tickstart = HAL_GetTick();
1018:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
1019:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       if((HAL_GetTick() - tickstart ) > NAND_WRITE_TIMEOUT)
1020:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
ARM GAS  /tmp/ccHfptsR.s 			page 34


1021:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         return HAL_TIMEOUT; 
1022:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       } 
1023:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     }   
1024:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****  
1025:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     /* Increment written pages number */
1026:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     numPagesWritten++;
1027:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
1028:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     /* Decrement pages to write */
1029:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     NumPageToWrite--;
1030:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
1031:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     /* Increment the NAND address */
1032:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     nandaddress = (uint32_t)(nandaddress + 1U);
1033:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
1034:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
1035:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Update the NAND controller state */ 
1036:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   hnand->State = HAL_NAND_STATE_READY;
1037:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
1038:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Process unlocked */
1039:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   __HAL_UNLOCK(hnand);      
1040:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
1041:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   return HAL_OK;
1042:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** }
1043:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
1044:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** /**
1045:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @brief  Read Spare area(s) from NAND memory 
1046:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @param  hnand pointer to a NAND_HandleTypeDef structure that contains
1047:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   *                the configuration information for NAND module.
1048:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @param  pAddress  pointer to NAND address structure
1049:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @param  pBuffer pointer to source buffer to write  
1050:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @param  NumSpareAreaToRead Number of spare area to read  
1051:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @retval HAL status
1052:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** */
1053:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** HAL_StatusTypeDef HAL_NAND_Read_SpareArea_8b(NAND_HandleTypeDef *hnand, NAND_AddressTypeDef *pAddre
1054:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** {
1055:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   __IO uint32_t index = 0U;
1056:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   uint32_t tickstart = 0U;
1057:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   uint32_t deviceaddress = 0U, size = 0U, numSpareAreaRead = 0U, nandaddress = 0U, columnaddress = 
1058:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
1059:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Process Locked */
1060:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   __HAL_LOCK(hnand);  
1061:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
1062:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Check the NAND controller state */
1063:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   if(hnand->State == HAL_NAND_STATE_BUSY)
1064:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
1065:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****      return HAL_BUSY;
1066:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
1067:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
1068:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Identify the device address */
1069:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   if(hnand->Init.NandBank == FMC_NAND_BANK2)
1070:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
1071:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     deviceaddress = NAND_DEVICE1;
1072:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
1073:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   else
1074:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
1075:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     deviceaddress = NAND_DEVICE2;
1076:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
1077:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
ARM GAS  /tmp/ccHfptsR.s 			page 35


1078:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Update the NAND controller state */
1079:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   hnand->State = HAL_NAND_STATE_BUSY;
1080:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
1081:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* NAND raw address calculation */
1082:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   nandaddress = ARRAY_ADDRESS(pAddress, hnand);
1083:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
1084:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Column in page address */
1085:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   columnaddress = COLUMN_ADDRESS(hnand);
1086:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
1087:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Spare area(s) read loop */ 
1088:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   while((NumSpareAreaToRead != 0U) && (nandaddress < ((hnand->Config.BlockSize) * (hnand->Config.Bl
1089:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {     
1090:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     /* update the buffer size */
1091:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     size = (hnand->Config.SpareAreaSize) + ((hnand->Config.SpareAreaSize) * numSpareAreaRead);
1092:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
1093:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     /* Cards with page size <= 512 bytes */
1094:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     if((hnand->Config.PageSize) <= 512U)
1095:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
1096:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       /* Send read spare area command sequence */     
1097:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_AREA_C;
1098:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       
1099:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       if (((hnand->Config.BlockSize)*(hnand->Config.BlockNbr)) <= 65535U)
1100:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
1101:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
1102:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
1103:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
1104:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
1105:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       else /* ((hnand->Config.BlockSize)*(hnand->Config.BlockNbr)) > 65535 */
1106:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
1107:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
1108:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
1109:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
1110:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
1111:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
1112:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     }
1113:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     else /* (hnand->Config.PageSize) > 512 */
1114:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
1115:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       /* Send read spare area command sequence */ 
1116:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_AREA_A;
1117:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       
1118:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       if (((hnand->Config.BlockSize)*(hnand->Config.BlockNbr)) <= 65535U)
1119:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
1120:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = COLUMN_1ST_CYCLE(columnaddress);
1121:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = COLUMN_2ND_CYCLE(columnaddress);
1122:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
1123:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
1124:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
1125:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       else /* ((hnand->Config.BlockSize)*(hnand->Config.BlockNbr)) > 65535 */
1126:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
1127:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = COLUMN_1ST_CYCLE(columnaddress);
1128:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = COLUMN_2ND_CYCLE(columnaddress);
1129:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
1130:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
1131:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
1132:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
1133:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     }
1134:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
ARM GAS  /tmp/ccHfptsR.s 			page 36


1135:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_AREA_TRUE1;
1136:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
1137:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     if(hnand->Config.ExtraCommandEnable == ENABLE)
1138:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
1139:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       /* Get tick */
1140:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       tickstart = HAL_GetTick();
1141:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       
1142:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       /* Read status until NAND is ready */
1143:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       while(HAL_NAND_Read_Status(hnand) != NAND_READY)
1144:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
1145:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         if((HAL_GetTick() - tickstart ) > NAND_WRITE_TIMEOUT)
1146:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         {
1147:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****           return HAL_TIMEOUT; 
1148:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         }
1149:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
1150:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       
1151:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       /* Go back to read mode */
1152:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = ((uint8_t)0x00);
1153:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     }
1154:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
1155:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     /* Get Data into Buffer */
1156:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     for(; index < size; index++)
1157:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
1158:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       *(uint8_t *)pBuffer++ = *(uint8_t *)deviceaddress;
1159:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     }
1160:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
1161:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     /* Increment read spare areas number */
1162:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     numSpareAreaRead++;
1163:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
1164:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     /* Decrement spare areas to read */
1165:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     NumSpareAreaToRead--;
1166:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
1167:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     /* Increment the NAND address */
1168:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     nandaddress = (uint32_t)(nandaddress + 1U);
1169:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
1170:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
1171:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Update the NAND controller state */
1172:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   hnand->State = HAL_NAND_STATE_READY;
1173:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
1174:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Process unlocked */
1175:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   __HAL_UNLOCK(hnand);
1176:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
1177:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   return HAL_OK;  
1178:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** }
1179:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
1180:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** /**
1181:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @brief  Read Spare area(s) from NAND memory (16-bits addressing)
1182:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @param  hnand pointer to a NAND_HandleTypeDef structure that contains
1183:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   *                the configuration information for NAND module.
1184:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @param  pAddress  pointer to NAND address structure
1185:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @param  pBuffer pointer to source buffer to write. pBuffer should be 16bits aligned.
1186:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @param  NumSpareAreaToRead Number of spare area to read  
1187:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @retval HAL status
1188:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** */
1189:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** HAL_StatusTypeDef HAL_NAND_Read_SpareArea_16b(NAND_HandleTypeDef *hnand, NAND_AddressTypeDef *pAddr
1190:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** {
1191:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   __IO uint32_t index = 0U; 
ARM GAS  /tmp/ccHfptsR.s 			page 37


1192:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   uint32_t tickstart = 0U;
1193:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   uint32_t deviceaddress = 0U, size = 0U, numSpareAreaRead = 0U, nandaddress = 0U, columnaddress = 
1194:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
1195:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Process Locked */
1196:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   __HAL_LOCK(hnand);
1197:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
1198:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Check the NAND controller state */
1199:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   if(hnand->State == HAL_NAND_STATE_BUSY)
1200:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
1201:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****      return HAL_BUSY;
1202:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
1203:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
1204:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Identify the device address */
1205:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   if(hnand->Init.NandBank == FMC_NAND_BANK2)
1206:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
1207:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     deviceaddress = NAND_DEVICE1;
1208:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
1209:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   else
1210:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
1211:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     deviceaddress = NAND_DEVICE2;
1212:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
1213:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
1214:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Update the NAND controller state */
1215:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   hnand->State = HAL_NAND_STATE_BUSY;
1216:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
1217:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* NAND raw address calculation */
1218:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   nandaddress = ARRAY_ADDRESS(pAddress, hnand);
1219:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
1220:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Column in page address */
1221:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   columnaddress = (uint32_t)(COLUMN_ADDRESS(hnand) * 2U);
1222:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
1223:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Spare area(s) read loop */ 
1224:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   while((NumSpareAreaToRead != 0U) && (nandaddress < ((hnand->Config.BlockSize) * (hnand->Config.Bl
1225:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
1226:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     /* update the buffer size */
1227:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     size = (hnand->Config.SpareAreaSize) + ((hnand->Config.SpareAreaSize) * numSpareAreaRead);
1228:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
1229:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     /* Cards with page size <= 512 bytes */
1230:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     if((hnand->Config.PageSize) <= 512U)
1231:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
1232:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       /* Send read spare area command sequence */     
1233:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_AREA_C;
1234:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       
1235:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       if (((hnand->Config.BlockSize)*(hnand->Config.BlockNbr)) <= 65535U)
1236:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
1237:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
1238:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
1239:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
1240:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
1241:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       else /* ((hnand->Config.BlockSize)*(hnand->Config.BlockNbr)) > 65535 */
1242:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
1243:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
1244:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
1245:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
1246:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
1247:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
1248:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     }
ARM GAS  /tmp/ccHfptsR.s 			page 38


1249:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     else /* (hnand->Config.PageSize) > 512 */
1250:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
1251:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       /* Send read spare area command sequence */     
1252:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_AREA_A;
1253:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       
1254:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       if (((hnand->Config.BlockSize)*(hnand->Config.BlockNbr)) <= 65535U)
1255:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
1256:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = COLUMN_1ST_CYCLE(columnaddress);
1257:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = COLUMN_2ND_CYCLE(columnaddress);
1258:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
1259:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
1260:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
1261:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       else /* ((hnand->Config.BlockSize)*(hnand->Config.BlockNbr)) > 65535 */
1262:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
1263:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = COLUMN_1ST_CYCLE(columnaddress);
1264:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = COLUMN_2ND_CYCLE(columnaddress);
1265:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
1266:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
1267:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
1268:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
1269:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     }
1270:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
1271:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_AREA_TRUE1;
1272:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
1273:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     if(hnand->Config.ExtraCommandEnable == ENABLE)
1274:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
1275:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       /* Get tick */
1276:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       tickstart = HAL_GetTick();
1277:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       
1278:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       /* Read status until NAND is ready */
1279:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       while(HAL_NAND_Read_Status(hnand) != NAND_READY)
1280:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
1281:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         if((HAL_GetTick() - tickstart ) > NAND_WRITE_TIMEOUT)
1282:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         {
1283:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****           return HAL_TIMEOUT; 
1284:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         }
1285:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
1286:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       
1287:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       /* Go back to read mode */
1288:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = ((uint8_t)0x00);
1289:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     }
1290:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
1291:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     /* Get Data into Buffer */
1292:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     for(; index < size; index++)
1293:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
1294:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       *(uint16_t *)pBuffer++ = *(uint16_t *)deviceaddress;
1295:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     }
1296:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
1297:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     /* Increment read spare areas number */
1298:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     numSpareAreaRead++;
1299:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
1300:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     /* Decrement spare areas to read */
1301:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     NumSpareAreaToRead--;
1302:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
1303:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     /* Increment the NAND address */
1304:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     nandaddress = (uint32_t)(nandaddress + 1U);
1305:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
ARM GAS  /tmp/ccHfptsR.s 			page 39


1306:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
1307:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Update the NAND controller state */
1308:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   hnand->State = HAL_NAND_STATE_READY;
1309:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
1310:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Process unlocked */
1311:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   __HAL_UNLOCK(hnand);     
1312:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
1313:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   return HAL_OK;  
1314:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** }
1315:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
1316:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** /**
1317:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @brief  Write Spare area(s) to NAND memory 
1318:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @param  hnand pointer to a NAND_HandleTypeDef structure that contains
1319:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   *                the configuration information for NAND module.
1320:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @param  pAddress  pointer to NAND address structure
1321:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @param  pBuffer  pointer to source buffer to write  
1322:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @param  NumSpareAreaTowrite   number of spare areas to write to block
1323:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @retval HAL status
1324:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   */
1325:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** HAL_StatusTypeDef HAL_NAND_Write_SpareArea_8b(NAND_HandleTypeDef *hnand, NAND_AddressTypeDef *pAddr
1326:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** {
1327:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   __IO uint32_t index = 0U;
1328:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   uint32_t tickstart = 0U;
1329:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   uint32_t deviceaddress = 0U, size = 0U, numSpareAreaWritten = 0U, nandaddress = 0U, columnaddress
1330:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
1331:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Process Locked */
1332:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   __HAL_LOCK(hnand); 
1333:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
1334:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Check the NAND controller state */
1335:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   if(hnand->State == HAL_NAND_STATE_BUSY)
1336:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
1337:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****      return HAL_BUSY;
1338:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
1339:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
1340:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Identify the device address */
1341:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   if(hnand->Init.NandBank == FMC_NAND_BANK2)
1342:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
1343:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     deviceaddress = NAND_DEVICE1;
1344:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
1345:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   else
1346:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
1347:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     deviceaddress = NAND_DEVICE2;
1348:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
1349:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
1350:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Update the FMC_NAND controller state */
1351:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   hnand->State = HAL_NAND_STATE_BUSY;  
1352:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
1353:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Page address calculation */
1354:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   nandaddress = ARRAY_ADDRESS(pAddress, hnand); 
1355:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
1356:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Column in page address */
1357:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   columnaddress = COLUMN_ADDRESS(hnand);
1358:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
1359:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Spare area(s) write loop */
1360:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   while((NumSpareAreaTowrite != 0U) && (nandaddress < ((hnand->Config.BlockSize) * (hnand->Config.B
1361:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
1362:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     /* update the buffer size */
ARM GAS  /tmp/ccHfptsR.s 			page 40


1363:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     size = (hnand->Config.SpareAreaSize) + ((hnand->Config.SpareAreaSize) * numSpareAreaWritten);
1364:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
1365:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     /* Cards with page size <= 512 bytes */
1366:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     if((hnand->Config.PageSize) <= 512U)
1367:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
1368:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       /* Send write Spare area command sequence */
1369:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_AREA_C;
1370:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_WRITE0;
1371:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       
1372:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       if (((hnand->Config.BlockSize)*(hnand->Config.BlockNbr)) <= 65535U)
1373:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
1374:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
1375:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
1376:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
1377:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
1378:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       else /* ((hnand->Config.BlockSize)*(hnand->Config.BlockNbr)) > 65535 */
1379:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
1380:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
1381:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
1382:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
1383:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
1384:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
1385:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     }
1386:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     else /* (hnand->Config.PageSize) > 512 */
1387:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
1388:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       /* Send write Spare area command sequence */
1389:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_AREA_A;
1390:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_WRITE0;
1391:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
1392:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       if (((hnand->Config.BlockSize)*(hnand->Config.BlockNbr)) <= 65535U)
1393:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
1394:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = COLUMN_1ST_CYCLE(columnaddress);
1395:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = COLUMN_2ND_CYCLE(columnaddress);
1396:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
1397:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
1398:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
1399:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       else /* ((hnand->Config.BlockSize)*(hnand->Config.BlockNbr)) > 65535 */
1400:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
1401:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = COLUMN_1ST_CYCLE(columnaddress);
1402:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = COLUMN_2ND_CYCLE(columnaddress);
1403:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
1404:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
1405:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
1406:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
1407:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     }
1408:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
1409:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     /* Write data to memory */
1410:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     for(; index < size; index++)
1411:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
1412:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       *(__IO uint8_t *)deviceaddress = *(uint8_t *)pBuffer++;
1413:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     }
1414:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****    
1415:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_WRITE_TRUE1;
1416:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
1417:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     /* Get tick */
1418:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     tickstart = HAL_GetTick();
1419:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
ARM GAS  /tmp/ccHfptsR.s 			page 41


1420:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     /* Read status until NAND is ready */
1421:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     while(HAL_NAND_Read_Status(hnand) != NAND_READY)
1422:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
1423:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       if((HAL_GetTick() - tickstart ) > NAND_WRITE_TIMEOUT)
1424:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
1425:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         return HAL_TIMEOUT; 
1426:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
1427:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     }
1428:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
1429:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     /* Increment written spare areas number */
1430:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     numSpareAreaWritten++;
1431:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
1432:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     /* Decrement spare areas to write */
1433:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     NumSpareAreaTowrite--;
1434:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
1435:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     /* Increment the NAND address */
1436:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     nandaddress = (uint32_t)(nandaddress + 1U);
1437:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
1438:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
1439:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Update the NAND controller state */
1440:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   hnand->State = HAL_NAND_STATE_READY;
1441:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
1442:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Process unlocked */
1443:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   __HAL_UNLOCK(hnand);
1444:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
1445:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   return HAL_OK;
1446:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** }
1447:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
1448:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** /**
1449:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @brief  Write Spare area(s) to NAND memory (16-bits addressing)
1450:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @param  hnand pointer to a NAND_HandleTypeDef structure that contains
1451:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   *                the configuration information for NAND module.
1452:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @param  pAddress  pointer to NAND address structure
1453:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @param  pBuffer  pointer to source buffer to write. pBuffer should be 16bits aligned.  
1454:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @param  NumSpareAreaTowrite   number of spare areas to write to block
1455:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @retval HAL status
1456:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   */
1457:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** HAL_StatusTypeDef HAL_NAND_Write_SpareArea_16b(NAND_HandleTypeDef *hnand, NAND_AddressTypeDef *pAdd
1458:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** {
1459:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   __IO uint32_t index = 0U;
1460:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   uint32_t tickstart = 0U;
1461:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   uint32_t deviceaddress = 0U, size = 0U, numSpareAreaWritten = 0U, nandaddress = 0U, columnaddress
1462:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
1463:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Process Locked */
1464:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   __HAL_LOCK(hnand); 
1465:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
1466:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Check the NAND controller state */
1467:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   if(hnand->State == HAL_NAND_STATE_BUSY)
1468:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
1469:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****      return HAL_BUSY;
1470:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
1471:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
1472:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Identify the device address */
1473:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   if(hnand->Init.NandBank == FMC_NAND_BANK2)
1474:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
1475:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     deviceaddress = NAND_DEVICE1;
1476:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
ARM GAS  /tmp/ccHfptsR.s 			page 42


1477:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   else
1478:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
1479:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     deviceaddress = NAND_DEVICE2;
1480:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
1481:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
1482:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Update the FMC_NAND controller state */
1483:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   hnand->State = HAL_NAND_STATE_BUSY;  
1484:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
1485:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* NAND raw address calculation */
1486:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   nandaddress = ARRAY_ADDRESS(pAddress, hnand);
1487:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
1488:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Column in page address */
1489:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   columnaddress = (uint32_t)(COLUMN_ADDRESS(hnand) * 2U);
1490:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
1491:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Spare area(s) write loop */
1492:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   while((NumSpareAreaTowrite != 0U) && (nandaddress < ((hnand->Config.BlockSize) * (hnand->Config.B
1493:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
1494:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     /* update the buffer size */
1495:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     size = (hnand->Config.SpareAreaSize) + ((hnand->Config.SpareAreaSize) * numSpareAreaWritten);
1496:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
1497:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     /* Cards with page size <= 512 bytes */
1498:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     if((hnand->Config.PageSize) <= 512U)
1499:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
1500:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       /* Send write Spare area command sequence */
1501:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_AREA_C;
1502:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_WRITE0;
1503:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
1504:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       if (((hnand->Config.BlockSize)*(hnand->Config.BlockNbr)) <= 65535U)
1505:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
1506:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
1507:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
1508:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
1509:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
1510:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       else /* ((hnand->Config.BlockSize)*(hnand->Config.BlockNbr)) > 65535 */
1511:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
1512:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
1513:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
1514:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
1515:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
1516:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
1517:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     }
1518:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     else /* (hnand->Config.PageSize) > 512 */
1519:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
1520:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       /* Send write Spare area command sequence */
1521:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_AREA_A;
1522:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_WRITE0;
1523:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
1524:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       if (((hnand->Config.BlockSize)*(hnand->Config.BlockNbr)) <= 65535U)
1525:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
1526:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = COLUMN_1ST_CYCLE(columnaddress);
1527:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = COLUMN_2ND_CYCLE(columnaddress);
1528:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
1529:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
1530:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
1531:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       else /* ((hnand->Config.BlockSize)*(hnand->Config.BlockNbr)) > 65535 */
1532:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
1533:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = COLUMN_1ST_CYCLE(columnaddress);
ARM GAS  /tmp/ccHfptsR.s 			page 43


1534:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = COLUMN_2ND_CYCLE(columnaddress);
1535:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
1536:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
1537:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
1538:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
1539:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     }
1540:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
1541:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     /* Write data to memory */
1542:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     for(; index < size; index++)
1543:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
1544:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       *(__IO uint16_t *)deviceaddress = *(uint16_t *)pBuffer++;
1545:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     }
1546:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****    
1547:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_WRITE_TRUE1;
1548:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****    
1549:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     /* Read status until NAND is ready */
1550:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     while(HAL_NAND_Read_Status(hnand) != NAND_READY)
1551:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
1552:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       /* Get tick */
1553:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       tickstart = HAL_GetTick();
1554:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
1555:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       if((HAL_GetTick() - tickstart ) > NAND_WRITE_TIMEOUT)
1556:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
1557:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         return HAL_TIMEOUT; 
1558:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
1559:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     }
1560:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
1561:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     /* Increment written spare areas number */
1562:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     numSpareAreaWritten++;
1563:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
1564:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     /* Decrement spare areas to write */
1565:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     NumSpareAreaTowrite--;
1566:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
1567:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     /* Increment the NAND address */
1568:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     nandaddress = (uint32_t)(nandaddress + 1U);
1569:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
1570:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
1571:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Update the NAND controller state */
1572:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   hnand->State = HAL_NAND_STATE_READY;
1573:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
1574:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Process unlocked */
1575:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   __HAL_UNLOCK(hnand);
1576:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
1577:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   return HAL_OK;  
1578:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** }
1579:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
1580:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** /**
1581:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @brief  NAND memory Block erase 
1582:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @param  hnand pointer to a NAND_HandleTypeDef structure that contains
1583:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   *                the configuration information for NAND module.
1584:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @param  pAddress  pointer to NAND address structure
1585:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @retval HAL status
1586:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   */
1587:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** HAL_StatusTypeDef HAL_NAND_Erase_Block(NAND_HandleTypeDef *hnand, NAND_AddressTypeDef *pAddress)
1588:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** {
1589:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   uint32_t deviceaddress = 0U;
1590:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   uint32_t tickstart = 0U;
ARM GAS  /tmp/ccHfptsR.s 			page 44


1591:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
1592:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Process Locked */
1593:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   __HAL_LOCK(hnand);
1594:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
1595:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Check the NAND controller state */
1596:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   if(hnand->State == HAL_NAND_STATE_BUSY)
1597:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
1598:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****      return HAL_BUSY;
1599:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
1600:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
1601:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Identify the device address */
1602:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   if(hnand->Init.NandBank == FMC_NAND_BANK2)
1603:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
1604:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     deviceaddress = NAND_DEVICE1;
1605:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
1606:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   else
1607:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
1608:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     deviceaddress = NAND_DEVICE2;
1609:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
1610:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
1611:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Update the NAND controller state */
1612:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   hnand->State = HAL_NAND_STATE_BUSY;  
1613:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
1614:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Send Erase block command sequence */
1615:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_ERASE0;
1616:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
1617:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(ARRAY_ADDRESS(pAddress,
1618:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(ARRAY_ADDRESS(pAddress,
1619:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(ARRAY_ADDRESS(pAddress,
1620:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
1621:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_ERASE1; 
1622:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
1623:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Update the NAND controller state */
1624:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   hnand->State = HAL_NAND_STATE_READY;
1625:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
1626:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Get tick */
1627:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   tickstart = HAL_GetTick();
1628:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
1629:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Read status until NAND is ready */
1630:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   while(HAL_NAND_Read_Status(hnand) != NAND_READY)
1631:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
1632:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     if((HAL_GetTick() - tickstart ) > NAND_WRITE_TIMEOUT)
1633:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
1634:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       /* Process unlocked */
1635:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       __HAL_UNLOCK(hnand);    
1636:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
1637:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       return HAL_TIMEOUT; 
1638:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     } 
1639:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }    
1640:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****  
1641:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Process unlocked */
1642:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   __HAL_UNLOCK(hnand);    
1643:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
1644:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   return HAL_OK;  
1645:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** }
1646:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
1647:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** /**
ARM GAS  /tmp/ccHfptsR.s 			page 45


1648:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @brief  NAND memory read status 
1649:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @param  hnand pointer to a NAND_HandleTypeDef structure that contains
1650:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   *                the configuration information for NAND module.
1651:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @retval NAND status
1652:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   */
1653:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** uint32_t HAL_NAND_Read_Status(NAND_HandleTypeDef *hnand)
1654:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** {
 781              		.loc 1 1654 1 is_stmt 1 view -0
 782              		.cfi_startproc
 783              		@ args = 0, pretend = 0, frame = 0
 784              		@ frame_needed = 0, uses_anonymous_args = 0
 785              		@ link register save eliminated.
1655:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   uint32_t data = 0U;
 786              		.loc 1 1655 3 view .LVU215
1656:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   uint32_t deviceaddress = 0U;
 787              		.loc 1 1656 3 view .LVU216
1657:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
1658:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Identify the device address */
1659:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   if(hnand->Init.NandBank == FMC_NAND_BANK2)
 788              		.loc 1 1659 3 view .LVU217
 789              		.loc 1 1659 17 is_stmt 0 view .LVU218
 790 0000 4368     		ldr	r3, [r0, #4]
 791              		.loc 1 1659 5 view .LVU219
 792 0002 102B     		cmp	r3, #16
 793 0004 0FD0     		beq	.L70
1660:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
1661:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     deviceaddress = NAND_DEVICE1;
1662:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
1663:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   else
1664:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
1665:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     deviceaddress = NAND_DEVICE2;
 794              		.loc 1 1665 19 view .LVU220
 795 0006 4FF00043 		mov	r3, #-2147483648
 796              	.L65:
 797              	.LVL45:
1666:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   } 
1667:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
1668:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Send Read status operation command */
1669:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_STATUS;
 798              		.loc 1 1669 3 is_stmt 1 view .LVU221
 799              		.loc 1 1669 21 is_stmt 0 view .LVU222
 800 000a 43F48032 		orr	r2, r3, #65536
 801              		.loc 1 1669 59 view .LVU223
 802 000e 7021     		movs	r1, #112
 803 0010 1170     		strb	r1, [r2]
1670:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
1671:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Read status register data */
1672:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   data = *(__IO uint8_t *)deviceaddress;
 804              		.loc 1 1672 3 is_stmt 1 view .LVU224
 805              		.loc 1 1672 10 is_stmt 0 view .LVU225
 806 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 807              	.LVL46:
 808              		.loc 1 1672 10 view .LVU226
 809 0014 DAB2     		uxtb	r2, r3
 810              	.LVL47:
1673:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
1674:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Return the status */
ARM GAS  /tmp/ccHfptsR.s 			page 46


1675:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   if((data & NAND_ERROR) == NAND_ERROR)
 811              		.loc 1 1675 3 is_stmt 1 view .LVU227
 812              		.loc 1 1675 5 is_stmt 0 view .LVU228
 813 0016 13F0010F 		tst	r3, #1
 814 001a 07D1     		bne	.L68
1676:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
1677:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     return NAND_ERROR;
1678:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   } 
1679:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   else if((data & NAND_READY) == NAND_READY)
 815              		.loc 1 1679 8 is_stmt 1 view .LVU229
 816              		.loc 1 1679 10 is_stmt 0 view .LVU230
 817 001c 12F0400F 		tst	r2, #64
 818 0020 06D1     		bne	.L69
1680:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
1681:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     return NAND_READY;
1682:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
1683:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
1684:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   return NAND_BUSY; 
 819              		.loc 1 1684 10 view .LVU231
 820 0022 0020     		movs	r0, #0
 821              	.LVL48:
 822              		.loc 1 1684 10 view .LVU232
 823 0024 7047     		bx	lr
 824              	.LVL49:
 825              	.L70:
1661:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
 826              		.loc 1 1661 19 view .LVU233
 827 0026 4FF0E043 		mov	r3, #1879048192
 828 002a EEE7     		b	.L65
 829              	.LVL50:
 830              	.L68:
1677:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   } 
 831              		.loc 1 1677 12 view .LVU234
 832 002c 0120     		movs	r0, #1
 833              	.LVL51:
1677:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   } 
 834              		.loc 1 1677 12 view .LVU235
 835 002e 7047     		bx	lr
 836              	.LVL52:
 837              	.L69:
1681:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
 838              		.loc 1 1681 12 view .LVU236
 839 0030 4020     		movs	r0, #64
 840              	.LVL53:
1685:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** }
 841              		.loc 1 1685 1 view .LVU237
 842 0032 7047     		bx	lr
 843              		.cfi_endproc
 844              	.LFE150:
 846              		.section	.text.HAL_NAND_Read_Page_8b,"ax",%progbits
 847              		.align	1
 848              		.global	HAL_NAND_Read_Page_8b
 849              		.syntax unified
 850              		.thumb
 851              		.thumb_func
 852              		.fpu fpv4-sp-d16
 854              	HAL_NAND_Read_Page_8b:
ARM GAS  /tmp/ccHfptsR.s 			page 47


 855              	.LVL54:
 856              	.LFB141:
 536:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   __IO uint32_t index  = 0U;
 857              		.loc 1 536 1 is_stmt 1 view -0
 858              		.cfi_startproc
 859              		@ args = 0, pretend = 0, frame = 16
 860              		@ frame_needed = 0, uses_anonymous_args = 0
 536:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   __IO uint32_t index  = 0U;
 861              		.loc 1 536 1 is_stmt 0 view .LVU239
 862 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 863              	.LCFI9:
 864              		.cfi_def_cfa_offset 36
 865              		.cfi_offset 4, -36
 866              		.cfi_offset 5, -32
 867              		.cfi_offset 6, -28
 868              		.cfi_offset 7, -24
 869              		.cfi_offset 8, -20
 870              		.cfi_offset 9, -16
 871              		.cfi_offset 10, -12
 872              		.cfi_offset 11, -8
 873              		.cfi_offset 14, -4
 874 0004 85B0     		sub	sp, sp, #20
 875              	.LCFI10:
 876              		.cfi_def_cfa_offset 56
 877 0006 9946     		mov	r9, r3
 537:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   uint32_t tickstart = 0U;
 878              		.loc 1 537 3 is_stmt 1 view .LVU240
 537:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   uint32_t tickstart = 0U;
 879              		.loc 1 537 17 is_stmt 0 view .LVU241
 880 0008 0023     		movs	r3, #0
 881              	.LVL55:
 537:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   uint32_t tickstart = 0U;
 882              		.loc 1 537 17 view .LVU242
 883 000a 0393     		str	r3, [sp, #12]
 538:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   uint32_t deviceaddress = 0U, size = 0U, numPagesRead = 0U, nandaddress = 0U;
 884              		.loc 1 538 3 is_stmt 1 view .LVU243
 885              	.LVL56:
 539:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 886              		.loc 1 539 3 view .LVU244
 542:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 887              		.loc 1 542 3 view .LVU245
 542:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 888              		.loc 1 542 3 view .LVU246
 889 000c 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 890 0010 012B     		cmp	r3, #1
 891 0012 00F0AF80 		beq	.L86
 892 0016 0746     		mov	r7, r0
 893 0018 1446     		mov	r4, r2
 542:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 894              		.loc 1 542 3 discriminator 2 view .LVU247
 895 001a 0123     		movs	r3, #1
 896 001c 80F82030 		strb	r3, [r0, #32]
 542:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 897              		.loc 1 542 3 discriminator 2 view .LVU248
 545:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 898              		.loc 1 545 3 discriminator 2 view .LVU249
 545:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
ARM GAS  /tmp/ccHfptsR.s 			page 48


 899              		.loc 1 545 11 is_stmt 0 discriminator 2 view .LVU250
 900 0020 90F82100 		ldrb	r0, [r0, #33]	@ zero_extendqisi2
 901              	.LVL57:
 545:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 902              		.loc 1 545 11 discriminator 2 view .LVU251
 903 0024 C0B2     		uxtb	r0, r0
 545:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 904              		.loc 1 545 5 discriminator 2 view .LVU252
 905 0026 0228     		cmp	r0, #2
 906 0028 00F0A180 		beq	.L72
 551:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 907              		.loc 1 551 3 is_stmt 1 view .LVU253
 551:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 908              		.loc 1 551 17 is_stmt 0 view .LVU254
 909 002c 7B68     		ldr	r3, [r7, #4]
 551:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 910              		.loc 1 551 5 view .LVU255
 911 002e 102B     		cmp	r3, #16
 912 0030 11D0     		beq	.L90
 557:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
 913              		.loc 1 557 19 view .LVU256
 914 0032 4FF00046 		mov	r6, #-2147483648
 915              	.L73:
 916              	.LVL58:
 561:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 917              		.loc 1 561 3 is_stmt 1 view .LVU257
 561:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 918              		.loc 1 561 16 is_stmt 0 view .LVU258
 919 0036 0223     		movs	r3, #2
 920 0038 87F82130 		strb	r3, [r7, #33]
 564:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 921              		.loc 1 564 3 is_stmt 1 view .LVU259
 564:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 922              		.loc 1 564 17 is_stmt 0 view .LVU260
 923 003c 0B88     		ldrh	r3, [r1]
 924 003e 8A88     		ldrh	r2, [r1, #4]
 925              	.LVL59:
 564:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 926              		.loc 1 564 17 view .LVU261
 927 0040 B1F80280 		ldrh	r8, [r1, #2]
 928 0044 B96B     		ldr	r1, [r7, #56]
 929              	.LVL60:
 564:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 930              		.loc 1 564 17 view .LVU262
 931 0046 01FB0828 		mla	r8, r1, r8, r2
 932 004a FA6A     		ldr	r2, [r7, #44]
 564:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 933              		.loc 1 564 15 view .LVU263
 934 004c 02FB0838 		mla	r8, r2, r8, r3
 935              	.LVL61:
 567:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 936              		.loc 1 567 3 is_stmt 1 view .LVU264
 539:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 937              		.loc 1 539 43 is_stmt 0 view .LVU265
 938 0050 4FF0000A 		mov	r10, #0
 567:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 939              		.loc 1 567 8 view .LVU266
ARM GAS  /tmp/ccHfptsR.s 			page 49


 940 0054 45E0     		b	.L74
 941              	.LVL62:
 942              	.L90:
 553:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
 943              		.loc 1 553 19 view .LVU267
 944 0056 4FF0E046 		mov	r6, #1879048192
 945 005a ECE7     		b	.L73
 946              	.LVL63:
 947              	.L76:
 586:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 948              		.loc 1 586 9 is_stmt 1 view .LVU268
 586:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 949              		.loc 1 586 27 is_stmt 0 view .LVU269
 950 005c 46F40033 		orr	r3, r6, #131072
 586:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 951              		.loc 1 586 66 view .LVU270
 952 0060 0022     		movs	r2, #0
 953 0062 1A70     		strb	r2, [r3]
 587:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 954              		.loc 1 587 9 is_stmt 1 view .LVU271
 587:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 955              		.loc 1 587 68 is_stmt 0 view .LVU272
 956 0064 5FFA88F2 		uxtb	r2, r8
 587:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 957              		.loc 1 587 66 view .LVU273
 958 0068 1A70     		strb	r2, [r3]
 588:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
 959              		.loc 1 588 9 is_stmt 1 view .LVU274
 588:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
 960              		.loc 1 588 68 is_stmt 0 view .LVU275
 961 006a C8F30722 		ubfx	r2, r8, #8, #8
 588:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
 962              		.loc 1 588 66 view .LVU276
 963 006e 1A70     		strb	r2, [r3]
 589:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 964              		.loc 1 589 9 is_stmt 1 view .LVU277
 589:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 965              		.loc 1 589 68 is_stmt 0 view .LVU278
 966 0070 C8F30742 		ubfx	r2, r8, #16, #8
 589:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 967              		.loc 1 589 66 view .LVU279
 968 0074 1A70     		strb	r2, [r3]
 969 0076 5CE0     		b	.L77
 970              	.L75:
 594:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 971              		.loc 1 594 7 is_stmt 1 view .LVU280
 594:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 972              		.loc 1 594 26 is_stmt 0 view .LVU281
 973 0078 FA6A     		ldr	r2, [r7, #44]
 594:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 974              		.loc 1 594 52 view .LVU282
 975 007a 3B6B     		ldr	r3, [r7, #48]
 594:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 976              		.loc 1 594 37 view .LVU283
 977 007c 03FB02F3 		mul	r3, r3, r2
 594:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 978              		.loc 1 594 10 view .LVU284
ARM GAS  /tmp/ccHfptsR.s 			page 50


 979 0080 B3F5803F 		cmp	r3, #65536
 980 0084 0BD2     		bcs	.L78
 596:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
 981              		.loc 1 596 9 is_stmt 1 view .LVU285
 596:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
 982              		.loc 1 596 27 is_stmt 0 view .LVU286
 983 0086 46F40033 		orr	r3, r6, #131072
 596:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
 984              		.loc 1 596 66 view .LVU287
 985 008a 0022     		movs	r2, #0
 986 008c 1A70     		strb	r2, [r3]
 597:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 987              		.loc 1 597 9 is_stmt 1 view .LVU288
 597:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 988              		.loc 1 597 66 is_stmt 0 view .LVU289
 989 008e 1A70     		strb	r2, [r3]
 598:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 990              		.loc 1 598 9 is_stmt 1 view .LVU290
 598:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 991              		.loc 1 598 68 is_stmt 0 view .LVU291
 992 0090 5FFA88F2 		uxtb	r2, r8
 598:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 993              		.loc 1 598 66 view .LVU292
 994 0094 1A70     		strb	r2, [r3]
 599:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 995              		.loc 1 599 9 is_stmt 1 view .LVU293
 599:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 996              		.loc 1 599 68 is_stmt 0 view .LVU294
 997 0096 C8F30722 		ubfx	r2, r8, #8, #8
 599:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 998              		.loc 1 599 66 view .LVU295
 999 009a 1A70     		strb	r2, [r3]
 1000 009c 49E0     		b	.L77
 1001              	.L78:
 603:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
 1002              		.loc 1 603 9 is_stmt 1 view .LVU296
 603:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
 1003              		.loc 1 603 27 is_stmt 0 view .LVU297
 1004 009e 46F40033 		orr	r3, r6, #131072
 603:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
 1005              		.loc 1 603 66 view .LVU298
 1006 00a2 0022     		movs	r2, #0
 1007 00a4 1A70     		strb	r2, [r3]
 604:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 1008              		.loc 1 604 9 is_stmt 1 view .LVU299
 604:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 1009              		.loc 1 604 66 is_stmt 0 view .LVU300
 1010 00a6 1A70     		strb	r2, [r3]
 605:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 1011              		.loc 1 605 9 is_stmt 1 view .LVU301
 605:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 1012              		.loc 1 605 68 is_stmt 0 view .LVU302
 1013 00a8 5FFA88F2 		uxtb	r2, r8
 605:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 1014              		.loc 1 605 66 view .LVU303
 1015 00ac 1A70     		strb	r2, [r3]
 606:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
ARM GAS  /tmp/ccHfptsR.s 			page 51


 1016              		.loc 1 606 9 is_stmt 1 view .LVU304
 606:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
 1017              		.loc 1 606 68 is_stmt 0 view .LVU305
 1018 00ae C8F30722 		ubfx	r2, r8, #8, #8
 606:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
 1019              		.loc 1 606 66 view .LVU306
 1020 00b2 1A70     		strb	r2, [r3]
 607:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 1021              		.loc 1 607 9 is_stmt 1 view .LVU307
 607:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 1022              		.loc 1 607 68 is_stmt 0 view .LVU308
 1023 00b4 C8F30742 		ubfx	r2, r8, #16, #8
 607:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 1024              		.loc 1 607 66 view .LVU309
 1025 00b8 1A70     		strb	r2, [r3]
 1026 00ba 3AE0     		b	.L77
 1027              	.LVL64:
 1028              	.L91:
 629:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       __DSB();
 1029              		.loc 1 629 7 is_stmt 1 view .LVU310
 629:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       __DSB();
 1030              		.loc 1 629 63 is_stmt 0 view .LVU311
 1031 00bc 0023     		movs	r3, #0
 1032 00be 8BF80030 		strb	r3, [fp]
 630:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     }
 1033              		.loc 1 630 7 is_stmt 1 view .LVU312
 1034              	.LBB14:
 1035              	.LBI14:
 1036              		.file 2 "CORE/cmsis_gcc.h"
   1:CORE/cmsis_gcc.h **** /**************************************************************************//**
   2:CORE/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:CORE/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:CORE/cmsis_gcc.h ****  * @version  V5.2.1
   5:CORE/cmsis_gcc.h ****  * @date     30. July 2019
   6:CORE/cmsis_gcc.h ****  ******************************************************************************/
   7:CORE/cmsis_gcc.h **** /*
   8:CORE/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:CORE/cmsis_gcc.h ****  *
  10:CORE/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:CORE/cmsis_gcc.h ****  *
  12:CORE/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:CORE/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:CORE/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:CORE/cmsis_gcc.h ****  *
  16:CORE/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:CORE/cmsis_gcc.h ****  *
  18:CORE/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:CORE/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:CORE/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:CORE/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:CORE/cmsis_gcc.h ****  * limitations under the License.
  23:CORE/cmsis_gcc.h ****  */
  24:CORE/cmsis_gcc.h **** 
  25:CORE/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:CORE/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:CORE/cmsis_gcc.h **** 
  28:CORE/cmsis_gcc.h **** /* ignore some GCC warnings */
ARM GAS  /tmp/ccHfptsR.s 			page 52


  29:CORE/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:CORE/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:CORE/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:CORE/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:CORE/cmsis_gcc.h **** 
  34:CORE/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:CORE/cmsis_gcc.h **** #ifndef __has_builtin
  36:CORE/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:CORE/cmsis_gcc.h **** #endif
  38:CORE/cmsis_gcc.h **** 
  39:CORE/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:CORE/cmsis_gcc.h **** #ifndef   __ASM
  41:CORE/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:CORE/cmsis_gcc.h **** #endif
  43:CORE/cmsis_gcc.h **** #ifndef   __INLINE
  44:CORE/cmsis_gcc.h ****   #define __INLINE                               inline
  45:CORE/cmsis_gcc.h **** #endif
  46:CORE/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:CORE/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:CORE/cmsis_gcc.h **** #endif
  49:CORE/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:CORE/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:CORE/cmsis_gcc.h **** #endif
  52:CORE/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:CORE/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:CORE/cmsis_gcc.h **** #endif
  55:CORE/cmsis_gcc.h **** #ifndef   __USED
  56:CORE/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:CORE/cmsis_gcc.h **** #endif
  58:CORE/cmsis_gcc.h **** #ifndef   __WEAK
  59:CORE/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:CORE/cmsis_gcc.h **** #endif
  61:CORE/cmsis_gcc.h **** #ifndef   __PACKED
  62:CORE/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:CORE/cmsis_gcc.h **** #endif
  64:CORE/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:CORE/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:CORE/cmsis_gcc.h **** #endif
  67:CORE/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:CORE/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:CORE/cmsis_gcc.h **** #endif
  70:CORE/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:CORE/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:CORE/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:CORE/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:CORE/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:CORE/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:CORE/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:CORE/cmsis_gcc.h **** #endif
  78:CORE/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:CORE/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:CORE/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:CORE/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:CORE/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:CORE/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:CORE/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:CORE/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccHfptsR.s 			page 53


  86:CORE/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:CORE/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:CORE/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:CORE/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:CORE/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:CORE/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:CORE/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:CORE/cmsis_gcc.h **** #endif
  94:CORE/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:CORE/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:CORE/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:CORE/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:CORE/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:CORE/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:CORE/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:CORE/cmsis_gcc.h **** #endif
 102:CORE/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:CORE/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:CORE/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:CORE/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:CORE/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:CORE/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:CORE/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:CORE/cmsis_gcc.h **** #endif
 110:CORE/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:CORE/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:CORE/cmsis_gcc.h **** #endif
 113:CORE/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:CORE/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:CORE/cmsis_gcc.h **** #endif
 116:CORE/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:CORE/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:CORE/cmsis_gcc.h **** #endif
 119:CORE/cmsis_gcc.h **** 
 120:CORE/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:CORE/cmsis_gcc.h **** 
 122:CORE/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:CORE/cmsis_gcc.h **** 
 124:CORE/cmsis_gcc.h **** /**
 125:CORE/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:CORE/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:CORE/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:CORE/cmsis_gcc.h ****            in the used linker script.
 129:CORE/cmsis_gcc.h **** 
 130:CORE/cmsis_gcc.h ****  */
 131:CORE/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:CORE/cmsis_gcc.h **** {
 133:CORE/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:CORE/cmsis_gcc.h **** 
 135:CORE/cmsis_gcc.h ****   typedef struct {
 136:CORE/cmsis_gcc.h ****     uint32_t const* src;
 137:CORE/cmsis_gcc.h ****     uint32_t* dest;
 138:CORE/cmsis_gcc.h ****     uint32_t  wlen;
 139:CORE/cmsis_gcc.h ****   } __copy_table_t;
 140:CORE/cmsis_gcc.h **** 
 141:CORE/cmsis_gcc.h ****   typedef struct {
 142:CORE/cmsis_gcc.h ****     uint32_t* dest;
ARM GAS  /tmp/ccHfptsR.s 			page 54


 143:CORE/cmsis_gcc.h ****     uint32_t  wlen;
 144:CORE/cmsis_gcc.h ****   } __zero_table_t;
 145:CORE/cmsis_gcc.h **** 
 146:CORE/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:CORE/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:CORE/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:CORE/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:CORE/cmsis_gcc.h **** 
 151:CORE/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:CORE/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:CORE/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:CORE/cmsis_gcc.h ****     }
 155:CORE/cmsis_gcc.h ****   }
 156:CORE/cmsis_gcc.h **** 
 157:CORE/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:CORE/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:CORE/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:CORE/cmsis_gcc.h ****     }
 161:CORE/cmsis_gcc.h ****   }
 162:CORE/cmsis_gcc.h **** 
 163:CORE/cmsis_gcc.h ****   _start();
 164:CORE/cmsis_gcc.h **** }
 165:CORE/cmsis_gcc.h **** 
 166:CORE/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:CORE/cmsis_gcc.h **** #endif
 168:CORE/cmsis_gcc.h **** 
 169:CORE/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:CORE/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:CORE/cmsis_gcc.h **** #endif
 172:CORE/cmsis_gcc.h **** 
 173:CORE/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:CORE/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:CORE/cmsis_gcc.h **** #endif
 176:CORE/cmsis_gcc.h **** 
 177:CORE/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:CORE/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:CORE/cmsis_gcc.h **** #endif
 180:CORE/cmsis_gcc.h **** 
 181:CORE/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:CORE/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:CORE/cmsis_gcc.h **** #endif
 184:CORE/cmsis_gcc.h **** 
 185:CORE/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:CORE/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:CORE/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:CORE/cmsis_gcc.h ****   @{
 189:CORE/cmsis_gcc.h ****  */
 190:CORE/cmsis_gcc.h **** 
 191:CORE/cmsis_gcc.h **** /**
 192:CORE/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:CORE/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:CORE/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:CORE/cmsis_gcc.h ****  */
 196:CORE/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:CORE/cmsis_gcc.h **** {
 198:CORE/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:CORE/cmsis_gcc.h **** }
ARM GAS  /tmp/ccHfptsR.s 			page 55


 200:CORE/cmsis_gcc.h **** 
 201:CORE/cmsis_gcc.h **** 
 202:CORE/cmsis_gcc.h **** /**
 203:CORE/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:CORE/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:CORE/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:CORE/cmsis_gcc.h ****  */
 207:CORE/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:CORE/cmsis_gcc.h **** {
 209:CORE/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 210:CORE/cmsis_gcc.h **** }
 211:CORE/cmsis_gcc.h **** 
 212:CORE/cmsis_gcc.h **** 
 213:CORE/cmsis_gcc.h **** /**
 214:CORE/cmsis_gcc.h ****   \brief   Get Control Register
 215:CORE/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 216:CORE/cmsis_gcc.h ****   \return               Control Register value
 217:CORE/cmsis_gcc.h ****  */
 218:CORE/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 219:CORE/cmsis_gcc.h **** {
 220:CORE/cmsis_gcc.h ****   uint32_t result;
 221:CORE/cmsis_gcc.h **** 
 222:CORE/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 223:CORE/cmsis_gcc.h ****   return(result);
 224:CORE/cmsis_gcc.h **** }
 225:CORE/cmsis_gcc.h **** 
 226:CORE/cmsis_gcc.h **** 
 227:CORE/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 228:CORE/cmsis_gcc.h **** /**
 229:CORE/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 230:CORE/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 231:CORE/cmsis_gcc.h ****   \return               non-secure Control Register value
 232:CORE/cmsis_gcc.h ****  */
 233:CORE/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 234:CORE/cmsis_gcc.h **** {
 235:CORE/cmsis_gcc.h ****   uint32_t result;
 236:CORE/cmsis_gcc.h **** 
 237:CORE/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 238:CORE/cmsis_gcc.h ****   return(result);
 239:CORE/cmsis_gcc.h **** }
 240:CORE/cmsis_gcc.h **** #endif
 241:CORE/cmsis_gcc.h **** 
 242:CORE/cmsis_gcc.h **** 
 243:CORE/cmsis_gcc.h **** /**
 244:CORE/cmsis_gcc.h ****   \brief   Set Control Register
 245:CORE/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 246:CORE/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 247:CORE/cmsis_gcc.h ****  */
 248:CORE/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 249:CORE/cmsis_gcc.h **** {
 250:CORE/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 251:CORE/cmsis_gcc.h **** }
 252:CORE/cmsis_gcc.h **** 
 253:CORE/cmsis_gcc.h **** 
 254:CORE/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 255:CORE/cmsis_gcc.h **** /**
 256:CORE/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
ARM GAS  /tmp/ccHfptsR.s 			page 56


 257:CORE/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 258:CORE/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 259:CORE/cmsis_gcc.h ****  */
 260:CORE/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 261:CORE/cmsis_gcc.h **** {
 262:CORE/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 263:CORE/cmsis_gcc.h **** }
 264:CORE/cmsis_gcc.h **** #endif
 265:CORE/cmsis_gcc.h **** 
 266:CORE/cmsis_gcc.h **** 
 267:CORE/cmsis_gcc.h **** /**
 268:CORE/cmsis_gcc.h ****   \brief   Get IPSR Register
 269:CORE/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 270:CORE/cmsis_gcc.h ****   \return               IPSR Register value
 271:CORE/cmsis_gcc.h ****  */
 272:CORE/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 273:CORE/cmsis_gcc.h **** {
 274:CORE/cmsis_gcc.h ****   uint32_t result;
 275:CORE/cmsis_gcc.h **** 
 276:CORE/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 277:CORE/cmsis_gcc.h ****   return(result);
 278:CORE/cmsis_gcc.h **** }
 279:CORE/cmsis_gcc.h **** 
 280:CORE/cmsis_gcc.h **** 
 281:CORE/cmsis_gcc.h **** /**
 282:CORE/cmsis_gcc.h ****   \brief   Get APSR Register
 283:CORE/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 284:CORE/cmsis_gcc.h ****   \return               APSR Register value
 285:CORE/cmsis_gcc.h ****  */
 286:CORE/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 287:CORE/cmsis_gcc.h **** {
 288:CORE/cmsis_gcc.h ****   uint32_t result;
 289:CORE/cmsis_gcc.h **** 
 290:CORE/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 291:CORE/cmsis_gcc.h ****   return(result);
 292:CORE/cmsis_gcc.h **** }
 293:CORE/cmsis_gcc.h **** 
 294:CORE/cmsis_gcc.h **** 
 295:CORE/cmsis_gcc.h **** /**
 296:CORE/cmsis_gcc.h ****   \brief   Get xPSR Register
 297:CORE/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 298:CORE/cmsis_gcc.h ****   \return               xPSR Register value
 299:CORE/cmsis_gcc.h ****  */
 300:CORE/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 301:CORE/cmsis_gcc.h **** {
 302:CORE/cmsis_gcc.h ****   uint32_t result;
 303:CORE/cmsis_gcc.h **** 
 304:CORE/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 305:CORE/cmsis_gcc.h ****   return(result);
 306:CORE/cmsis_gcc.h **** }
 307:CORE/cmsis_gcc.h **** 
 308:CORE/cmsis_gcc.h **** 
 309:CORE/cmsis_gcc.h **** /**
 310:CORE/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 311:CORE/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 312:CORE/cmsis_gcc.h ****   \return               PSP Register value
 313:CORE/cmsis_gcc.h ****  */
ARM GAS  /tmp/ccHfptsR.s 			page 57


 314:CORE/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 315:CORE/cmsis_gcc.h **** {
 316:CORE/cmsis_gcc.h ****   uint32_t result;
 317:CORE/cmsis_gcc.h **** 
 318:CORE/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 319:CORE/cmsis_gcc.h ****   return(result);
 320:CORE/cmsis_gcc.h **** }
 321:CORE/cmsis_gcc.h **** 
 322:CORE/cmsis_gcc.h **** 
 323:CORE/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 324:CORE/cmsis_gcc.h **** /**
 325:CORE/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 326:CORE/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 327:CORE/cmsis_gcc.h ****   \return               PSP Register value
 328:CORE/cmsis_gcc.h ****  */
 329:CORE/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 330:CORE/cmsis_gcc.h **** {
 331:CORE/cmsis_gcc.h ****   uint32_t result;
 332:CORE/cmsis_gcc.h **** 
 333:CORE/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 334:CORE/cmsis_gcc.h ****   return(result);
 335:CORE/cmsis_gcc.h **** }
 336:CORE/cmsis_gcc.h **** #endif
 337:CORE/cmsis_gcc.h **** 
 338:CORE/cmsis_gcc.h **** 
 339:CORE/cmsis_gcc.h **** /**
 340:CORE/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 341:CORE/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 342:CORE/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 343:CORE/cmsis_gcc.h ****  */
 344:CORE/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 345:CORE/cmsis_gcc.h **** {
 346:CORE/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 347:CORE/cmsis_gcc.h **** }
 348:CORE/cmsis_gcc.h **** 
 349:CORE/cmsis_gcc.h **** 
 350:CORE/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:CORE/cmsis_gcc.h **** /**
 352:CORE/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 353:CORE/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 354:CORE/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 355:CORE/cmsis_gcc.h ****  */
 356:CORE/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 357:CORE/cmsis_gcc.h **** {
 358:CORE/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 359:CORE/cmsis_gcc.h **** }
 360:CORE/cmsis_gcc.h **** #endif
 361:CORE/cmsis_gcc.h **** 
 362:CORE/cmsis_gcc.h **** 
 363:CORE/cmsis_gcc.h **** /**
 364:CORE/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 365:CORE/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 366:CORE/cmsis_gcc.h ****   \return               MSP Register value
 367:CORE/cmsis_gcc.h ****  */
 368:CORE/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 369:CORE/cmsis_gcc.h **** {
 370:CORE/cmsis_gcc.h ****   uint32_t result;
ARM GAS  /tmp/ccHfptsR.s 			page 58


 371:CORE/cmsis_gcc.h **** 
 372:CORE/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 373:CORE/cmsis_gcc.h ****   return(result);
 374:CORE/cmsis_gcc.h **** }
 375:CORE/cmsis_gcc.h **** 
 376:CORE/cmsis_gcc.h **** 
 377:CORE/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 378:CORE/cmsis_gcc.h **** /**
 379:CORE/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 380:CORE/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 381:CORE/cmsis_gcc.h ****   \return               MSP Register value
 382:CORE/cmsis_gcc.h ****  */
 383:CORE/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 384:CORE/cmsis_gcc.h **** {
 385:CORE/cmsis_gcc.h ****   uint32_t result;
 386:CORE/cmsis_gcc.h **** 
 387:CORE/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 388:CORE/cmsis_gcc.h ****   return(result);
 389:CORE/cmsis_gcc.h **** }
 390:CORE/cmsis_gcc.h **** #endif
 391:CORE/cmsis_gcc.h **** 
 392:CORE/cmsis_gcc.h **** 
 393:CORE/cmsis_gcc.h **** /**
 394:CORE/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 395:CORE/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 396:CORE/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 397:CORE/cmsis_gcc.h ****  */
 398:CORE/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 399:CORE/cmsis_gcc.h **** {
 400:CORE/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 401:CORE/cmsis_gcc.h **** }
 402:CORE/cmsis_gcc.h **** 
 403:CORE/cmsis_gcc.h **** 
 404:CORE/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 405:CORE/cmsis_gcc.h **** /**
 406:CORE/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 407:CORE/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 408:CORE/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 409:CORE/cmsis_gcc.h ****  */
 410:CORE/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 411:CORE/cmsis_gcc.h **** {
 412:CORE/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 413:CORE/cmsis_gcc.h **** }
 414:CORE/cmsis_gcc.h **** #endif
 415:CORE/cmsis_gcc.h **** 
 416:CORE/cmsis_gcc.h **** 
 417:CORE/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:CORE/cmsis_gcc.h **** /**
 419:CORE/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 420:CORE/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 421:CORE/cmsis_gcc.h ****   \return               SP Register value
 422:CORE/cmsis_gcc.h ****  */
 423:CORE/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 424:CORE/cmsis_gcc.h **** {
 425:CORE/cmsis_gcc.h ****   uint32_t result;
 426:CORE/cmsis_gcc.h **** 
 427:CORE/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
ARM GAS  /tmp/ccHfptsR.s 			page 59


 428:CORE/cmsis_gcc.h ****   return(result);
 429:CORE/cmsis_gcc.h **** }
 430:CORE/cmsis_gcc.h **** 
 431:CORE/cmsis_gcc.h **** 
 432:CORE/cmsis_gcc.h **** /**
 433:CORE/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 434:CORE/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 435:CORE/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 436:CORE/cmsis_gcc.h ****  */
 437:CORE/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 438:CORE/cmsis_gcc.h **** {
 439:CORE/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 440:CORE/cmsis_gcc.h **** }
 441:CORE/cmsis_gcc.h **** #endif
 442:CORE/cmsis_gcc.h **** 
 443:CORE/cmsis_gcc.h **** 
 444:CORE/cmsis_gcc.h **** /**
 445:CORE/cmsis_gcc.h ****   \brief   Get Priority Mask
 446:CORE/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 447:CORE/cmsis_gcc.h ****   \return               Priority Mask value
 448:CORE/cmsis_gcc.h ****  */
 449:CORE/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 450:CORE/cmsis_gcc.h **** {
 451:CORE/cmsis_gcc.h ****   uint32_t result;
 452:CORE/cmsis_gcc.h **** 
 453:CORE/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 454:CORE/cmsis_gcc.h ****   return(result);
 455:CORE/cmsis_gcc.h **** }
 456:CORE/cmsis_gcc.h **** 
 457:CORE/cmsis_gcc.h **** 
 458:CORE/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 459:CORE/cmsis_gcc.h **** /**
 460:CORE/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 461:CORE/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 462:CORE/cmsis_gcc.h ****   \return               Priority Mask value
 463:CORE/cmsis_gcc.h ****  */
 464:CORE/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 465:CORE/cmsis_gcc.h **** {
 466:CORE/cmsis_gcc.h ****   uint32_t result;
 467:CORE/cmsis_gcc.h **** 
 468:CORE/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) );
 469:CORE/cmsis_gcc.h ****   return(result);
 470:CORE/cmsis_gcc.h **** }
 471:CORE/cmsis_gcc.h **** #endif
 472:CORE/cmsis_gcc.h **** 
 473:CORE/cmsis_gcc.h **** 
 474:CORE/cmsis_gcc.h **** /**
 475:CORE/cmsis_gcc.h ****   \brief   Set Priority Mask
 476:CORE/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 477:CORE/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 478:CORE/cmsis_gcc.h ****  */
 479:CORE/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 480:CORE/cmsis_gcc.h **** {
 481:CORE/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 482:CORE/cmsis_gcc.h **** }
 483:CORE/cmsis_gcc.h **** 
 484:CORE/cmsis_gcc.h **** 
ARM GAS  /tmp/ccHfptsR.s 			page 60


 485:CORE/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 486:CORE/cmsis_gcc.h **** /**
 487:CORE/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 488:CORE/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 489:CORE/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 490:CORE/cmsis_gcc.h ****  */
 491:CORE/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 492:CORE/cmsis_gcc.h **** {
 493:CORE/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 494:CORE/cmsis_gcc.h **** }
 495:CORE/cmsis_gcc.h **** #endif
 496:CORE/cmsis_gcc.h **** 
 497:CORE/cmsis_gcc.h **** 
 498:CORE/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 499:CORE/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 500:CORE/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 501:CORE/cmsis_gcc.h **** /**
 502:CORE/cmsis_gcc.h ****   \brief   Enable FIQ
 503:CORE/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 504:CORE/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 505:CORE/cmsis_gcc.h ****  */
 506:CORE/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 507:CORE/cmsis_gcc.h **** {
 508:CORE/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 509:CORE/cmsis_gcc.h **** }
 510:CORE/cmsis_gcc.h **** 
 511:CORE/cmsis_gcc.h **** 
 512:CORE/cmsis_gcc.h **** /**
 513:CORE/cmsis_gcc.h ****   \brief   Disable FIQ
 514:CORE/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 515:CORE/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 516:CORE/cmsis_gcc.h ****  */
 517:CORE/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 518:CORE/cmsis_gcc.h **** {
 519:CORE/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 520:CORE/cmsis_gcc.h **** }
 521:CORE/cmsis_gcc.h **** 
 522:CORE/cmsis_gcc.h **** 
 523:CORE/cmsis_gcc.h **** /**
 524:CORE/cmsis_gcc.h ****   \brief   Get Base Priority
 525:CORE/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 526:CORE/cmsis_gcc.h ****   \return               Base Priority register value
 527:CORE/cmsis_gcc.h ****  */
 528:CORE/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 529:CORE/cmsis_gcc.h **** {
 530:CORE/cmsis_gcc.h ****   uint32_t result;
 531:CORE/cmsis_gcc.h **** 
 532:CORE/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 533:CORE/cmsis_gcc.h ****   return(result);
 534:CORE/cmsis_gcc.h **** }
 535:CORE/cmsis_gcc.h **** 
 536:CORE/cmsis_gcc.h **** 
 537:CORE/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 538:CORE/cmsis_gcc.h **** /**
 539:CORE/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 540:CORE/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 541:CORE/cmsis_gcc.h ****   \return               Base Priority register value
ARM GAS  /tmp/ccHfptsR.s 			page 61


 542:CORE/cmsis_gcc.h ****  */
 543:CORE/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 544:CORE/cmsis_gcc.h **** {
 545:CORE/cmsis_gcc.h ****   uint32_t result;
 546:CORE/cmsis_gcc.h **** 
 547:CORE/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 548:CORE/cmsis_gcc.h ****   return(result);
 549:CORE/cmsis_gcc.h **** }
 550:CORE/cmsis_gcc.h **** #endif
 551:CORE/cmsis_gcc.h **** 
 552:CORE/cmsis_gcc.h **** 
 553:CORE/cmsis_gcc.h **** /**
 554:CORE/cmsis_gcc.h ****   \brief   Set Base Priority
 555:CORE/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 556:CORE/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 557:CORE/cmsis_gcc.h ****  */
 558:CORE/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 559:CORE/cmsis_gcc.h **** {
 560:CORE/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 561:CORE/cmsis_gcc.h **** }
 562:CORE/cmsis_gcc.h **** 
 563:CORE/cmsis_gcc.h **** 
 564:CORE/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 565:CORE/cmsis_gcc.h **** /**
 566:CORE/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 567:CORE/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 568:CORE/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 569:CORE/cmsis_gcc.h ****  */
 570:CORE/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 571:CORE/cmsis_gcc.h **** {
 572:CORE/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 573:CORE/cmsis_gcc.h **** }
 574:CORE/cmsis_gcc.h **** #endif
 575:CORE/cmsis_gcc.h **** 
 576:CORE/cmsis_gcc.h **** 
 577:CORE/cmsis_gcc.h **** /**
 578:CORE/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 579:CORE/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 580:CORE/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 581:CORE/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 582:CORE/cmsis_gcc.h ****  */
 583:CORE/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 584:CORE/cmsis_gcc.h **** {
 585:CORE/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 586:CORE/cmsis_gcc.h **** }
 587:CORE/cmsis_gcc.h **** 
 588:CORE/cmsis_gcc.h **** 
 589:CORE/cmsis_gcc.h **** /**
 590:CORE/cmsis_gcc.h ****   \brief   Get Fault Mask
 591:CORE/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 592:CORE/cmsis_gcc.h ****   \return               Fault Mask register value
 593:CORE/cmsis_gcc.h ****  */
 594:CORE/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 595:CORE/cmsis_gcc.h **** {
 596:CORE/cmsis_gcc.h ****   uint32_t result;
 597:CORE/cmsis_gcc.h **** 
 598:CORE/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
ARM GAS  /tmp/ccHfptsR.s 			page 62


 599:CORE/cmsis_gcc.h ****   return(result);
 600:CORE/cmsis_gcc.h **** }
 601:CORE/cmsis_gcc.h **** 
 602:CORE/cmsis_gcc.h **** 
 603:CORE/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 604:CORE/cmsis_gcc.h **** /**
 605:CORE/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 606:CORE/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 607:CORE/cmsis_gcc.h ****   \return               Fault Mask register value
 608:CORE/cmsis_gcc.h ****  */
 609:CORE/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 610:CORE/cmsis_gcc.h **** {
 611:CORE/cmsis_gcc.h ****   uint32_t result;
 612:CORE/cmsis_gcc.h **** 
 613:CORE/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 614:CORE/cmsis_gcc.h ****   return(result);
 615:CORE/cmsis_gcc.h **** }
 616:CORE/cmsis_gcc.h **** #endif
 617:CORE/cmsis_gcc.h **** 
 618:CORE/cmsis_gcc.h **** 
 619:CORE/cmsis_gcc.h **** /**
 620:CORE/cmsis_gcc.h ****   \brief   Set Fault Mask
 621:CORE/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 622:CORE/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 623:CORE/cmsis_gcc.h ****  */
 624:CORE/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 625:CORE/cmsis_gcc.h **** {
 626:CORE/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 627:CORE/cmsis_gcc.h **** }
 628:CORE/cmsis_gcc.h **** 
 629:CORE/cmsis_gcc.h **** 
 630:CORE/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 631:CORE/cmsis_gcc.h **** /**
 632:CORE/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 633:CORE/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 634:CORE/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 635:CORE/cmsis_gcc.h ****  */
 636:CORE/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 637:CORE/cmsis_gcc.h **** {
 638:CORE/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 639:CORE/cmsis_gcc.h **** }
 640:CORE/cmsis_gcc.h **** #endif
 641:CORE/cmsis_gcc.h **** 
 642:CORE/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 643:CORE/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 644:CORE/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 645:CORE/cmsis_gcc.h **** 
 646:CORE/cmsis_gcc.h **** 
 647:CORE/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 648:CORE/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 649:CORE/cmsis_gcc.h **** 
 650:CORE/cmsis_gcc.h **** /**
 651:CORE/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 652:CORE/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:CORE/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 654:CORE/cmsis_gcc.h ****   mode.
 655:CORE/cmsis_gcc.h **** 
ARM GAS  /tmp/ccHfptsR.s 			page 63


 656:CORE/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 657:CORE/cmsis_gcc.h ****   \return               PSPLIM Register value
 658:CORE/cmsis_gcc.h ****  */
 659:CORE/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 660:CORE/cmsis_gcc.h **** {
 661:CORE/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 662:CORE/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 663:CORE/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 664:CORE/cmsis_gcc.h ****   return 0U;
 665:CORE/cmsis_gcc.h **** #else
 666:CORE/cmsis_gcc.h ****   uint32_t result;
 667:CORE/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 668:CORE/cmsis_gcc.h ****   return result;
 669:CORE/cmsis_gcc.h **** #endif
 670:CORE/cmsis_gcc.h **** }
 671:CORE/cmsis_gcc.h **** 
 672:CORE/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 673:CORE/cmsis_gcc.h **** /**
 674:CORE/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 675:CORE/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 676:CORE/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 677:CORE/cmsis_gcc.h **** 
 678:CORE/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 679:CORE/cmsis_gcc.h ****   \return               PSPLIM Register value
 680:CORE/cmsis_gcc.h ****  */
 681:CORE/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 682:CORE/cmsis_gcc.h **** {
 683:CORE/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 684:CORE/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 685:CORE/cmsis_gcc.h ****   return 0U;
 686:CORE/cmsis_gcc.h **** #else
 687:CORE/cmsis_gcc.h ****   uint32_t result;
 688:CORE/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 689:CORE/cmsis_gcc.h ****   return result;
 690:CORE/cmsis_gcc.h **** #endif
 691:CORE/cmsis_gcc.h **** }
 692:CORE/cmsis_gcc.h **** #endif
 693:CORE/cmsis_gcc.h **** 
 694:CORE/cmsis_gcc.h **** 
 695:CORE/cmsis_gcc.h **** /**
 696:CORE/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 697:CORE/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 698:CORE/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 699:CORE/cmsis_gcc.h ****   mode.
 700:CORE/cmsis_gcc.h **** 
 701:CORE/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 702:CORE/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 703:CORE/cmsis_gcc.h ****  */
 704:CORE/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 705:CORE/cmsis_gcc.h **** {
 706:CORE/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 707:CORE/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 708:CORE/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 709:CORE/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 710:CORE/cmsis_gcc.h **** #else
 711:CORE/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 712:CORE/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccHfptsR.s 			page 64


 713:CORE/cmsis_gcc.h **** }
 714:CORE/cmsis_gcc.h **** 
 715:CORE/cmsis_gcc.h **** 
 716:CORE/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 717:CORE/cmsis_gcc.h **** /**
 718:CORE/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 719:CORE/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 720:CORE/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 721:CORE/cmsis_gcc.h **** 
 722:CORE/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 723:CORE/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 724:CORE/cmsis_gcc.h ****  */
 725:CORE/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 726:CORE/cmsis_gcc.h **** {
 727:CORE/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 728:CORE/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 729:CORE/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 730:CORE/cmsis_gcc.h **** #else
 731:CORE/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 732:CORE/cmsis_gcc.h **** #endif
 733:CORE/cmsis_gcc.h **** }
 734:CORE/cmsis_gcc.h **** #endif
 735:CORE/cmsis_gcc.h **** 
 736:CORE/cmsis_gcc.h **** 
 737:CORE/cmsis_gcc.h **** /**
 738:CORE/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 739:CORE/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 740:CORE/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 741:CORE/cmsis_gcc.h ****   mode.
 742:CORE/cmsis_gcc.h **** 
 743:CORE/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 744:CORE/cmsis_gcc.h ****   \return               MSPLIM Register value
 745:CORE/cmsis_gcc.h ****  */
 746:CORE/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 747:CORE/cmsis_gcc.h **** {
 748:CORE/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 749:CORE/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 750:CORE/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 751:CORE/cmsis_gcc.h ****   return 0U;
 752:CORE/cmsis_gcc.h **** #else
 753:CORE/cmsis_gcc.h ****   uint32_t result;
 754:CORE/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 755:CORE/cmsis_gcc.h ****   return result;
 756:CORE/cmsis_gcc.h **** #endif
 757:CORE/cmsis_gcc.h **** }
 758:CORE/cmsis_gcc.h **** 
 759:CORE/cmsis_gcc.h **** 
 760:CORE/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 761:CORE/cmsis_gcc.h **** /**
 762:CORE/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 763:CORE/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 764:CORE/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 765:CORE/cmsis_gcc.h **** 
 766:CORE/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 767:CORE/cmsis_gcc.h ****   \return               MSPLIM Register value
 768:CORE/cmsis_gcc.h ****  */
 769:CORE/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
ARM GAS  /tmp/ccHfptsR.s 			page 65


 770:CORE/cmsis_gcc.h **** {
 771:CORE/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 772:CORE/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 773:CORE/cmsis_gcc.h ****   return 0U;
 774:CORE/cmsis_gcc.h **** #else
 775:CORE/cmsis_gcc.h ****   uint32_t result;
 776:CORE/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 777:CORE/cmsis_gcc.h ****   return result;
 778:CORE/cmsis_gcc.h **** #endif
 779:CORE/cmsis_gcc.h **** }
 780:CORE/cmsis_gcc.h **** #endif
 781:CORE/cmsis_gcc.h **** 
 782:CORE/cmsis_gcc.h **** 
 783:CORE/cmsis_gcc.h **** /**
 784:CORE/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 785:CORE/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 786:CORE/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 787:CORE/cmsis_gcc.h ****   mode.
 788:CORE/cmsis_gcc.h **** 
 789:CORE/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 790:CORE/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 791:CORE/cmsis_gcc.h ****  */
 792:CORE/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 793:CORE/cmsis_gcc.h **** {
 794:CORE/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 795:CORE/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 796:CORE/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 797:CORE/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 798:CORE/cmsis_gcc.h **** #else
 799:CORE/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 800:CORE/cmsis_gcc.h **** #endif
 801:CORE/cmsis_gcc.h **** }
 802:CORE/cmsis_gcc.h **** 
 803:CORE/cmsis_gcc.h **** 
 804:CORE/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 805:CORE/cmsis_gcc.h **** /**
 806:CORE/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 807:CORE/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 808:CORE/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 809:CORE/cmsis_gcc.h **** 
 810:CORE/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 811:CORE/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 812:CORE/cmsis_gcc.h ****  */
 813:CORE/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 814:CORE/cmsis_gcc.h **** {
 815:CORE/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 816:CORE/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 817:CORE/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 818:CORE/cmsis_gcc.h **** #else
 819:CORE/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 820:CORE/cmsis_gcc.h **** #endif
 821:CORE/cmsis_gcc.h **** }
 822:CORE/cmsis_gcc.h **** #endif
 823:CORE/cmsis_gcc.h **** 
 824:CORE/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 825:CORE/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 826:CORE/cmsis_gcc.h **** 
ARM GAS  /tmp/ccHfptsR.s 			page 66


 827:CORE/cmsis_gcc.h **** 
 828:CORE/cmsis_gcc.h **** /**
 829:CORE/cmsis_gcc.h ****   \brief   Get FPSCR
 830:CORE/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 831:CORE/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 832:CORE/cmsis_gcc.h ****  */
 833:CORE/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 834:CORE/cmsis_gcc.h **** {
 835:CORE/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 836:CORE/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 837:CORE/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr)
 838:CORE/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 839:CORE/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 840:CORE/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 841:CORE/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 842:CORE/cmsis_gcc.h **** #else
 843:CORE/cmsis_gcc.h ****   uint32_t result;
 844:CORE/cmsis_gcc.h **** 
 845:CORE/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 846:CORE/cmsis_gcc.h ****   return(result);
 847:CORE/cmsis_gcc.h **** #endif
 848:CORE/cmsis_gcc.h **** #else
 849:CORE/cmsis_gcc.h ****   return(0U);
 850:CORE/cmsis_gcc.h **** #endif
 851:CORE/cmsis_gcc.h **** }
 852:CORE/cmsis_gcc.h **** 
 853:CORE/cmsis_gcc.h **** 
 854:CORE/cmsis_gcc.h **** /**
 855:CORE/cmsis_gcc.h ****   \brief   Set FPSCR
 856:CORE/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 857:CORE/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 858:CORE/cmsis_gcc.h ****  */
 859:CORE/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 860:CORE/cmsis_gcc.h **** {
 861:CORE/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 862:CORE/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 863:CORE/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 864:CORE/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 865:CORE/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 866:CORE/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 867:CORE/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 868:CORE/cmsis_gcc.h **** #else
 869:CORE/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 870:CORE/cmsis_gcc.h **** #endif
 871:CORE/cmsis_gcc.h **** #else
 872:CORE/cmsis_gcc.h ****   (void)fpscr;
 873:CORE/cmsis_gcc.h **** #endif
 874:CORE/cmsis_gcc.h **** }
 875:CORE/cmsis_gcc.h **** 
 876:CORE/cmsis_gcc.h **** 
 877:CORE/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 878:CORE/cmsis_gcc.h **** 
 879:CORE/cmsis_gcc.h **** 
 880:CORE/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 881:CORE/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 882:CORE/cmsis_gcc.h ****   Access to dedicated instructions
 883:CORE/cmsis_gcc.h ****   @{
ARM GAS  /tmp/ccHfptsR.s 			page 67


 884:CORE/cmsis_gcc.h **** */
 885:CORE/cmsis_gcc.h **** 
 886:CORE/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 887:CORE/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 888:CORE/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 889:CORE/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 890:CORE/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 891:CORE/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 892:CORE/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 893:CORE/cmsis_gcc.h **** #else
 894:CORE/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 895:CORE/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 896:CORE/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 897:CORE/cmsis_gcc.h **** #endif
 898:CORE/cmsis_gcc.h **** 
 899:CORE/cmsis_gcc.h **** /**
 900:CORE/cmsis_gcc.h ****   \brief   No Operation
 901:CORE/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 902:CORE/cmsis_gcc.h ****  */
 903:CORE/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 904:CORE/cmsis_gcc.h **** 
 905:CORE/cmsis_gcc.h **** /**
 906:CORE/cmsis_gcc.h ****   \brief   Wait For Interrupt
 907:CORE/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 908:CORE/cmsis_gcc.h ****  */
 909:CORE/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 910:CORE/cmsis_gcc.h **** 
 911:CORE/cmsis_gcc.h **** 
 912:CORE/cmsis_gcc.h **** /**
 913:CORE/cmsis_gcc.h ****   \brief   Wait For Event
 914:CORE/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 915:CORE/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 916:CORE/cmsis_gcc.h ****  */
 917:CORE/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 918:CORE/cmsis_gcc.h **** 
 919:CORE/cmsis_gcc.h **** 
 920:CORE/cmsis_gcc.h **** /**
 921:CORE/cmsis_gcc.h ****   \brief   Send Event
 922:CORE/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 923:CORE/cmsis_gcc.h ****  */
 924:CORE/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 925:CORE/cmsis_gcc.h **** 
 926:CORE/cmsis_gcc.h **** 
 927:CORE/cmsis_gcc.h **** /**
 928:CORE/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 929:CORE/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 930:CORE/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 931:CORE/cmsis_gcc.h ****            after the instruction has been completed.
 932:CORE/cmsis_gcc.h ****  */
 933:CORE/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 934:CORE/cmsis_gcc.h **** {
 935:CORE/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 936:CORE/cmsis_gcc.h **** }
 937:CORE/cmsis_gcc.h **** 
 938:CORE/cmsis_gcc.h **** 
 939:CORE/cmsis_gcc.h **** /**
 940:CORE/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
ARM GAS  /tmp/ccHfptsR.s 			page 68


 941:CORE/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 942:CORE/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 943:CORE/cmsis_gcc.h ****  */
 944:CORE/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 1037              		.loc 2 944 27 view .LVU313
 1038              	.LBB15:
 945:CORE/cmsis_gcc.h **** {
 946:CORE/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 1039              		.loc 2 946 3 view .LVU314
 1040              		.syntax unified
 1041              	@ 946 "CORE/cmsis_gcc.h" 1
 1042 00c2 BFF34F8F 		dsb 0xF
 1043              	@ 0 "" 2
 947:CORE/cmsis_gcc.h **** }
 1044              		.loc 2 947 1 is_stmt 0 view .LVU315
 1045              		.thumb
 1046              		.syntax unified
 1047 00c6 05E0     		b	.L82
 1048              	.LVL65:
 1049              	.L83:
 1050              		.loc 2 947 1 view .LVU316
 1051              	.LBE15:
 1052              	.LBE14:
 636:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     }
 1053              		.loc 1 636 7 is_stmt 1 discriminator 2 view .LVU317
 636:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     }
 1054              		.loc 1 636 31 is_stmt 0 discriminator 2 view .LVU318
 1055 00c8 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 636:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     }
 1056              		.loc 1 636 29 discriminator 2 view .LVU319
 1057 00ca 04F8013B 		strb	r3, [r4], #1
 1058              	.LVL66:
 634:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 1059              		.loc 1 634 25 is_stmt 1 discriminator 2 view .LVU320
 634:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 1060              		.loc 1 634 30 is_stmt 0 discriminator 2 view .LVU321
 1061 00ce 039B     		ldr	r3, [sp, #12]
 1062 00d0 0133     		adds	r3, r3, #1
 1063 00d2 0393     		str	r3, [sp, #12]
 1064              	.L82:
 634:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 1065              		.loc 1 634 11 is_stmt 1 discriminator 1 view .LVU322
 634:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 1066              		.loc 1 634 17 is_stmt 0 discriminator 1 view .LVU323
 1067 00d4 039B     		ldr	r3, [sp, #12]
 634:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 1068              		.loc 1 634 5 discriminator 1 view .LVU324
 1069 00d6 AB42     		cmp	r3, r5
 1070 00d8 F6D3     		bcc	.L83
 640:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 1071              		.loc 1 640 5 is_stmt 1 view .LVU325
 1072              	.LVL67:
 643:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 1073              		.loc 1 643 5 view .LVU326
 643:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 1074              		.loc 1 643 18 is_stmt 0 view .LVU327
 1075 00da 09F1FF39 		add	r9, r9, #-1
ARM GAS  /tmp/ccHfptsR.s 			page 69


 1076              	.LVL68:
 646:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
 1077              		.loc 1 646 5 is_stmt 1 view .LVU328
 646:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
 1078              		.loc 1 646 17 is_stmt 0 view .LVU329
 1079 00de 08F10108 		add	r8, r8, #1
 1080              	.LVL69:
 1081              	.L74:
 567:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 1082              		.loc 1 567 8 is_stmt 1 view .LVU330
 1083 00e2 B9F1000F 		cmp	r9, #0
 1084 00e6 3CD0     		beq	.L84
 567:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 1085              		.loc 1 567 64 is_stmt 0 discriminator 1 view .LVU331
 1086 00e8 FA6A     		ldr	r2, [r7, #44]
 567:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 1087              		.loc 1 567 92 discriminator 1 view .LVU332
 1088 00ea 3B6B     		ldr	r3, [r7, #48]
 567:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 1089              		.loc 1 567 76 discriminator 1 view .LVU333
 1090 00ec 03FB02F3 		mul	r3, r3, r2
 567:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 1091              		.loc 1 567 31 discriminator 1 view .LVU334
 1092 00f0 4345     		cmp	r3, r8
 1093 00f2 36D9     		bls	.L84
 570:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 1094              		.loc 1 570 5 is_stmt 1 view .LVU335
 570:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 1095              		.loc 1 570 37 is_stmt 0 view .LVU336
 1096 00f4 0AF1010A 		add	r10, r10, #1
 1097              	.LVL70:
 570:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 1098              		.loc 1 570 26 view .LVU337
 1099 00f8 7D6A     		ldr	r5, [r7, #36]
 570:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 1100              		.loc 1 570 10 view .LVU338
 1101 00fa 05FB0AF5 		mul	r5, r5, r10
 1102              	.LVL71:
 573:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****    
 1103              		.loc 1 573 5 is_stmt 1 view .LVU339
 573:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****    
 1104              		.loc 1 573 23 is_stmt 0 view .LVU340
 1105 00fe 46F4803B 		orr	fp, r6, #65536
 573:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****    
 1106              		.loc 1 573 61 view .LVU341
 1107 0102 0023     		movs	r3, #0
 1108 0104 8BF80030 		strb	r3, [fp]
 576:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 1109              		.loc 1 576 5 is_stmt 1 view .LVU342
 576:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 1110              		.loc 1 576 22 is_stmt 0 view .LVU343
 1111 0108 7B6A     		ldr	r3, [r7, #36]
 576:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 1112              		.loc 1 576 7 view .LVU344
 1113 010a B3F5007F 		cmp	r3, #512
 1114 010e B3D8     		bhi	.L75
 578:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
ARM GAS  /tmp/ccHfptsR.s 			page 70


 1115              		.loc 1 578 7 is_stmt 1 view .LVU345
 578:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 1116              		.loc 1 578 26 is_stmt 0 view .LVU346
 1117 0110 FA6A     		ldr	r2, [r7, #44]
 578:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 1118              		.loc 1 578 52 view .LVU347
 1119 0112 3B6B     		ldr	r3, [r7, #48]
 578:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 1120              		.loc 1 578 37 view .LVU348
 1121 0114 03FB02F3 		mul	r3, r3, r2
 578:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 1122              		.loc 1 578 10 view .LVU349
 1123 0118 B3F5803F 		cmp	r3, #65536
 1124 011c 9ED2     		bcs	.L76
 580:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 1125              		.loc 1 580 9 is_stmt 1 view .LVU350
 580:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 1126              		.loc 1 580 27 is_stmt 0 view .LVU351
 1127 011e 46F40033 		orr	r3, r6, #131072
 580:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 1128              		.loc 1 580 66 view .LVU352
 1129 0122 0022     		movs	r2, #0
 1130 0124 1A70     		strb	r2, [r3]
 581:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 1131              		.loc 1 581 9 is_stmt 1 view .LVU353
 581:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 1132              		.loc 1 581 68 is_stmt 0 view .LVU354
 1133 0126 5FFA88F2 		uxtb	r2, r8
 581:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 1134              		.loc 1 581 66 view .LVU355
 1135 012a 1A70     		strb	r2, [r3]
 582:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 1136              		.loc 1 582 9 is_stmt 1 view .LVU356
 582:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 1137              		.loc 1 582 68 is_stmt 0 view .LVU357
 1138 012c C8F30722 		ubfx	r2, r8, #8, #8
 582:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 1139              		.loc 1 582 66 view .LVU358
 1140 0130 1A70     		strb	r2, [r3]
 1141              	.L77:
 611:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       
 1142              		.loc 1 611 5 is_stmt 1 view .LVU359
 611:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       
 1143              		.loc 1 611 62 is_stmt 0 view .LVU360
 1144 0132 3023     		movs	r3, #48
 1145 0134 8BF80030 		strb	r3, [fp]
 614:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 1146              		.loc 1 614 5 is_stmt 1 view .LVU361
 614:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 1147              		.loc 1 614 21 is_stmt 0 view .LVU362
 1148 0138 97F83C30 		ldrb	r3, [r7, #60]	@ zero_extendqisi2
 614:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 1149              		.loc 1 614 7 view .LVU363
 1150 013c 012B     		cmp	r3, #1
 1151 013e C9D1     		bne	.L82
 617:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       
 1152              		.loc 1 617 7 is_stmt 1 view .LVU364
ARM GAS  /tmp/ccHfptsR.s 			page 71


 617:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       
 1153              		.loc 1 617 19 is_stmt 0 view .LVU365
 1154 0140 FFF7FEFF 		bl	HAL_GetTick
 1155              	.LVL72:
 1156 0144 0190     		str	r0, [sp, #4]
 1157              	.LVL73:
 620:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 1158              		.loc 1 620 7 is_stmt 1 view .LVU366
 1159              	.L80:
 620:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 1160              		.loc 1 620 12 view .LVU367
 620:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 1161              		.loc 1 620 13 is_stmt 0 view .LVU368
 1162 0146 3846     		mov	r0, r7
 1163 0148 FFF7FEFF 		bl	HAL_NAND_Read_Status
 1164              	.LVL74:
 620:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 1165              		.loc 1 620 12 view .LVU369
 1166 014c 4028     		cmp	r0, #64
 1167 014e B5D0     		beq	.L91
 622:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         {
 1168              		.loc 1 622 9 is_stmt 1 view .LVU370
 622:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         {
 1169              		.loc 1 622 13 is_stmt 0 view .LVU371
 1170 0150 FFF7FEFF 		bl	HAL_GetTick
 1171              	.LVL75:
 622:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         {
 1172              		.loc 1 622 27 view .LVU372
 1173 0154 019B     		ldr	r3, [sp, #4]
 1174 0156 C01A     		subs	r0, r0, r3
 622:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         {
 1175              		.loc 1 622 11 view .LVU373
 1176 0158 B0F1807F 		cmp	r0, #16777216
 1177 015c F3D9     		bls	.L80
 624:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         }
 1178              		.loc 1 624 18 view .LVU374
 1179 015e 0320     		movs	r0, #3
 1180 0160 05E0     		b	.L72
 1181              	.LVL76:
 1182              	.L84:
 650:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 1183              		.loc 1 650 3 is_stmt 1 view .LVU375
 650:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 1184              		.loc 1 650 16 is_stmt 0 view .LVU376
 1185 0162 0123     		movs	r3, #1
 1186 0164 87F82130 		strb	r3, [r7, #33]
 653:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 1187              		.loc 1 653 3 is_stmt 1 view .LVU377
 653:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 1188              		.loc 1 653 3 view .LVU378
 1189 0168 0020     		movs	r0, #0
 1190 016a 87F82000 		strb	r0, [r7, #32]
 653:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 1191              		.loc 1 653 3 view .LVU379
 655:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** }
 1192              		.loc 1 655 3 view .LVU380
 1193              	.LVL77:
ARM GAS  /tmp/ccHfptsR.s 			page 72


 1194              	.L72:
 656:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 1195              		.loc 1 656 1 is_stmt 0 view .LVU381
 1196 016e 05B0     		add	sp, sp, #20
 1197              	.LCFI11:
 1198              		.cfi_remember_state
 1199              		.cfi_def_cfa_offset 36
 1200              		@ sp needed
 1201 0170 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1202              	.LVL78:
 1203              	.L86:
 1204              	.LCFI12:
 1205              		.cfi_restore_state
 542:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 1206              		.loc 1 542 3 view .LVU382
 1207 0174 0220     		movs	r0, #2
 1208              	.LVL79:
 542:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 1209              		.loc 1 542 3 view .LVU383
 1210 0176 FAE7     		b	.L72
 1211              		.cfi_endproc
 1212              	.LFE141:
 1214              		.section	.text.HAL_NAND_Read_Page_16b,"ax",%progbits
 1215              		.align	1
 1216              		.global	HAL_NAND_Read_Page_16b
 1217              		.syntax unified
 1218              		.thumb
 1219              		.thumb_func
 1220              		.fpu fpv4-sp-d16
 1222              	HAL_NAND_Read_Page_16b:
 1223              	.LVL80:
 1224              	.LFB142:
 668:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   __IO uint32_t index  = 0U;
 1225              		.loc 1 668 1 is_stmt 1 view -0
 1226              		.cfi_startproc
 1227              		@ args = 0, pretend = 0, frame = 16
 1228              		@ frame_needed = 0, uses_anonymous_args = 0
 668:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   __IO uint32_t index  = 0U;
 1229              		.loc 1 668 1 is_stmt 0 view .LVU385
 1230 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1231              	.LCFI13:
 1232              		.cfi_def_cfa_offset 36
 1233              		.cfi_offset 4, -36
 1234              		.cfi_offset 5, -32
 1235              		.cfi_offset 6, -28
 1236              		.cfi_offset 7, -24
 1237              		.cfi_offset 8, -20
 1238              		.cfi_offset 9, -16
 1239              		.cfi_offset 10, -12
 1240              		.cfi_offset 11, -8
 1241              		.cfi_offset 14, -4
 1242 0004 85B0     		sub	sp, sp, #20
 1243              	.LCFI14:
 1244              		.cfi_def_cfa_offset 56
 1245 0006 9946     		mov	r9, r3
 669:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   uint32_t tickstart = 0U;
 1246              		.loc 1 669 3 is_stmt 1 view .LVU386
ARM GAS  /tmp/ccHfptsR.s 			page 73


 669:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   uint32_t tickstart = 0U;
 1247              		.loc 1 669 17 is_stmt 0 view .LVU387
 1248 0008 0023     		movs	r3, #0
 1249              	.LVL81:
 669:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   uint32_t tickstart = 0U;
 1250              		.loc 1 669 17 view .LVU388
 1251 000a 0393     		str	r3, [sp, #12]
 670:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   uint32_t deviceaddress = 0U, size = 0U, numPagesRead = 0U, nandaddress = 0U;
 1252              		.loc 1 670 3 is_stmt 1 view .LVU389
 1253              	.LVL82:
 671:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 1254              		.loc 1 671 3 view .LVU390
 674:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 1255              		.loc 1 674 3 view .LVU391
 674:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 1256              		.loc 1 674 3 view .LVU392
 1257 000c 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1258 0010 012B     		cmp	r3, #1
 1259 0012 00F0AF80 		beq	.L107
 1260 0016 0746     		mov	r7, r0
 1261 0018 1446     		mov	r4, r2
 674:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 1262              		.loc 1 674 3 discriminator 2 view .LVU393
 1263 001a 0123     		movs	r3, #1
 1264 001c 80F82030 		strb	r3, [r0, #32]
 674:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 1265              		.loc 1 674 3 discriminator 2 view .LVU394
 677:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 1266              		.loc 1 677 3 discriminator 2 view .LVU395
 677:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 1267              		.loc 1 677 11 is_stmt 0 discriminator 2 view .LVU396
 1268 0020 90F82100 		ldrb	r0, [r0, #33]	@ zero_extendqisi2
 1269              	.LVL83:
 677:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 1270              		.loc 1 677 11 discriminator 2 view .LVU397
 1271 0024 C0B2     		uxtb	r0, r0
 677:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 1272              		.loc 1 677 5 discriminator 2 view .LVU398
 1273 0026 0228     		cmp	r0, #2
 1274 0028 00F0A180 		beq	.L93
 683:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 1275              		.loc 1 683 3 is_stmt 1 view .LVU399
 683:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 1276              		.loc 1 683 17 is_stmt 0 view .LVU400
 1277 002c 7B68     		ldr	r3, [r7, #4]
 683:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 1278              		.loc 1 683 5 view .LVU401
 1279 002e 102B     		cmp	r3, #16
 1280 0030 11D0     		beq	.L111
 689:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
 1281              		.loc 1 689 19 view .LVU402
 1282 0032 4FF00046 		mov	r6, #-2147483648
 1283              	.L94:
 1284              	.LVL84:
 693:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 1285              		.loc 1 693 3 is_stmt 1 view .LVU403
 693:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
ARM GAS  /tmp/ccHfptsR.s 			page 74


 1286              		.loc 1 693 16 is_stmt 0 view .LVU404
 1287 0036 0223     		movs	r3, #2
 1288 0038 87F82130 		strb	r3, [r7, #33]
 696:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 1289              		.loc 1 696 3 is_stmt 1 view .LVU405
 696:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 1290              		.loc 1 696 17 is_stmt 0 view .LVU406
 1291 003c 0B88     		ldrh	r3, [r1]
 1292 003e 8A88     		ldrh	r2, [r1, #4]
 1293              	.LVL85:
 696:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 1294              		.loc 1 696 17 view .LVU407
 1295 0040 B1F80280 		ldrh	r8, [r1, #2]
 1296 0044 B96B     		ldr	r1, [r7, #56]
 1297              	.LVL86:
 696:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 1298              		.loc 1 696 17 view .LVU408
 1299 0046 01FB0828 		mla	r8, r1, r8, r2
 1300 004a FA6A     		ldr	r2, [r7, #44]
 696:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 1301              		.loc 1 696 15 view .LVU409
 1302 004c 02FB0838 		mla	r8, r2, r8, r3
 1303              	.LVL87:
 699:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 1304              		.loc 1 699 3 is_stmt 1 view .LVU410
 671:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 1305              		.loc 1 671 43 is_stmt 0 view .LVU411
 1306 0050 4FF0000A 		mov	r10, #0
 699:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 1307              		.loc 1 699 8 view .LVU412
 1308 0054 43E0     		b	.L95
 1309              	.LVL88:
 1310              	.L111:
 685:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
 1311              		.loc 1 685 19 view .LVU413
 1312 0056 4FF0E046 		mov	r6, #1879048192
 1313 005a ECE7     		b	.L94
 1314              	.LVL89:
 1315              	.L97:
 719:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 1316              		.loc 1 719 9 is_stmt 1 view .LVU414
 719:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 1317              		.loc 1 719 27 is_stmt 0 view .LVU415
 1318 005c 46F40033 		orr	r3, r6, #131072
 719:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 1319              		.loc 1 719 66 view .LVU416
 1320 0060 0022     		movs	r2, #0
 1321 0062 1A70     		strb	r2, [r3]
 720:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 1322              		.loc 1 720 9 is_stmt 1 view .LVU417
 720:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 1323              		.loc 1 720 68 is_stmt 0 view .LVU418
 1324 0064 5FFA88F2 		uxtb	r2, r8
 720:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 1325              		.loc 1 720 66 view .LVU419
 1326 0068 1A70     		strb	r2, [r3]
 721:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
ARM GAS  /tmp/ccHfptsR.s 			page 75


 1327              		.loc 1 721 9 is_stmt 1 view .LVU420
 721:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
 1328              		.loc 1 721 68 is_stmt 0 view .LVU421
 1329 006a C8F30722 		ubfx	r2, r8, #8, #8
 721:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
 1330              		.loc 1 721 66 view .LVU422
 1331 006e 1A70     		strb	r2, [r3]
 722:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 1332              		.loc 1 722 9 is_stmt 1 view .LVU423
 722:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 1333              		.loc 1 722 68 is_stmt 0 view .LVU424
 1334 0070 C8F30742 		ubfx	r2, r8, #16, #8
 722:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 1335              		.loc 1 722 66 view .LVU425
 1336 0074 1A70     		strb	r2, [r3]
 1337 0076 5CE0     		b	.L98
 1338              	.L96:
 727:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 1339              		.loc 1 727 7 is_stmt 1 view .LVU426
 727:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 1340              		.loc 1 727 26 is_stmt 0 view .LVU427
 1341 0078 FA6A     		ldr	r2, [r7, #44]
 727:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 1342              		.loc 1 727 52 view .LVU428
 1343 007a 3B6B     		ldr	r3, [r7, #48]
 727:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 1344              		.loc 1 727 37 view .LVU429
 1345 007c 03FB02F3 		mul	r3, r3, r2
 727:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 1346              		.loc 1 727 10 view .LVU430
 1347 0080 B3F5803F 		cmp	r3, #65536
 1348 0084 0BD2     		bcs	.L99
 729:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
 1349              		.loc 1 729 9 is_stmt 1 view .LVU431
 729:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
 1350              		.loc 1 729 27 is_stmt 0 view .LVU432
 1351 0086 46F40033 		orr	r3, r6, #131072
 729:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
 1352              		.loc 1 729 66 view .LVU433
 1353 008a 0022     		movs	r2, #0
 1354 008c 1A70     		strb	r2, [r3]
 730:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 1355              		.loc 1 730 9 is_stmt 1 view .LVU434
 730:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 1356              		.loc 1 730 66 is_stmt 0 view .LVU435
 1357 008e 1A70     		strb	r2, [r3]
 731:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 1358              		.loc 1 731 9 is_stmt 1 view .LVU436
 731:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 1359              		.loc 1 731 68 is_stmt 0 view .LVU437
 1360 0090 5FFA88F2 		uxtb	r2, r8
 731:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 1361              		.loc 1 731 66 view .LVU438
 1362 0094 1A70     		strb	r2, [r3]
 732:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 1363              		.loc 1 732 9 is_stmt 1 view .LVU439
 732:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
ARM GAS  /tmp/ccHfptsR.s 			page 76


 1364              		.loc 1 732 68 is_stmt 0 view .LVU440
 1365 0096 C8F30722 		ubfx	r2, r8, #8, #8
 732:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 1366              		.loc 1 732 66 view .LVU441
 1367 009a 1A70     		strb	r2, [r3]
 1368 009c 49E0     		b	.L98
 1369              	.L99:
 736:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
 1370              		.loc 1 736 9 is_stmt 1 view .LVU442
 736:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
 1371              		.loc 1 736 27 is_stmt 0 view .LVU443
 1372 009e 46F40033 		orr	r3, r6, #131072
 736:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
 1373              		.loc 1 736 66 view .LVU444
 1374 00a2 0022     		movs	r2, #0
 1375 00a4 1A70     		strb	r2, [r3]
 737:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 1376              		.loc 1 737 9 is_stmt 1 view .LVU445
 737:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 1377              		.loc 1 737 66 is_stmt 0 view .LVU446
 1378 00a6 1A70     		strb	r2, [r3]
 738:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 1379              		.loc 1 738 9 is_stmt 1 view .LVU447
 738:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 1380              		.loc 1 738 68 is_stmt 0 view .LVU448
 1381 00a8 5FFA88F2 		uxtb	r2, r8
 738:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 1382              		.loc 1 738 66 view .LVU449
 1383 00ac 1A70     		strb	r2, [r3]
 739:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
 1384              		.loc 1 739 9 is_stmt 1 view .LVU450
 739:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
 1385              		.loc 1 739 68 is_stmt 0 view .LVU451
 1386 00ae C8F30722 		ubfx	r2, r8, #8, #8
 739:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
 1387              		.loc 1 739 66 view .LVU452
 1388 00b2 1A70     		strb	r2, [r3]
 740:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 1389              		.loc 1 740 9 is_stmt 1 view .LVU453
 740:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 1390              		.loc 1 740 68 is_stmt 0 view .LVU454
 1391 00b4 C8F30742 		ubfx	r2, r8, #16, #8
 740:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 1392              		.loc 1 740 66 view .LVU455
 1393 00b8 1A70     		strb	r2, [r3]
 1394 00ba 3AE0     		b	.L98
 1395              	.LVL90:
 1396              	.L112:
 761:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     }
 1397              		.loc 1 761 7 is_stmt 1 view .LVU456
 761:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     }
 1398              		.loc 1 761 63 is_stmt 0 view .LVU457
 1399 00bc 0023     		movs	r3, #0
 1400 00be 8BF80030 		strb	r3, [fp]
 1401 00c2 05E0     		b	.L103
 1402              	.LVL91:
 1403              	.L104:
ARM GAS  /tmp/ccHfptsR.s 			page 77


 767:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     }
 1404              		.loc 1 767 7 is_stmt 1 discriminator 2 view .LVU458
 767:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     }
 1405              		.loc 1 767 32 is_stmt 0 discriminator 2 view .LVU459
 1406 00c4 3388     		ldrh	r3, [r6]
 767:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     }
 1407              		.loc 1 767 30 discriminator 2 view .LVU460
 1408 00c6 24F8023B 		strh	r3, [r4], #2	@ movhi
 1409              	.LVL92:
 765:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 1410              		.loc 1 765 25 is_stmt 1 discriminator 2 view .LVU461
 765:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 1411              		.loc 1 765 30 is_stmt 0 discriminator 2 view .LVU462
 1412 00ca 039B     		ldr	r3, [sp, #12]
 1413 00cc 0133     		adds	r3, r3, #1
 1414 00ce 0393     		str	r3, [sp, #12]
 1415              	.L103:
 765:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 1416              		.loc 1 765 11 is_stmt 1 discriminator 1 view .LVU463
 765:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 1417              		.loc 1 765 17 is_stmt 0 discriminator 1 view .LVU464
 1418 00d0 039B     		ldr	r3, [sp, #12]
 765:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 1419              		.loc 1 765 5 discriminator 1 view .LVU465
 1420 00d2 AB42     		cmp	r3, r5
 1421 00d4 F6D3     		bcc	.L104
 771:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 1422              		.loc 1 771 5 is_stmt 1 view .LVU466
 1423              	.LVL93:
 774:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 1424              		.loc 1 774 5 view .LVU467
 774:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 1425              		.loc 1 774 18 is_stmt 0 view .LVU468
 1426 00d6 09F1FF39 		add	r9, r9, #-1
 1427              	.LVL94:
 777:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
 1428              		.loc 1 777 5 is_stmt 1 view .LVU469
 777:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
 1429              		.loc 1 777 17 is_stmt 0 view .LVU470
 1430 00da 08F10108 		add	r8, r8, #1
 1431              	.LVL95:
 1432              	.L95:
 699:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 1433              		.loc 1 699 8 is_stmt 1 view .LVU471
 1434 00de B9F1000F 		cmp	r9, #0
 1435 00e2 3ED0     		beq	.L105
 699:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 1436              		.loc 1 699 64 is_stmt 0 discriminator 1 view .LVU472
 1437 00e4 FA6A     		ldr	r2, [r7, #44]
 699:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 1438              		.loc 1 699 92 discriminator 1 view .LVU473
 1439 00e6 3B6B     		ldr	r3, [r7, #48]
 699:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 1440              		.loc 1 699 76 discriminator 1 view .LVU474
 1441 00e8 03FB02F3 		mul	r3, r3, r2
 699:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 1442              		.loc 1 699 31 discriminator 1 view .LVU475
ARM GAS  /tmp/ccHfptsR.s 			page 78


 1443 00ec 4345     		cmp	r3, r8
 1444 00ee 38D9     		bls	.L105
 702:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 1445              		.loc 1 702 5 is_stmt 1 view .LVU476
 702:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 1446              		.loc 1 702 37 is_stmt 0 view .LVU477
 1447 00f0 0AF1010A 		add	r10, r10, #1
 1448              	.LVL96:
 702:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 1449              		.loc 1 702 26 view .LVU478
 1450 00f4 7D6A     		ldr	r5, [r7, #36]
 702:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 1451              		.loc 1 702 10 view .LVU479
 1452 00f6 05FB0AF5 		mul	r5, r5, r10
 1453              	.LVL97:
 705:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     __DSB();
 1454              		.loc 1 705 5 is_stmt 1 view .LVU480
 705:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     __DSB();
 1455              		.loc 1 705 23 is_stmt 0 view .LVU481
 1456 00fa 46F4803B 		orr	fp, r6, #65536
 705:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     __DSB();
 1457              		.loc 1 705 61 view .LVU482
 1458 00fe 0023     		movs	r3, #0
 1459 0100 8BF80030 		strb	r3, [fp]
 706:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 1460              		.loc 1 706 5 is_stmt 1 view .LVU483
 1461              	.LBB16:
 1462              	.LBI16:
 944:CORE/cmsis_gcc.h **** {
 1463              		.loc 2 944 27 view .LVU484
 1464              	.LBB17:
 946:CORE/cmsis_gcc.h **** }
 1465              		.loc 2 946 3 view .LVU485
 1466              		.syntax unified
 1467              	@ 946 "CORE/cmsis_gcc.h" 1
 1468 0104 BFF34F8F 		dsb 0xF
 1469              	@ 0 "" 2
 1470              		.thumb
 1471              		.syntax unified
 1472              	.LBE17:
 1473              	.LBE16:
 709:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 1474              		.loc 1 709 5 view .LVU486
 709:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 1475              		.loc 1 709 22 is_stmt 0 view .LVU487
 1476 0108 7B6A     		ldr	r3, [r7, #36]
 709:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 1477              		.loc 1 709 7 view .LVU488
 1478 010a B3F5007F 		cmp	r3, #512
 1479 010e B3D8     		bhi	.L96
 711:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 1480              		.loc 1 711 7 is_stmt 1 view .LVU489
 711:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 1481              		.loc 1 711 26 is_stmt 0 view .LVU490
 1482 0110 FA6A     		ldr	r2, [r7, #44]
 711:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 1483              		.loc 1 711 52 view .LVU491
ARM GAS  /tmp/ccHfptsR.s 			page 79


 1484 0112 3B6B     		ldr	r3, [r7, #48]
 711:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 1485              		.loc 1 711 37 view .LVU492
 1486 0114 03FB02F3 		mul	r3, r3, r2
 711:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 1487              		.loc 1 711 10 view .LVU493
 1488 0118 B3F5803F 		cmp	r3, #65536
 1489 011c 9ED2     		bcs	.L97
 713:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 1490              		.loc 1 713 9 is_stmt 1 view .LVU494
 713:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 1491              		.loc 1 713 27 is_stmt 0 view .LVU495
 1492 011e 46F40033 		orr	r3, r6, #131072
 713:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 1493              		.loc 1 713 66 view .LVU496
 1494 0122 0022     		movs	r2, #0
 1495 0124 1A70     		strb	r2, [r3]
 714:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 1496              		.loc 1 714 9 is_stmt 1 view .LVU497
 714:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 1497              		.loc 1 714 68 is_stmt 0 view .LVU498
 1498 0126 5FFA88F2 		uxtb	r2, r8
 714:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 1499              		.loc 1 714 66 view .LVU499
 1500 012a 1A70     		strb	r2, [r3]
 715:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 1501              		.loc 1 715 9 is_stmt 1 view .LVU500
 715:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 1502              		.loc 1 715 68 is_stmt 0 view .LVU501
 1503 012c C8F30722 		ubfx	r2, r8, #8, #8
 715:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 1504              		.loc 1 715 66 view .LVU502
 1505 0130 1A70     		strb	r2, [r3]
 1506              	.L98:
 744:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 1507              		.loc 1 744 5 is_stmt 1 view .LVU503
 744:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 1508              		.loc 1 744 62 is_stmt 0 view .LVU504
 1509 0132 3023     		movs	r3, #48
 1510 0134 8BF80030 		strb	r3, [fp]
 746:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 1511              		.loc 1 746 5 is_stmt 1 view .LVU505
 746:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 1512              		.loc 1 746 21 is_stmt 0 view .LVU506
 1513 0138 97F83C30 		ldrb	r3, [r7, #60]	@ zero_extendqisi2
 746:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 1514              		.loc 1 746 7 view .LVU507
 1515 013c 012B     		cmp	r3, #1
 1516 013e C7D1     		bne	.L103
 749:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       
 1517              		.loc 1 749 7 is_stmt 1 view .LVU508
 749:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       
 1518              		.loc 1 749 19 is_stmt 0 view .LVU509
 1519 0140 FFF7FEFF 		bl	HAL_GetTick
 1520              	.LVL98:
 1521 0144 0190     		str	r0, [sp, #4]
 1522              	.LVL99:
ARM GAS  /tmp/ccHfptsR.s 			page 80


 752:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 1523              		.loc 1 752 7 is_stmt 1 view .LVU510
 1524              	.L101:
 752:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 1525              		.loc 1 752 12 view .LVU511
 752:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 1526              		.loc 1 752 13 is_stmt 0 view .LVU512
 1527 0146 3846     		mov	r0, r7
 1528 0148 FFF7FEFF 		bl	HAL_NAND_Read_Status
 1529              	.LVL100:
 752:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 1530              		.loc 1 752 12 view .LVU513
 1531 014c 4028     		cmp	r0, #64
 1532 014e B5D0     		beq	.L112
 754:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         {
 1533              		.loc 1 754 9 is_stmt 1 view .LVU514
 754:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         {
 1534              		.loc 1 754 13 is_stmt 0 view .LVU515
 1535 0150 FFF7FEFF 		bl	HAL_GetTick
 1536              	.LVL101:
 754:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         {
 1537              		.loc 1 754 27 view .LVU516
 1538 0154 019B     		ldr	r3, [sp, #4]
 1539 0156 C01A     		subs	r0, r0, r3
 754:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         {
 1540              		.loc 1 754 11 view .LVU517
 1541 0158 B0F1807F 		cmp	r0, #16777216
 1542 015c F3D9     		bls	.L101
 756:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         }
 1543              		.loc 1 756 18 view .LVU518
 1544 015e 0320     		movs	r0, #3
 1545 0160 05E0     		b	.L93
 1546              	.LVL102:
 1547              	.L105:
 781:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 1548              		.loc 1 781 3 is_stmt 1 view .LVU519
 781:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 1549              		.loc 1 781 16 is_stmt 0 view .LVU520
 1550 0162 0123     		movs	r3, #1
 1551 0164 87F82130 		strb	r3, [r7, #33]
 784:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 1552              		.loc 1 784 3 is_stmt 1 view .LVU521
 784:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 1553              		.loc 1 784 3 view .LVU522
 1554 0168 0020     		movs	r0, #0
 1555 016a 87F82000 		strb	r0, [r7, #32]
 784:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 1556              		.loc 1 784 3 view .LVU523
 786:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** }
 1557              		.loc 1 786 3 view .LVU524
 1558              	.LVL103:
 1559              	.L93:
 787:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 1560              		.loc 1 787 1 is_stmt 0 view .LVU525
 1561 016e 05B0     		add	sp, sp, #20
 1562              	.LCFI15:
 1563              		.cfi_remember_state
ARM GAS  /tmp/ccHfptsR.s 			page 81


 1564              		.cfi_def_cfa_offset 36
 1565              		@ sp needed
 1566 0170 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1567              	.LVL104:
 1568              	.L107:
 1569              	.LCFI16:
 1570              		.cfi_restore_state
 674:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 1571              		.loc 1 674 3 view .LVU526
 1572 0174 0220     		movs	r0, #2
 1573              	.LVL105:
 674:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 1574              		.loc 1 674 3 view .LVU527
 1575 0176 FAE7     		b	.L93
 1576              		.cfi_endproc
 1577              	.LFE142:
 1579              		.section	.text.HAL_NAND_Write_Page_8b,"ax",%progbits
 1580              		.align	1
 1581              		.global	HAL_NAND_Write_Page_8b
 1582              		.syntax unified
 1583              		.thumb
 1584              		.thumb_func
 1585              		.fpu fpv4-sp-d16
 1587              	HAL_NAND_Write_Page_8b:
 1588              	.LVL106:
 1589              	.LFB143:
 799:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   __IO uint32_t index = 0U;
 1590              		.loc 1 799 1 is_stmt 1 view -0
 1591              		.cfi_startproc
 1592              		@ args = 0, pretend = 0, frame = 8
 1593              		@ frame_needed = 0, uses_anonymous_args = 0
 799:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   __IO uint32_t index = 0U;
 1594              		.loc 1 799 1 is_stmt 0 view .LVU529
 1595 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 1596              	.LCFI17:
 1597              		.cfi_def_cfa_offset 32
 1598              		.cfi_offset 4, -32
 1599              		.cfi_offset 5, -28
 1600              		.cfi_offset 6, -24
 1601              		.cfi_offset 7, -20
 1602              		.cfi_offset 8, -16
 1603              		.cfi_offset 9, -12
 1604              		.cfi_offset 10, -8
 1605              		.cfi_offset 14, -4
 1606 0004 82B0     		sub	sp, sp, #8
 1607              	.LCFI18:
 1608              		.cfi_def_cfa_offset 40
 1609 0006 9846     		mov	r8, r3
 800:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   uint32_t tickstart = 0U;
 1610              		.loc 1 800 3 is_stmt 1 view .LVU530
 800:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   uint32_t tickstart = 0U;
 1611              		.loc 1 800 17 is_stmt 0 view .LVU531
 1612 0008 0023     		movs	r3, #0
 1613              	.LVL107:
 800:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   uint32_t tickstart = 0U;
 1614              		.loc 1 800 17 view .LVU532
 1615 000a 0193     		str	r3, [sp, #4]
ARM GAS  /tmp/ccHfptsR.s 			page 82


 801:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   uint32_t deviceaddress = 0U, size = 0U, numPagesWritten = 0U, nandaddress = 0U;
 1616              		.loc 1 801 3 is_stmt 1 view .LVU533
 1617              	.LVL108:
 802:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 1618              		.loc 1 802 3 view .LVU534
 805:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 1619              		.loc 1 805 3 view .LVU535
 805:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 1620              		.loc 1 805 3 view .LVU536
 1621 000c 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1622 0010 012B     		cmp	r3, #1
 1623 0012 00F0A480 		beq	.L127
 1624 0016 0546     		mov	r5, r0
 1625 0018 1446     		mov	r4, r2
 805:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 1626              		.loc 1 805 3 discriminator 2 view .LVU537
 1627 001a 0123     		movs	r3, #1
 1628 001c 80F82030 		strb	r3, [r0, #32]
 805:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 1629              		.loc 1 805 3 discriminator 2 view .LVU538
 808:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 1630              		.loc 1 808 3 discriminator 2 view .LVU539
 808:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 1631              		.loc 1 808 11 is_stmt 0 discriminator 2 view .LVU540
 1632 0020 90F82100 		ldrb	r0, [r0, #33]	@ zero_extendqisi2
 1633              	.LVL109:
 808:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 1634              		.loc 1 808 11 discriminator 2 view .LVU541
 1635 0024 C0B2     		uxtb	r0, r0
 808:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 1636              		.loc 1 808 5 discriminator 2 view .LVU542
 1637 0026 0228     		cmp	r0, #2
 1638 0028 00F08B80 		beq	.L114
 814:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 1639              		.loc 1 814 3 is_stmt 1 view .LVU543
 814:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 1640              		.loc 1 814 17 is_stmt 0 view .LVU544
 1641 002c 6B68     		ldr	r3, [r5, #4]
 814:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 1642              		.loc 1 814 5 view .LVU545
 1643 002e 102B     		cmp	r3, #16
 1644 0030 41D0     		beq	.L131
 820:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
 1645              		.loc 1 820 19 view .LVU546
 1646 0032 4FF00046 		mov	r6, #-2147483648
 1647              	.L115:
 1648              	.LVL110:
 824:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 1649              		.loc 1 824 3 is_stmt 1 view .LVU547
 824:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 1650              		.loc 1 824 16 is_stmt 0 view .LVU548
 1651 0036 0223     		movs	r3, #2
 1652 0038 85F82130 		strb	r3, [r5, #33]
 827:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 1653              		.loc 1 827 3 is_stmt 1 view .LVU549
 827:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 1654              		.loc 1 827 17 is_stmt 0 view .LVU550
ARM GAS  /tmp/ccHfptsR.s 			page 83


 1655 003c 0B88     		ldrh	r3, [r1]
 1656 003e 8A88     		ldrh	r2, [r1, #4]
 1657              	.LVL111:
 827:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 1658              		.loc 1 827 17 view .LVU551
 1659 0040 4F88     		ldrh	r7, [r1, #2]
 1660 0042 A96B     		ldr	r1, [r5, #56]
 1661              	.LVL112:
 827:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 1662              		.loc 1 827 17 view .LVU552
 1663 0044 01FB0727 		mla	r7, r1, r7, r2
 1664 0048 EA6A     		ldr	r2, [r5, #44]
 827:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 1665              		.loc 1 827 15 view .LVU553
 1666 004a 02FB0737 		mla	r7, r2, r7, r3
 1667              	.LVL113:
 830:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 1668              		.loc 1 830 3 is_stmt 1 view .LVU554
 802:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 1669              		.loc 1 802 43 is_stmt 0 view .LVU555
 1670 004e 4FF00009 		mov	r9, #0
 1671              	.LVL114:
 1672              	.L116:
 830:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 1673              		.loc 1 830 8 is_stmt 1 view .LVU556
 1674 0052 B8F1000F 		cmp	r8, #0
 1675 0056 7BD0     		beq	.L125
 830:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 1676              		.loc 1 830 65 is_stmt 0 discriminator 1 view .LVU557
 1677 0058 EA6A     		ldr	r2, [r5, #44]
 830:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 1678              		.loc 1 830 93 discriminator 1 view .LVU558
 1679 005a 2B6B     		ldr	r3, [r5, #48]
 830:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 1680              		.loc 1 830 77 discriminator 1 view .LVU559
 1681 005c 03FB02F3 		mul	r3, r3, r2
 830:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 1682              		.loc 1 830 32 discriminator 1 view .LVU560
 1683 0060 BB42     		cmp	r3, r7
 1684 0062 75D9     		bls	.L125
 833:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 1685              		.loc 1 833 5 is_stmt 1 view .LVU561
 833:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 1686              		.loc 1 833 35 is_stmt 0 view .LVU562
 1687 0064 09F10109 		add	r9, r9, #1
 1688              	.LVL115:
 833:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 1689              		.loc 1 833 25 view .LVU563
 1690 0068 6A6A     		ldr	r2, [r5, #36]
 833:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 1691              		.loc 1 833 10 view .LVU564
 1692 006a 02FB09F2 		mul	r2, r2, r9
 1693              	.LVL116:
 836:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_WRITE0;
 1694              		.loc 1 836 5 is_stmt 1 view .LVU565
 836:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_WRITE0;
 1695              		.loc 1 836 23 is_stmt 0 view .LVU566
ARM GAS  /tmp/ccHfptsR.s 			page 84


 1696 006e 46F48031 		orr	r1, r6, #65536
 836:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_WRITE0;
 1697              		.loc 1 836 61 view .LVU567
 1698 0072 0023     		movs	r3, #0
 1699 0074 0B70     		strb	r3, [r1]
 837:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 1700              		.loc 1 837 5 is_stmt 1 view .LVU568
 837:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 1701              		.loc 1 837 61 is_stmt 0 view .LVU569
 1702 0076 8023     		movs	r3, #128
 1703 0078 0B70     		strb	r3, [r1]
 840:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 1704              		.loc 1 840 5 is_stmt 1 view .LVU570
 840:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 1705              		.loc 1 840 22 is_stmt 0 view .LVU571
 1706 007a 6B6A     		ldr	r3, [r5, #36]
 840:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 1707              		.loc 1 840 7 view .LVU572
 1708 007c B3F5007F 		cmp	r3, #512
 1709 0080 29D8     		bhi	.L117
 842:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 1710              		.loc 1 842 7 is_stmt 1 view .LVU573
 842:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 1711              		.loc 1 842 26 is_stmt 0 view .LVU574
 1712 0082 E86A     		ldr	r0, [r5, #44]
 842:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 1713              		.loc 1 842 52 view .LVU575
 1714 0084 2B6B     		ldr	r3, [r5, #48]
 842:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 1715              		.loc 1 842 37 view .LVU576
 1716 0086 03FB00F3 		mul	r3, r3, r0
 842:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 1717              		.loc 1 842 10 view .LVU577
 1718 008a B3F5803F 		cmp	r3, #65536
 1719 008e 15D2     		bcs	.L118
 844:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 1720              		.loc 1 844 9 is_stmt 1 view .LVU578
 844:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 1721              		.loc 1 844 27 is_stmt 0 view .LVU579
 1722 0090 46F40033 		orr	r3, r6, #131072
 844:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 1723              		.loc 1 844 66 view .LVU580
 1724 0094 0020     		movs	r0, #0
 1725 0096 1870     		strb	r0, [r3]
 845:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 1726              		.loc 1 845 9 is_stmt 1 view .LVU581
 845:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 1727              		.loc 1 845 68 is_stmt 0 view .LVU582
 1728 0098 F8B2     		uxtb	r0, r7
 845:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 1729              		.loc 1 845 66 view .LVU583
 1730 009a 1870     		strb	r0, [r3]
 846:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 1731              		.loc 1 846 9 is_stmt 1 view .LVU584
 846:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 1732              		.loc 1 846 68 is_stmt 0 view .LVU585
 1733 009c C7F30720 		ubfx	r0, r7, #8, #8
ARM GAS  /tmp/ccHfptsR.s 			page 85


 846:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 1734              		.loc 1 846 66 view .LVU586
 1735 00a0 1870     		strb	r0, [r3]
 1736              	.L120:
 879:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 1737              		.loc 1 879 11 is_stmt 1 discriminator 1 view .LVU587
 879:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 1738              		.loc 1 879 17 is_stmt 0 discriminator 1 view .LVU588
 1739 00a2 019B     		ldr	r3, [sp, #4]
 879:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 1740              		.loc 1 879 5 discriminator 1 view .LVU589
 1741 00a4 9342     		cmp	r3, r2
 1742 00a6 3AD2     		bcs	.L132
 881:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     }
 1743              		.loc 1 881 7 is_stmt 1 discriminator 2 view .LVU590
 1744              	.LVL117:
 881:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     }
 1745              		.loc 1 881 40 is_stmt 0 discriminator 2 view .LVU591
 1746 00a8 14F8013B 		ldrb	r3, [r4], #1	@ zero_extendqisi2
 1747              	.LVL118:
 881:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     }
 1748              		.loc 1 881 38 discriminator 2 view .LVU592
 1749 00ac 3370     		strb	r3, [r6]
 879:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 1750              		.loc 1 879 25 is_stmt 1 discriminator 2 view .LVU593
 879:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 1751              		.loc 1 879 30 is_stmt 0 discriminator 2 view .LVU594
 1752 00ae 019B     		ldr	r3, [sp, #4]
 1753 00b0 0133     		adds	r3, r3, #1
 1754 00b2 0193     		str	r3, [sp, #4]
 1755 00b4 F5E7     		b	.L120
 1756              	.LVL119:
 1757              	.L131:
 816:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
 1758              		.loc 1 816 19 view .LVU595
 1759 00b6 4FF0E046 		mov	r6, #1879048192
 1760 00ba BCE7     		b	.L115
 1761              	.LVL120:
 1762              	.L118:
 850:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 1763              		.loc 1 850 9 is_stmt 1 view .LVU596
 850:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 1764              		.loc 1 850 27 is_stmt 0 view .LVU597
 1765 00bc 46F40033 		orr	r3, r6, #131072
 850:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 1766              		.loc 1 850 66 view .LVU598
 1767 00c0 0020     		movs	r0, #0
 1768 00c2 1870     		strb	r0, [r3]
 851:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 1769              		.loc 1 851 9 is_stmt 1 view .LVU599
 851:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 1770              		.loc 1 851 68 is_stmt 0 view .LVU600
 1771 00c4 F8B2     		uxtb	r0, r7
 851:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 1772              		.loc 1 851 66 view .LVU601
 1773 00c6 1870     		strb	r0, [r3]
 852:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
ARM GAS  /tmp/ccHfptsR.s 			page 86


 1774              		.loc 1 852 9 is_stmt 1 view .LVU602
 852:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
 1775              		.loc 1 852 68 is_stmt 0 view .LVU603
 1776 00c8 C7F30720 		ubfx	r0, r7, #8, #8
 852:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
 1777              		.loc 1 852 66 view .LVU604
 1778 00cc 1870     		strb	r0, [r3]
 853:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 1779              		.loc 1 853 9 is_stmt 1 view .LVU605
 853:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 1780              		.loc 1 853 68 is_stmt 0 view .LVU606
 1781 00ce C7F30740 		ubfx	r0, r7, #16, #8
 853:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 1782              		.loc 1 853 66 view .LVU607
 1783 00d2 1870     		strb	r0, [r3]
 1784 00d4 E5E7     		b	.L120
 1785              	.L117:
 858:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 1786              		.loc 1 858 7 is_stmt 1 view .LVU608
 858:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 1787              		.loc 1 858 26 is_stmt 0 view .LVU609
 1788 00d6 E86A     		ldr	r0, [r5, #44]
 858:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 1789              		.loc 1 858 52 view .LVU610
 1790 00d8 2B6B     		ldr	r3, [r5, #48]
 858:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 1791              		.loc 1 858 37 view .LVU611
 1792 00da 03FB00F3 		mul	r3, r3, r0
 858:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 1793              		.loc 1 858 10 view .LVU612
 1794 00de B3F5803F 		cmp	r3, #65536
 1795 00e2 0AD2     		bcs	.L121
 860:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
 1796              		.loc 1 860 9 is_stmt 1 view .LVU613
 860:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
 1797              		.loc 1 860 27 is_stmt 0 view .LVU614
 1798 00e4 46F40033 		orr	r3, r6, #131072
 860:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
 1799              		.loc 1 860 66 view .LVU615
 1800 00e8 0020     		movs	r0, #0
 1801 00ea 1870     		strb	r0, [r3]
 861:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 1802              		.loc 1 861 9 is_stmt 1 view .LVU616
 861:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 1803              		.loc 1 861 66 is_stmt 0 view .LVU617
 1804 00ec 1870     		strb	r0, [r3]
 862:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 1805              		.loc 1 862 9 is_stmt 1 view .LVU618
 862:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 1806              		.loc 1 862 68 is_stmt 0 view .LVU619
 1807 00ee F8B2     		uxtb	r0, r7
 862:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 1808              		.loc 1 862 66 view .LVU620
 1809 00f0 1870     		strb	r0, [r3]
 863:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 1810              		.loc 1 863 9 is_stmt 1 view .LVU621
 863:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
ARM GAS  /tmp/ccHfptsR.s 			page 87


 1811              		.loc 1 863 68 is_stmt 0 view .LVU622
 1812 00f2 C7F30720 		ubfx	r0, r7, #8, #8
 863:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 1813              		.loc 1 863 66 view .LVU623
 1814 00f6 1870     		strb	r0, [r3]
 1815 00f8 D3E7     		b	.L120
 1816              	.L121:
 867:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
 1817              		.loc 1 867 9 is_stmt 1 view .LVU624
 867:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
 1818              		.loc 1 867 27 is_stmt 0 view .LVU625
 1819 00fa 46F40033 		orr	r3, r6, #131072
 867:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
 1820              		.loc 1 867 66 view .LVU626
 1821 00fe 0020     		movs	r0, #0
 1822 0100 1870     		strb	r0, [r3]
 868:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 1823              		.loc 1 868 9 is_stmt 1 view .LVU627
 868:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 1824              		.loc 1 868 66 is_stmt 0 view .LVU628
 1825 0102 1870     		strb	r0, [r3]
 869:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 1826              		.loc 1 869 9 is_stmt 1 view .LVU629
 869:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 1827              		.loc 1 869 68 is_stmt 0 view .LVU630
 1828 0104 F8B2     		uxtb	r0, r7
 869:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 1829              		.loc 1 869 66 view .LVU631
 1830 0106 1870     		strb	r0, [r3]
 870:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         __DSB();
 1831              		.loc 1 870 9 is_stmt 1 view .LVU632
 870:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         __DSB();
 1832              		.loc 1 870 68 is_stmt 0 view .LVU633
 1833 0108 C7F30720 		ubfx	r0, r7, #8, #8
 870:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         __DSB();
 1834              		.loc 1 870 66 view .LVU634
 1835 010c 1870     		strb	r0, [r3]
 871:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
 1836              		.loc 1 871 9 is_stmt 1 view .LVU635
 1837              	.LBB18:
 1838              	.LBI18:
 944:CORE/cmsis_gcc.h **** {
 1839              		.loc 2 944 27 view .LVU636
 1840              	.LBB19:
 946:CORE/cmsis_gcc.h **** }
 1841              		.loc 2 946 3 view .LVU637
 1842              		.syntax unified
 1843              	@ 946 "CORE/cmsis_gcc.h" 1
 1844 010e BFF34F8F 		dsb 0xF
 1845              	@ 0 "" 2
 1846              		.thumb
 1847              		.syntax unified
 1848              	.LBE19:
 1849              	.LBE18:
 872:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         __DSB();
 1850              		.loc 1 872 9 view .LVU638
 872:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         __DSB();
ARM GAS  /tmp/ccHfptsR.s 			page 88


 1851              		.loc 1 872 68 is_stmt 0 view .LVU639
 1852 0112 C7F30740 		ubfx	r0, r7, #16, #8
 872:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         __DSB();
 1853              		.loc 1 872 66 view .LVU640
 1854 0116 1870     		strb	r0, [r3]
 873:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 1855              		.loc 1 873 9 is_stmt 1 view .LVU641
 1856              	.LBB20:
 1857              	.LBI20:
 944:CORE/cmsis_gcc.h **** {
 1858              		.loc 2 944 27 view .LVU642
 1859              	.LBB21:
 946:CORE/cmsis_gcc.h **** }
 1860              		.loc 2 946 3 view .LVU643
 1861              		.syntax unified
 1862              	@ 946 "CORE/cmsis_gcc.h" 1
 1863 0118 BFF34F8F 		dsb 0xF
 1864              	@ 0 "" 2
 1865              		.loc 2 947 1 is_stmt 0 view .LVU644
 1866              		.thumb
 1867              		.syntax unified
 1868 011c C1E7     		b	.L120
 1869              	.L132:
 1870              		.loc 2 947 1 view .LVU645
 1871              	.LBE21:
 1872              	.LBE20:
 884:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 1873              		.loc 1 884 5 is_stmt 1 view .LVU646
 884:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 1874              		.loc 1 884 61 is_stmt 0 view .LVU647
 1875 011e 1023     		movs	r3, #16
 1876 0120 0B70     		strb	r3, [r1]
 887:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 1877              		.loc 1 887 5 is_stmt 1 view .LVU648
 1878              	.LVL121:
 1879              	.L123:
 887:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 1880              		.loc 1 887 10 view .LVU649
 887:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 1881              		.loc 1 887 11 is_stmt 0 view .LVU650
 1882 0122 2846     		mov	r0, r5
 1883 0124 FFF7FEFF 		bl	HAL_NAND_Read_Status
 1884              	.LVL122:
 887:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 1885              		.loc 1 887 10 view .LVU651
 1886 0128 4028     		cmp	r0, #64
 1887 012a 0DD0     		beq	.L133
 890:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       
 1888              		.loc 1 890 7 is_stmt 1 view .LVU652
 890:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       
 1889              		.loc 1 890 19 is_stmt 0 view .LVU653
 1890 012c FFF7FEFF 		bl	HAL_GetTick
 1891              	.LVL123:
 1892 0130 8246     		mov	r10, r0
 1893              	.LVL124:
 892:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 1894              		.loc 1 892 7 is_stmt 1 view .LVU654
ARM GAS  /tmp/ccHfptsR.s 			page 89


 892:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 1895              		.loc 1 892 11 is_stmt 0 view .LVU655
 1896 0132 FFF7FEFF 		bl	HAL_GetTick
 1897              	.LVL125:
 892:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 1898              		.loc 1 892 25 view .LVU656
 1899 0136 A0EB0A00 		sub	r0, r0, r10
 892:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 1900              		.loc 1 892 9 view .LVU657
 1901 013a B0F1807F 		cmp	r0, #16777216
 1902 013e F0D9     		bls	.L123
 894:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 1903              		.loc 1 894 16 view .LVU658
 1904 0140 0320     		movs	r0, #3
 1905              	.LVL126:
 1906              	.L114:
 915:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 1907              		.loc 1 915 1 view .LVU659
 1908 0142 02B0     		add	sp, sp, #8
 1909              	.LCFI19:
 1910              		.cfi_remember_state
 1911              		.cfi_def_cfa_offset 32
 1912              		@ sp needed
 1913 0144 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1914              	.LVL127:
 1915              	.L133:
 1916              	.LCFI20:
 1917              		.cfi_restore_state
 899:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 1918              		.loc 1 899 5 is_stmt 1 view .LVU660
 902:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 1919              		.loc 1 902 5 view .LVU661
 902:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 1920              		.loc 1 902 19 is_stmt 0 view .LVU662
 1921 0148 08F1FF38 		add	r8, r8, #-1
 1922              	.LVL128:
 905:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
 1923              		.loc 1 905 5 is_stmt 1 view .LVU663
 905:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
 1924              		.loc 1 905 17 is_stmt 0 view .LVU664
 1925 014c 0137     		adds	r7, r7, #1
 1926              	.LVL129:
 905:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
 1927              		.loc 1 905 17 view .LVU665
 1928 014e 80E7     		b	.L116
 1929              	.L125:
 909:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 1930              		.loc 1 909 3 is_stmt 1 view .LVU666
 909:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 1931              		.loc 1 909 16 is_stmt 0 view .LVU667
 1932 0150 0123     		movs	r3, #1
 1933 0152 85F82130 		strb	r3, [r5, #33]
 912:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 1934              		.loc 1 912 3 is_stmt 1 view .LVU668
 912:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 1935              		.loc 1 912 3 view .LVU669
 1936 0156 0020     		movs	r0, #0
ARM GAS  /tmp/ccHfptsR.s 			page 90


 1937 0158 85F82000 		strb	r0, [r5, #32]
 912:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 1938              		.loc 1 912 3 view .LVU670
 914:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** }
 1939              		.loc 1 914 3 view .LVU671
 914:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** }
 1940              		.loc 1 914 10 is_stmt 0 view .LVU672
 1941 015c F1E7     		b	.L114
 1942              	.LVL130:
 1943              	.L127:
 805:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 1944              		.loc 1 805 3 view .LVU673
 1945 015e 0220     		movs	r0, #2
 1946              	.LVL131:
 805:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 1947              		.loc 1 805 3 view .LVU674
 1948 0160 EFE7     		b	.L114
 1949              		.cfi_endproc
 1950              	.LFE143:
 1952              		.section	.text.HAL_NAND_Write_Page_16b,"ax",%progbits
 1953              		.align	1
 1954              		.global	HAL_NAND_Write_Page_16b
 1955              		.syntax unified
 1956              		.thumb
 1957              		.thumb_func
 1958              		.fpu fpv4-sp-d16
 1960              	HAL_NAND_Write_Page_16b:
 1961              	.LVL132:
 1962              	.LFB144:
 927:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   __IO uint32_t index = 0U;
 1963              		.loc 1 927 1 is_stmt 1 view -0
 1964              		.cfi_startproc
 1965              		@ args = 0, pretend = 0, frame = 8
 1966              		@ frame_needed = 0, uses_anonymous_args = 0
 927:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   __IO uint32_t index = 0U;
 1967              		.loc 1 927 1 is_stmt 0 view .LVU676
 1968 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 1969              	.LCFI21:
 1970              		.cfi_def_cfa_offset 32
 1971              		.cfi_offset 4, -32
 1972              		.cfi_offset 5, -28
 1973              		.cfi_offset 6, -24
 1974              		.cfi_offset 7, -20
 1975              		.cfi_offset 8, -16
 1976              		.cfi_offset 9, -12
 1977              		.cfi_offset 10, -8
 1978              		.cfi_offset 14, -4
 1979 0004 82B0     		sub	sp, sp, #8
 1980              	.LCFI22:
 1981              		.cfi_def_cfa_offset 40
 1982 0006 9846     		mov	r8, r3
 928:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   uint32_t tickstart = 0U;
 1983              		.loc 1 928 3 is_stmt 1 view .LVU677
 928:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   uint32_t tickstart = 0U;
 1984              		.loc 1 928 17 is_stmt 0 view .LVU678
 1985 0008 0023     		movs	r3, #0
 1986              	.LVL133:
ARM GAS  /tmp/ccHfptsR.s 			page 91


 928:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   uint32_t tickstart = 0U;
 1987              		.loc 1 928 17 view .LVU679
 1988 000a 0193     		str	r3, [sp, #4]
 929:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   uint32_t deviceaddress = 0U, size = 0U, numPagesWritten = 0U, nandaddress = 0U;
 1989              		.loc 1 929 3 is_stmt 1 view .LVU680
 1990              	.LVL134:
 930:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 1991              		.loc 1 930 3 view .LVU681
 933:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 1992              		.loc 1 933 3 view .LVU682
 933:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 1993              		.loc 1 933 3 view .LVU683
 1994 000c 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1995 0010 012B     		cmp	r3, #1
 1996 0012 00F0A480 		beq	.L148
 1997 0016 0546     		mov	r5, r0
 1998 0018 1446     		mov	r4, r2
 933:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 1999              		.loc 1 933 3 discriminator 2 view .LVU684
 2000 001a 0123     		movs	r3, #1
 2001 001c 80F82030 		strb	r3, [r0, #32]
 933:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 2002              		.loc 1 933 3 discriminator 2 view .LVU685
 936:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 2003              		.loc 1 936 3 discriminator 2 view .LVU686
 936:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 2004              		.loc 1 936 11 is_stmt 0 discriminator 2 view .LVU687
 2005 0020 90F82100 		ldrb	r0, [r0, #33]	@ zero_extendqisi2
 2006              	.LVL135:
 936:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 2007              		.loc 1 936 11 discriminator 2 view .LVU688
 2008 0024 C0B2     		uxtb	r0, r0
 936:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 2009              		.loc 1 936 5 discriminator 2 view .LVU689
 2010 0026 0228     		cmp	r0, #2
 2011 0028 00F08B80 		beq	.L135
 942:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 2012              		.loc 1 942 3 is_stmt 1 view .LVU690
 942:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 2013              		.loc 1 942 17 is_stmt 0 view .LVU691
 2014 002c 6B68     		ldr	r3, [r5, #4]
 942:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 2015              		.loc 1 942 5 view .LVU692
 2016 002e 102B     		cmp	r3, #16
 2017 0030 45D0     		beq	.L152
 948:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
 2018              		.loc 1 948 19 view .LVU693
 2019 0032 4FF00046 		mov	r6, #-2147483648
 2020              	.L136:
 2021              	.LVL136:
 952:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 2022              		.loc 1 952 3 is_stmt 1 view .LVU694
 952:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 2023              		.loc 1 952 16 is_stmt 0 view .LVU695
 2024 0036 0223     		movs	r3, #2
 2025 0038 85F82130 		strb	r3, [r5, #33]
 955:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
ARM GAS  /tmp/ccHfptsR.s 			page 92


 2026              		.loc 1 955 3 is_stmt 1 view .LVU696
 955:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 2027              		.loc 1 955 17 is_stmt 0 view .LVU697
 2028 003c 0B88     		ldrh	r3, [r1]
 2029 003e 8A88     		ldrh	r2, [r1, #4]
 2030              	.LVL137:
 955:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 2031              		.loc 1 955 17 view .LVU698
 2032 0040 4F88     		ldrh	r7, [r1, #2]
 2033 0042 A96B     		ldr	r1, [r5, #56]
 2034              	.LVL138:
 955:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 2035              		.loc 1 955 17 view .LVU699
 2036 0044 01FB0727 		mla	r7, r1, r7, r2
 2037 0048 EA6A     		ldr	r2, [r5, #44]
 955:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 2038              		.loc 1 955 15 view .LVU700
 2039 004a 02FB0737 		mla	r7, r2, r7, r3
 2040              	.LVL139:
 958:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 2041              		.loc 1 958 3 is_stmt 1 view .LVU701
 930:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 2042              		.loc 1 930 43 is_stmt 0 view .LVU702
 2043 004e 4FF00009 		mov	r9, #0
 2044              	.LVL140:
 2045              	.L137:
 958:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 2046              		.loc 1 958 8 is_stmt 1 view .LVU703
 2047 0052 B8F1000F 		cmp	r8, #0
 2048 0056 7BD0     		beq	.L146
 958:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 2049              		.loc 1 958 65 is_stmt 0 discriminator 1 view .LVU704
 2050 0058 EA6A     		ldr	r2, [r5, #44]
 958:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 2051              		.loc 1 958 93 discriminator 1 view .LVU705
 2052 005a 2B6B     		ldr	r3, [r5, #48]
 958:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 2053              		.loc 1 958 77 discriminator 1 view .LVU706
 2054 005c 03FB02F3 		mul	r3, r3, r2
 958:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 2055              		.loc 1 958 32 discriminator 1 view .LVU707
 2056 0060 BB42     		cmp	r3, r7
 2057 0062 75D9     		bls	.L146
 961:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****  
 2058              		.loc 1 961 5 is_stmt 1 view .LVU708
 961:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****  
 2059              		.loc 1 961 37 is_stmt 0 view .LVU709
 2060 0064 09F10109 		add	r9, r9, #1
 2061              	.LVL141:
 961:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****  
 2062              		.loc 1 961 26 view .LVU710
 2063 0068 6A6A     		ldr	r2, [r5, #36]
 961:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****  
 2064              		.loc 1 961 10 view .LVU711
 2065 006a 02FB09F2 		mul	r2, r2, r9
 2066              	.LVL142:
 964:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     __DSB();
ARM GAS  /tmp/ccHfptsR.s 			page 93


 2067              		.loc 1 964 5 is_stmt 1 view .LVU712
 964:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     __DSB();
 2068              		.loc 1 964 23 is_stmt 0 view .LVU713
 2069 006e 46F48031 		orr	r1, r6, #65536
 964:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     __DSB();
 2070              		.loc 1 964 61 view .LVU714
 2071 0072 0023     		movs	r3, #0
 2072 0074 0B70     		strb	r3, [r1]
 965:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_WRITE0;
 2073              		.loc 1 965 5 is_stmt 1 view .LVU715
 2074              	.LBB22:
 2075              	.LBI22:
 944:CORE/cmsis_gcc.h **** {
 2076              		.loc 2 944 27 view .LVU716
 2077              	.LBB23:
 946:CORE/cmsis_gcc.h **** }
 2078              		.loc 2 946 3 view .LVU717
 2079              		.syntax unified
 2080              	@ 946 "CORE/cmsis_gcc.h" 1
 2081 0076 BFF34F8F 		dsb 0xF
 2082              	@ 0 "" 2
 2083              		.thumb
 2084              		.syntax unified
 2085              	.LBE23:
 2086              	.LBE22:
 966:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     __DSB();
 2087              		.loc 1 966 5 view .LVU718
 966:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     __DSB();
 2088              		.loc 1 966 61 is_stmt 0 view .LVU719
 2089 007a 8023     		movs	r3, #128
 2090 007c 0B70     		strb	r3, [r1]
 967:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 2091              		.loc 1 967 5 is_stmt 1 view .LVU720
 2092              	.LBB24:
 2093              	.LBI24:
 944:CORE/cmsis_gcc.h **** {
 2094              		.loc 2 944 27 view .LVU721
 2095              	.LBB25:
 946:CORE/cmsis_gcc.h **** }
 2096              		.loc 2 946 3 view .LVU722
 2097              		.syntax unified
 2098              	@ 946 "CORE/cmsis_gcc.h" 1
 2099 007e BFF34F8F 		dsb 0xF
 2100              	@ 0 "" 2
 2101              		.thumb
 2102              		.syntax unified
 2103              	.LBE25:
 2104              	.LBE24:
 970:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 2105              		.loc 1 970 5 view .LVU723
 970:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 2106              		.loc 1 970 22 is_stmt 0 view .LVU724
 2107 0082 6B6A     		ldr	r3, [r5, #36]
 970:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 2108              		.loc 1 970 7 view .LVU725
 2109 0084 B3F5007F 		cmp	r3, #512
 2110 0088 29D8     		bhi	.L138
ARM GAS  /tmp/ccHfptsR.s 			page 94


 972:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 2111              		.loc 1 972 7 is_stmt 1 view .LVU726
 972:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 2112              		.loc 1 972 26 is_stmt 0 view .LVU727
 2113 008a E86A     		ldr	r0, [r5, #44]
 972:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 2114              		.loc 1 972 52 view .LVU728
 2115 008c 2B6B     		ldr	r3, [r5, #48]
 972:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 2116              		.loc 1 972 37 view .LVU729
 2117 008e 03FB00F3 		mul	r3, r3, r0
 972:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 2118              		.loc 1 972 10 view .LVU730
 2119 0092 B3F5803F 		cmp	r3, #65536
 2120 0096 15D2     		bcs	.L139
 974:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 2121              		.loc 1 974 9 is_stmt 1 view .LVU731
 974:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 2122              		.loc 1 974 27 is_stmt 0 view .LVU732
 2123 0098 46F40033 		orr	r3, r6, #131072
 974:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 2124              		.loc 1 974 66 view .LVU733
 2125 009c 0020     		movs	r0, #0
 2126 009e 1870     		strb	r0, [r3]
 975:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 2127              		.loc 1 975 9 is_stmt 1 view .LVU734
 975:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 2128              		.loc 1 975 68 is_stmt 0 view .LVU735
 2129 00a0 F8B2     		uxtb	r0, r7
 975:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 2130              		.loc 1 975 66 view .LVU736
 2131 00a2 1870     		strb	r0, [r3]
 976:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 2132              		.loc 1 976 9 is_stmt 1 view .LVU737
 976:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 2133              		.loc 1 976 68 is_stmt 0 view .LVU738
 2134 00a4 C7F30720 		ubfx	r0, r7, #8, #8
 976:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 2135              		.loc 1 976 66 view .LVU739
 2136 00a8 1870     		strb	r0, [r3]
 2137              	.L141:
1006:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 2138              		.loc 1 1006 11 is_stmt 1 discriminator 1 view .LVU740
1006:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 2139              		.loc 1 1006 17 is_stmt 0 discriminator 1 view .LVU741
 2140 00aa 019B     		ldr	r3, [sp, #4]
1006:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 2141              		.loc 1 1006 5 discriminator 1 view .LVU742
 2142 00ac 9342     		cmp	r3, r2
 2143 00ae 36D2     		bcs	.L153
1008:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     }
 2144              		.loc 1 1008 7 is_stmt 1 discriminator 2 view .LVU743
 2145              	.LVL143:
1008:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     }
 2146              		.loc 1 1008 41 is_stmt 0 discriminator 2 view .LVU744
 2147 00b0 34F8023B 		ldrh	r3, [r4], #2
 2148              	.LVL144:
ARM GAS  /tmp/ccHfptsR.s 			page 95


1008:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     }
 2149              		.loc 1 1008 39 discriminator 2 view .LVU745
 2150 00b4 3380     		strh	r3, [r6]	@ movhi
1006:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 2151              		.loc 1 1006 25 is_stmt 1 discriminator 2 view .LVU746
1006:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 2152              		.loc 1 1006 30 is_stmt 0 discriminator 2 view .LVU747
 2153 00b6 019B     		ldr	r3, [sp, #4]
 2154 00b8 0133     		adds	r3, r3, #1
 2155 00ba 0193     		str	r3, [sp, #4]
 2156 00bc F5E7     		b	.L141
 2157              	.LVL145:
 2158              	.L152:
 944:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
 2159              		.loc 1 944 19 view .LVU748
 2160 00be 4FF0E046 		mov	r6, #1879048192
 2161 00c2 B8E7     		b	.L136
 2162              	.LVL146:
 2163              	.L139:
 980:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 2164              		.loc 1 980 9 is_stmt 1 view .LVU749
 980:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 2165              		.loc 1 980 27 is_stmt 0 view .LVU750
 2166 00c4 46F40033 		orr	r3, r6, #131072
 980:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 2167              		.loc 1 980 66 view .LVU751
 2168 00c8 0020     		movs	r0, #0
 2169 00ca 1870     		strb	r0, [r3]
 981:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 2170              		.loc 1 981 9 is_stmt 1 view .LVU752
 981:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 2171              		.loc 1 981 68 is_stmt 0 view .LVU753
 2172 00cc F8B2     		uxtb	r0, r7
 981:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 2173              		.loc 1 981 66 view .LVU754
 2174 00ce 1870     		strb	r0, [r3]
 982:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
 2175              		.loc 1 982 9 is_stmt 1 view .LVU755
 982:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
 2176              		.loc 1 982 68 is_stmt 0 view .LVU756
 2177 00d0 C7F30720 		ubfx	r0, r7, #8, #8
 982:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
 2178              		.loc 1 982 66 view .LVU757
 2179 00d4 1870     		strb	r0, [r3]
 983:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 2180              		.loc 1 983 9 is_stmt 1 view .LVU758
 983:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 2181              		.loc 1 983 68 is_stmt 0 view .LVU759
 2182 00d6 C7F30740 		ubfx	r0, r7, #16, #8
 983:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 2183              		.loc 1 983 66 view .LVU760
 2184 00da 1870     		strb	r0, [r3]
 2185 00dc E5E7     		b	.L141
 2186              	.L138:
 988:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 2187              		.loc 1 988 7 is_stmt 1 view .LVU761
 988:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
ARM GAS  /tmp/ccHfptsR.s 			page 96


 2188              		.loc 1 988 26 is_stmt 0 view .LVU762
 2189 00de E86A     		ldr	r0, [r5, #44]
 988:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 2190              		.loc 1 988 52 view .LVU763
 2191 00e0 2B6B     		ldr	r3, [r5, #48]
 988:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 2192              		.loc 1 988 37 view .LVU764
 2193 00e2 03FB00F3 		mul	r3, r3, r0
 988:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 2194              		.loc 1 988 10 view .LVU765
 2195 00e6 B3F5803F 		cmp	r3, #65536
 2196 00ea 0AD2     		bcs	.L142
 990:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
 2197              		.loc 1 990 9 is_stmt 1 view .LVU766
 990:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
 2198              		.loc 1 990 27 is_stmt 0 view .LVU767
 2199 00ec 46F40033 		orr	r3, r6, #131072
 990:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
 2200              		.loc 1 990 66 view .LVU768
 2201 00f0 0020     		movs	r0, #0
 2202 00f2 1870     		strb	r0, [r3]
 991:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 2203              		.loc 1 991 9 is_stmt 1 view .LVU769
 991:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 2204              		.loc 1 991 66 is_stmt 0 view .LVU770
 2205 00f4 1870     		strb	r0, [r3]
 992:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 2206              		.loc 1 992 9 is_stmt 1 view .LVU771
 992:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 2207              		.loc 1 992 68 is_stmt 0 view .LVU772
 2208 00f6 F8B2     		uxtb	r0, r7
 992:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 2209              		.loc 1 992 66 view .LVU773
 2210 00f8 1870     		strb	r0, [r3]
 993:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 2211              		.loc 1 993 9 is_stmt 1 view .LVU774
 993:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 2212              		.loc 1 993 68 is_stmt 0 view .LVU775
 2213 00fa C7F30720 		ubfx	r0, r7, #8, #8
 993:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 2214              		.loc 1 993 66 view .LVU776
 2215 00fe 1870     		strb	r0, [r3]
 2216 0100 D3E7     		b	.L141
 2217              	.L142:
 997:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
 2218              		.loc 1 997 9 is_stmt 1 view .LVU777
 997:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
 2219              		.loc 1 997 27 is_stmt 0 view .LVU778
 2220 0102 46F40033 		orr	r3, r6, #131072
 997:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = 0x00;
 2221              		.loc 1 997 66 view .LVU779
 2222 0106 0020     		movs	r0, #0
 2223 0108 1870     		strb	r0, [r3]
 998:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 2224              		.loc 1 998 9 is_stmt 1 view .LVU780
 998:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 2225              		.loc 1 998 66 is_stmt 0 view .LVU781
ARM GAS  /tmp/ccHfptsR.s 			page 97


 2226 010a 1870     		strb	r0, [r3]
 999:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 2227              		.loc 1 999 9 is_stmt 1 view .LVU782
 999:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 2228              		.loc 1 999 68 is_stmt 0 view .LVU783
 2229 010c F8B2     		uxtb	r0, r7
 999:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 2230              		.loc 1 999 66 view .LVU784
 2231 010e 1870     		strb	r0, [r3]
1000:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
 2232              		.loc 1 1000 9 is_stmt 1 view .LVU785
1000:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
 2233              		.loc 1 1000 68 is_stmt 0 view .LVU786
 2234 0110 C7F30720 		ubfx	r0, r7, #8, #8
1000:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
 2235              		.loc 1 1000 66 view .LVU787
 2236 0114 1870     		strb	r0, [r3]
1001:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 2237              		.loc 1 1001 9 is_stmt 1 view .LVU788
1001:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 2238              		.loc 1 1001 68 is_stmt 0 view .LVU789
 2239 0116 C7F30740 		ubfx	r0, r7, #16, #8
1001:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 2240              		.loc 1 1001 66 view .LVU790
 2241 011a 1870     		strb	r0, [r3]
 2242 011c C5E7     		b	.L141
 2243              	.L153:
1011:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 2244              		.loc 1 1011 5 is_stmt 1 view .LVU791
1011:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 2245              		.loc 1 1011 61 is_stmt 0 view .LVU792
 2246 011e 1023     		movs	r3, #16
 2247 0120 0B70     		strb	r3, [r1]
1014:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 2248              		.loc 1 1014 5 is_stmt 1 view .LVU793
 2249              	.LVL147:
 2250              	.L144:
1014:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 2251              		.loc 1 1014 10 view .LVU794
1014:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 2252              		.loc 1 1014 11 is_stmt 0 view .LVU795
 2253 0122 2846     		mov	r0, r5
 2254 0124 FFF7FEFF 		bl	HAL_NAND_Read_Status
 2255              	.LVL148:
1014:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 2256              		.loc 1 1014 10 view .LVU796
 2257 0128 4028     		cmp	r0, #64
 2258 012a 0DD0     		beq	.L154
1017:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 2259              		.loc 1 1017 7 is_stmt 1 view .LVU797
1017:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 2260              		.loc 1 1017 19 is_stmt 0 view .LVU798
 2261 012c FFF7FEFF 		bl	HAL_GetTick
 2262              	.LVL149:
 2263 0130 8246     		mov	r10, r0
 2264              	.LVL150:
1019:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
ARM GAS  /tmp/ccHfptsR.s 			page 98


 2265              		.loc 1 1019 7 is_stmt 1 view .LVU799
1019:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 2266              		.loc 1 1019 11 is_stmt 0 view .LVU800
 2267 0132 FFF7FEFF 		bl	HAL_GetTick
 2268              	.LVL151:
1019:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 2269              		.loc 1 1019 25 view .LVU801
 2270 0136 A0EB0A00 		sub	r0, r0, r10
1019:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 2271              		.loc 1 1019 9 view .LVU802
 2272 013a B0F1807F 		cmp	r0, #16777216
 2273 013e F0D9     		bls	.L144
1021:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       } 
 2274              		.loc 1 1021 16 view .LVU803
 2275 0140 0320     		movs	r0, #3
 2276              	.LVL152:
 2277              	.L135:
1042:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 2278              		.loc 1 1042 1 view .LVU804
 2279 0142 02B0     		add	sp, sp, #8
 2280              	.LCFI23:
 2281              		.cfi_remember_state
 2282              		.cfi_def_cfa_offset 32
 2283              		@ sp needed
 2284 0144 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 2285              	.LVL153:
 2286              	.L154:
 2287              	.LCFI24:
 2288              		.cfi_restore_state
1026:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 2289              		.loc 1 1026 5 is_stmt 1 view .LVU805
1029:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 2290              		.loc 1 1029 5 view .LVU806
1029:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 2291              		.loc 1 1029 19 is_stmt 0 view .LVU807
 2292 0148 08F1FF38 		add	r8, r8, #-1
 2293              	.LVL154:
1032:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
 2294              		.loc 1 1032 5 is_stmt 1 view .LVU808
1032:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
 2295              		.loc 1 1032 17 is_stmt 0 view .LVU809
 2296 014c 0137     		adds	r7, r7, #1
 2297              	.LVL155:
1032:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
 2298              		.loc 1 1032 17 view .LVU810
 2299 014e 80E7     		b	.L137
 2300              	.L146:
1036:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 2301              		.loc 1 1036 3 is_stmt 1 view .LVU811
1036:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 2302              		.loc 1 1036 16 is_stmt 0 view .LVU812
 2303 0150 0123     		movs	r3, #1
 2304 0152 85F82130 		strb	r3, [r5, #33]
1039:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 2305              		.loc 1 1039 3 is_stmt 1 view .LVU813
1039:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 2306              		.loc 1 1039 3 view .LVU814
ARM GAS  /tmp/ccHfptsR.s 			page 99


 2307 0156 0020     		movs	r0, #0
 2308 0158 85F82000 		strb	r0, [r5, #32]
1039:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 2309              		.loc 1 1039 3 view .LVU815
1041:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** }
 2310              		.loc 1 1041 3 view .LVU816
1041:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** }
 2311              		.loc 1 1041 10 is_stmt 0 view .LVU817
 2312 015c F1E7     		b	.L135
 2313              	.LVL156:
 2314              	.L148:
 933:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 2315              		.loc 1 933 3 view .LVU818
 2316 015e 0220     		movs	r0, #2
 2317              	.LVL157:
 933:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 2318              		.loc 1 933 3 view .LVU819
 2319 0160 EFE7     		b	.L135
 2320              		.cfi_endproc
 2321              	.LFE144:
 2323              		.section	.text.HAL_NAND_Read_SpareArea_8b,"ax",%progbits
 2324              		.align	1
 2325              		.global	HAL_NAND_Read_SpareArea_8b
 2326              		.syntax unified
 2327              		.thumb
 2328              		.thumb_func
 2329              		.fpu fpv4-sp-d16
 2331              	HAL_NAND_Read_SpareArea_8b:
 2332              	.LVL158:
 2333              	.LFB145:
1054:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   __IO uint32_t index = 0U;
 2334              		.loc 1 1054 1 is_stmt 1 view -0
 2335              		.cfi_startproc
 2336              		@ args = 0, pretend = 0, frame = 16
 2337              		@ frame_needed = 0, uses_anonymous_args = 0
1054:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   __IO uint32_t index = 0U;
 2338              		.loc 1 1054 1 is_stmt 0 view .LVU821
 2339 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2340              	.LCFI25:
 2341              		.cfi_def_cfa_offset 36
 2342              		.cfi_offset 4, -36
 2343              		.cfi_offset 5, -32
 2344              		.cfi_offset 6, -28
 2345              		.cfi_offset 7, -24
 2346              		.cfi_offset 8, -20
 2347              		.cfi_offset 9, -16
 2348              		.cfi_offset 10, -12
 2349              		.cfi_offset 11, -8
 2350              		.cfi_offset 14, -4
 2351 0004 85B0     		sub	sp, sp, #20
 2352              	.LCFI26:
 2353              		.cfi_def_cfa_offset 56
 2354 0006 9946     		mov	r9, r3
1055:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   uint32_t tickstart = 0U;
 2355              		.loc 1 1055 3 is_stmt 1 view .LVU822
1055:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   uint32_t tickstart = 0U;
 2356              		.loc 1 1055 17 is_stmt 0 view .LVU823
ARM GAS  /tmp/ccHfptsR.s 			page 100


 2357 0008 0023     		movs	r3, #0
 2358              	.LVL159:
1055:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   uint32_t tickstart = 0U;
 2359              		.loc 1 1055 17 view .LVU824
 2360 000a 0393     		str	r3, [sp, #12]
1056:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   uint32_t deviceaddress = 0U, size = 0U, numSpareAreaRead = 0U, nandaddress = 0U, columnaddress = 
 2361              		.loc 1 1056 3 is_stmt 1 view .LVU825
 2362              	.LVL160:
1057:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 2363              		.loc 1 1057 3 view .LVU826
1060:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 2364              		.loc 1 1060 3 view .LVU827
1060:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 2365              		.loc 1 1060 3 view .LVU828
 2366 000c 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 2367 0010 012B     		cmp	r3, #1
 2368 0012 00F0BA80 		beq	.L170
 2369 0016 0746     		mov	r7, r0
 2370 0018 1446     		mov	r4, r2
1060:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 2371              		.loc 1 1060 3 discriminator 2 view .LVU829
 2372 001a 0123     		movs	r3, #1
 2373 001c 80F82030 		strb	r3, [r0, #32]
1060:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 2374              		.loc 1 1060 3 discriminator 2 view .LVU830
1063:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 2375              		.loc 1 1063 3 discriminator 2 view .LVU831
1063:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 2376              		.loc 1 1063 11 is_stmt 0 discriminator 2 view .LVU832
 2377 0020 90F82100 		ldrb	r0, [r0, #33]	@ zero_extendqisi2
 2378              	.LVL161:
1063:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 2379              		.loc 1 1063 11 discriminator 2 view .LVU833
 2380 0024 C0B2     		uxtb	r0, r0
1063:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 2381              		.loc 1 1063 5 discriminator 2 view .LVU834
 2382 0026 0228     		cmp	r0, #2
 2383 0028 00F0AC80 		beq	.L156
1069:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 2384              		.loc 1 1069 3 is_stmt 1 view .LVU835
1069:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 2385              		.loc 1 1069 17 is_stmt 0 view .LVU836
 2386 002c 7B68     		ldr	r3, [r7, #4]
1069:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 2387              		.loc 1 1069 5 view .LVU837
 2388 002e 102B     		cmp	r3, #16
 2389 0030 13D0     		beq	.L174
1075:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
 2390              		.loc 1 1075 19 view .LVU838
 2391 0032 4FF00046 		mov	r6, #-2147483648
 2392              	.L157:
 2393              	.LVL162:
1079:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 2394              		.loc 1 1079 3 is_stmt 1 view .LVU839
1079:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 2395              		.loc 1 1079 16 is_stmt 0 view .LVU840
 2396 0036 0223     		movs	r3, #2
ARM GAS  /tmp/ccHfptsR.s 			page 101


 2397 0038 87F82130 		strb	r3, [r7, #33]
1082:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 2398              		.loc 1 1082 3 is_stmt 1 view .LVU841
1082:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 2399              		.loc 1 1082 17 is_stmt 0 view .LVU842
 2400 003c 0B88     		ldrh	r3, [r1]
 2401 003e 8A88     		ldrh	r2, [r1, #4]
 2402              	.LVL163:
1082:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 2403              		.loc 1 1082 17 view .LVU843
 2404 0040 B1F80280 		ldrh	r8, [r1, #2]
 2405 0044 B96B     		ldr	r1, [r7, #56]
 2406              	.LVL164:
1082:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 2407              		.loc 1 1082 17 view .LVU844
 2408 0046 01FB0828 		mla	r8, r1, r8, r2
 2409 004a FA6A     		ldr	r2, [r7, #44]
1082:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 2410              		.loc 1 1082 15 view .LVU845
 2411 004c 02FB0838 		mla	r8, r2, r8, r3
 2412              	.LVL165:
1085:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 2413              		.loc 1 1085 3 is_stmt 1 view .LVU846
1085:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 2414              		.loc 1 1085 17 is_stmt 0 view .LVU847
 2415 0050 7B6A     		ldr	r3, [r7, #36]
 2416 0052 0193     		str	r3, [sp, #4]
 2417              	.LVL166:
1088:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {     
 2418              		.loc 1 1088 3 is_stmt 1 view .LVU848
1057:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 2419              		.loc 1 1057 43 is_stmt 0 view .LVU849
 2420 0054 4FF0000A 		mov	r10, #0
1088:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {     
 2421              		.loc 1 1088 8 view .LVU850
 2422 0058 4DE0     		b	.L158
 2423              	.LVL167:
 2424              	.L174:
1071:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
 2425              		.loc 1 1071 19 view .LVU851
 2426 005a 4FF0E046 		mov	r6, #1879048192
 2427 005e EAE7     		b	.L157
 2428              	.LVL168:
 2429              	.L160:
1107:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 2430              		.loc 1 1107 9 is_stmt 1 view .LVU852
1107:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 2431              		.loc 1 1107 27 is_stmt 0 view .LVU853
 2432 0060 46F40033 		orr	r3, r6, #131072
1107:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 2433              		.loc 1 1107 66 view .LVU854
 2434 0064 0022     		movs	r2, #0
 2435 0066 1A70     		strb	r2, [r3]
1108:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 2436              		.loc 1 1108 9 is_stmt 1 view .LVU855
1108:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 2437              		.loc 1 1108 68 is_stmt 0 view .LVU856
ARM GAS  /tmp/ccHfptsR.s 			page 102


 2438 0068 5FFA88F2 		uxtb	r2, r8
1108:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 2439              		.loc 1 1108 66 view .LVU857
 2440 006c 1A70     		strb	r2, [r3]
1109:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
 2441              		.loc 1 1109 9 is_stmt 1 view .LVU858
1109:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
 2442              		.loc 1 1109 68 is_stmt 0 view .LVU859
 2443 006e C8F30722 		ubfx	r2, r8, #8, #8
1109:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
 2444              		.loc 1 1109 66 view .LVU860
 2445 0072 1A70     		strb	r2, [r3]
1110:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 2446              		.loc 1 1110 9 is_stmt 1 view .LVU861
1110:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 2447              		.loc 1 1110 68 is_stmt 0 view .LVU862
 2448 0074 C8F30742 		ubfx	r2, r8, #16, #8
1110:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 2449              		.loc 1 1110 66 view .LVU863
 2450 0078 1A70     		strb	r2, [r3]
 2451 007a 63E0     		b	.L161
 2452              	.L159:
1116:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       
 2453              		.loc 1 1116 7 is_stmt 1 view .LVU864
1116:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       
 2454              		.loc 1 1116 25 is_stmt 0 view .LVU865
 2455 007c 46F48033 		orr	r3, r6, #65536
1116:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       
 2456              		.loc 1 1116 63 view .LVU866
 2457 0080 0022     		movs	r2, #0
 2458 0082 1A70     		strb	r2, [r3]
1118:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 2459              		.loc 1 1118 7 is_stmt 1 view .LVU867
1118:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 2460              		.loc 1 1118 26 is_stmt 0 view .LVU868
 2461 0084 FA6A     		ldr	r2, [r7, #44]
1118:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 2462              		.loc 1 1118 52 view .LVU869
 2463 0086 3B6B     		ldr	r3, [r7, #48]
1118:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 2464              		.loc 1 1118 37 view .LVU870
 2465 0088 03FB02F3 		mul	r3, r3, r2
1118:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 2466              		.loc 1 1118 10 view .LVU871
 2467 008c B3F5803F 		cmp	r3, #65536
 2468 0090 0ED2     		bcs	.L162
1120:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = COLUMN_2ND_CYCLE(columnaddress);
 2469              		.loc 1 1120 9 is_stmt 1 view .LVU872
1120:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = COLUMN_2ND_CYCLE(columnaddress);
 2470              		.loc 1 1120 27 is_stmt 0 view .LVU873
 2471 0092 46F40033 		orr	r3, r6, #131072
1120:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = COLUMN_2ND_CYCLE(columnaddress);
 2472              		.loc 1 1120 68 view .LVU874
 2473 0096 0199     		ldr	r1, [sp, #4]
 2474 0098 CAB2     		uxtb	r2, r1
1120:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = COLUMN_2ND_CYCLE(columnaddress);
 2475              		.loc 1 1120 66 view .LVU875
ARM GAS  /tmp/ccHfptsR.s 			page 103


 2476 009a 1A70     		strb	r2, [r3]
1121:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 2477              		.loc 1 1121 9 is_stmt 1 view .LVU876
1121:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 2478              		.loc 1 1121 68 is_stmt 0 view .LVU877
 2479 009c C1F30722 		ubfx	r2, r1, #8, #8
1121:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 2480              		.loc 1 1121 66 view .LVU878
 2481 00a0 1A70     		strb	r2, [r3]
1122:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 2482              		.loc 1 1122 9 is_stmt 1 view .LVU879
1122:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 2483              		.loc 1 1122 68 is_stmt 0 view .LVU880
 2484 00a2 5FFA88F2 		uxtb	r2, r8
1122:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 2485              		.loc 1 1122 66 view .LVU881
 2486 00a6 1A70     		strb	r2, [r3]
1123:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 2487              		.loc 1 1123 9 is_stmt 1 view .LVU882
1123:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 2488              		.loc 1 1123 68 is_stmt 0 view .LVU883
 2489 00a8 C8F30722 		ubfx	r2, r8, #8, #8
1123:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 2490              		.loc 1 1123 66 view .LVU884
 2491 00ac 1A70     		strb	r2, [r3]
 2492 00ae 49E0     		b	.L161
 2493              	.L162:
1127:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = COLUMN_2ND_CYCLE(columnaddress);
 2494              		.loc 1 1127 9 is_stmt 1 view .LVU885
1127:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = COLUMN_2ND_CYCLE(columnaddress);
 2495              		.loc 1 1127 27 is_stmt 0 view .LVU886
 2496 00b0 46F40033 		orr	r3, r6, #131072
1127:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = COLUMN_2ND_CYCLE(columnaddress);
 2497              		.loc 1 1127 68 view .LVU887
 2498 00b4 0199     		ldr	r1, [sp, #4]
 2499 00b6 CAB2     		uxtb	r2, r1
1127:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = COLUMN_2ND_CYCLE(columnaddress);
 2500              		.loc 1 1127 66 view .LVU888
 2501 00b8 1A70     		strb	r2, [r3]
1128:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 2502              		.loc 1 1128 9 is_stmt 1 view .LVU889
1128:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 2503              		.loc 1 1128 68 is_stmt 0 view .LVU890
 2504 00ba C1F30722 		ubfx	r2, r1, #8, #8
1128:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 2505              		.loc 1 1128 66 view .LVU891
 2506 00be 1A70     		strb	r2, [r3]
1129:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 2507              		.loc 1 1129 9 is_stmt 1 view .LVU892
1129:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 2508              		.loc 1 1129 68 is_stmt 0 view .LVU893
 2509 00c0 5FFA88F2 		uxtb	r2, r8
1129:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 2510              		.loc 1 1129 66 view .LVU894
 2511 00c4 1A70     		strb	r2, [r3]
1130:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
 2512              		.loc 1 1130 9 is_stmt 1 view .LVU895
ARM GAS  /tmp/ccHfptsR.s 			page 104


1130:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
 2513              		.loc 1 1130 68 is_stmt 0 view .LVU896
 2514 00c6 C8F30722 		ubfx	r2, r8, #8, #8
1130:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
 2515              		.loc 1 1130 66 view .LVU897
 2516 00ca 1A70     		strb	r2, [r3]
1131:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 2517              		.loc 1 1131 9 is_stmt 1 view .LVU898
1131:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 2518              		.loc 1 1131 68 is_stmt 0 view .LVU899
 2519 00cc C8F30742 		ubfx	r2, r8, #16, #8
1131:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 2520              		.loc 1 1131 66 view .LVU900
 2521 00d0 1A70     		strb	r2, [r3]
 2522 00d2 37E0     		b	.L161
 2523              	.LVL169:
 2524              	.L175:
1152:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     }
 2525              		.loc 1 1152 7 is_stmt 1 view .LVU901
1152:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     }
 2526              		.loc 1 1152 63 is_stmt 0 view .LVU902
 2527 00d4 0023     		movs	r3, #0
 2528 00d6 8BF80030 		strb	r3, [fp]
 2529 00da 05E0     		b	.L166
 2530              	.LVL170:
 2531              	.L167:
1158:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     }
 2532              		.loc 1 1158 7 is_stmt 1 discriminator 2 view .LVU903
1158:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     }
 2533              		.loc 1 1158 31 is_stmt 0 discriminator 2 view .LVU904
 2534 00dc 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
1158:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     }
 2535              		.loc 1 1158 29 discriminator 2 view .LVU905
 2536 00de 04F8013B 		strb	r3, [r4], #1
 2537              	.LVL171:
1156:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 2538              		.loc 1 1156 25 is_stmt 1 discriminator 2 view .LVU906
1156:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 2539              		.loc 1 1156 30 is_stmt 0 discriminator 2 view .LVU907
 2540 00e2 039B     		ldr	r3, [sp, #12]
 2541 00e4 0133     		adds	r3, r3, #1
 2542 00e6 0393     		str	r3, [sp, #12]
 2543              	.L166:
1156:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 2544              		.loc 1 1156 11 is_stmt 1 discriminator 1 view .LVU908
1156:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 2545              		.loc 1 1156 17 is_stmt 0 discriminator 1 view .LVU909
 2546 00e8 039B     		ldr	r3, [sp, #12]
1156:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 2547              		.loc 1 1156 5 discriminator 1 view .LVU910
 2548 00ea AB42     		cmp	r3, r5
 2549 00ec F6D3     		bcc	.L167
1162:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 2550              		.loc 1 1162 5 is_stmt 1 view .LVU911
 2551              	.LVL172:
1165:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 2552              		.loc 1 1165 5 view .LVU912
ARM GAS  /tmp/ccHfptsR.s 			page 105


1165:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 2553              		.loc 1 1165 23 is_stmt 0 view .LVU913
 2554 00ee 09F1FF39 		add	r9, r9, #-1
 2555              	.LVL173:
1168:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
 2556              		.loc 1 1168 5 is_stmt 1 view .LVU914
1168:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
 2557              		.loc 1 1168 17 is_stmt 0 view .LVU915
 2558 00f2 08F10108 		add	r8, r8, #1
 2559              	.LVL174:
 2560              	.L158:
1088:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {     
 2561              		.loc 1 1088 8 is_stmt 1 view .LVU916
 2562 00f6 B9F1000F 		cmp	r9, #0
 2563 00fa 3DD0     		beq	.L168
1088:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {     
 2564              		.loc 1 1088 69 is_stmt 0 discriminator 1 view .LVU917
 2565 00fc FA6A     		ldr	r2, [r7, #44]
1088:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {     
 2566              		.loc 1 1088 97 discriminator 1 view .LVU918
 2567 00fe 3B6B     		ldr	r3, [r7, #48]
1088:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {     
 2568              		.loc 1 1088 81 discriminator 1 view .LVU919
 2569 0100 03FB02F3 		mul	r3, r3, r2
1088:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {     
 2570              		.loc 1 1088 36 discriminator 1 view .LVU920
 2571 0104 4345     		cmp	r3, r8
 2572 0106 37D9     		bls	.L168
1091:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 2573              		.loc 1 1091 5 is_stmt 1 view .LVU921
1091:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 2574              		.loc 1 1091 42 is_stmt 0 view .LVU922
 2575 0108 0AF1010A 		add	r10, r10, #1
 2576              	.LVL175:
1091:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 2577              		.loc 1 1091 26 view .LVU923
 2578 010c BD6A     		ldr	r5, [r7, #40]
1091:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 2579              		.loc 1 1091 10 view .LVU924
 2580 010e 05FB0AF5 		mul	r5, r5, r10
 2581              	.LVL176:
1094:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 2582              		.loc 1 1094 5 is_stmt 1 view .LVU925
1094:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 2583              		.loc 1 1094 22 is_stmt 0 view .LVU926
 2584 0112 7B6A     		ldr	r3, [r7, #36]
1094:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 2585              		.loc 1 1094 7 view .LVU927
 2586 0114 B3F5007F 		cmp	r3, #512
 2587 0118 B0D8     		bhi	.L159
1097:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       
 2588              		.loc 1 1097 7 is_stmt 1 view .LVU928
1097:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       
 2589              		.loc 1 1097 25 is_stmt 0 view .LVU929
 2590 011a 46F48033 		orr	r3, r6, #65536
1097:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       
 2591              		.loc 1 1097 63 view .LVU930
ARM GAS  /tmp/ccHfptsR.s 			page 106


 2592 011e 5022     		movs	r2, #80
 2593 0120 1A70     		strb	r2, [r3]
1099:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 2594              		.loc 1 1099 7 is_stmt 1 view .LVU931
1099:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 2595              		.loc 1 1099 26 is_stmt 0 view .LVU932
 2596 0122 FA6A     		ldr	r2, [r7, #44]
1099:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 2597              		.loc 1 1099 52 view .LVU933
 2598 0124 3B6B     		ldr	r3, [r7, #48]
1099:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 2599              		.loc 1 1099 37 view .LVU934
 2600 0126 03FB02F3 		mul	r3, r3, r2
1099:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 2601              		.loc 1 1099 10 view .LVU935
 2602 012a B3F5803F 		cmp	r3, #65536
 2603 012e 97D2     		bcs	.L160
1101:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 2604              		.loc 1 1101 9 is_stmt 1 view .LVU936
1101:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 2605              		.loc 1 1101 27 is_stmt 0 view .LVU937
 2606 0130 46F40033 		orr	r3, r6, #131072
1101:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 2607              		.loc 1 1101 66 view .LVU938
 2608 0134 0022     		movs	r2, #0
 2609 0136 1A70     		strb	r2, [r3]
1102:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 2610              		.loc 1 1102 9 is_stmt 1 view .LVU939
1102:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 2611              		.loc 1 1102 68 is_stmt 0 view .LVU940
 2612 0138 5FFA88F2 		uxtb	r2, r8
1102:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 2613              		.loc 1 1102 66 view .LVU941
 2614 013c 1A70     		strb	r2, [r3]
1103:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 2615              		.loc 1 1103 9 is_stmt 1 view .LVU942
1103:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 2616              		.loc 1 1103 68 is_stmt 0 view .LVU943
 2617 013e C8F30722 		ubfx	r2, r8, #8, #8
1103:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 2618              		.loc 1 1103 66 view .LVU944
 2619 0142 1A70     		strb	r2, [r3]
 2620              	.L161:
1135:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 2621              		.loc 1 1135 5 is_stmt 1 view .LVU945
1135:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 2622              		.loc 1 1135 23 is_stmt 0 view .LVU946
 2623 0144 46F4803B 		orr	fp, r6, #65536
1135:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 2624              		.loc 1 1135 61 view .LVU947
 2625 0148 3023     		movs	r3, #48
 2626 014a 8BF80030 		strb	r3, [fp]
1137:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 2627              		.loc 1 1137 5 is_stmt 1 view .LVU948
1137:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 2628              		.loc 1 1137 21 is_stmt 0 view .LVU949
 2629 014e 97F83C30 		ldrb	r3, [r7, #60]	@ zero_extendqisi2
ARM GAS  /tmp/ccHfptsR.s 			page 107


1137:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 2630              		.loc 1 1137 7 view .LVU950
 2631 0152 012B     		cmp	r3, #1
 2632 0154 C8D1     		bne	.L166
1140:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       
 2633              		.loc 1 1140 7 is_stmt 1 view .LVU951
1140:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       
 2634              		.loc 1 1140 19 is_stmt 0 view .LVU952
 2635 0156 FFF7FEFF 		bl	HAL_GetTick
 2636              	.LVL177:
 2637 015a 0090     		str	r0, [sp]
 2638              	.LVL178:
1143:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 2639              		.loc 1 1143 7 is_stmt 1 view .LVU953
 2640              	.L164:
1143:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 2641              		.loc 1 1143 12 view .LVU954
1143:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 2642              		.loc 1 1143 13 is_stmt 0 view .LVU955
 2643 015c 3846     		mov	r0, r7
 2644 015e FFF7FEFF 		bl	HAL_NAND_Read_Status
 2645              	.LVL179:
1143:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 2646              		.loc 1 1143 12 view .LVU956
 2647 0162 4028     		cmp	r0, #64
 2648 0164 B6D0     		beq	.L175
1145:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         {
 2649              		.loc 1 1145 9 is_stmt 1 view .LVU957
1145:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         {
 2650              		.loc 1 1145 13 is_stmt 0 view .LVU958
 2651 0166 FFF7FEFF 		bl	HAL_GetTick
 2652              	.LVL180:
1145:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         {
 2653              		.loc 1 1145 27 view .LVU959
 2654 016a 009B     		ldr	r3, [sp]
 2655 016c C01A     		subs	r0, r0, r3
1145:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         {
 2656              		.loc 1 1145 11 view .LVU960
 2657 016e B0F1807F 		cmp	r0, #16777216
 2658 0172 F3D9     		bls	.L164
1147:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         }
 2659              		.loc 1 1147 18 view .LVU961
 2660 0174 0320     		movs	r0, #3
 2661 0176 05E0     		b	.L156
 2662              	.LVL181:
 2663              	.L168:
1172:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 2664              		.loc 1 1172 3 is_stmt 1 view .LVU962
1172:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 2665              		.loc 1 1172 16 is_stmt 0 view .LVU963
 2666 0178 0123     		movs	r3, #1
 2667 017a 87F82130 		strb	r3, [r7, #33]
1175:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 2668              		.loc 1 1175 3 is_stmt 1 view .LVU964
1175:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 2669              		.loc 1 1175 3 view .LVU965
 2670 017e 0020     		movs	r0, #0
ARM GAS  /tmp/ccHfptsR.s 			page 108


 2671 0180 87F82000 		strb	r0, [r7, #32]
1175:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 2672              		.loc 1 1175 3 view .LVU966
1177:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** }
 2673              		.loc 1 1177 3 view .LVU967
 2674              	.LVL182:
 2675              	.L156:
1178:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 2676              		.loc 1 1178 1 is_stmt 0 view .LVU968
 2677 0184 05B0     		add	sp, sp, #20
 2678              	.LCFI27:
 2679              		.cfi_remember_state
 2680              		.cfi_def_cfa_offset 36
 2681              		@ sp needed
 2682 0186 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2683              	.LVL183:
 2684              	.L170:
 2685              	.LCFI28:
 2686              		.cfi_restore_state
1060:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 2687              		.loc 1 1060 3 view .LVU969
 2688 018a 0220     		movs	r0, #2
 2689              	.LVL184:
1060:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 2690              		.loc 1 1060 3 view .LVU970
 2691 018c FAE7     		b	.L156
 2692              		.cfi_endproc
 2693              	.LFE145:
 2695              		.section	.text.HAL_NAND_Read_SpareArea_16b,"ax",%progbits
 2696              		.align	1
 2697              		.global	HAL_NAND_Read_SpareArea_16b
 2698              		.syntax unified
 2699              		.thumb
 2700              		.thumb_func
 2701              		.fpu fpv4-sp-d16
 2703              	HAL_NAND_Read_SpareArea_16b:
 2704              	.LVL185:
 2705              	.LFB146:
1190:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   __IO uint32_t index = 0U; 
 2706              		.loc 1 1190 1 is_stmt 1 view -0
 2707              		.cfi_startproc
 2708              		@ args = 0, pretend = 0, frame = 16
 2709              		@ frame_needed = 0, uses_anonymous_args = 0
1190:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   __IO uint32_t index = 0U; 
 2710              		.loc 1 1190 1 is_stmt 0 view .LVU972
 2711 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2712              	.LCFI29:
 2713              		.cfi_def_cfa_offset 36
 2714              		.cfi_offset 4, -36
 2715              		.cfi_offset 5, -32
 2716              		.cfi_offset 6, -28
 2717              		.cfi_offset 7, -24
 2718              		.cfi_offset 8, -20
 2719              		.cfi_offset 9, -16
 2720              		.cfi_offset 10, -12
 2721              		.cfi_offset 11, -8
 2722              		.cfi_offset 14, -4
ARM GAS  /tmp/ccHfptsR.s 			page 109


 2723 0004 85B0     		sub	sp, sp, #20
 2724              	.LCFI30:
 2725              		.cfi_def_cfa_offset 56
 2726 0006 9946     		mov	r9, r3
1191:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   uint32_t tickstart = 0U;
 2727              		.loc 1 1191 3 is_stmt 1 view .LVU973
1191:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   uint32_t tickstart = 0U;
 2728              		.loc 1 1191 17 is_stmt 0 view .LVU974
 2729 0008 0023     		movs	r3, #0
 2730              	.LVL186:
1191:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   uint32_t tickstart = 0U;
 2731              		.loc 1 1191 17 view .LVU975
 2732 000a 0393     		str	r3, [sp, #12]
1192:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   uint32_t deviceaddress = 0U, size = 0U, numSpareAreaRead = 0U, nandaddress = 0U, columnaddress = 
 2733              		.loc 1 1192 3 is_stmt 1 view .LVU976
 2734              	.LVL187:
1193:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 2735              		.loc 1 1193 3 view .LVU977
1196:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 2736              		.loc 1 1196 3 view .LVU978
1196:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 2737              		.loc 1 1196 3 view .LVU979
 2738 000c 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 2739 0010 012B     		cmp	r3, #1
 2740 0012 00F0BB80 		beq	.L191
 2741 0016 0746     		mov	r7, r0
 2742 0018 1446     		mov	r4, r2
1196:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 2743              		.loc 1 1196 3 discriminator 2 view .LVU980
 2744 001a 0123     		movs	r3, #1
 2745 001c 80F82030 		strb	r3, [r0, #32]
1196:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 2746              		.loc 1 1196 3 discriminator 2 view .LVU981
1199:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 2747              		.loc 1 1199 3 discriminator 2 view .LVU982
1199:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 2748              		.loc 1 1199 11 is_stmt 0 discriminator 2 view .LVU983
 2749 0020 90F82100 		ldrb	r0, [r0, #33]	@ zero_extendqisi2
 2750              	.LVL188:
1199:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 2751              		.loc 1 1199 11 discriminator 2 view .LVU984
 2752 0024 C0B2     		uxtb	r0, r0
1199:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 2753              		.loc 1 1199 5 discriminator 2 view .LVU985
 2754 0026 0228     		cmp	r0, #2
 2755 0028 00F0AD80 		beq	.L177
1205:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 2756              		.loc 1 1205 3 is_stmt 1 view .LVU986
1205:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 2757              		.loc 1 1205 17 is_stmt 0 view .LVU987
 2758 002c 7B68     		ldr	r3, [r7, #4]
1205:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 2759              		.loc 1 1205 5 view .LVU988
 2760 002e 102B     		cmp	r3, #16
 2761 0030 14D0     		beq	.L195
1211:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
 2762              		.loc 1 1211 19 view .LVU989
ARM GAS  /tmp/ccHfptsR.s 			page 110


 2763 0032 4FF00046 		mov	r6, #-2147483648
 2764              	.L178:
 2765              	.LVL189:
1215:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 2766              		.loc 1 1215 3 is_stmt 1 view .LVU990
1215:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 2767              		.loc 1 1215 16 is_stmt 0 view .LVU991
 2768 0036 0223     		movs	r3, #2
 2769 0038 87F82130 		strb	r3, [r7, #33]
1218:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 2770              		.loc 1 1218 3 is_stmt 1 view .LVU992
1218:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 2771              		.loc 1 1218 17 is_stmt 0 view .LVU993
 2772 003c 0B88     		ldrh	r3, [r1]
 2773 003e 8A88     		ldrh	r2, [r1, #4]
 2774              	.LVL190:
1218:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 2775              		.loc 1 1218 17 view .LVU994
 2776 0040 B1F80280 		ldrh	r8, [r1, #2]
 2777 0044 B96B     		ldr	r1, [r7, #56]
 2778              	.LVL191:
1218:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 2779              		.loc 1 1218 17 view .LVU995
 2780 0046 01FB0828 		mla	r8, r1, r8, r2
 2781 004a FA6A     		ldr	r2, [r7, #44]
1218:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 2782              		.loc 1 1218 15 view .LVU996
 2783 004c 02FB0838 		mla	r8, r2, r8, r3
 2784              	.LVL192:
1221:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 2785              		.loc 1 1221 3 is_stmt 1 view .LVU997
1221:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 2786              		.loc 1 1221 30 is_stmt 0 view .LVU998
 2787 0050 7B6A     		ldr	r3, [r7, #36]
1221:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 2788              		.loc 1 1221 17 view .LVU999
 2789 0052 5B00     		lsls	r3, r3, #1
 2790 0054 0193     		str	r3, [sp, #4]
 2791              	.LVL193:
1224:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 2792              		.loc 1 1224 3 is_stmt 1 view .LVU1000
1193:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 2793              		.loc 1 1193 43 is_stmt 0 view .LVU1001
 2794 0056 4FF0000A 		mov	r10, #0
1224:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 2795              		.loc 1 1224 8 view .LVU1002
 2796 005a 4DE0     		b	.L179
 2797              	.LVL194:
 2798              	.L195:
1207:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
 2799              		.loc 1 1207 19 view .LVU1003
 2800 005c 4FF0E046 		mov	r6, #1879048192
 2801 0060 E9E7     		b	.L178
 2802              	.LVL195:
 2803              	.L181:
1243:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 2804              		.loc 1 1243 9 is_stmt 1 view .LVU1004
ARM GAS  /tmp/ccHfptsR.s 			page 111


1243:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 2805              		.loc 1 1243 27 is_stmt 0 view .LVU1005
 2806 0062 46F40033 		orr	r3, r6, #131072
1243:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 2807              		.loc 1 1243 66 view .LVU1006
 2808 0066 0022     		movs	r2, #0
 2809 0068 1A70     		strb	r2, [r3]
1244:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 2810              		.loc 1 1244 9 is_stmt 1 view .LVU1007
1244:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 2811              		.loc 1 1244 68 is_stmt 0 view .LVU1008
 2812 006a 5FFA88F2 		uxtb	r2, r8
1244:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 2813              		.loc 1 1244 66 view .LVU1009
 2814 006e 1A70     		strb	r2, [r3]
1245:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
 2815              		.loc 1 1245 9 is_stmt 1 view .LVU1010
1245:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
 2816              		.loc 1 1245 68 is_stmt 0 view .LVU1011
 2817 0070 C8F30722 		ubfx	r2, r8, #8, #8
1245:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
 2818              		.loc 1 1245 66 view .LVU1012
 2819 0074 1A70     		strb	r2, [r3]
1246:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 2820              		.loc 1 1246 9 is_stmt 1 view .LVU1013
1246:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 2821              		.loc 1 1246 68 is_stmt 0 view .LVU1014
 2822 0076 C8F30742 		ubfx	r2, r8, #16, #8
1246:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 2823              		.loc 1 1246 66 view .LVU1015
 2824 007a 1A70     		strb	r2, [r3]
 2825 007c 63E0     		b	.L182
 2826              	.L180:
1252:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       
 2827              		.loc 1 1252 7 is_stmt 1 view .LVU1016
1252:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       
 2828              		.loc 1 1252 25 is_stmt 0 view .LVU1017
 2829 007e 46F48033 		orr	r3, r6, #65536
1252:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       
 2830              		.loc 1 1252 63 view .LVU1018
 2831 0082 0022     		movs	r2, #0
 2832 0084 1A70     		strb	r2, [r3]
1254:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 2833              		.loc 1 1254 7 is_stmt 1 view .LVU1019
1254:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 2834              		.loc 1 1254 26 is_stmt 0 view .LVU1020
 2835 0086 FA6A     		ldr	r2, [r7, #44]
1254:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 2836              		.loc 1 1254 52 view .LVU1021
 2837 0088 3B6B     		ldr	r3, [r7, #48]
1254:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 2838              		.loc 1 1254 37 view .LVU1022
 2839 008a 03FB02F3 		mul	r3, r3, r2
1254:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 2840              		.loc 1 1254 10 view .LVU1023
 2841 008e B3F5803F 		cmp	r3, #65536
 2842 0092 0ED2     		bcs	.L183
ARM GAS  /tmp/ccHfptsR.s 			page 112


1256:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = COLUMN_2ND_CYCLE(columnaddress);
 2843              		.loc 1 1256 9 is_stmt 1 view .LVU1024
1256:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = COLUMN_2ND_CYCLE(columnaddress);
 2844              		.loc 1 1256 27 is_stmt 0 view .LVU1025
 2845 0094 46F40033 		orr	r3, r6, #131072
1256:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = COLUMN_2ND_CYCLE(columnaddress);
 2846              		.loc 1 1256 68 view .LVU1026
 2847 0098 0199     		ldr	r1, [sp, #4]
 2848 009a CAB2     		uxtb	r2, r1
1256:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = COLUMN_2ND_CYCLE(columnaddress);
 2849              		.loc 1 1256 66 view .LVU1027
 2850 009c 1A70     		strb	r2, [r3]
1257:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 2851              		.loc 1 1257 9 is_stmt 1 view .LVU1028
1257:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 2852              		.loc 1 1257 68 is_stmt 0 view .LVU1029
 2853 009e C1F30722 		ubfx	r2, r1, #8, #8
1257:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 2854              		.loc 1 1257 66 view .LVU1030
 2855 00a2 1A70     		strb	r2, [r3]
1258:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 2856              		.loc 1 1258 9 is_stmt 1 view .LVU1031
1258:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 2857              		.loc 1 1258 68 is_stmt 0 view .LVU1032
 2858 00a4 5FFA88F2 		uxtb	r2, r8
1258:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 2859              		.loc 1 1258 66 view .LVU1033
 2860 00a8 1A70     		strb	r2, [r3]
1259:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 2861              		.loc 1 1259 9 is_stmt 1 view .LVU1034
1259:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 2862              		.loc 1 1259 68 is_stmt 0 view .LVU1035
 2863 00aa C8F30722 		ubfx	r2, r8, #8, #8
1259:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 2864              		.loc 1 1259 66 view .LVU1036
 2865 00ae 1A70     		strb	r2, [r3]
 2866 00b0 49E0     		b	.L182
 2867              	.L183:
1263:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = COLUMN_2ND_CYCLE(columnaddress);
 2868              		.loc 1 1263 9 is_stmt 1 view .LVU1037
1263:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = COLUMN_2ND_CYCLE(columnaddress);
 2869              		.loc 1 1263 27 is_stmt 0 view .LVU1038
 2870 00b2 46F40033 		orr	r3, r6, #131072
1263:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = COLUMN_2ND_CYCLE(columnaddress);
 2871              		.loc 1 1263 68 view .LVU1039
 2872 00b6 0199     		ldr	r1, [sp, #4]
 2873 00b8 CAB2     		uxtb	r2, r1
1263:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = COLUMN_2ND_CYCLE(columnaddress);
 2874              		.loc 1 1263 66 view .LVU1040
 2875 00ba 1A70     		strb	r2, [r3]
1264:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 2876              		.loc 1 1264 9 is_stmt 1 view .LVU1041
1264:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 2877              		.loc 1 1264 68 is_stmt 0 view .LVU1042
 2878 00bc C1F30722 		ubfx	r2, r1, #8, #8
1264:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 2879              		.loc 1 1264 66 view .LVU1043
ARM GAS  /tmp/ccHfptsR.s 			page 113


 2880 00c0 1A70     		strb	r2, [r3]
1265:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 2881              		.loc 1 1265 9 is_stmt 1 view .LVU1044
1265:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 2882              		.loc 1 1265 68 is_stmt 0 view .LVU1045
 2883 00c2 5FFA88F2 		uxtb	r2, r8
1265:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 2884              		.loc 1 1265 66 view .LVU1046
 2885 00c6 1A70     		strb	r2, [r3]
1266:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
 2886              		.loc 1 1266 9 is_stmt 1 view .LVU1047
1266:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
 2887              		.loc 1 1266 68 is_stmt 0 view .LVU1048
 2888 00c8 C8F30722 		ubfx	r2, r8, #8, #8
1266:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
 2889              		.loc 1 1266 66 view .LVU1049
 2890 00cc 1A70     		strb	r2, [r3]
1267:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 2891              		.loc 1 1267 9 is_stmt 1 view .LVU1050
1267:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 2892              		.loc 1 1267 68 is_stmt 0 view .LVU1051
 2893 00ce C8F30742 		ubfx	r2, r8, #16, #8
1267:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 2894              		.loc 1 1267 66 view .LVU1052
 2895 00d2 1A70     		strb	r2, [r3]
 2896 00d4 37E0     		b	.L182
 2897              	.LVL196:
 2898              	.L196:
1288:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     }
 2899              		.loc 1 1288 7 is_stmt 1 view .LVU1053
1288:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     }
 2900              		.loc 1 1288 63 is_stmt 0 view .LVU1054
 2901 00d6 0023     		movs	r3, #0
 2902 00d8 8BF80030 		strb	r3, [fp]
 2903 00dc 05E0     		b	.L187
 2904              	.LVL197:
 2905              	.L188:
1294:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     }
 2906              		.loc 1 1294 7 is_stmt 1 discriminator 2 view .LVU1055
1294:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     }
 2907              		.loc 1 1294 32 is_stmt 0 discriminator 2 view .LVU1056
 2908 00de 3388     		ldrh	r3, [r6]
1294:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     }
 2909              		.loc 1 1294 30 discriminator 2 view .LVU1057
 2910 00e0 24F8023B 		strh	r3, [r4], #2	@ movhi
 2911              	.LVL198:
1292:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 2912              		.loc 1 1292 25 is_stmt 1 discriminator 2 view .LVU1058
1292:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 2913              		.loc 1 1292 30 is_stmt 0 discriminator 2 view .LVU1059
 2914 00e4 039B     		ldr	r3, [sp, #12]
 2915 00e6 0133     		adds	r3, r3, #1
 2916 00e8 0393     		str	r3, [sp, #12]
 2917              	.L187:
1292:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 2918              		.loc 1 1292 11 is_stmt 1 discriminator 1 view .LVU1060
1292:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
ARM GAS  /tmp/ccHfptsR.s 			page 114


 2919              		.loc 1 1292 17 is_stmt 0 discriminator 1 view .LVU1061
 2920 00ea 039B     		ldr	r3, [sp, #12]
1292:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 2921              		.loc 1 1292 5 discriminator 1 view .LVU1062
 2922 00ec AB42     		cmp	r3, r5
 2923 00ee F6D3     		bcc	.L188
1298:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 2924              		.loc 1 1298 5 is_stmt 1 view .LVU1063
 2925              	.LVL199:
1301:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 2926              		.loc 1 1301 5 view .LVU1064
1301:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 2927              		.loc 1 1301 23 is_stmt 0 view .LVU1065
 2928 00f0 09F1FF39 		add	r9, r9, #-1
 2929              	.LVL200:
1304:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
 2930              		.loc 1 1304 5 is_stmt 1 view .LVU1066
1304:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
 2931              		.loc 1 1304 17 is_stmt 0 view .LVU1067
 2932 00f4 08F10108 		add	r8, r8, #1
 2933              	.LVL201:
 2934              	.L179:
1224:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 2935              		.loc 1 1224 8 is_stmt 1 view .LVU1068
 2936 00f8 B9F1000F 		cmp	r9, #0
 2937 00fc 3DD0     		beq	.L189
1224:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 2938              		.loc 1 1224 69 is_stmt 0 discriminator 1 view .LVU1069
 2939 00fe FA6A     		ldr	r2, [r7, #44]
1224:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 2940              		.loc 1 1224 97 discriminator 1 view .LVU1070
 2941 0100 3B6B     		ldr	r3, [r7, #48]
1224:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 2942              		.loc 1 1224 81 discriminator 1 view .LVU1071
 2943 0102 03FB02F3 		mul	r3, r3, r2
1224:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 2944              		.loc 1 1224 36 discriminator 1 view .LVU1072
 2945 0106 4345     		cmp	r3, r8
 2946 0108 37D9     		bls	.L189
1227:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 2947              		.loc 1 1227 5 is_stmt 1 view .LVU1073
1227:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 2948              		.loc 1 1227 42 is_stmt 0 view .LVU1074
 2949 010a 0AF1010A 		add	r10, r10, #1
 2950              	.LVL202:
1227:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 2951              		.loc 1 1227 26 view .LVU1075
 2952 010e BD6A     		ldr	r5, [r7, #40]
1227:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 2953              		.loc 1 1227 10 view .LVU1076
 2954 0110 05FB0AF5 		mul	r5, r5, r10
 2955              	.LVL203:
1230:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 2956              		.loc 1 1230 5 is_stmt 1 view .LVU1077
1230:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 2957              		.loc 1 1230 22 is_stmt 0 view .LVU1078
 2958 0114 7B6A     		ldr	r3, [r7, #36]
ARM GAS  /tmp/ccHfptsR.s 			page 115


1230:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 2959              		.loc 1 1230 7 view .LVU1079
 2960 0116 B3F5007F 		cmp	r3, #512
 2961 011a B0D8     		bhi	.L180
1233:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       
 2962              		.loc 1 1233 7 is_stmt 1 view .LVU1080
1233:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       
 2963              		.loc 1 1233 25 is_stmt 0 view .LVU1081
 2964 011c 46F48033 		orr	r3, r6, #65536
1233:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       
 2965              		.loc 1 1233 63 view .LVU1082
 2966 0120 5022     		movs	r2, #80
 2967 0122 1A70     		strb	r2, [r3]
1235:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 2968              		.loc 1 1235 7 is_stmt 1 view .LVU1083
1235:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 2969              		.loc 1 1235 26 is_stmt 0 view .LVU1084
 2970 0124 FA6A     		ldr	r2, [r7, #44]
1235:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 2971              		.loc 1 1235 52 view .LVU1085
 2972 0126 3B6B     		ldr	r3, [r7, #48]
1235:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 2973              		.loc 1 1235 37 view .LVU1086
 2974 0128 03FB02F3 		mul	r3, r3, r2
1235:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 2975              		.loc 1 1235 10 view .LVU1087
 2976 012c B3F5803F 		cmp	r3, #65536
 2977 0130 97D2     		bcs	.L181
1237:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 2978              		.loc 1 1237 9 is_stmt 1 view .LVU1088
1237:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 2979              		.loc 1 1237 27 is_stmt 0 view .LVU1089
 2980 0132 46F40033 		orr	r3, r6, #131072
1237:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 2981              		.loc 1 1237 66 view .LVU1090
 2982 0136 0022     		movs	r2, #0
 2983 0138 1A70     		strb	r2, [r3]
1238:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 2984              		.loc 1 1238 9 is_stmt 1 view .LVU1091
1238:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 2985              		.loc 1 1238 68 is_stmt 0 view .LVU1092
 2986 013a 5FFA88F2 		uxtb	r2, r8
1238:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 2987              		.loc 1 1238 66 view .LVU1093
 2988 013e 1A70     		strb	r2, [r3]
1239:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 2989              		.loc 1 1239 9 is_stmt 1 view .LVU1094
1239:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 2990              		.loc 1 1239 68 is_stmt 0 view .LVU1095
 2991 0140 C8F30722 		ubfx	r2, r8, #8, #8
1239:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 2992              		.loc 1 1239 66 view .LVU1096
 2993 0144 1A70     		strb	r2, [r3]
 2994              	.L182:
1271:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 2995              		.loc 1 1271 5 is_stmt 1 view .LVU1097
1271:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
ARM GAS  /tmp/ccHfptsR.s 			page 116


 2996              		.loc 1 1271 23 is_stmt 0 view .LVU1098
 2997 0146 46F4803B 		orr	fp, r6, #65536
1271:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 2998              		.loc 1 1271 61 view .LVU1099
 2999 014a 3023     		movs	r3, #48
 3000 014c 8BF80030 		strb	r3, [fp]
1273:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 3001              		.loc 1 1273 5 is_stmt 1 view .LVU1100
1273:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 3002              		.loc 1 1273 21 is_stmt 0 view .LVU1101
 3003 0150 97F83C30 		ldrb	r3, [r7, #60]	@ zero_extendqisi2
1273:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 3004              		.loc 1 1273 7 view .LVU1102
 3005 0154 012B     		cmp	r3, #1
 3006 0156 C8D1     		bne	.L187
1276:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       
 3007              		.loc 1 1276 7 is_stmt 1 view .LVU1103
1276:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       
 3008              		.loc 1 1276 19 is_stmt 0 view .LVU1104
 3009 0158 FFF7FEFF 		bl	HAL_GetTick
 3010              	.LVL204:
 3011 015c 0090     		str	r0, [sp]
 3012              	.LVL205:
1279:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 3013              		.loc 1 1279 7 is_stmt 1 view .LVU1105
 3014              	.L185:
1279:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 3015              		.loc 1 1279 12 view .LVU1106
1279:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 3016              		.loc 1 1279 13 is_stmt 0 view .LVU1107
 3017 015e 3846     		mov	r0, r7
 3018 0160 FFF7FEFF 		bl	HAL_NAND_Read_Status
 3019              	.LVL206:
1279:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 3020              		.loc 1 1279 12 view .LVU1108
 3021 0164 4028     		cmp	r0, #64
 3022 0166 B6D0     		beq	.L196
1281:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         {
 3023              		.loc 1 1281 9 is_stmt 1 view .LVU1109
1281:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         {
 3024              		.loc 1 1281 13 is_stmt 0 view .LVU1110
 3025 0168 FFF7FEFF 		bl	HAL_GetTick
 3026              	.LVL207:
1281:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         {
 3027              		.loc 1 1281 27 view .LVU1111
 3028 016c 009B     		ldr	r3, [sp]
 3029 016e C01A     		subs	r0, r0, r3
1281:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         {
 3030              		.loc 1 1281 11 view .LVU1112
 3031 0170 B0F1807F 		cmp	r0, #16777216
 3032 0174 F3D9     		bls	.L185
1283:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         }
 3033              		.loc 1 1283 18 view .LVU1113
 3034 0176 0320     		movs	r0, #3
 3035 0178 05E0     		b	.L177
 3036              	.LVL208:
 3037              	.L189:
ARM GAS  /tmp/ccHfptsR.s 			page 117


1308:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 3038              		.loc 1 1308 3 is_stmt 1 view .LVU1114
1308:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 3039              		.loc 1 1308 16 is_stmt 0 view .LVU1115
 3040 017a 0123     		movs	r3, #1
 3041 017c 87F82130 		strb	r3, [r7, #33]
1311:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 3042              		.loc 1 1311 3 is_stmt 1 view .LVU1116
1311:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 3043              		.loc 1 1311 3 view .LVU1117
 3044 0180 0020     		movs	r0, #0
 3045 0182 87F82000 		strb	r0, [r7, #32]
1311:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 3046              		.loc 1 1311 3 view .LVU1118
1313:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** }
 3047              		.loc 1 1313 3 view .LVU1119
 3048              	.LVL209:
 3049              	.L177:
1314:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 3050              		.loc 1 1314 1 is_stmt 0 view .LVU1120
 3051 0186 05B0     		add	sp, sp, #20
 3052              	.LCFI31:
 3053              		.cfi_remember_state
 3054              		.cfi_def_cfa_offset 36
 3055              		@ sp needed
 3056 0188 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3057              	.LVL210:
 3058              	.L191:
 3059              	.LCFI32:
 3060              		.cfi_restore_state
1196:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 3061              		.loc 1 1196 3 view .LVU1121
 3062 018c 0220     		movs	r0, #2
 3063              	.LVL211:
1196:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 3064              		.loc 1 1196 3 view .LVU1122
 3065 018e FAE7     		b	.L177
 3066              		.cfi_endproc
 3067              	.LFE146:
 3069              		.section	.text.HAL_NAND_Write_SpareArea_8b,"ax",%progbits
 3070              		.align	1
 3071              		.global	HAL_NAND_Write_SpareArea_8b
 3072              		.syntax unified
 3073              		.thumb
 3074              		.thumb_func
 3075              		.fpu fpv4-sp-d16
 3077              	HAL_NAND_Write_SpareArea_8b:
 3078              	.LVL212:
 3079              	.LFB147:
1326:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   __IO uint32_t index = 0U;
 3080              		.loc 1 1326 1 is_stmt 1 view -0
 3081              		.cfi_startproc
 3082              		@ args = 0, pretend = 0, frame = 8
 3083              		@ frame_needed = 0, uses_anonymous_args = 0
1326:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   __IO uint32_t index = 0U;
 3084              		.loc 1 1326 1 is_stmt 0 view .LVU1124
 3085 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
ARM GAS  /tmp/ccHfptsR.s 			page 118


 3086              	.LCFI33:
 3087              		.cfi_def_cfa_offset 36
 3088              		.cfi_offset 4, -36
 3089              		.cfi_offset 5, -32
 3090              		.cfi_offset 6, -28
 3091              		.cfi_offset 7, -24
 3092              		.cfi_offset 8, -20
 3093              		.cfi_offset 9, -16
 3094              		.cfi_offset 10, -12
 3095              		.cfi_offset 11, -8
 3096              		.cfi_offset 14, -4
 3097 0004 83B0     		sub	sp, sp, #12
 3098              	.LCFI34:
 3099              		.cfi_def_cfa_offset 48
 3100 0006 9946     		mov	r9, r3
1327:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   uint32_t tickstart = 0U;
 3101              		.loc 1 1327 3 is_stmt 1 view .LVU1125
1327:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   uint32_t tickstart = 0U;
 3102              		.loc 1 1327 17 is_stmt 0 view .LVU1126
 3103 0008 0023     		movs	r3, #0
 3104              	.LVL213:
1327:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   uint32_t tickstart = 0U;
 3105              		.loc 1 1327 17 view .LVU1127
 3106 000a 0193     		str	r3, [sp, #4]
1328:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   uint32_t deviceaddress = 0U, size = 0U, numSpareAreaWritten = 0U, nandaddress = 0U, columnaddress
 3107              		.loc 1 1328 3 is_stmt 1 view .LVU1128
 3108              	.LVL214:
1329:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 3109              		.loc 1 1329 3 view .LVU1129
1332:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 3110              		.loc 1 1332 3 view .LVU1130
1332:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 3111              		.loc 1 1332 3 view .LVU1131
 3112 000c 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 3113 0010 012B     		cmp	r3, #1
 3114 0012 00F0B780 		beq	.L211
 3115 0016 0546     		mov	r5, r0
 3116 0018 1446     		mov	r4, r2
1332:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 3117              		.loc 1 1332 3 discriminator 2 view .LVU1132
 3118 001a 0123     		movs	r3, #1
 3119 001c 80F82030 		strb	r3, [r0, #32]
1332:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 3120              		.loc 1 1332 3 discriminator 2 view .LVU1133
1335:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 3121              		.loc 1 1335 3 discriminator 2 view .LVU1134
1335:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 3122              		.loc 1 1335 11 is_stmt 0 discriminator 2 view .LVU1135
 3123 0020 90F82100 		ldrb	r0, [r0, #33]	@ zero_extendqisi2
 3124              	.LVL215:
1335:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 3125              		.loc 1 1335 11 discriminator 2 view .LVU1136
 3126 0024 C0B2     		uxtb	r0, r0
1335:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 3127              		.loc 1 1335 5 discriminator 2 view .LVU1137
 3128 0026 0228     		cmp	r0, #2
 3129 0028 00F09D80 		beq	.L198
ARM GAS  /tmp/ccHfptsR.s 			page 119


1341:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 3130              		.loc 1 1341 3 is_stmt 1 view .LVU1138
1341:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 3131              		.loc 1 1341 17 is_stmt 0 view .LVU1139
 3132 002c 6B68     		ldr	r3, [r5, #4]
1341:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 3133              		.loc 1 1341 5 view .LVU1140
 3134 002e 102B     		cmp	r3, #16
 3135 0030 47D0     		beq	.L215
1347:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
 3136              		.loc 1 1347 19 view .LVU1141
 3137 0032 4FF00047 		mov	r7, #-2147483648
 3138              	.L199:
 3139              	.LVL216:
1351:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 3140              		.loc 1 1351 3 is_stmt 1 view .LVU1142
1351:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 3141              		.loc 1 1351 16 is_stmt 0 view .LVU1143
 3142 0036 0223     		movs	r3, #2
 3143 0038 85F82130 		strb	r3, [r5, #33]
1354:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 3144              		.loc 1 1354 3 is_stmt 1 view .LVU1144
1354:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 3145              		.loc 1 1354 17 is_stmt 0 view .LVU1145
 3146 003c 0B88     		ldrh	r3, [r1]
 3147 003e 8A88     		ldrh	r2, [r1, #4]
 3148              	.LVL217:
1354:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 3149              		.loc 1 1354 17 view .LVU1146
 3150 0040 B1F80280 		ldrh	r8, [r1, #2]
 3151 0044 A96B     		ldr	r1, [r5, #56]
 3152              	.LVL218:
1354:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 3153              		.loc 1 1354 17 view .LVU1147
 3154 0046 01FB0828 		mla	r8, r1, r8, r2
 3155 004a EA6A     		ldr	r2, [r5, #44]
1354:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 3156              		.loc 1 1354 15 view .LVU1148
 3157 004c 02FB0838 		mla	r8, r2, r8, r3
 3158              	.LVL219:
1357:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 3159              		.loc 1 1357 3 is_stmt 1 view .LVU1149
1357:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 3160              		.loc 1 1357 17 is_stmt 0 view .LVU1150
 3161 0050 D5F824B0 		ldr	fp, [r5, #36]
 3162              	.LVL220:
1360:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 3163              		.loc 1 1360 3 is_stmt 1 view .LVU1151
1329:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 3164              		.loc 1 1329 43 is_stmt 0 view .LVU1152
 3165 0054 4FF0000A 		mov	r10, #0
 3166              	.LVL221:
 3167              	.L200:
1360:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 3168              		.loc 1 1360 8 is_stmt 1 view .LVU1153
 3169 0058 B9F1000F 		cmp	r9, #0
 3170 005c 00F08B80 		beq	.L209
ARM GAS  /tmp/ccHfptsR.s 			page 120


1360:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 3171              		.loc 1 1360 70 is_stmt 0 discriminator 1 view .LVU1154
 3172 0060 EA6A     		ldr	r2, [r5, #44]
1360:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 3173              		.loc 1 1360 98 discriminator 1 view .LVU1155
 3174 0062 2B6B     		ldr	r3, [r5, #48]
1360:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 3175              		.loc 1 1360 82 discriminator 1 view .LVU1156
 3176 0064 03FB02F3 		mul	r3, r3, r2
1360:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 3177              		.loc 1 1360 37 discriminator 1 view .LVU1157
 3178 0068 4345     		cmp	r3, r8
 3179 006a 40F28480 		bls	.L209
1363:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 3180              		.loc 1 1363 5 is_stmt 1 view .LVU1158
1363:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 3181              		.loc 1 1363 42 is_stmt 0 view .LVU1159
 3182 006e 0AF1010A 		add	r10, r10, #1
 3183              	.LVL222:
1363:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 3184              		.loc 1 1363 26 view .LVU1160
 3185 0072 AA6A     		ldr	r2, [r5, #40]
1363:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 3186              		.loc 1 1363 10 view .LVU1161
 3187 0074 02FB0AF2 		mul	r2, r2, r10
 3188              	.LVL223:
1366:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 3189              		.loc 1 1366 5 is_stmt 1 view .LVU1162
1366:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 3190              		.loc 1 1366 22 is_stmt 0 view .LVU1163
 3191 0078 6B6A     		ldr	r3, [r5, #36]
1366:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 3192              		.loc 1 1366 7 view .LVU1164
 3193 007a B3F5007F 		cmp	r3, #512
 3194 007e 31D8     		bhi	.L201
1369:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_WRITE0;
 3195              		.loc 1 1369 7 is_stmt 1 view .LVU1165
1369:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_WRITE0;
 3196              		.loc 1 1369 25 is_stmt 0 view .LVU1166
 3197 0080 47F48033 		orr	r3, r7, #65536
1369:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_WRITE0;
 3198              		.loc 1 1369 63 view .LVU1167
 3199 0084 5021     		movs	r1, #80
 3200 0086 1970     		strb	r1, [r3]
1370:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       
 3201              		.loc 1 1370 7 is_stmt 1 view .LVU1168
1370:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       
 3202              		.loc 1 1370 63 is_stmt 0 view .LVU1169
 3203 0088 8021     		movs	r1, #128
 3204 008a 1970     		strb	r1, [r3]
1372:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 3205              		.loc 1 1372 7 is_stmt 1 view .LVU1170
1372:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 3206              		.loc 1 1372 26 is_stmt 0 view .LVU1171
 3207 008c E96A     		ldr	r1, [r5, #44]
1372:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 3208              		.loc 1 1372 52 view .LVU1172
ARM GAS  /tmp/ccHfptsR.s 			page 121


 3209 008e 2B6B     		ldr	r3, [r5, #48]
1372:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 3210              		.loc 1 1372 37 view .LVU1173
 3211 0090 03FB01F3 		mul	r3, r3, r1
1372:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 3212              		.loc 1 1372 10 view .LVU1174
 3213 0094 B3F5803F 		cmp	r3, #65536
 3214 0098 16D2     		bcs	.L202
1374:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 3215              		.loc 1 1374 9 is_stmt 1 view .LVU1175
1374:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 3216              		.loc 1 1374 27 is_stmt 0 view .LVU1176
 3217 009a 47F40033 		orr	r3, r7, #131072
1374:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 3218              		.loc 1 1374 66 view .LVU1177
 3219 009e 0021     		movs	r1, #0
 3220 00a0 1970     		strb	r1, [r3]
1375:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 3221              		.loc 1 1375 9 is_stmt 1 view .LVU1178
1375:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 3222              		.loc 1 1375 68 is_stmt 0 view .LVU1179
 3223 00a2 5FFA88F1 		uxtb	r1, r8
1375:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 3224              		.loc 1 1375 66 view .LVU1180
 3225 00a6 1970     		strb	r1, [r3]
1376:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 3226              		.loc 1 1376 9 is_stmt 1 view .LVU1181
1376:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 3227              		.loc 1 1376 68 is_stmt 0 view .LVU1182
 3228 00a8 C8F30721 		ubfx	r1, r8, #8, #8
1376:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 3229              		.loc 1 1376 66 view .LVU1183
 3230 00ac 1970     		strb	r1, [r3]
 3231              	.L204:
1410:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 3232              		.loc 1 1410 11 is_stmt 1 discriminator 1 view .LVU1184
1410:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 3233              		.loc 1 1410 17 is_stmt 0 discriminator 1 view .LVU1185
 3234 00ae 019B     		ldr	r3, [sp, #4]
1410:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 3235              		.loc 1 1410 5 discriminator 1 view .LVU1186
 3236 00b0 9342     		cmp	r3, r2
 3237 00b2 45D2     		bcs	.L216
1412:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     }
 3238              		.loc 1 1412 7 is_stmt 1 discriminator 2 view .LVU1187
 3239              	.LVL224:
1412:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     }
 3240              		.loc 1 1412 40 is_stmt 0 discriminator 2 view .LVU1188
 3241 00b4 14F8013B 		ldrb	r3, [r4], #1	@ zero_extendqisi2
 3242              	.LVL225:
1412:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     }
 3243              		.loc 1 1412 38 discriminator 2 view .LVU1189
 3244 00b8 3B70     		strb	r3, [r7]
1410:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 3245              		.loc 1 1410 25 is_stmt 1 discriminator 2 view .LVU1190
1410:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 3246              		.loc 1 1410 30 is_stmt 0 discriminator 2 view .LVU1191
ARM GAS  /tmp/ccHfptsR.s 			page 122


 3247 00ba 019B     		ldr	r3, [sp, #4]
 3248 00bc 0133     		adds	r3, r3, #1
 3249 00be 0193     		str	r3, [sp, #4]
 3250 00c0 F5E7     		b	.L204
 3251              	.LVL226:
 3252              	.L215:
1343:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
 3253              		.loc 1 1343 19 view .LVU1192
 3254 00c2 4FF0E047 		mov	r7, #1879048192
 3255 00c6 B6E7     		b	.L199
 3256              	.LVL227:
 3257              	.L202:
1380:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 3258              		.loc 1 1380 9 is_stmt 1 view .LVU1193
1380:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 3259              		.loc 1 1380 27 is_stmt 0 view .LVU1194
 3260 00c8 47F40033 		orr	r3, r7, #131072
1380:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 3261              		.loc 1 1380 66 view .LVU1195
 3262 00cc 0021     		movs	r1, #0
 3263 00ce 1970     		strb	r1, [r3]
1381:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 3264              		.loc 1 1381 9 is_stmt 1 view .LVU1196
1381:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 3265              		.loc 1 1381 68 is_stmt 0 view .LVU1197
 3266 00d0 5FFA88F1 		uxtb	r1, r8
1381:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 3267              		.loc 1 1381 66 view .LVU1198
 3268 00d4 1970     		strb	r1, [r3]
1382:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
 3269              		.loc 1 1382 9 is_stmt 1 view .LVU1199
1382:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
 3270              		.loc 1 1382 68 is_stmt 0 view .LVU1200
 3271 00d6 C8F30721 		ubfx	r1, r8, #8, #8
1382:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
 3272              		.loc 1 1382 66 view .LVU1201
 3273 00da 1970     		strb	r1, [r3]
1383:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 3274              		.loc 1 1383 9 is_stmt 1 view .LVU1202
1383:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 3275              		.loc 1 1383 68 is_stmt 0 view .LVU1203
 3276 00dc C8F30741 		ubfx	r1, r8, #16, #8
1383:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 3277              		.loc 1 1383 66 view .LVU1204
 3278 00e0 1970     		strb	r1, [r3]
 3279 00e2 E4E7     		b	.L204
 3280              	.L201:
1389:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_WRITE0;
 3281              		.loc 1 1389 7 is_stmt 1 view .LVU1205
1389:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_WRITE0;
 3282              		.loc 1 1389 25 is_stmt 0 view .LVU1206
 3283 00e4 47F48033 		orr	r3, r7, #65536
1389:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_WRITE0;
 3284              		.loc 1 1389 63 view .LVU1207
 3285 00e8 0021     		movs	r1, #0
 3286 00ea 1970     		strb	r1, [r3]
1390:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
ARM GAS  /tmp/ccHfptsR.s 			page 123


 3287              		.loc 1 1390 7 is_stmt 1 view .LVU1208
1390:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 3288              		.loc 1 1390 63 is_stmt 0 view .LVU1209
 3289 00ec 8021     		movs	r1, #128
 3290 00ee 1970     		strb	r1, [r3]
1392:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 3291              		.loc 1 1392 7 is_stmt 1 view .LVU1210
1392:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 3292              		.loc 1 1392 26 is_stmt 0 view .LVU1211
 3293 00f0 E96A     		ldr	r1, [r5, #44]
1392:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 3294              		.loc 1 1392 52 view .LVU1212
 3295 00f2 2B6B     		ldr	r3, [r5, #48]
1392:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 3296              		.loc 1 1392 37 view .LVU1213
 3297 00f4 03FB01F3 		mul	r3, r3, r1
1392:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 3298              		.loc 1 1392 10 view .LVU1214
 3299 00f8 B3F5803F 		cmp	r3, #65536
 3300 00fc 0ED2     		bcs	.L205
1394:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = COLUMN_2ND_CYCLE(columnaddress);
 3301              		.loc 1 1394 9 is_stmt 1 view .LVU1215
1394:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = COLUMN_2ND_CYCLE(columnaddress);
 3302              		.loc 1 1394 27 is_stmt 0 view .LVU1216
 3303 00fe 47F40033 		orr	r3, r7, #131072
1394:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = COLUMN_2ND_CYCLE(columnaddress);
 3304              		.loc 1 1394 68 view .LVU1217
 3305 0102 5FFA8BF1 		uxtb	r1, fp
1394:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = COLUMN_2ND_CYCLE(columnaddress);
 3306              		.loc 1 1394 66 view .LVU1218
 3307 0106 1970     		strb	r1, [r3]
1395:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 3308              		.loc 1 1395 9 is_stmt 1 view .LVU1219
1395:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 3309              		.loc 1 1395 68 is_stmt 0 view .LVU1220
 3310 0108 CBF30721 		ubfx	r1, fp, #8, #8
1395:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 3311              		.loc 1 1395 66 view .LVU1221
 3312 010c 1970     		strb	r1, [r3]
1396:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 3313              		.loc 1 1396 9 is_stmt 1 view .LVU1222
1396:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 3314              		.loc 1 1396 68 is_stmt 0 view .LVU1223
 3315 010e 5FFA88F1 		uxtb	r1, r8
1396:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 3316              		.loc 1 1396 66 view .LVU1224
 3317 0112 1970     		strb	r1, [r3]
1397:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 3318              		.loc 1 1397 9 is_stmt 1 view .LVU1225
1397:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 3319              		.loc 1 1397 68 is_stmt 0 view .LVU1226
 3320 0114 C8F30721 		ubfx	r1, r8, #8, #8
1397:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 3321              		.loc 1 1397 66 view .LVU1227
 3322 0118 1970     		strb	r1, [r3]
 3323 011a C8E7     		b	.L204
 3324              	.L205:
ARM GAS  /tmp/ccHfptsR.s 			page 124


1401:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = COLUMN_2ND_CYCLE(columnaddress);
 3325              		.loc 1 1401 9 is_stmt 1 view .LVU1228
1401:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = COLUMN_2ND_CYCLE(columnaddress);
 3326              		.loc 1 1401 27 is_stmt 0 view .LVU1229
 3327 011c 47F40033 		orr	r3, r7, #131072
1401:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = COLUMN_2ND_CYCLE(columnaddress);
 3328              		.loc 1 1401 68 view .LVU1230
 3329 0120 5FFA8BF1 		uxtb	r1, fp
1401:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = COLUMN_2ND_CYCLE(columnaddress);
 3330              		.loc 1 1401 66 view .LVU1231
 3331 0124 1970     		strb	r1, [r3]
1402:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 3332              		.loc 1 1402 9 is_stmt 1 view .LVU1232
1402:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 3333              		.loc 1 1402 68 is_stmt 0 view .LVU1233
 3334 0126 CBF30721 		ubfx	r1, fp, #8, #8
1402:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 3335              		.loc 1 1402 66 view .LVU1234
 3336 012a 1970     		strb	r1, [r3]
1403:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 3337              		.loc 1 1403 9 is_stmt 1 view .LVU1235
1403:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 3338              		.loc 1 1403 68 is_stmt 0 view .LVU1236
 3339 012c 5FFA88F1 		uxtb	r1, r8
1403:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 3340              		.loc 1 1403 66 view .LVU1237
 3341 0130 1970     		strb	r1, [r3]
1404:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
 3342              		.loc 1 1404 9 is_stmt 1 view .LVU1238
1404:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
 3343              		.loc 1 1404 68 is_stmt 0 view .LVU1239
 3344 0132 C8F30721 		ubfx	r1, r8, #8, #8
1404:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
 3345              		.loc 1 1404 66 view .LVU1240
 3346 0136 1970     		strb	r1, [r3]
1405:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 3347              		.loc 1 1405 9 is_stmt 1 view .LVU1241
1405:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 3348              		.loc 1 1405 68 is_stmt 0 view .LVU1242
 3349 0138 C8F30741 		ubfx	r1, r8, #16, #8
1405:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 3350              		.loc 1 1405 66 view .LVU1243
 3351 013c 1970     		strb	r1, [r3]
 3352 013e B6E7     		b	.L204
 3353              	.L216:
1415:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 3354              		.loc 1 1415 5 is_stmt 1 view .LVU1244
1415:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 3355              		.loc 1 1415 23 is_stmt 0 view .LVU1245
 3356 0140 47F48033 		orr	r3, r7, #65536
1415:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 3357              		.loc 1 1415 61 view .LVU1246
 3358 0144 1022     		movs	r2, #16
 3359              	.LVL228:
1415:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 3360              		.loc 1 1415 61 view .LVU1247
 3361 0146 1A70     		strb	r2, [r3]
ARM GAS  /tmp/ccHfptsR.s 			page 125


1418:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 3362              		.loc 1 1418 5 is_stmt 1 view .LVU1248
1418:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 3363              		.loc 1 1418 17 is_stmt 0 view .LVU1249
 3364 0148 FFF7FEFF 		bl	HAL_GetTick
 3365              	.LVL229:
 3366 014c 0646     		mov	r6, r0
 3367              	.LVL230:
1421:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 3368              		.loc 1 1421 5 is_stmt 1 view .LVU1250
 3369              	.L207:
1421:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 3370              		.loc 1 1421 10 view .LVU1251
1421:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 3371              		.loc 1 1421 11 is_stmt 0 view .LVU1252
 3372 014e 2846     		mov	r0, r5
 3373 0150 FFF7FEFF 		bl	HAL_NAND_Read_Status
 3374              	.LVL231:
1421:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 3375              		.loc 1 1421 10 view .LVU1253
 3376 0154 4028     		cmp	r0, #64
 3377 0156 09D0     		beq	.L217
1423:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 3378              		.loc 1 1423 7 is_stmt 1 view .LVU1254
1423:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 3379              		.loc 1 1423 11 is_stmt 0 view .LVU1255
 3380 0158 FFF7FEFF 		bl	HAL_GetTick
 3381              	.LVL232:
1423:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 3382              		.loc 1 1423 25 view .LVU1256
 3383 015c 801B     		subs	r0, r0, r6
1423:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 3384              		.loc 1 1423 9 view .LVU1257
 3385 015e B0F1807F 		cmp	r0, #16777216
 3386 0162 F4D9     		bls	.L207
1425:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 3387              		.loc 1 1425 16 view .LVU1258
 3388 0164 0320     		movs	r0, #3
 3389              	.LVL233:
 3390              	.L198:
1446:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 3391              		.loc 1 1446 1 view .LVU1259
 3392 0166 03B0     		add	sp, sp, #12
 3393              	.LCFI35:
 3394              		.cfi_remember_state
 3395              		.cfi_def_cfa_offset 36
 3396              		@ sp needed
 3397 0168 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3398              	.LVL234:
 3399              	.L217:
 3400              	.LCFI36:
 3401              		.cfi_restore_state
1430:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 3402              		.loc 1 1430 5 is_stmt 1 view .LVU1260
1433:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 3403              		.loc 1 1433 5 view .LVU1261
1433:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
ARM GAS  /tmp/ccHfptsR.s 			page 126


 3404              		.loc 1 1433 24 is_stmt 0 view .LVU1262
 3405 016c 09F1FF39 		add	r9, r9, #-1
 3406              	.LVL235:
1436:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
 3407              		.loc 1 1436 5 is_stmt 1 view .LVU1263
1436:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
 3408              		.loc 1 1436 17 is_stmt 0 view .LVU1264
 3409 0170 08F10108 		add	r8, r8, #1
 3410              	.LVL236:
1436:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
 3411              		.loc 1 1436 17 view .LVU1265
 3412 0174 70E7     		b	.L200
 3413              	.LVL237:
 3414              	.L209:
1440:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 3415              		.loc 1 1440 3 is_stmt 1 view .LVU1266
1440:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 3416              		.loc 1 1440 16 is_stmt 0 view .LVU1267
 3417 0176 0123     		movs	r3, #1
 3418 0178 85F82130 		strb	r3, [r5, #33]
1443:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 3419              		.loc 1 1443 3 is_stmt 1 view .LVU1268
1443:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 3420              		.loc 1 1443 3 view .LVU1269
 3421 017c 0020     		movs	r0, #0
 3422 017e 85F82000 		strb	r0, [r5, #32]
1443:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 3423              		.loc 1 1443 3 view .LVU1270
1445:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** }
 3424              		.loc 1 1445 3 view .LVU1271
1445:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** }
 3425              		.loc 1 1445 10 is_stmt 0 view .LVU1272
 3426 0182 F0E7     		b	.L198
 3427              	.LVL238:
 3428              	.L211:
1332:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 3429              		.loc 1 1332 3 view .LVU1273
 3430 0184 0220     		movs	r0, #2
 3431              	.LVL239:
1332:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 3432              		.loc 1 1332 3 view .LVU1274
 3433 0186 EEE7     		b	.L198
 3434              		.cfi_endproc
 3435              	.LFE147:
 3437              		.section	.text.HAL_NAND_Write_SpareArea_16b,"ax",%progbits
 3438              		.align	1
 3439              		.global	HAL_NAND_Write_SpareArea_16b
 3440              		.syntax unified
 3441              		.thumb
 3442              		.thumb_func
 3443              		.fpu fpv4-sp-d16
 3445              	HAL_NAND_Write_SpareArea_16b:
 3446              	.LVL240:
 3447              	.LFB148:
1458:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   __IO uint32_t index = 0U;
 3448              		.loc 1 1458 1 is_stmt 1 view -0
 3449              		.cfi_startproc
ARM GAS  /tmp/ccHfptsR.s 			page 127


 3450              		@ args = 0, pretend = 0, frame = 8
 3451              		@ frame_needed = 0, uses_anonymous_args = 0
1458:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   __IO uint32_t index = 0U;
 3452              		.loc 1 1458 1 is_stmt 0 view .LVU1276
 3453 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3454              	.LCFI37:
 3455              		.cfi_def_cfa_offset 36
 3456              		.cfi_offset 4, -36
 3457              		.cfi_offset 5, -32
 3458              		.cfi_offset 6, -28
 3459              		.cfi_offset 7, -24
 3460              		.cfi_offset 8, -20
 3461              		.cfi_offset 9, -16
 3462              		.cfi_offset 10, -12
 3463              		.cfi_offset 11, -8
 3464              		.cfi_offset 14, -4
 3465 0004 83B0     		sub	sp, sp, #12
 3466              	.LCFI38:
 3467              		.cfi_def_cfa_offset 48
 3468 0006 9846     		mov	r8, r3
1459:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   uint32_t tickstart = 0U;
 3469              		.loc 1 1459 3 is_stmt 1 view .LVU1277
1459:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   uint32_t tickstart = 0U;
 3470              		.loc 1 1459 17 is_stmt 0 view .LVU1278
 3471 0008 0023     		movs	r3, #0
 3472              	.LVL241:
1459:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   uint32_t tickstart = 0U;
 3473              		.loc 1 1459 17 view .LVU1279
 3474 000a 0193     		str	r3, [sp, #4]
1460:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   uint32_t deviceaddress = 0U, size = 0U, numSpareAreaWritten = 0U, nandaddress = 0U, columnaddress
 3475              		.loc 1 1460 3 is_stmt 1 view .LVU1280
 3476              	.LVL242:
1461:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 3477              		.loc 1 1461 3 view .LVU1281
1464:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 3478              		.loc 1 1464 3 view .LVU1282
1464:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 3479              		.loc 1 1464 3 view .LVU1283
 3480 000c 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 3481 0010 012B     		cmp	r3, #1
 3482 0012 00F0B280 		beq	.L232
 3483 0016 0546     		mov	r5, r0
 3484 0018 1446     		mov	r4, r2
1464:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 3485              		.loc 1 1464 3 discriminator 2 view .LVU1284
 3486 001a 0123     		movs	r3, #1
 3487 001c 80F82030 		strb	r3, [r0, #32]
1464:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 3488              		.loc 1 1464 3 discriminator 2 view .LVU1285
1467:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 3489              		.loc 1 1467 3 discriminator 2 view .LVU1286
1467:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 3490              		.loc 1 1467 11 is_stmt 0 discriminator 2 view .LVU1287
 3491 0020 90F82100 		ldrb	r0, [r0, #33]	@ zero_extendqisi2
 3492              	.LVL243:
1467:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 3493              		.loc 1 1467 11 discriminator 2 view .LVU1288
ARM GAS  /tmp/ccHfptsR.s 			page 128


 3494 0024 C0B2     		uxtb	r0, r0
1467:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 3495              		.loc 1 1467 5 discriminator 2 view .LVU1289
 3496 0026 0228     		cmp	r0, #2
 3497 0028 00F09980 		beq	.L219
1473:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 3498              		.loc 1 1473 3 is_stmt 1 view .LVU1290
1473:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 3499              		.loc 1 1473 17 is_stmt 0 view .LVU1291
 3500 002c 6B68     		ldr	r3, [r5, #4]
1473:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 3501              		.loc 1 1473 5 view .LVU1292
 3502 002e 102B     		cmp	r3, #16
 3503 0030 45D0     		beq	.L236
1479:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
 3504              		.loc 1 1479 19 view .LVU1293
 3505 0032 4FF00046 		mov	r6, #-2147483648
 3506              	.L220:
 3507              	.LVL244:
1483:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 3508              		.loc 1 1483 3 is_stmt 1 view .LVU1294
1483:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 3509              		.loc 1 1483 16 is_stmt 0 view .LVU1295
 3510 0036 0223     		movs	r3, #2
 3511 0038 85F82130 		strb	r3, [r5, #33]
1486:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 3512              		.loc 1 1486 3 is_stmt 1 view .LVU1296
1486:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 3513              		.loc 1 1486 17 is_stmt 0 view .LVU1297
 3514 003c 0B88     		ldrh	r3, [r1]
 3515 003e 8A88     		ldrh	r2, [r1, #4]
 3516              	.LVL245:
1486:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 3517              		.loc 1 1486 17 view .LVU1298
 3518 0040 4F88     		ldrh	r7, [r1, #2]
 3519 0042 A96B     		ldr	r1, [r5, #56]
 3520              	.LVL246:
1486:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 3521              		.loc 1 1486 17 view .LVU1299
 3522 0044 01FB0727 		mla	r7, r1, r7, r2
 3523 0048 EA6A     		ldr	r2, [r5, #44]
1486:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 3524              		.loc 1 1486 15 view .LVU1300
 3525 004a 02FB0737 		mla	r7, r2, r7, r3
 3526              	.LVL247:
1489:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 3527              		.loc 1 1489 3 is_stmt 1 view .LVU1301
1489:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 3528              		.loc 1 1489 30 is_stmt 0 view .LVU1302
 3529 004e 6B6A     		ldr	r3, [r5, #36]
1489:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 3530              		.loc 1 1489 17 view .LVU1303
 3531 0050 4FEA430A 		lsl	r10, r3, #1
 3532              	.LVL248:
1492:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 3533              		.loc 1 1492 3 is_stmt 1 view .LVU1304
1461:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
ARM GAS  /tmp/ccHfptsR.s 			page 129


 3534              		.loc 1 1461 43 is_stmt 0 view .LVU1305
 3535 0054 4FF00009 		mov	r9, #0
 3536              	.LVL249:
 3537              	.L221:
1492:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 3538              		.loc 1 1492 8 is_stmt 1 view .LVU1306
 3539 0058 B8F1000F 		cmp	r8, #0
 3540 005c 00F08680 		beq	.L230
1492:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 3541              		.loc 1 1492 70 is_stmt 0 discriminator 1 view .LVU1307
 3542 0060 EA6A     		ldr	r2, [r5, #44]
1492:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 3543              		.loc 1 1492 98 discriminator 1 view .LVU1308
 3544 0062 2B6B     		ldr	r3, [r5, #48]
1492:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 3545              		.loc 1 1492 82 discriminator 1 view .LVU1309
 3546 0064 03FB02F3 		mul	r3, r3, r2
1492:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 3547              		.loc 1 1492 37 discriminator 1 view .LVU1310
 3548 0068 BB42     		cmp	r3, r7
 3549 006a 7FD9     		bls	.L230
1495:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 3550              		.loc 1 1495 5 is_stmt 1 view .LVU1311
1495:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 3551              		.loc 1 1495 42 is_stmt 0 view .LVU1312
 3552 006c 09F10109 		add	r9, r9, #1
 3553              	.LVL250:
1495:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 3554              		.loc 1 1495 26 view .LVU1313
 3555 0070 AA6A     		ldr	r2, [r5, #40]
1495:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 3556              		.loc 1 1495 10 view .LVU1314
 3557 0072 02FB09F2 		mul	r2, r2, r9
 3558              	.LVL251:
1498:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 3559              		.loc 1 1498 5 is_stmt 1 view .LVU1315
1498:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 3560              		.loc 1 1498 22 is_stmt 0 view .LVU1316
 3561 0076 6B6A     		ldr	r3, [r5, #36]
1498:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 3562              		.loc 1 1498 7 view .LVU1317
 3563 0078 B3F5007F 		cmp	r3, #512
 3564 007c 2FD8     		bhi	.L222
1501:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_WRITE0;
 3565              		.loc 1 1501 7 is_stmt 1 view .LVU1318
1501:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_WRITE0;
 3566              		.loc 1 1501 25 is_stmt 0 view .LVU1319
 3567 007e 46F48033 		orr	r3, r6, #65536
1501:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_WRITE0;
 3568              		.loc 1 1501 63 view .LVU1320
 3569 0082 5021     		movs	r1, #80
 3570 0084 1970     		strb	r1, [r3]
1502:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 3571              		.loc 1 1502 7 is_stmt 1 view .LVU1321
1502:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 3572              		.loc 1 1502 63 is_stmt 0 view .LVU1322
 3573 0086 8021     		movs	r1, #128
ARM GAS  /tmp/ccHfptsR.s 			page 130


 3574 0088 1970     		strb	r1, [r3]
1504:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 3575              		.loc 1 1504 7 is_stmt 1 view .LVU1323
1504:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 3576              		.loc 1 1504 26 is_stmt 0 view .LVU1324
 3577 008a E96A     		ldr	r1, [r5, #44]
1504:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 3578              		.loc 1 1504 52 view .LVU1325
 3579 008c 2B6B     		ldr	r3, [r5, #48]
1504:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 3580              		.loc 1 1504 37 view .LVU1326
 3581 008e 03FB01F3 		mul	r3, r3, r1
1504:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 3582              		.loc 1 1504 10 view .LVU1327
 3583 0092 B3F5803F 		cmp	r3, #65536
 3584 0096 15D2     		bcs	.L223
1506:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 3585              		.loc 1 1506 9 is_stmt 1 view .LVU1328
1506:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 3586              		.loc 1 1506 27 is_stmt 0 view .LVU1329
 3587 0098 46F40033 		orr	r3, r6, #131072
1506:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 3588              		.loc 1 1506 66 view .LVU1330
 3589 009c 0021     		movs	r1, #0
 3590 009e 1970     		strb	r1, [r3]
1507:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 3591              		.loc 1 1507 9 is_stmt 1 view .LVU1331
1507:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 3592              		.loc 1 1507 68 is_stmt 0 view .LVU1332
 3593 00a0 F9B2     		uxtb	r1, r7
1507:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 3594              		.loc 1 1507 66 view .LVU1333
 3595 00a2 1970     		strb	r1, [r3]
1508:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 3596              		.loc 1 1508 9 is_stmt 1 view .LVU1334
1508:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 3597              		.loc 1 1508 68 is_stmt 0 view .LVU1335
 3598 00a4 C7F30721 		ubfx	r1, r7, #8, #8
1508:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 3599              		.loc 1 1508 66 view .LVU1336
 3600 00a8 1970     		strb	r1, [r3]
 3601              	.L225:
1542:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 3602              		.loc 1 1542 11 is_stmt 1 discriminator 1 view .LVU1337
1542:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 3603              		.loc 1 1542 17 is_stmt 0 discriminator 1 view .LVU1338
 3604 00aa 019B     		ldr	r3, [sp, #4]
1542:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 3605              		.loc 1 1542 5 discriminator 1 view .LVU1339
 3606 00ac 9342     		cmp	r3, r2
 3607 00ae 42D2     		bcs	.L237
1544:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     }
 3608              		.loc 1 1544 7 is_stmt 1 discriminator 2 view .LVU1340
 3609              	.LVL252:
1544:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     }
 3610              		.loc 1 1544 41 is_stmt 0 discriminator 2 view .LVU1341
 3611 00b0 34F8023B 		ldrh	r3, [r4], #2
ARM GAS  /tmp/ccHfptsR.s 			page 131


 3612              	.LVL253:
1544:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     }
 3613              		.loc 1 1544 39 discriminator 2 view .LVU1342
 3614 00b4 3380     		strh	r3, [r6]	@ movhi
1542:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 3615              		.loc 1 1542 25 is_stmt 1 discriminator 2 view .LVU1343
1542:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 3616              		.loc 1 1542 30 is_stmt 0 discriminator 2 view .LVU1344
 3617 00b6 019B     		ldr	r3, [sp, #4]
 3618 00b8 0133     		adds	r3, r3, #1
 3619 00ba 0193     		str	r3, [sp, #4]
 3620 00bc F5E7     		b	.L225
 3621              	.LVL254:
 3622              	.L236:
1475:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
 3623              		.loc 1 1475 19 view .LVU1345
 3624 00be 4FF0E046 		mov	r6, #1879048192
 3625 00c2 B8E7     		b	.L220
 3626              	.LVL255:
 3627              	.L223:
1512:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 3628              		.loc 1 1512 9 is_stmt 1 view .LVU1346
1512:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 3629              		.loc 1 1512 27 is_stmt 0 view .LVU1347
 3630 00c4 46F40033 		orr	r3, r6, #131072
1512:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 3631              		.loc 1 1512 66 view .LVU1348
 3632 00c8 0021     		movs	r1, #0
 3633 00ca 1970     		strb	r1, [r3]
1513:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 3634              		.loc 1 1513 9 is_stmt 1 view .LVU1349
1513:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 3635              		.loc 1 1513 68 is_stmt 0 view .LVU1350
 3636 00cc F9B2     		uxtb	r1, r7
1513:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 3637              		.loc 1 1513 66 view .LVU1351
 3638 00ce 1970     		strb	r1, [r3]
1514:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
 3639              		.loc 1 1514 9 is_stmt 1 view .LVU1352
1514:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
 3640              		.loc 1 1514 68 is_stmt 0 view .LVU1353
 3641 00d0 C7F30721 		ubfx	r1, r7, #8, #8
1514:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
 3642              		.loc 1 1514 66 view .LVU1354
 3643 00d4 1970     		strb	r1, [r3]
1515:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 3644              		.loc 1 1515 9 is_stmt 1 view .LVU1355
1515:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 3645              		.loc 1 1515 68 is_stmt 0 view .LVU1356
 3646 00d6 C7F30741 		ubfx	r1, r7, #16, #8
1515:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 3647              		.loc 1 1515 66 view .LVU1357
 3648 00da 1970     		strb	r1, [r3]
 3649 00dc E5E7     		b	.L225
 3650              	.L222:
1521:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_WRITE0;
 3651              		.loc 1 1521 7 is_stmt 1 view .LVU1358
ARM GAS  /tmp/ccHfptsR.s 			page 132


1521:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_WRITE0;
 3652              		.loc 1 1521 25 is_stmt 0 view .LVU1359
 3653 00de 46F48033 		orr	r3, r6, #65536
1521:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       *(__IO uint8_t *)((uint32_t)(deviceaddress | CMD_AREA)) = NAND_CMD_WRITE0;
 3654              		.loc 1 1521 63 view .LVU1360
 3655 00e2 0021     		movs	r1, #0
 3656 00e4 1970     		strb	r1, [r3]
1522:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 3657              		.loc 1 1522 7 is_stmt 1 view .LVU1361
1522:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 3658              		.loc 1 1522 63 is_stmt 0 view .LVU1362
 3659 00e6 8021     		movs	r1, #128
 3660 00e8 1970     		strb	r1, [r3]
1524:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 3661              		.loc 1 1524 7 is_stmt 1 view .LVU1363
1524:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 3662              		.loc 1 1524 26 is_stmt 0 view .LVU1364
 3663 00ea E96A     		ldr	r1, [r5, #44]
1524:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 3664              		.loc 1 1524 52 view .LVU1365
 3665 00ec 2B6B     		ldr	r3, [r5, #48]
1524:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 3666              		.loc 1 1524 37 view .LVU1366
 3667 00ee 03FB01F3 		mul	r3, r3, r1
1524:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 3668              		.loc 1 1524 10 view .LVU1367
 3669 00f2 B3F5803F 		cmp	r3, #65536
 3670 00f6 0DD2     		bcs	.L226
1526:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = COLUMN_2ND_CYCLE(columnaddress);
 3671              		.loc 1 1526 9 is_stmt 1 view .LVU1368
1526:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = COLUMN_2ND_CYCLE(columnaddress);
 3672              		.loc 1 1526 27 is_stmt 0 view .LVU1369
 3673 00f8 46F40033 		orr	r3, r6, #131072
1526:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = COLUMN_2ND_CYCLE(columnaddress);
 3674              		.loc 1 1526 68 view .LVU1370
 3675 00fc 5FFA8AF1 		uxtb	r1, r10
1526:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = COLUMN_2ND_CYCLE(columnaddress);
 3676              		.loc 1 1526 66 view .LVU1371
 3677 0100 1970     		strb	r1, [r3]
1527:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 3678              		.loc 1 1527 9 is_stmt 1 view .LVU1372
1527:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 3679              		.loc 1 1527 68 is_stmt 0 view .LVU1373
 3680 0102 CAF30721 		ubfx	r1, r10, #8, #8
1527:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 3681              		.loc 1 1527 66 view .LVU1374
 3682 0106 1970     		strb	r1, [r3]
1528:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 3683              		.loc 1 1528 9 is_stmt 1 view .LVU1375
1528:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 3684              		.loc 1 1528 68 is_stmt 0 view .LVU1376
 3685 0108 F9B2     		uxtb	r1, r7
1528:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 3686              		.loc 1 1528 66 view .LVU1377
 3687 010a 1970     		strb	r1, [r3]
1529:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 3688              		.loc 1 1529 9 is_stmt 1 view .LVU1378
ARM GAS  /tmp/ccHfptsR.s 			page 133


1529:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 3689              		.loc 1 1529 68 is_stmt 0 view .LVU1379
 3690 010c C7F30721 		ubfx	r1, r7, #8, #8
1529:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 3691              		.loc 1 1529 66 view .LVU1380
 3692 0110 1970     		strb	r1, [r3]
 3693 0112 CAE7     		b	.L225
 3694              	.L226:
1533:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = COLUMN_2ND_CYCLE(columnaddress);
 3695              		.loc 1 1533 9 is_stmt 1 view .LVU1381
1533:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = COLUMN_2ND_CYCLE(columnaddress);
 3696              		.loc 1 1533 27 is_stmt 0 view .LVU1382
 3697 0114 46F40033 		orr	r3, r6, #131072
1533:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = COLUMN_2ND_CYCLE(columnaddress);
 3698              		.loc 1 1533 68 view .LVU1383
 3699 0118 5FFA8AF1 		uxtb	r1, r10
1533:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = COLUMN_2ND_CYCLE(columnaddress);
 3700              		.loc 1 1533 66 view .LVU1384
 3701 011c 1970     		strb	r1, [r3]
1534:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 3702              		.loc 1 1534 9 is_stmt 1 view .LVU1385
1534:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 3703              		.loc 1 1534 68 is_stmt 0 view .LVU1386
 3704 011e CAF30721 		ubfx	r1, r10, #8, #8
1534:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_1ST_CYCLE(nandaddress);
 3705              		.loc 1 1534 66 view .LVU1387
 3706 0122 1970     		strb	r1, [r3]
1535:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 3707              		.loc 1 1535 9 is_stmt 1 view .LVU1388
1535:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 3708              		.loc 1 1535 68 is_stmt 0 view .LVU1389
 3709 0124 F9B2     		uxtb	r1, r7
1535:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(nandaddress);
 3710              		.loc 1 1535 66 view .LVU1390
 3711 0126 1970     		strb	r1, [r3]
1536:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
 3712              		.loc 1 1536 9 is_stmt 1 view .LVU1391
1536:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
 3713              		.loc 1 1536 68 is_stmt 0 view .LVU1392
 3714 0128 C7F30721 		ubfx	r1, r7, #8, #8
1536:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(nandaddress);
 3715              		.loc 1 1536 66 view .LVU1393
 3716 012c 1970     		strb	r1, [r3]
1537:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 3717              		.loc 1 1537 9 is_stmt 1 view .LVU1394
1537:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 3718              		.loc 1 1537 68 is_stmt 0 view .LVU1395
 3719 012e C7F30741 		ubfx	r1, r7, #16, #8
1537:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 3720              		.loc 1 1537 66 view .LVU1396
 3721 0132 1970     		strb	r1, [r3]
 3722 0134 B9E7     		b	.L225
 3723              	.L237:
1547:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****    
 3724              		.loc 1 1547 5 is_stmt 1 view .LVU1397
1547:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****    
 3725              		.loc 1 1547 23 is_stmt 0 view .LVU1398
ARM GAS  /tmp/ccHfptsR.s 			page 134


 3726 0136 46F48033 		orr	r3, r6, #65536
1547:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****    
 3727              		.loc 1 1547 61 view .LVU1399
 3728 013a 1022     		movs	r2, #16
 3729              	.LVL256:
1547:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****    
 3730              		.loc 1 1547 61 view .LVU1400
 3731 013c 1A70     		strb	r2, [r3]
1550:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 3732              		.loc 1 1550 5 is_stmt 1 view .LVU1401
 3733              	.L228:
1550:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 3734              		.loc 1 1550 10 view .LVU1402
1550:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 3735              		.loc 1 1550 11 is_stmt 0 view .LVU1403
 3736 013e 2846     		mov	r0, r5
 3737 0140 FFF7FEFF 		bl	HAL_NAND_Read_Status
 3738              	.LVL257:
1550:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 3739              		.loc 1 1550 10 view .LVU1404
 3740 0144 4028     		cmp	r0, #64
 3741 0146 0DD0     		beq	.L238
1553:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 3742              		.loc 1 1553 7 is_stmt 1 view .LVU1405
1553:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 3743              		.loc 1 1553 19 is_stmt 0 view .LVU1406
 3744 0148 FFF7FEFF 		bl	HAL_GetTick
 3745              	.LVL258:
 3746 014c 8346     		mov	fp, r0
 3747              	.LVL259:
1555:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 3748              		.loc 1 1555 7 is_stmt 1 view .LVU1407
1555:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 3749              		.loc 1 1555 11 is_stmt 0 view .LVU1408
 3750 014e FFF7FEFF 		bl	HAL_GetTick
 3751              	.LVL260:
1555:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 3752              		.loc 1 1555 25 view .LVU1409
 3753 0152 A0EB0B00 		sub	r0, r0, fp
1555:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
 3754              		.loc 1 1555 9 view .LVU1410
 3755 0156 B0F1807F 		cmp	r0, #16777216
 3756 015a F0D9     		bls	.L228
1557:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
 3757              		.loc 1 1557 16 view .LVU1411
 3758 015c 0320     		movs	r0, #3
 3759              	.LVL261:
 3760              	.L219:
1578:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 3761              		.loc 1 1578 1 view .LVU1412
 3762 015e 03B0     		add	sp, sp, #12
 3763              	.LCFI39:
 3764              		.cfi_remember_state
 3765              		.cfi_def_cfa_offset 36
 3766              		@ sp needed
 3767 0160 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3768              	.LVL262:
ARM GAS  /tmp/ccHfptsR.s 			page 135


 3769              	.L238:
 3770              	.LCFI40:
 3771              		.cfi_restore_state
1562:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 3772              		.loc 1 1562 5 is_stmt 1 view .LVU1413
1565:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 3773              		.loc 1 1565 5 view .LVU1414
1565:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 3774              		.loc 1 1565 24 is_stmt 0 view .LVU1415
 3775 0164 08F1FF38 		add	r8, r8, #-1
 3776              	.LVL263:
1568:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
 3777              		.loc 1 1568 5 is_stmt 1 view .LVU1416
1568:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
 3778              		.loc 1 1568 17 is_stmt 0 view .LVU1417
 3779 0168 0137     		adds	r7, r7, #1
 3780              	.LVL264:
1568:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
 3781              		.loc 1 1568 17 view .LVU1418
 3782 016a 75E7     		b	.L221
 3783              	.L230:
1572:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 3784              		.loc 1 1572 3 is_stmt 1 view .LVU1419
1572:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 3785              		.loc 1 1572 16 is_stmt 0 view .LVU1420
 3786 016c 0123     		movs	r3, #1
 3787 016e 85F82130 		strb	r3, [r5, #33]
1575:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 3788              		.loc 1 1575 3 is_stmt 1 view .LVU1421
1575:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 3789              		.loc 1 1575 3 view .LVU1422
 3790 0172 0020     		movs	r0, #0
 3791 0174 85F82000 		strb	r0, [r5, #32]
1575:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 3792              		.loc 1 1575 3 view .LVU1423
1577:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** }
 3793              		.loc 1 1577 3 view .LVU1424
1577:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** }
 3794              		.loc 1 1577 10 is_stmt 0 view .LVU1425
 3795 0178 F1E7     		b	.L219
 3796              	.LVL265:
 3797              	.L232:
1464:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 3798              		.loc 1 1464 3 view .LVU1426
 3799 017a 0220     		movs	r0, #2
 3800              	.LVL266:
1464:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 3801              		.loc 1 1464 3 view .LVU1427
 3802 017c EFE7     		b	.L219
 3803              		.cfi_endproc
 3804              	.LFE148:
 3806              		.section	.text.HAL_NAND_Erase_Block,"ax",%progbits
 3807              		.align	1
 3808              		.global	HAL_NAND_Erase_Block
 3809              		.syntax unified
 3810              		.thumb
 3811              		.thumb_func
ARM GAS  /tmp/ccHfptsR.s 			page 136


 3812              		.fpu fpv4-sp-d16
 3814              	HAL_NAND_Erase_Block:
 3815              	.LVL267:
 3816              	.LFB149:
1588:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   uint32_t deviceaddress = 0U;
 3817              		.loc 1 1588 1 is_stmt 1 view -0
 3818              		.cfi_startproc
 3819              		@ args = 0, pretend = 0, frame = 0
 3820              		@ frame_needed = 0, uses_anonymous_args = 0
1588:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   uint32_t deviceaddress = 0U;
 3821              		.loc 1 1588 1 is_stmt 0 view .LVU1429
 3822 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3823              	.LCFI41:
 3824              		.cfi_def_cfa_offset 24
 3825              		.cfi_offset 3, -24
 3826              		.cfi_offset 4, -20
 3827              		.cfi_offset 5, -16
 3828              		.cfi_offset 6, -12
 3829              		.cfi_offset 7, -8
 3830              		.cfi_offset 14, -4
1589:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   uint32_t tickstart = 0U;
 3831              		.loc 1 1589 3 is_stmt 1 view .LVU1430
 3832              	.LVL268:
1590:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 3833              		.loc 1 1590 3 view .LVU1431
1593:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 3834              		.loc 1 1593 3 view .LVU1432
1593:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 3835              		.loc 1 1593 3 view .LVU1433
 3836 0002 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 3837 0006 012B     		cmp	r3, #1
 3838 0008 58D0     		beq	.L244
 3839 000a 0446     		mov	r4, r0
1593:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 3840              		.loc 1 1593 3 discriminator 2 view .LVU1434
 3841 000c 0123     		movs	r3, #1
 3842 000e 80F82030 		strb	r3, [r0, #32]
1593:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 3843              		.loc 1 1593 3 discriminator 2 view .LVU1435
1596:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 3844              		.loc 1 1596 3 discriminator 2 view .LVU1436
1596:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 3845              		.loc 1 1596 11 is_stmt 0 discriminator 2 view .LVU1437
 3846 0012 90F82100 		ldrb	r0, [r0, #33]	@ zero_extendqisi2
 3847              	.LVL269:
1596:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 3848              		.loc 1 1596 11 discriminator 2 view .LVU1438
 3849 0016 C0B2     		uxtb	r0, r0
1596:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 3850              		.loc 1 1596 5 discriminator 2 view .LVU1439
 3851 0018 0228     		cmp	r0, #2
 3852 001a 4ED0     		beq	.L240
1602:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 3853              		.loc 1 1602 3 is_stmt 1 view .LVU1440
1602:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 3854              		.loc 1 1602 17 is_stmt 0 view .LVU1441
 3855 001c 6368     		ldr	r3, [r4, #4]
ARM GAS  /tmp/ccHfptsR.s 			page 137


1602:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 3856              		.loc 1 1602 5 view .LVU1442
 3857 001e 102B     		cmp	r3, #16
 3858 0020 45D0     		beq	.L247
1608:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
 3859              		.loc 1 1608 19 view .LVU1443
 3860 0022 4FF00042 		mov	r2, #-2147483648
 3861              	.L241:
 3862              	.LVL270:
1612:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 3863              		.loc 1 1612 3 is_stmt 1 view .LVU1444
1612:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 3864              		.loc 1 1612 16 is_stmt 0 view .LVU1445
 3865 0026 0223     		movs	r3, #2
 3866 0028 84F82130 		strb	r3, [r4, #33]
1615:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 3867              		.loc 1 1615 3 is_stmt 1 view .LVU1446
1615:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 3868              		.loc 1 1615 21 is_stmt 0 view .LVU1447
 3869 002c 42F48030 		orr	r0, r2, #65536
1615:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 3870              		.loc 1 1615 59 view .LVU1448
 3871 0030 6023     		movs	r3, #96
 3872 0032 0370     		strb	r3, [r0]
1617:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(ARRAY_ADDRESS(pAddress,
 3873              		.loc 1 1617 3 is_stmt 1 view .LVU1449
1617:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(ARRAY_ADDRESS(pAddress,
 3874              		.loc 1 1617 62 is_stmt 0 view .LVU1450
 3875 0034 0D88     		ldrh	r5, [r1]
 3876 0036 8E88     		ldrh	r6, [r1, #4]
 3877 0038 4B88     		ldrh	r3, [r1, #2]
 3878 003a A76B     		ldr	r7, [r4, #56]
 3879 003c 07FB0363 		mla	r3, r7, r3, r6
 3880 0040 E66A     		ldr	r6, [r4, #44]
1617:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(ARRAY_ADDRESS(pAddress,
 3881              		.loc 1 1617 21 view .LVU1451
 3882 0042 42F40032 		orr	r2, r2, #131072
 3883              	.LVL271:
1617:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(ARRAY_ADDRESS(pAddress,
 3884              		.loc 1 1617 62 view .LVU1452
 3885 0046 13FB0653 		smlabb	r3, r3, r6, r5
 3886 004a DBB2     		uxtb	r3, r3
1617:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_2ND_CYCLE(ARRAY_ADDRESS(pAddress,
 3887              		.loc 1 1617 60 view .LVU1453
 3888 004c 1370     		strb	r3, [r2]
1618:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(ARRAY_ADDRESS(pAddress,
 3889              		.loc 1 1618 3 is_stmt 1 view .LVU1454
1618:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(ARRAY_ADDRESS(pAddress,
 3890              		.loc 1 1618 62 is_stmt 0 view .LVU1455
 3891 004e 0D88     		ldrh	r5, [r1]
 3892 0050 8E88     		ldrh	r6, [r1, #4]
 3893 0052 4B88     		ldrh	r3, [r1, #2]
 3894 0054 A76B     		ldr	r7, [r4, #56]
 3895 0056 07FB0363 		mla	r3, r7, r3, r6
 3896 005a E66A     		ldr	r6, [r4, #44]
 3897 005c 06FB0353 		mla	r3, r6, r3, r5
 3898 0060 C3F30723 		ubfx	r3, r3, #8, #8
ARM GAS  /tmp/ccHfptsR.s 			page 138


1618:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   *(__IO uint8_t *)((uint32_t)(deviceaddress | ADDR_AREA)) = ADDR_3RD_CYCLE(ARRAY_ADDRESS(pAddress,
 3899              		.loc 1 1618 60 view .LVU1456
 3900 0064 1370     		strb	r3, [r2]
1619:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 3901              		.loc 1 1619 3 is_stmt 1 view .LVU1457
1619:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 3902              		.loc 1 1619 62 is_stmt 0 view .LVU1458
 3903 0066 0D88     		ldrh	r5, [r1]
 3904 0068 8E88     		ldrh	r6, [r1, #4]
 3905 006a 4B88     		ldrh	r3, [r1, #2]
 3906 006c A16B     		ldr	r1, [r4, #56]
 3907              	.LVL272:
1619:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 3908              		.loc 1 1619 62 view .LVU1459
 3909 006e 01FB0363 		mla	r3, r1, r3, r6
 3910 0072 E16A     		ldr	r1, [r4, #44]
 3911 0074 01FB0353 		mla	r3, r1, r3, r5
 3912 0078 C3F30743 		ubfx	r3, r3, #16, #8
1619:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
 3913              		.loc 1 1619 60 view .LVU1460
 3914 007c 1370     		strb	r3, [r2]
1621:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 3915              		.loc 1 1621 3 is_stmt 1 view .LVU1461
1621:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 3916              		.loc 1 1621 59 is_stmt 0 view .LVU1462
 3917 007e D023     		movs	r3, #208
 3918 0080 0370     		strb	r3, [r0]
1624:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 3919              		.loc 1 1624 3 is_stmt 1 view .LVU1463
1624:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 3920              		.loc 1 1624 16 is_stmt 0 view .LVU1464
 3921 0082 0123     		movs	r3, #1
 3922 0084 84F82130 		strb	r3, [r4, #33]
1627:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 3923              		.loc 1 1627 3 is_stmt 1 view .LVU1465
1627:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 3924              		.loc 1 1627 15 is_stmt 0 view .LVU1466
 3925 0088 FFF7FEFF 		bl	HAL_GetTick
 3926              	.LVL273:
 3927 008c 0546     		mov	r5, r0
 3928              	.LVL274:
1630:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 3929              		.loc 1 1630 3 is_stmt 1 view .LVU1467
 3930              	.L242:
1630:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 3931              		.loc 1 1630 8 view .LVU1468
1630:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 3932              		.loc 1 1630 9 is_stmt 0 view .LVU1469
 3933 008e 2046     		mov	r0, r4
 3934 0090 FFF7FEFF 		bl	HAL_NAND_Read_Status
 3935              	.LVL275:
1630:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
 3936              		.loc 1 1630 8 view .LVU1470
 3937 0094 4028     		cmp	r0, #64
 3938 0096 0DD0     		beq	.L248
1632:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 3939              		.loc 1 1632 5 is_stmt 1 view .LVU1471
ARM GAS  /tmp/ccHfptsR.s 			page 139


1632:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 3940              		.loc 1 1632 9 is_stmt 0 view .LVU1472
 3941 0098 FFF7FEFF 		bl	HAL_GetTick
 3942              	.LVL276:
1632:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 3943              		.loc 1 1632 23 view .LVU1473
 3944 009c 431B     		subs	r3, r0, r5
1632:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
 3945              		.loc 1 1632 7 view .LVU1474
 3946 009e B3F1807F 		cmp	r3, #16777216
 3947 00a2 F4D9     		bls	.L242
1635:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 3948              		.loc 1 1635 7 is_stmt 1 view .LVU1475
1635:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 3949              		.loc 1 1635 7 view .LVU1476
 3950 00a4 0023     		movs	r3, #0
 3951 00a6 84F82030 		strb	r3, [r4, #32]
1635:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 3952              		.loc 1 1635 7 view .LVU1477
1637:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     } 
 3953              		.loc 1 1637 7 view .LVU1478
1637:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     } 
 3954              		.loc 1 1637 14 is_stmt 0 view .LVU1479
 3955 00aa 0320     		movs	r0, #3
 3956 00ac 05E0     		b	.L240
 3957              	.LVL277:
 3958              	.L247:
1604:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
 3959              		.loc 1 1604 19 view .LVU1480
 3960 00ae 4FF0E042 		mov	r2, #1879048192
 3961 00b2 B8E7     		b	.L241
 3962              	.LVL278:
 3963              	.L248:
1642:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 3964              		.loc 1 1642 3 is_stmt 1 view .LVU1481
1642:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 3965              		.loc 1 1642 3 view .LVU1482
 3966 00b4 0020     		movs	r0, #0
 3967 00b6 84F82000 		strb	r0, [r4, #32]
1642:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 3968              		.loc 1 1642 3 view .LVU1483
1644:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** }
 3969              		.loc 1 1644 3 view .LVU1484
 3970              	.LVL279:
 3971              	.L240:
1645:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
 3972              		.loc 1 1645 1 is_stmt 0 view .LVU1485
 3973 00ba F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3974              	.LVL280:
 3975              	.L244:
1593:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 3976              		.loc 1 1593 3 view .LVU1486
 3977 00bc 0220     		movs	r0, #2
 3978              	.LVL281:
1593:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
 3979              		.loc 1 1593 3 view .LVU1487
 3980 00be FCE7     		b	.L240
ARM GAS  /tmp/ccHfptsR.s 			page 140


 3981              		.cfi_endproc
 3982              	.LFE149:
 3984              		.section	.text.HAL_NAND_Address_Inc,"ax",%progbits
 3985              		.align	1
 3986              		.global	HAL_NAND_Address_Inc
 3987              		.syntax unified
 3988              		.thumb
 3989              		.thumb_func
 3990              		.fpu fpv4-sp-d16
 3992              	HAL_NAND_Address_Inc:
 3993              	.LVL282:
 3994              	.LFB151:
1686:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
1687:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** /**
1688:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @brief  Increment the NAND memory address
1689:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @param  hnand pointer to a NAND_HandleTypeDef structure that contains
1690:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   *                the configuration information for NAND module.
1691:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @param pAddress pointer to NAND address structure
1692:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @retval The new status of the increment address operation. It can be:
1693:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   *           - NAND_VALID_ADDRESS: When the new address is valid address
1694:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   *           - NAND_INVALID_ADDRESS: When the new address is invalid address
1695:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   */
1696:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** uint32_t HAL_NAND_Address_Inc(NAND_HandleTypeDef *hnand, NAND_AddressTypeDef *pAddress)
1697:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** {
 3995              		.loc 1 1697 1 is_stmt 1 view -0
 3996              		.cfi_startproc
 3997              		@ args = 0, pretend = 0, frame = 0
 3998              		@ frame_needed = 0, uses_anonymous_args = 0
 3999              		@ link register save eliminated.
1698:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   uint32_t status = NAND_VALID_ADDRESS;
 4000              		.loc 1 1698 3 view .LVU1489
1699:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****  
1700:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Increment page address */
1701:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   pAddress->Page++;
 4001              		.loc 1 1701 3 view .LVU1490
 4002              		.loc 1 1701 11 is_stmt 0 view .LVU1491
 4003 0000 0B88     		ldrh	r3, [r1]
 4004              		.loc 1 1701 17 view .LVU1492
 4005 0002 0133     		adds	r3, r3, #1
 4006 0004 9BB2     		uxth	r3, r3
 4007 0006 0B80     		strh	r3, [r1]	@ movhi
1702:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
1703:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Check NAND address is valid */
1704:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   if(pAddress->Page == hnand->Config.BlockSize)
 4008              		.loc 1 1704 3 is_stmt 1 view .LVU1493
 4009              		.loc 1 1704 37 is_stmt 0 view .LVU1494
 4010 0008 C26A     		ldr	r2, [r0, #44]
 4011              		.loc 1 1704 5 view .LVU1495
 4012 000a 9342     		cmp	r3, r2
 4013 000c 02D0     		beq	.L254
1698:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****  
 4014              		.loc 1 1698 12 view .LVU1496
 4015 000e 4FF48070 		mov	r0, #256
 4016              	.LVL283:
1698:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****  
 4017              		.loc 1 1698 12 view .LVU1497
 4018 0012 7047     		bx	lr
ARM GAS  /tmp/ccHfptsR.s 			page 141


 4019              	.LVL284:
 4020              	.L254:
1705:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
1706:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     pAddress->Page = 0U;
 4021              		.loc 1 1706 5 is_stmt 1 view .LVU1498
 4022              		.loc 1 1706 20 is_stmt 0 view .LVU1499
 4023 0014 0023     		movs	r3, #0
 4024 0016 0B80     		strh	r3, [r1]	@ movhi
1707:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     pAddress->Block++;
 4025              		.loc 1 1707 5 is_stmt 1 view .LVU1500
 4026              		.loc 1 1707 13 is_stmt 0 view .LVU1501
 4027 0018 8B88     		ldrh	r3, [r1, #4]
 4028              		.loc 1 1707 20 view .LVU1502
 4029 001a 0133     		adds	r3, r3, #1
 4030 001c 9BB2     		uxth	r3, r3
 4031 001e 8B80     		strh	r3, [r1, #4]	@ movhi
1708:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
1709:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     if(pAddress->Block == hnand->Config.PlaneSize)
 4032              		.loc 1 1709 5 is_stmt 1 view .LVU1503
 4033              		.loc 1 1709 40 is_stmt 0 view .LVU1504
 4034 0020 826B     		ldr	r2, [r0, #56]
 4035              		.loc 1 1709 7 view .LVU1505
 4036 0022 9342     		cmp	r3, r2
 4037 0024 02D0     		beq	.L255
1698:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****  
 4038              		.loc 1 1698 12 view .LVU1506
 4039 0026 4FF48070 		mov	r0, #256
 4040              	.LVL285:
1698:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****  
 4041              		.loc 1 1698 12 view .LVU1507
 4042 002a 7047     		bx	lr
 4043              	.LVL286:
 4044              	.L255:
1710:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
1711:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       pAddress->Block = 0U;
 4045              		.loc 1 1711 7 is_stmt 1 view .LVU1508
 4046              		.loc 1 1711 23 is_stmt 0 view .LVU1509
 4047 002c 0023     		movs	r3, #0
 4048 002e 8B80     		strh	r3, [r1, #4]	@ movhi
1712:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       pAddress->Plane++;
 4049              		.loc 1 1712 7 is_stmt 1 view .LVU1510
 4050              		.loc 1 1712 15 is_stmt 0 view .LVU1511
 4051 0030 4B88     		ldrh	r3, [r1, #2]
 4052              		.loc 1 1712 22 view .LVU1512
 4053 0032 0133     		adds	r3, r3, #1
 4054 0034 9BB2     		uxth	r3, r3
 4055 0036 4B80     		strh	r3, [r1, #2]	@ movhi
1713:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
1714:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       if(pAddress->Plane == (hnand->Config.PlaneNbr))
 4056              		.loc 1 1714 7 is_stmt 1 view .LVU1513
 4057              		.loc 1 1714 43 is_stmt 0 view .LVU1514
 4058 0038 426B     		ldr	r2, [r0, #52]
 4059              		.loc 1 1714 9 view .LVU1515
 4060 003a 9342     		cmp	r3, r2
 4061 003c 02D0     		beq	.L253
1698:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****  
 4062              		.loc 1 1698 12 view .LVU1516
ARM GAS  /tmp/ccHfptsR.s 			page 142


 4063 003e 4FF48070 		mov	r0, #256
 4064              	.LVL287:
1698:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****  
 4065              		.loc 1 1698 12 view .LVU1517
 4066 0042 7047     		bx	lr
 4067              	.LVL288:
 4068              	.L253:
1715:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       {
1716:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****         status = NAND_INVALID_ADDRESS;
 4069              		.loc 1 1716 16 view .LVU1518
 4070 0044 4FF40070 		mov	r0, #512
 4071              	.LVL289:
1717:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       }
1718:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     }
1719:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   } 
1720:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
1721:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   return (status);
 4072              		.loc 1 1721 3 is_stmt 1 view .LVU1519
1722:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** }
 4073              		.loc 1 1722 1 is_stmt 0 view .LVU1520
 4074 0048 7047     		bx	lr
 4075              		.cfi_endproc
 4076              	.LFE151:
 4078              		.section	.text.HAL_NAND_ECC_Enable,"ax",%progbits
 4079              		.align	1
 4080              		.global	HAL_NAND_ECC_Enable
 4081              		.syntax unified
 4082              		.thumb
 4083              		.thumb_func
 4084              		.fpu fpv4-sp-d16
 4086              	HAL_NAND_ECC_Enable:
 4087              	.LVL290:
 4088              	.LFB152:
1723:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
1724:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** #if (USE_HAL_NAND_REGISTER_CALLBACKS == 1)
1725:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** /**
1726:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @brief  Register a User NAND Callback
1727:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   *         To be used instead of the weak (surcharged) predefined callback
1728:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @param hnand : NAND handle
1729:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @param CallbackId : ID of the callback to be registered
1730:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   *        This parameter can be one of the following values:
1731:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   *          @arg @ref HAL_NAND_MSP_INIT_CB_ID       NAND MspInit callback ID
1732:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   *          @arg @ref HAL_NAND_MSP_DEINIT_CB_ID     NAND MspDeInit callback ID
1733:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   *          @arg @ref HAL_NAND_IT_CB_ID             NAND IT callback ID
1734:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @param pCallback : pointer to the Callback function
1735:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @retval status
1736:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   */
1737:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** HAL_StatusTypeDef HAL_NAND_RegisterCallback (NAND_HandleTypeDef *hnand, HAL_NAND_CallbackIDTypeDef 
1738:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** {
1739:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   HAL_StatusTypeDef status = HAL_OK;
1740:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
1741:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   if(pCallback == NULL)
1742:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
1743:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     return HAL_ERROR;
1744:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
1745:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
1746:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Process locked */
ARM GAS  /tmp/ccHfptsR.s 			page 143


1747:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   __HAL_LOCK(hnand);
1748:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
1749:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   if(hnand->State == HAL_NAND_STATE_READY)
1750:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
1751:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     switch (CallbackId)
1752:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
1753:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     case HAL_NAND_MSP_INIT_CB_ID :
1754:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       hnand->MspInitCallback = pCallback;
1755:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       break;
1756:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     case HAL_NAND_MSP_DEINIT_CB_ID :
1757:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       hnand->MspDeInitCallback = pCallback;
1758:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       break;
1759:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     case HAL_NAND_IT_CB_ID :
1760:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       hnand->ItCallback = pCallback;
1761:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       break;
1762:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     default :
1763:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       /* update return status */
1764:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       status =  HAL_ERROR;
1765:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       break;
1766:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     }
1767:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
1768:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   else if(hnand->State == HAL_NAND_STATE_RESET)
1769:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
1770:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     switch (CallbackId)
1771:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
1772:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     case HAL_NAND_MSP_INIT_CB_ID :
1773:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       hnand->MspInitCallback = pCallback;
1774:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       break;
1775:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     case HAL_NAND_MSP_DEINIT_CB_ID :
1776:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       hnand->MspDeInitCallback = pCallback;
1777:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       break;
1778:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     default :
1779:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       /* update return status */
1780:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       status =  HAL_ERROR;
1781:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       break;
1782:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     }
1783:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
1784:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   else
1785:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
1786:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     /* update return status */
1787:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     status =  HAL_ERROR;
1788:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
1789:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
1790:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Release Lock */
1791:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   __HAL_UNLOCK(hnand);
1792:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   return status;
1793:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** }
1794:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
1795:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** /**
1796:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @brief  Unregister a User NAND Callback
1797:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   *         NAND Callback is redirected to the weak (surcharged) predefined callback
1798:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @param hnand : NAND handle
1799:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @param CallbackId : ID of the callback to be unregistered
1800:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   *        This parameter can be one of the following values:
1801:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   *          @arg @ref HAL_NAND_MSP_INIT_CB_ID       NAND MspInit callback ID
1802:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   *          @arg @ref HAL_NAND_MSP_DEINIT_CB_ID     NAND MspDeInit callback ID
1803:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   *          @arg @ref HAL_NAND_IT_CB_ID             NAND IT callback ID
ARM GAS  /tmp/ccHfptsR.s 			page 144


1804:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @retval status
1805:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   */
1806:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** HAL_StatusTypeDef HAL_NAND_UnRegisterCallback (NAND_HandleTypeDef *hnand, HAL_NAND_CallbackIDTypeDe
1807:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** {
1808:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   HAL_StatusTypeDef status = HAL_OK;
1809:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
1810:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Process locked */
1811:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   __HAL_LOCK(hnand);
1812:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
1813:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   if(hnand->State == HAL_NAND_STATE_READY)
1814:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
1815:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     switch (CallbackId)
1816:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
1817:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     case HAL_NAND_MSP_INIT_CB_ID :
1818:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       hnand->MspInitCallback = HAL_NAND_MspInit;
1819:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       break;
1820:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     case HAL_NAND_MSP_DEINIT_CB_ID :
1821:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       hnand->MspDeInitCallback = HAL_NAND_MspDeInit;
1822:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       break;
1823:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     case HAL_NAND_IT_CB_ID :
1824:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       hnand->ItCallback = HAL_NAND_ITCallback;
1825:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       break;
1826:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     default :
1827:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       /* update return status */
1828:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       status =  HAL_ERROR;
1829:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       break;
1830:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     }
1831:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
1832:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   else if(hnand->State == HAL_NAND_STATE_RESET)
1833:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
1834:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     switch (CallbackId)
1835:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     {
1836:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     case HAL_NAND_MSP_INIT_CB_ID :
1837:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       hnand->MspInitCallback = HAL_NAND_MspInit;
1838:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       break;
1839:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     case HAL_NAND_MSP_DEINIT_CB_ID :
1840:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       hnand->MspDeInitCallback = HAL_NAND_MspDeInit;
1841:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       break;
1842:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     default :
1843:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       /* update return status */
1844:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       status =  HAL_ERROR;
1845:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****       break;
1846:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     }
1847:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
1848:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   else
1849:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
1850:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     /* update return status */
1851:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     status =  HAL_ERROR;
1852:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
1853:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
1854:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Release Lock */
1855:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   __HAL_UNLOCK(hnand);
1856:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   return status;
1857:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** }
1858:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** #endif
1859:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
1860:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** /**
ARM GAS  /tmp/ccHfptsR.s 			page 145


1861:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @}
1862:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   */
1863:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
1864:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** /** @defgroup NAND_Exported_Functions_Group3 Peripheral Control functions 
1865:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****  *  @brief   management functions 
1866:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****  *
1867:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** @verbatim   
1868:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   ==============================================================================
1869:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****                          ##### NAND Control functions #####
1870:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   ==============================================================================  
1871:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   [..]
1872:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     This subsection provides a set of functions allowing to control dynamically
1873:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     the NAND interface.
1874:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
1875:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** @endverbatim
1876:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @{
1877:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   */ 
1878:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
1879:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
1880:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** /**
1881:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @brief  Enables dynamically NAND ECC feature.
1882:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @param  hnand pointer to a NAND_HandleTypeDef structure that contains
1883:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   *                the configuration information for NAND module.
1884:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @retval HAL status
1885:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   */    
1886:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** HAL_StatusTypeDef  HAL_NAND_ECC_Enable(NAND_HandleTypeDef *hnand)
1887:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** {
 4089              		.loc 1 1887 1 is_stmt 1 view -0
 4090              		.cfi_startproc
 4091              		@ args = 0, pretend = 0, frame = 0
 4092              		@ frame_needed = 0, uses_anonymous_args = 0
 4093              		.loc 1 1887 1 is_stmt 0 view .LVU1522
 4094 0000 10B5     		push	{r4, lr}
 4095              	.LCFI42:
 4096              		.cfi_def_cfa_offset 8
 4097              		.cfi_offset 4, -8
 4098              		.cfi_offset 14, -4
 4099 0002 0446     		mov	r4, r0
1888:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Check the NAND controller state */
1889:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   if(hnand->State == HAL_NAND_STATE_BUSY)
 4100              		.loc 1 1889 3 is_stmt 1 view .LVU1523
 4101              		.loc 1 1889 11 is_stmt 0 view .LVU1524
 4102 0004 90F82100 		ldrb	r0, [r0, #33]	@ zero_extendqisi2
 4103              	.LVL291:
 4104              		.loc 1 1889 11 view .LVU1525
 4105 0008 C0B2     		uxtb	r0, r0
 4106              		.loc 1 1889 5 view .LVU1526
 4107 000a 0228     		cmp	r0, #2
 4108 000c 0AD0     		beq	.L257
1890:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
1891:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****      return HAL_BUSY;
1892:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
1893:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
1894:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Update the NAND state */
1895:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   hnand->State = HAL_NAND_STATE_BUSY;
 4109              		.loc 1 1895 3 is_stmt 1 view .LVU1527
 4110              		.loc 1 1895 16 is_stmt 0 view .LVU1528
ARM GAS  /tmp/ccHfptsR.s 			page 146


 4111 000e 0223     		movs	r3, #2
 4112 0010 84F82130 		strb	r3, [r4, #33]
1896:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****    
1897:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Enable ECC feature */
1898:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   FMC_NAND_ECC_Enable(hnand->Instance, hnand->Init.NandBank);
 4113              		.loc 1 1898 3 is_stmt 1 view .LVU1529
 4114 0014 6168     		ldr	r1, [r4, #4]
 4115 0016 2068     		ldr	r0, [r4]
 4116 0018 FFF7FEFF 		bl	FSMC_NAND_ECC_Enable
 4117              	.LVL292:
1899:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
1900:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Update the NAND state */
1901:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   hnand->State = HAL_NAND_STATE_READY;
 4118              		.loc 1 1901 3 view .LVU1530
 4119              		.loc 1 1901 16 is_stmt 0 view .LVU1531
 4120 001c 0123     		movs	r3, #1
 4121 001e 84F82130 		strb	r3, [r4, #33]
1902:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
1903:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   return HAL_OK;
 4122              		.loc 1 1903 3 is_stmt 1 view .LVU1532
 4123              		.loc 1 1903 10 is_stmt 0 view .LVU1533
 4124 0022 0020     		movs	r0, #0
 4125              	.L257:
1904:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** }
 4126              		.loc 1 1904 1 view .LVU1534
 4127 0024 10BD     		pop	{r4, pc}
 4128              		.loc 1 1904 1 view .LVU1535
 4129              		.cfi_endproc
 4130              	.LFE152:
 4132              		.section	.text.HAL_NAND_ECC_Disable,"ax",%progbits
 4133              		.align	1
 4134              		.global	HAL_NAND_ECC_Disable
 4135              		.syntax unified
 4136              		.thumb
 4137              		.thumb_func
 4138              		.fpu fpv4-sp-d16
 4140              	HAL_NAND_ECC_Disable:
 4141              	.LVL293:
 4142              	.LFB153:
1905:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
1906:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** /**
1907:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @brief  Disables dynamically FMC_NAND ECC feature.
1908:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @param  hnand pointer to a NAND_HandleTypeDef structure that contains
1909:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   *                the configuration information for NAND module.
1910:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @retval HAL status
1911:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   */  
1912:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** HAL_StatusTypeDef  HAL_NAND_ECC_Disable(NAND_HandleTypeDef *hnand)
1913:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** {
 4143              		.loc 1 1913 1 is_stmt 1 view -0
 4144              		.cfi_startproc
 4145              		@ args = 0, pretend = 0, frame = 0
 4146              		@ frame_needed = 0, uses_anonymous_args = 0
 4147              		.loc 1 1913 1 is_stmt 0 view .LVU1537
 4148 0000 10B5     		push	{r4, lr}
 4149              	.LCFI43:
 4150              		.cfi_def_cfa_offset 8
 4151              		.cfi_offset 4, -8
ARM GAS  /tmp/ccHfptsR.s 			page 147


 4152              		.cfi_offset 14, -4
 4153 0002 0446     		mov	r4, r0
1914:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Check the NAND controller state */
1915:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   if(hnand->State == HAL_NAND_STATE_BUSY)
 4154              		.loc 1 1915 3 is_stmt 1 view .LVU1538
 4155              		.loc 1 1915 11 is_stmt 0 view .LVU1539
 4156 0004 90F82100 		ldrb	r0, [r0, #33]	@ zero_extendqisi2
 4157              	.LVL294:
 4158              		.loc 1 1915 11 view .LVU1540
 4159 0008 C0B2     		uxtb	r0, r0
 4160              		.loc 1 1915 5 view .LVU1541
 4161 000a 0228     		cmp	r0, #2
 4162 000c 0AD0     		beq	.L260
1916:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
1917:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****      return HAL_BUSY;
1918:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
1919:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
1920:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Update the NAND state */
1921:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   hnand->State = HAL_NAND_STATE_BUSY;
 4163              		.loc 1 1921 3 is_stmt 1 view .LVU1542
 4164              		.loc 1 1921 16 is_stmt 0 view .LVU1543
 4165 000e 0223     		movs	r3, #2
 4166 0010 84F82130 		strb	r3, [r4, #33]
1922:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
1923:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Disable ECC feature */
1924:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   FMC_NAND_ECC_Disable(hnand->Instance, hnand->Init.NandBank);
 4167              		.loc 1 1924 3 is_stmt 1 view .LVU1544
 4168 0014 6168     		ldr	r1, [r4, #4]
 4169 0016 2068     		ldr	r0, [r4]
 4170 0018 FFF7FEFF 		bl	FSMC_NAND_ECC_Disable
 4171              	.LVL295:
1925:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
1926:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Update the NAND state */
1927:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   hnand->State = HAL_NAND_STATE_READY;
 4172              		.loc 1 1927 3 view .LVU1545
 4173              		.loc 1 1927 16 is_stmt 0 view .LVU1546
 4174 001c 0123     		movs	r3, #1
 4175 001e 84F82130 		strb	r3, [r4, #33]
1928:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
1929:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   return HAL_OK;  
 4176              		.loc 1 1929 3 is_stmt 1 view .LVU1547
 4177              		.loc 1 1929 10 is_stmt 0 view .LVU1548
 4178 0022 0020     		movs	r0, #0
 4179              	.L260:
1930:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** }
 4180              		.loc 1 1930 1 view .LVU1549
 4181 0024 10BD     		pop	{r4, pc}
 4182              		.loc 1 1930 1 view .LVU1550
 4183              		.cfi_endproc
 4184              	.LFE153:
 4186              		.section	.text.HAL_NAND_GetECC,"ax",%progbits
 4187              		.align	1
 4188              		.global	HAL_NAND_GetECC
 4189              		.syntax unified
 4190              		.thumb
 4191              		.thumb_func
 4192              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccHfptsR.s 			page 148


 4194              	HAL_NAND_GetECC:
 4195              	.LVL296:
 4196              	.LFB154:
1931:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
1932:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** /**
1933:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @brief  Disables dynamically NAND ECC feature.
1934:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @param  hnand pointer to a NAND_HandleTypeDef structure that contains
1935:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   *                the configuration information for NAND module.
1936:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @param  ECCval pointer to ECC value 
1937:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @param  Timeout maximum timeout to wait    
1938:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @retval HAL status
1939:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   */
1940:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** HAL_StatusTypeDef  HAL_NAND_GetECC(NAND_HandleTypeDef *hnand, uint32_t *ECCval, uint32_t Timeout)
1941:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** {
 4197              		.loc 1 1941 1 is_stmt 1 view -0
 4198              		.cfi_startproc
 4199              		@ args = 0, pretend = 0, frame = 0
 4200              		@ frame_needed = 0, uses_anonymous_args = 0
 4201              		.loc 1 1941 1 is_stmt 0 view .LVU1552
 4202 0000 38B5     		push	{r3, r4, r5, lr}
 4203              	.LCFI44:
 4204              		.cfi_def_cfa_offset 16
 4205              		.cfi_offset 3, -16
 4206              		.cfi_offset 4, -12
 4207              		.cfi_offset 5, -8
 4208              		.cfi_offset 14, -4
 4209 0002 0546     		mov	r5, r0
1942:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   HAL_StatusTypeDef status = HAL_OK;
 4210              		.loc 1 1942 3 is_stmt 1 view .LVU1553
 4211              	.LVL297:
1943:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
1944:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Check the NAND controller state */
1945:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   if(hnand->State == HAL_NAND_STATE_BUSY)
 4212              		.loc 1 1945 3 view .LVU1554
 4213              		.loc 1 1945 11 is_stmt 0 view .LVU1555
 4214 0004 90F82140 		ldrb	r4, [r0, #33]	@ zero_extendqisi2
 4215 0008 E0B2     		uxtb	r0, r4
 4216              	.LVL298:
 4217              		.loc 1 1945 5 view .LVU1556
 4218 000a 0228     		cmp	r0, #2
 4219 000c 0AD0     		beq	.L263
 4220 000e 1346     		mov	r3, r2
1946:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   {
1947:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****      return HAL_BUSY;
1948:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   }
1949:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
1950:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Update the NAND state */
1951:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   hnand->State = HAL_NAND_STATE_BUSY;  
 4221              		.loc 1 1951 3 is_stmt 1 view .LVU1557
 4222              		.loc 1 1951 16 is_stmt 0 view .LVU1558
 4223 0010 0222     		movs	r2, #2
 4224              	.LVL299:
 4225              		.loc 1 1951 16 view .LVU1559
 4226 0012 85F82120 		strb	r2, [r5, #33]
1952:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****    
1953:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Get NAND ECC value */
1954:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   status = FMC_NAND_GetECC(hnand->Instance, ECCval, hnand->Init.NandBank, Timeout);
ARM GAS  /tmp/ccHfptsR.s 			page 149


 4227              		.loc 1 1954 3 is_stmt 1 view .LVU1560
 4228              		.loc 1 1954 12 is_stmt 0 view .LVU1561
 4229 0016 6A68     		ldr	r2, [r5, #4]
 4230 0018 2868     		ldr	r0, [r5]
 4231 001a FFF7FEFF 		bl	FSMC_NAND_GetECC
 4232              	.LVL300:
1955:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
1956:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   /* Update the NAND state */
1957:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   hnand->State = HAL_NAND_STATE_READY;
 4233              		.loc 1 1957 3 is_stmt 1 view .LVU1562
 4234              		.loc 1 1957 16 is_stmt 0 view .LVU1563
 4235 001e 0123     		movs	r3, #1
 4236 0020 85F82130 		strb	r3, [r5, #33]
1958:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
1959:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   return status;  
 4237              		.loc 1 1959 3 is_stmt 1 view .LVU1564
 4238              	.LVL301:
 4239              	.L263:
1960:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** }
 4240              		.loc 1 1960 1 is_stmt 0 view .LVU1565
 4241 0024 38BD     		pop	{r3, r4, r5, pc}
 4242              		.loc 1 1960 1 view .LVU1566
 4243              		.cfi_endproc
 4244              	.LFE154:
 4246              		.section	.text.HAL_NAND_GetState,"ax",%progbits
 4247              		.align	1
 4248              		.global	HAL_NAND_GetState
 4249              		.syntax unified
 4250              		.thumb
 4251              		.thumb_func
 4252              		.fpu fpv4-sp-d16
 4254              	HAL_NAND_GetState:
 4255              	.LVL302:
 4256              	.LFB155:
1961:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
1962:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** /**
1963:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @}
1964:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   */
1965:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
1966:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     
1967:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** /** @defgroup NAND_Exported_Functions_Group4 Peripheral State functions 
1968:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****  *  @brief   Peripheral State functions 
1969:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****  *
1970:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** @verbatim   
1971:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   ==============================================================================
1972:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****                          ##### NAND State functions #####
1973:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   ==============================================================================  
1974:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   [..]
1975:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     This subsection permits to get in run-time the status of the NAND controller 
1976:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****     and the data flow.
1977:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** 
1978:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** @endverbatim
1979:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @{
1980:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   */
1981:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   
1982:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** /**
1983:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @brief  return the NAND state
ARM GAS  /tmp/ccHfptsR.s 			page 150


1984:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @param  hnand pointer to a NAND_HandleTypeDef structure that contains
1985:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   *                the configuration information for NAND module.
1986:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   * @retval HAL state
1987:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   */
1988:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** HAL_NAND_StateTypeDef HAL_NAND_GetState(NAND_HandleTypeDef *hnand)
1989:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** {
 4257              		.loc 1 1989 1 is_stmt 1 view -0
 4258              		.cfi_startproc
 4259              		@ args = 0, pretend = 0, frame = 0
 4260              		@ frame_needed = 0, uses_anonymous_args = 0
 4261              		@ link register save eliminated.
1990:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c ****   return hnand->State;
 4262              		.loc 1 1990 3 view .LVU1568
 4263              		.loc 1 1990 15 is_stmt 0 view .LVU1569
 4264 0000 90F82100 		ldrb	r0, [r0, #33]	@ zero_extendqisi2
 4265              	.LVL303:
1991:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_nand.c **** }
 4266              		.loc 1 1991 1 view .LVU1570
 4267 0004 7047     		bx	lr
 4268              		.cfi_endproc
 4269              	.LFE155:
 4271              		.text
 4272              	.Letext0:
 4273              		.file 3 "/opt/gcc_arm/gcc-arm-none-eabi-9-2019-q4-major/arm-none-eabi/include/machine/_default_typ
 4274              		.file 4 "/opt/gcc_arm/gcc-arm-none-eabi-9-2019-q4-major/arm-none-eabi/include/sys/_stdint.h"
 4275              		.file 5 "CORE/core_cm4.h"
 4276              		.file 6 "USER/system_stm32f4xx.h"
 4277              		.file 7 "USER/stm32f407xx.h"
 4278              		.file 8 "USER/stm32f4xx.h"
 4279              		.file 9 "HALLIB/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 4280              		.file 10 "HALLIB/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_fsmc.h"
 4281              		.file 11 "HALLIB/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_nand.h"
 4282              		.file 12 "HALLIB/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/ccHfptsR.s 			page 151


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_hal_nand.c
     /tmp/ccHfptsR.s:18     .text.HAL_NAND_MspInit:0000000000000000 $t
     /tmp/ccHfptsR.s:26     .text.HAL_NAND_MspInit:0000000000000000 HAL_NAND_MspInit
     /tmp/ccHfptsR.s:42     .text.HAL_NAND_Init:0000000000000000 $t
     /tmp/ccHfptsR.s:49     .text.HAL_NAND_Init:0000000000000000 HAL_NAND_Init
     /tmp/ccHfptsR.s:147    .text.HAL_NAND_MspDeInit:0000000000000000 $t
     /tmp/ccHfptsR.s:154    .text.HAL_NAND_MspDeInit:0000000000000000 HAL_NAND_MspDeInit
     /tmp/ccHfptsR.s:169    .text.HAL_NAND_DeInit:0000000000000000 $t
     /tmp/ccHfptsR.s:176    .text.HAL_NAND_DeInit:0000000000000000 HAL_NAND_DeInit
     /tmp/ccHfptsR.s:214    .text.HAL_NAND_ITCallback:0000000000000000 $t
     /tmp/ccHfptsR.s:221    .text.HAL_NAND_ITCallback:0000000000000000 HAL_NAND_ITCallback
     /tmp/ccHfptsR.s:236    .text.HAL_NAND_IRQHandler:0000000000000000 $t
     /tmp/ccHfptsR.s:243    .text.HAL_NAND_IRQHandler:0000000000000000 HAL_NAND_IRQHandler
     /tmp/ccHfptsR.s:435    .text.HAL_NAND_Read_ID:0000000000000000 $t
     /tmp/ccHfptsR.s:442    .text.HAL_NAND_Read_ID:0000000000000000 HAL_NAND_Read_ID
     /tmp/ccHfptsR.s:624    .text.HAL_NAND_Reset:0000000000000000 $t
     /tmp/ccHfptsR.s:631    .text.HAL_NAND_Reset:0000000000000000 HAL_NAND_Reset
     /tmp/ccHfptsR.s:711    .text.HAL_NAND_ConfigDevice:0000000000000000 $t
     /tmp/ccHfptsR.s:718    .text.HAL_NAND_ConfigDevice:0000000000000000 HAL_NAND_ConfigDevice
     /tmp/ccHfptsR.s:771    .text.HAL_NAND_Read_Status:0000000000000000 $t
     /tmp/ccHfptsR.s:778    .text.HAL_NAND_Read_Status:0000000000000000 HAL_NAND_Read_Status
     /tmp/ccHfptsR.s:847    .text.HAL_NAND_Read_Page_8b:0000000000000000 $t
     /tmp/ccHfptsR.s:854    .text.HAL_NAND_Read_Page_8b:0000000000000000 HAL_NAND_Read_Page_8b
     /tmp/ccHfptsR.s:1215   .text.HAL_NAND_Read_Page_16b:0000000000000000 $t
     /tmp/ccHfptsR.s:1222   .text.HAL_NAND_Read_Page_16b:0000000000000000 HAL_NAND_Read_Page_16b
     /tmp/ccHfptsR.s:1580   .text.HAL_NAND_Write_Page_8b:0000000000000000 $t
     /tmp/ccHfptsR.s:1587   .text.HAL_NAND_Write_Page_8b:0000000000000000 HAL_NAND_Write_Page_8b
     /tmp/ccHfptsR.s:1953   .text.HAL_NAND_Write_Page_16b:0000000000000000 $t
     /tmp/ccHfptsR.s:1960   .text.HAL_NAND_Write_Page_16b:0000000000000000 HAL_NAND_Write_Page_16b
     /tmp/ccHfptsR.s:2324   .text.HAL_NAND_Read_SpareArea_8b:0000000000000000 $t
     /tmp/ccHfptsR.s:2331   .text.HAL_NAND_Read_SpareArea_8b:0000000000000000 HAL_NAND_Read_SpareArea_8b
     /tmp/ccHfptsR.s:2696   .text.HAL_NAND_Read_SpareArea_16b:0000000000000000 $t
     /tmp/ccHfptsR.s:2703   .text.HAL_NAND_Read_SpareArea_16b:0000000000000000 HAL_NAND_Read_SpareArea_16b
     /tmp/ccHfptsR.s:3070   .text.HAL_NAND_Write_SpareArea_8b:0000000000000000 $t
     /tmp/ccHfptsR.s:3077   .text.HAL_NAND_Write_SpareArea_8b:0000000000000000 HAL_NAND_Write_SpareArea_8b
     /tmp/ccHfptsR.s:3438   .text.HAL_NAND_Write_SpareArea_16b:0000000000000000 $t
     /tmp/ccHfptsR.s:3445   .text.HAL_NAND_Write_SpareArea_16b:0000000000000000 HAL_NAND_Write_SpareArea_16b
     /tmp/ccHfptsR.s:3807   .text.HAL_NAND_Erase_Block:0000000000000000 $t
     /tmp/ccHfptsR.s:3814   .text.HAL_NAND_Erase_Block:0000000000000000 HAL_NAND_Erase_Block
     /tmp/ccHfptsR.s:3985   .text.HAL_NAND_Address_Inc:0000000000000000 $t
     /tmp/ccHfptsR.s:3992   .text.HAL_NAND_Address_Inc:0000000000000000 HAL_NAND_Address_Inc
     /tmp/ccHfptsR.s:4079   .text.HAL_NAND_ECC_Enable:0000000000000000 $t
     /tmp/ccHfptsR.s:4086   .text.HAL_NAND_ECC_Enable:0000000000000000 HAL_NAND_ECC_Enable
     /tmp/ccHfptsR.s:4133   .text.HAL_NAND_ECC_Disable:0000000000000000 $t
     /tmp/ccHfptsR.s:4140   .text.HAL_NAND_ECC_Disable:0000000000000000 HAL_NAND_ECC_Disable
     /tmp/ccHfptsR.s:4187   .text.HAL_NAND_GetECC:0000000000000000 $t
     /tmp/ccHfptsR.s:4194   .text.HAL_NAND_GetECC:0000000000000000 HAL_NAND_GetECC
     /tmp/ccHfptsR.s:4247   .text.HAL_NAND_GetState:0000000000000000 $t
     /tmp/ccHfptsR.s:4254   .text.HAL_NAND_GetState:0000000000000000 HAL_NAND_GetState

UNDEFINED SYMBOLS
FSMC_NAND_Init
FSMC_NAND_CommonSpace_Timing_Init
FSMC_NAND_AttributeSpace_Timing_Init
FSMC_NAND_DeInit
HAL_GetTick
ARM GAS  /tmp/ccHfptsR.s 			page 152


FSMC_NAND_ECC_Enable
FSMC_NAND_ECC_Disable
FSMC_NAND_GetECC

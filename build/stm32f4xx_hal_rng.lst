ARM GAS  /tmp/ccppX03r.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_hal_rng.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_RNG_MspInit,"ax",%progbits
  18              		.align	1
  19              		.weak	HAL_RNG_MspInit
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	HAL_RNG_MspInit:
  27              	.LVL0:
  28              	.LFB134:
  29              		.file 1 "HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c"
   1:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** /**
   2:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   ******************************************************************************
   3:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   * @file    stm32f4xx_hal_rng.c
   4:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   * @author  MCD Application Team
   5:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   * @brief   RNG HAL module driver.
   6:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   *          This file provides firmware functions to manage the following
   7:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   *          functionalities of the Random Number Generator (RNG) peripheral:
   8:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   *           + Initialization and configuration functions
   9:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   *           + Peripheral Control functions
  10:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   *           + Peripheral State functions
  11:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   *
  12:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   @verbatim
  13:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   ==============================================================================
  14:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****                      ##### How to use this driver #####
  15:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   ==============================================================================
  16:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   [..]
  17:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****       The RNG HAL driver can be used as follows:
  18:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
  19:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****       (#) Enable the RNG controller clock using __HAL_RCC_RNG_CLK_ENABLE() macro
  20:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****           in HAL_RNG_MspInit().
  21:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****       (#) Activate the RNG peripheral using HAL_RNG_Init() function.
  22:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****       (#) Wait until the 32 bit Random Number Generator contains a valid
  23:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****           random data using (polling/interrupt) mode.
  24:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****       (#) Get the 32 bit random number using HAL_RNG_GenerateRandomNumber() function.
  25:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
  26:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     ##### Callback registration #####
  27:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     ==================================
  28:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
  29:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     [..]
ARM GAS  /tmp/ccppX03r.s 			page 2


  30:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     The compilation define USE_HAL_RNG_REGISTER_CALLBACKS when set to 1
  31:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     allows the user to configure dynamically the driver callbacks.
  32:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
  33:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     [..]
  34:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     Use Function @ref HAL_RNG_RegisterCallback() to register a user callback.
  35:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     Function @ref HAL_RNG_RegisterCallback() allows to register following callbacks:
  36:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     (+) ErrorCallback             : RNG Error Callback.
  37:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     (+) MspInitCallback           : RNG MspInit.
  38:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     (+) MspDeInitCallback         : RNG MspDeInit.
  39:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     This function takes as parameters the HAL peripheral handle, the Callback ID
  40:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     and a pointer to the user callback function.
  41:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
  42:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     [..]
  43:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     Use function @ref HAL_RNG_UnRegisterCallback() to reset a callback to the default
  44:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     weak (surcharged) function.
  45:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     @ref HAL_RNG_UnRegisterCallback() takes as parameters the HAL peripheral handle,
  46:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     and the Callback ID.
  47:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     This function allows to reset following callbacks:
  48:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     (+) ErrorCallback             : RNG Error Callback.
  49:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     (+) MspInitCallback           : RNG MspInit.
  50:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     (+) MspDeInitCallback         : RNG MspDeInit.
  51:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
  52:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     [..]
  53:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     For specific callback ReadyDataCallback, use dedicated register callbacks:
  54:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     respectively @ref HAL_RNG_RegisterReadyDataCallback() , @ref HAL_RNG_UnRegisterReadyDataCallbac
  55:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
  56:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     [..]
  57:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     By default, after the @ref HAL_RNG_Init() and when the state is HAL_RNG_STATE_RESET
  58:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     all callbacks are set to the corresponding weak (surcharged) functions:
  59:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     example @ref HAL_RNG_ErrorCallback().
  60:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     Exception done for MspInit and MspDeInit functions that are respectively
  61:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     reset to the legacy weak (surcharged) functions in the @ref HAL_RNG_Init()
  62:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     and @ref HAL_RNG_DeInit() only when these callbacks are null (not registered beforehand).
  63:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     If not, MspInit or MspDeInit are not null, the @ref HAL_RNG_Init() and @ref HAL_RNG_DeInit()
  64:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     keep and use the user MspInit/MspDeInit callbacks (registered beforehand).
  65:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
  66:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     [..]
  67:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     Callbacks can be registered/unregistered in HAL_RNG_STATE_READY state only.
  68:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     Exception done MspInit/MspDeInit that can be registered/unregistered
  69:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     in HAL_RNG_STATE_READY or HAL_RNG_STATE_RESET state, thus registered (user)
  70:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     MspInit/DeInit callbacks can be used during the Init/DeInit.
  71:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     In that case first register the MspInit/MspDeInit user callbacks
  72:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     using @ref HAL_RNG_RegisterCallback() before calling @ref HAL_RNG_DeInit()
  73:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     or @ref HAL_RNG_Init() function.
  74:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
  75:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     [..]
  76:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     When The compilation define USE_HAL_RNG_REGISTER_CALLBACKS is set to 0 or
  77:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     not defined, the callback registration feature is not available
  78:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     and weak (surcharged) callbacks are used.
  79:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
  80:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   @endverbatim
  81:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   ******************************************************************************
  82:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   * @attention
  83:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   *
  84:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
  85:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   * All rights reserved.</center></h2>
  86:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   *
ARM GAS  /tmp/ccppX03r.s 			page 3


  87:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  88:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   * the "License"; You may not use this file except in compliance with the
  89:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   * License. You may obtain a copy of the License at:
  90:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   *                        opensource.org/licenses/BSD-3-Clause
  91:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   *
  92:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   ******************************************************************************
  93:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   */
  94:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
  95:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** /* Includes ------------------------------------------------------------------*/
  96:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** #include "stm32f4xx_hal.h"
  97:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
  98:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** /** @addtogroup STM32F4xx_HAL_Driver
  99:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   * @{
 100:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   */
 101:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 102:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** #if defined (RNG)
 103:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 104:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** /** @addtogroup RNG
 105:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   * @brief RNG HAL module driver.
 106:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   * @{
 107:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   */
 108:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 109:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** #ifdef HAL_RNG_MODULE_ENABLED
 110:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 111:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** /* Private types -------------------------------------------------------------*/
 112:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** /* Private defines -----------------------------------------------------------*/
 113:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** /* Private variables ---------------------------------------------------------*/
 114:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** /* Private constants ---------------------------------------------------------*/
 115:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** /** @defgroup RNG_Private_Constants RNG Private Constants
 116:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   * @{
 117:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   */
 118:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** #define RNG_TIMEOUT_VALUE     2U
 119:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** /**
 120:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   * @}
 121:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   */
 122:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** /* Private macros ------------------------------------------------------------*/
 123:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** /* Private functions prototypes ----------------------------------------------*/
 124:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** /* Private functions ---------------------------------------------------------*/
 125:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** /* Exported functions --------------------------------------------------------*/
 126:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 127:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** /** @addtogroup RNG_Exported_Functions
 128:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   * @{
 129:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   */
 130:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 131:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** /** @addtogroup RNG_Exported_Functions_Group1
 132:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****  *  @brief   Initialization and configuration functions
 133:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****  *
 134:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** @verbatim
 135:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****  ===============================================================================
 136:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****           ##### Initialization and configuration functions #####
 137:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****  ===============================================================================
 138:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     [..]  This section provides functions allowing to:
 139:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****       (+) Initialize the RNG according to the specified parameters
 140:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****           in the RNG_InitTypeDef and create the associated handle
 141:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****       (+) DeInitialize the RNG peripheral
 142:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****       (+) Initialize the RNG MSP
 143:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****       (+) DeInitialize RNG MSP
ARM GAS  /tmp/ccppX03r.s 			page 4


 144:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 145:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** @endverbatim
 146:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   * @{
 147:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   */
 148:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 149:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** /**
 150:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   * @brief  Initializes the RNG peripheral and creates the associated handle.
 151:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   * @param  hrng pointer to a RNG_HandleTypeDef structure that contains
 152:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   *                the configuration information for RNG.
 153:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   * @retval HAL status
 154:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   */
 155:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** HAL_StatusTypeDef HAL_RNG_Init(RNG_HandleTypeDef *hrng)
 156:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** {
 157:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   /* Check the RNG handle allocation */
 158:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   if (hrng == NULL)
 159:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   {
 160:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     return HAL_ERROR;
 161:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   }
 162:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   /* Check the parameters */
 163:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   assert_param(IS_RNG_ALL_INSTANCE(hrng->Instance));
 164:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 165:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** #if (USE_HAL_RNG_REGISTER_CALLBACKS == 1)
 166:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   if (hrng->State == HAL_RNG_STATE_RESET)
 167:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   {
 168:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     /* Allocate lock resource and initialize it */
 169:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     hrng->Lock = HAL_UNLOCKED;
 170:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 171:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     hrng->ReadyDataCallback  = HAL_RNG_ReadyDataCallback;  /* Legacy weak ReadyDataCallback  */
 172:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     hrng->ErrorCallback      = HAL_RNG_ErrorCallback;      /* Legacy weak ErrorCallback      */
 173:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 174:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     if (hrng->MspInitCallback == NULL)
 175:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     {
 176:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****       hrng->MspInitCallback = HAL_RNG_MspInit; /* Legacy weak MspInit  */
 177:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     }
 178:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 179:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     /* Init the low level hardware */
 180:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     hrng->MspInitCallback(hrng);
 181:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   }
 182:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** #else
 183:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   if (hrng->State == HAL_RNG_STATE_RESET)
 184:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   {
 185:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     /* Allocate lock resource and initialize it */
 186:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     hrng->Lock = HAL_UNLOCKED;
 187:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 188:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     /* Init the low level hardware */
 189:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     HAL_RNG_MspInit(hrng);
 190:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   }
 191:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** #endif /* USE_HAL_RNG_REGISTER_CALLBACKS */
 192:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 193:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   /* Change RNG peripheral state */
 194:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   hrng->State = HAL_RNG_STATE_BUSY;
 195:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 196:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 197:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   /* Enable the RNG Peripheral */
 198:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   __HAL_RNG_ENABLE(hrng);
 199:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 200:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   /* Initialize the RNG state */
ARM GAS  /tmp/ccppX03r.s 			page 5


 201:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   hrng->State = HAL_RNG_STATE_READY;
 202:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 203:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   /* Initialise the error code */
 204:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   hrng->ErrorCode = HAL_RNG_ERROR_NONE;
 205:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 206:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   /* Return function status */
 207:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   return HAL_OK;
 208:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** }
 209:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 210:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** /**
 211:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   * @brief  DeInitializes the RNG peripheral.
 212:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   * @param  hrng pointer to a RNG_HandleTypeDef structure that contains
 213:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   *                the configuration information for RNG.
 214:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   * @retval HAL status
 215:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   */
 216:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** HAL_StatusTypeDef HAL_RNG_DeInit(RNG_HandleTypeDef *hrng)
 217:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** {
 218:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   /* Check the RNG handle allocation */
 219:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   if (hrng == NULL)
 220:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   {
 221:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     return HAL_ERROR;
 222:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   }
 223:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 224:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   /* Disable the RNG Peripheral */
 225:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   CLEAR_BIT(hrng->Instance->CR, RNG_CR_IE | RNG_CR_RNGEN);
 226:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 227:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   /* Clear RNG interrupt status flags */
 228:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   CLEAR_BIT(hrng->Instance->SR, RNG_SR_CEIS | RNG_SR_SEIS);
 229:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 230:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** #if (USE_HAL_RNG_REGISTER_CALLBACKS == 1)
 231:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   if (hrng->MspDeInitCallback == NULL)
 232:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   {
 233:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     hrng->MspDeInitCallback = HAL_RNG_MspDeInit; /* Legacy weak MspDeInit  */
 234:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   }
 235:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 236:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   /* DeInit the low level hardware */
 237:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   hrng->MspDeInitCallback(hrng);
 238:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** #else
 239:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   /* DeInit the low level hardware */
 240:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   HAL_RNG_MspDeInit(hrng);
 241:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** #endif /* USE_HAL_RNG_REGISTER_CALLBACKS */
 242:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 243:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   /* Update the RNG state */
 244:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   hrng->State = HAL_RNG_STATE_RESET;
 245:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 246:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   /* Initialise the error code */
 247:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   hrng->ErrorCode = HAL_RNG_ERROR_NONE;
 248:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 249:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   /* Release Lock */
 250:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   __HAL_UNLOCK(hrng);
 251:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 252:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   /* Return the function status */
 253:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   return HAL_OK;
 254:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** }
 255:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 256:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** /**
 257:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   * @brief  Initializes the RNG MSP.
ARM GAS  /tmp/ccppX03r.s 			page 6


 258:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   * @param  hrng pointer to a RNG_HandleTypeDef structure that contains
 259:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   *                the configuration information for RNG.
 260:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   * @retval None
 261:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   */
 262:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** __weak void HAL_RNG_MspInit(RNG_HandleTypeDef *hrng)
 263:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** {
  30              		.loc 1 263 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
 264:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   /* Prevent unused argument(s) compilation warning */
 265:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   UNUSED(hrng);
  35              		.loc 1 265 3 view .LVU1
 266:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   /* NOTE : This function should not be modified. When the callback is needed,
 267:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****             function HAL_RNG_MspInit must be implemented in the user file.
 268:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****    */
 269:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** }
  36              		.loc 1 269 1 is_stmt 0 view .LVU2
  37 0000 7047     		bx	lr
  38              		.cfi_endproc
  39              	.LFE134:
  41              		.section	.text.HAL_RNG_Init,"ax",%progbits
  42              		.align	1
  43              		.global	HAL_RNG_Init
  44              		.syntax unified
  45              		.thumb
  46              		.thumb_func
  47              		.fpu fpv4-sp-d16
  49              	HAL_RNG_Init:
  50              	.LVL1:
  51              	.LFB132:
 156:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   /* Check the RNG handle allocation */
  52              		.loc 1 156 1 is_stmt 1 view -0
  53              		.cfi_startproc
  54              		@ args = 0, pretend = 0, frame = 0
  55              		@ frame_needed = 0, uses_anonymous_args = 0
 158:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   {
  56              		.loc 1 158 3 view .LVU4
 158:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   {
  57              		.loc 1 158 6 is_stmt 0 view .LVU5
  58 0000 98B1     		cbz	r0, .L5
 156:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   /* Check the RNG handle allocation */
  59              		.loc 1 156 1 view .LVU6
  60 0002 10B5     		push	{r4, lr}
  61              	.LCFI0:
  62              		.cfi_def_cfa_offset 8
  63              		.cfi_offset 4, -8
  64              		.cfi_offset 14, -4
  65 0004 0446     		mov	r4, r0
 163:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
  66              		.loc 1 163 3 is_stmt 1 view .LVU7
 183:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   {
  67              		.loc 1 183 3 view .LVU8
 183:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   {
  68              		.loc 1 183 11 is_stmt 0 view .LVU9
  69 0006 4379     		ldrb	r3, [r0, #5]	@ zero_extendqisi2
ARM GAS  /tmp/ccppX03r.s 			page 7


 183:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   {
  70              		.loc 1 183 6 view .LVU10
  71 0008 5BB1     		cbz	r3, .L10
  72              	.LVL2:
  73              	.L4:
 194:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
  74              		.loc 1 194 3 is_stmt 1 view .LVU11
 194:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
  75              		.loc 1 194 15 is_stmt 0 view .LVU12
  76 000a 0223     		movs	r3, #2
  77 000c 6371     		strb	r3, [r4, #5]
 198:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
  78              		.loc 1 198 3 is_stmt 1 view .LVU13
  79 000e 2268     		ldr	r2, [r4]
  80 0010 1368     		ldr	r3, [r2]
  81 0012 43F00403 		orr	r3, r3, #4
  82 0016 1360     		str	r3, [r2]
 201:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
  83              		.loc 1 201 3 view .LVU14
 201:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
  84              		.loc 1 201 15 is_stmt 0 view .LVU15
  85 0018 0123     		movs	r3, #1
  86 001a 6371     		strb	r3, [r4, #5]
 204:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
  87              		.loc 1 204 3 is_stmt 1 view .LVU16
 204:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
  88              		.loc 1 204 19 is_stmt 0 view .LVU17
  89 001c 0020     		movs	r0, #0
  90 001e A060     		str	r0, [r4, #8]
 207:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** }
  91              		.loc 1 207 3 is_stmt 1 view .LVU18
 208:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
  92              		.loc 1 208 1 is_stmt 0 view .LVU19
  93 0020 10BD     		pop	{r4, pc}
  94              	.LVL3:
  95              	.L10:
 186:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
  96              		.loc 1 186 5 is_stmt 1 view .LVU20
 186:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
  97              		.loc 1 186 16 is_stmt 0 view .LVU21
  98 0022 0371     		strb	r3, [r0, #4]
 189:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   }
  99              		.loc 1 189 5 is_stmt 1 view .LVU22
 100 0024 FFF7FEFF 		bl	HAL_RNG_MspInit
 101              	.LVL4:
 189:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   }
 102              		.loc 1 189 5 is_stmt 0 view .LVU23
 103 0028 EFE7     		b	.L4
 104              	.LVL5:
 105              	.L5:
 106              	.LCFI1:
 107              		.cfi_def_cfa_offset 0
 108              		.cfi_restore 4
 109              		.cfi_restore 14
 160:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   }
 110              		.loc 1 160 12 view .LVU24
 111 002a 0120     		movs	r0, #1
ARM GAS  /tmp/ccppX03r.s 			page 8


 112              	.LVL6:
 208:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 113              		.loc 1 208 1 view .LVU25
 114 002c 7047     		bx	lr
 115              		.cfi_endproc
 116              	.LFE132:
 118              		.section	.text.HAL_RNG_MspDeInit,"ax",%progbits
 119              		.align	1
 120              		.weak	HAL_RNG_MspDeInit
 121              		.syntax unified
 122              		.thumb
 123              		.thumb_func
 124              		.fpu fpv4-sp-d16
 126              	HAL_RNG_MspDeInit:
 127              	.LVL7:
 128              	.LFB135:
 270:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 271:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** /**
 272:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   * @brief  DeInitializes the RNG MSP.
 273:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   * @param  hrng pointer to a RNG_HandleTypeDef structure that contains
 274:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   *                the configuration information for RNG.
 275:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   * @retval None
 276:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   */
 277:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** __weak void HAL_RNG_MspDeInit(RNG_HandleTypeDef *hrng)
 278:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** {
 129              		.loc 1 278 1 is_stmt 1 view -0
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 0
 132              		@ frame_needed = 0, uses_anonymous_args = 0
 133              		@ link register save eliminated.
 279:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   /* Prevent unused argument(s) compilation warning */
 280:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   UNUSED(hrng);
 134              		.loc 1 280 3 view .LVU27
 281:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   /* NOTE : This function should not be modified. When the callback is needed,
 282:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****             function HAL_RNG_MspDeInit must be implemented in the user file.
 283:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****    */
 284:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** }
 135              		.loc 1 284 1 is_stmt 0 view .LVU28
 136 0000 7047     		bx	lr
 137              		.cfi_endproc
 138              	.LFE135:
 140              		.section	.text.HAL_RNG_DeInit,"ax",%progbits
 141              		.align	1
 142              		.global	HAL_RNG_DeInit
 143              		.syntax unified
 144              		.thumb
 145              		.thumb_func
 146              		.fpu fpv4-sp-d16
 148              	HAL_RNG_DeInit:
 149              	.LVL8:
 150              	.LFB133:
 217:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   /* Check the RNG handle allocation */
 151              		.loc 1 217 1 is_stmt 1 view -0
 152              		.cfi_startproc
 153              		@ args = 0, pretend = 0, frame = 0
 154              		@ frame_needed = 0, uses_anonymous_args = 0
 219:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   {
ARM GAS  /tmp/ccppX03r.s 			page 9


 155              		.loc 1 219 3 view .LVU30
 219:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   {
 156              		.loc 1 219 6 is_stmt 0 view .LVU31
 157 0000 90B1     		cbz	r0, .L14
 217:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   /* Check the RNG handle allocation */
 158              		.loc 1 217 1 view .LVU32
 159 0002 10B5     		push	{r4, lr}
 160              	.LCFI2:
 161              		.cfi_def_cfa_offset 8
 162              		.cfi_offset 4, -8
 163              		.cfi_offset 14, -4
 164 0004 0446     		mov	r4, r0
 225:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 165              		.loc 1 225 3 is_stmt 1 view .LVU33
 166 0006 0268     		ldr	r2, [r0]
 167 0008 1368     		ldr	r3, [r2]
 168 000a 23F00C03 		bic	r3, r3, #12
 169 000e 1360     		str	r3, [r2]
 228:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 170              		.loc 1 228 3 view .LVU34
 171 0010 0268     		ldr	r2, [r0]
 172 0012 5368     		ldr	r3, [r2, #4]
 173 0014 23F06003 		bic	r3, r3, #96
 174 0018 5360     		str	r3, [r2, #4]
 240:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** #endif /* USE_HAL_RNG_REGISTER_CALLBACKS */
 175              		.loc 1 240 3 view .LVU35
 176 001a FFF7FEFF 		bl	HAL_RNG_MspDeInit
 177              	.LVL9:
 244:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 178              		.loc 1 244 3 view .LVU36
 244:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 179              		.loc 1 244 15 is_stmt 0 view .LVU37
 180 001e 0020     		movs	r0, #0
 181 0020 6071     		strb	r0, [r4, #5]
 247:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 182              		.loc 1 247 3 is_stmt 1 view .LVU38
 247:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 183              		.loc 1 247 19 is_stmt 0 view .LVU39
 184 0022 A060     		str	r0, [r4, #8]
 250:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 185              		.loc 1 250 3 is_stmt 1 view .LVU40
 250:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 186              		.loc 1 250 3 view .LVU41
 187 0024 2071     		strb	r0, [r4, #4]
 250:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 188              		.loc 1 250 3 view .LVU42
 253:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** }
 189              		.loc 1 253 3 view .LVU43
 254:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 190              		.loc 1 254 1 is_stmt 0 view .LVU44
 191 0026 10BD     		pop	{r4, pc}
 192              	.LVL10:
 193              	.L14:
 194              	.LCFI3:
 195              		.cfi_def_cfa_offset 0
 196              		.cfi_restore 4
 197              		.cfi_restore 14
ARM GAS  /tmp/ccppX03r.s 			page 10


 221:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   }
 198              		.loc 1 221 12 view .LVU45
 199 0028 0120     		movs	r0, #1
 200              	.LVL11:
 254:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 201              		.loc 1 254 1 view .LVU46
 202 002a 7047     		bx	lr
 203              		.cfi_endproc
 204              	.LFE133:
 206              		.section	.text.HAL_RNG_GenerateRandomNumber,"ax",%progbits
 207              		.align	1
 208              		.global	HAL_RNG_GenerateRandomNumber
 209              		.syntax unified
 210              		.thumb
 211              		.thumb_func
 212              		.fpu fpv4-sp-d16
 214              	HAL_RNG_GenerateRandomNumber:
 215              	.LVL12:
 216              	.LFB136:
 285:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 286:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** #if (USE_HAL_RNG_REGISTER_CALLBACKS == 1)
 287:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** /**
 288:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   * @brief  Register a User RNG Callback
 289:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   *         To be used instead of the weak predefined callback
 290:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   * @param  hrng RNG handle
 291:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   * @param  CallbackID ID of the callback to be registered
 292:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   *         This parameter can be one of the following values:
 293:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   *          @arg @ref HAL_RNG_ERROR_CB_ID Error callback ID
 294:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   *          @arg @ref HAL_RNG_MSPINIT_CB_ID MspInit callback ID
 295:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   *          @arg @ref HAL_RNG_MSPDEINIT_CB_ID MspDeInit callback ID
 296:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   * @param  pCallback pointer to the Callback function
 297:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   * @retval HAL status
 298:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   */
 299:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** HAL_StatusTypeDef HAL_RNG_RegisterCallback(RNG_HandleTypeDef *hrng, HAL_RNG_CallbackIDTypeDef Callb
 300:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** {
 301:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   HAL_StatusTypeDef status = HAL_OK;
 302:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 303:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   if (pCallback == NULL)
 304:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   {
 305:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     /* Update the error code */
 306:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     hrng->ErrorCode = HAL_RNG_ERROR_INVALID_CALLBACK;
 307:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     return HAL_ERROR;
 308:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   }
 309:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   /* Process locked */
 310:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   __HAL_LOCK(hrng);
 311:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 312:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   if (HAL_RNG_STATE_READY == hrng->State)
 313:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   {
 314:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     switch (CallbackID)
 315:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     {
 316:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     case HAL_RNG_ERROR_CB_ID :
 317:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****       hrng->ErrorCallback = pCallback;
 318:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****       break;
 319:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 320:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     case HAL_RNG_MSPINIT_CB_ID :
 321:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****       hrng->MspInitCallback = pCallback;
 322:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****       break;
ARM GAS  /tmp/ccppX03r.s 			page 11


 323:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 324:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     case HAL_RNG_MSPDEINIT_CB_ID :
 325:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****       hrng->MspDeInitCallback = pCallback;
 326:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****       break;
 327:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 328:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     default :
 329:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****       /* Update the error code */
 330:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****       hrng->ErrorCode = HAL_RNG_ERROR_INVALID_CALLBACK;
 331:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****      /* Return error status */
 332:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****       status =  HAL_ERROR;
 333:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****       break;
 334:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     }
 335:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   }
 336:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   else if (HAL_RNG_STATE_RESET == hrng->State)
 337:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   {
 338:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     switch (CallbackID)
 339:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     {
 340:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     case HAL_RNG_MSPINIT_CB_ID :
 341:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****       hrng->MspInitCallback = pCallback;
 342:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****       break;
 343:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 344:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     case HAL_RNG_MSPDEINIT_CB_ID :
 345:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****       hrng->MspDeInitCallback = pCallback;
 346:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****       break;
 347:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 348:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     default :
 349:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****       /* Update the error code */
 350:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****       hrng->ErrorCode = HAL_RNG_ERROR_INVALID_CALLBACK;
 351:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****      /* Return error status */
 352:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****       status =  HAL_ERROR;
 353:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****       break;
 354:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     }
 355:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   }
 356:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   else
 357:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   {
 358:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     /* Update the error code */
 359:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     hrng->ErrorCode = HAL_RNG_ERROR_INVALID_CALLBACK;
 360:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     /* Return error status */
 361:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     status =  HAL_ERROR;
 362:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   }
 363:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 364:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   /* Release Lock */
 365:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   __HAL_UNLOCK(hrng);
 366:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   return status;
 367:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** }
 368:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 369:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** /**
 370:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   * @brief  Unregister an RNG Callback
 371:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   *         RNG callabck is redirected to the weak predefined callback
 372:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   * @param  hrng RNG handle
 373:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   * @param  CallbackID ID of the callback to be unregistered
 374:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   *         This parameter can be one of the following values:
 375:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   *          @arg @ref HAL_RNG_ERROR_CB_ID Error callback ID
 376:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   *          @arg @ref HAL_RNG_MSPINIT_CB_ID MspInit callback ID
 377:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   *          @arg @ref HAL_RNG_MSPDEINIT_CB_ID MspDeInit callback ID
 378:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   * @retval HAL status
 379:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   */
ARM GAS  /tmp/ccppX03r.s 			page 12


 380:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** HAL_StatusTypeDef HAL_RNG_UnRegisterCallback(RNG_HandleTypeDef *hrng, HAL_RNG_CallbackIDTypeDef Cal
 381:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** {
 382:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   HAL_StatusTypeDef status = HAL_OK;
 383:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 384:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   /* Process locked */
 385:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   __HAL_LOCK(hrng);
 386:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 387:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   if (HAL_RNG_STATE_READY == hrng->State)
 388:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   {
 389:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     switch (CallbackID)
 390:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     {
 391:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     case HAL_RNG_ERROR_CB_ID :
 392:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****       hrng->ErrorCallback = HAL_RNG_ErrorCallback;          /* Legacy weak ErrorCallback  */
 393:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****       break;
 394:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 395:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     case HAL_RNG_MSPINIT_CB_ID :
 396:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****       hrng->MspInitCallback = HAL_RNG_MspInit;              /* Legacy weak MspInit  */
 397:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****       break;
 398:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 399:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     case HAL_RNG_MSPDEINIT_CB_ID :
 400:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****       hrng->MspDeInitCallback = HAL_RNG_MspDeInit;          /* Legacy weak MspDeInit  */
 401:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****       break;
 402:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 403:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     default :
 404:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****       /* Update the error code */
 405:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****       hrng->ErrorCode = HAL_RNG_ERROR_INVALID_CALLBACK;
 406:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****      /* Return error status */
 407:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****       status =  HAL_ERROR;
 408:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****       break;
 409:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     }
 410:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   }
 411:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   else if (HAL_RNG_STATE_RESET == hrng->State)
 412:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   {
 413:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     switch (CallbackID)
 414:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     {
 415:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     case HAL_RNG_MSPINIT_CB_ID :
 416:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****       hrng->MspInitCallback = HAL_RNG_MspInit;              /* Legacy weak MspInit  */
 417:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****       break;
 418:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 419:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     case HAL_RNG_MSPDEINIT_CB_ID :
 420:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****       hrng->MspDeInitCallback = HAL_RNG_MspDeInit;          /* Legacy weak MspInit  */
 421:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****       break;
 422:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 423:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     default :
 424:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****       /* Update the error code */
 425:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****       hrng->ErrorCode = HAL_RNG_ERROR_INVALID_CALLBACK;
 426:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****      /* Return error status */
 427:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****       status =  HAL_ERROR;
 428:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****       break;
 429:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     }
 430:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   }
 431:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   else
 432:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   {
 433:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     /* Update the error code */
 434:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     hrng->ErrorCode = HAL_RNG_ERROR_INVALID_CALLBACK;
 435:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     /* Return error status */
 436:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     status =  HAL_ERROR;
ARM GAS  /tmp/ccppX03r.s 			page 13


 437:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   }
 438:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 439:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   /* Release Lock */
 440:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   __HAL_UNLOCK(hrng);
 441:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   return status;
 442:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** }
 443:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 444:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** /**
 445:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   * @brief  Register Data Ready RNG Callback
 446:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   *         To be used instead of the weak HAL_RNG_ReadyDataCallback() predefined callback
 447:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   * @param  hrng RNG handle
 448:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   * @param  pCallback pointer to the Data Ready Callback function
 449:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   * @retval HAL status
 450:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   */
 451:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** HAL_StatusTypeDef HAL_RNG_RegisterReadyDataCallback(RNG_HandleTypeDef *hrng, pRNG_ReadyDataCallback
 452:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** {
 453:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   HAL_StatusTypeDef status = HAL_OK;
 454:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 455:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   if (pCallback == NULL)
 456:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   {
 457:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     /* Update the error code */
 458:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     hrng->ErrorCode = HAL_RNG_ERROR_INVALID_CALLBACK;
 459:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     return HAL_ERROR;
 460:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   }
 461:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   /* Process locked */
 462:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   __HAL_LOCK(hrng);
 463:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 464:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   if (HAL_RNG_STATE_READY == hrng->State)
 465:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   {
 466:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     hrng->ReadyDataCallback = pCallback;
 467:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   }
 468:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   else
 469:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   {
 470:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     /* Update the error code */
 471:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     hrng->ErrorCode = HAL_RNG_ERROR_INVALID_CALLBACK;
 472:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     /* Return error status */
 473:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     status =  HAL_ERROR;
 474:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   }
 475:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 476:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   /* Release Lock */
 477:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   __HAL_UNLOCK(hrng);
 478:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   return status;
 479:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** }
 480:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 481:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** /**
 482:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   * @brief  UnRegister the Data Ready RNG Callback
 483:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   *         Data Ready RNG Callback is redirected to the weak HAL_RNG_ReadyDataCallback() predefine
 484:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   * @param  hrng RNG handle
 485:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   * @retval HAL status
 486:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   */
 487:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** HAL_StatusTypeDef HAL_RNG_UnRegisterReadyDataCallback(RNG_HandleTypeDef *hrng)
 488:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** {
 489:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   HAL_StatusTypeDef status = HAL_OK;
 490:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 491:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   /* Process locked */
 492:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   __HAL_LOCK(hrng);
 493:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
ARM GAS  /tmp/ccppX03r.s 			page 14


 494:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   if (HAL_RNG_STATE_READY == hrng->State)
 495:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   {
 496:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     hrng->ReadyDataCallback = HAL_RNG_ReadyDataCallback; /* Legacy weak ReadyDataCallback  */
 497:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   }
 498:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   else
 499:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   {
 500:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     /* Update the error code */
 501:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     hrng->ErrorCode = HAL_RNG_ERROR_INVALID_CALLBACK;
 502:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     /* Return error status */
 503:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     status =  HAL_ERROR;
 504:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   }
 505:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 506:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   /* Release Lock */
 507:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   __HAL_UNLOCK(hrng);
 508:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   return status;
 509:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** }
 510:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 511:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** #endif /* USE_HAL_RNG_REGISTER_CALLBACKS */
 512:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 513:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** /**
 514:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   * @}
 515:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   */
 516:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 517:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** /** @addtogroup RNG_Exported_Functions_Group2
 518:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****  *  @brief   Peripheral Control functions
 519:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****  *
 520:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** @verbatim
 521:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****  ===============================================================================
 522:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****                       ##### Peripheral Control functions #####
 523:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****  ===============================================================================
 524:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     [..]  This section provides functions allowing to:
 525:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****       (+) Get the 32 bit Random number
 526:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****       (+) Get the 32 bit Random number with interrupt enabled
 527:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****       (+) Handle RNG interrupt request
 528:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 529:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** @endverbatim
 530:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   * @{
 531:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   */
 532:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 533:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** /**
 534:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   * @brief  Generates a 32-bit random number.
 535:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   * @note   Each time the random number data is read the RNG_FLAG_DRDY flag
 536:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   *         is automatically cleared.
 537:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   * @param  hrng pointer to a RNG_HandleTypeDef structure that contains
 538:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   *                the configuration information for RNG.
 539:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   * @param  random32bit pointer to generated random number variable if successful.
 540:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   * @retval HAL status
 541:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   */
 542:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 543:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** HAL_StatusTypeDef HAL_RNG_GenerateRandomNumber(RNG_HandleTypeDef *hrng, uint32_t *random32bit)
 544:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** {
 217              		.loc 1 544 1 is_stmt 1 view -0
 218              		.cfi_startproc
 219              		@ args = 0, pretend = 0, frame = 0
 220              		@ frame_needed = 0, uses_anonymous_args = 0
 221              		.loc 1 544 1 is_stmt 0 view .LVU48
 222 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
ARM GAS  /tmp/ccppX03r.s 			page 15


 223              	.LCFI4:
 224              		.cfi_def_cfa_offset 24
 225              		.cfi_offset 3, -24
 226              		.cfi_offset 4, -20
 227              		.cfi_offset 5, -16
 228              		.cfi_offset 6, -12
 229              		.cfi_offset 7, -8
 230              		.cfi_offset 14, -4
 545:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   uint32_t tickstart;
 231              		.loc 1 545 3 is_stmt 1 view .LVU49
 546:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   HAL_StatusTypeDef status = HAL_OK;
 232              		.loc 1 546 3 view .LVU50
 233              	.LVL13:
 547:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 548:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   /* Process Locked */
 549:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   __HAL_LOCK(hrng);
 234              		.loc 1 549 3 view .LVU51
 235              		.loc 1 549 3 view .LVU52
 236 0002 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 237 0004 012B     		cmp	r3, #1
 238 0006 2BD0     		beq	.L25
 239 0008 0446     		mov	r4, r0
 240 000a 0E46     		mov	r6, r1
 241              		.loc 1 549 3 discriminator 2 view .LVU53
 242 000c 0123     		movs	r3, #1
 243 000e 0371     		strb	r3, [r0, #4]
 244              		.loc 1 549 3 discriminator 2 view .LVU54
 550:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 551:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   /* Check RNG peripheral state */
 552:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   if (hrng->State == HAL_RNG_STATE_READY)
 245              		.loc 1 552 3 discriminator 2 view .LVU55
 246              		.loc 1 552 11 is_stmt 0 discriminator 2 view .LVU56
 247 0010 4579     		ldrb	r5, [r0, #5]	@ zero_extendqisi2
 248 0012 EDB2     		uxtb	r5, r5
 249              		.loc 1 552 6 discriminator 2 view .LVU57
 250 0014 9D42     		cmp	r5, r3
 251 0016 06D0     		beq	.L27
 553:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   {
 554:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     /* Change RNG peripheral state */
 555:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     hrng->State = HAL_RNG_STATE_BUSY;
 556:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 557:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     /* Get tick */
 558:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     tickstart = HAL_GetTick();
 559:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 560:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     /* Check if data register contains valid random data */
 561:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     while (__HAL_RNG_GET_FLAG(hrng, RNG_FLAG_DRDY) == RESET)
 562:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     {
 563:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****       if ((HAL_GetTick() - tickstart) > RNG_TIMEOUT_VALUE)
 564:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****       {
 565:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****         hrng->State = HAL_RNG_STATE_READY;
 566:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****         hrng->ErrorCode = HAL_RNG_ERROR_TIMEOUT;
 567:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****         /* Process Unlocked */
 568:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****         __HAL_UNLOCK(hrng);
 569:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****         return HAL_ERROR;
 570:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****       }
 571:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     }
 572:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
ARM GAS  /tmp/ccppX03r.s 			page 16


 573:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     /* Get a 32bit Random number */
 574:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     hrng->RandomNumber = hrng->Instance->DR;
 575:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     *random32bit = hrng->RandomNumber;
 576:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 577:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     hrng->State = HAL_RNG_STATE_READY;
 578:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   }
 579:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   else
 580:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   {
 581:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     hrng->ErrorCode = HAL_RNG_ERROR_BUSY;
 252              		.loc 1 581 5 is_stmt 1 view .LVU58
 253              		.loc 1 581 21 is_stmt 0 view .LVU59
 254 0018 0423     		movs	r3, #4
 255 001a 8360     		str	r3, [r0, #8]
 582:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     status = HAL_ERROR;
 256              		.loc 1 582 5 is_stmt 1 view .LVU60
 257              	.LVL14:
 258              		.loc 1 582 12 is_stmt 0 view .LVU61
 259 001c 0125     		movs	r5, #1
 260              	.LVL15:
 261              	.L24:
 583:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   }
 584:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 585:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   /* Process Unlocked */
 586:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   __HAL_UNLOCK(hrng);
 262              		.loc 1 586 3 is_stmt 1 view .LVU62
 263              		.loc 1 586 3 view .LVU63
 264 001e 0023     		movs	r3, #0
 265 0020 2371     		strb	r3, [r4, #4]
 266              		.loc 1 586 3 view .LVU64
 587:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 588:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   return status;
 267              		.loc 1 588 3 view .LVU65
 268              	.LVL16:
 269              	.L20:
 589:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** }
 270              		.loc 1 589 1 is_stmt 0 view .LVU66
 271 0022 2846     		mov	r0, r5
 272 0024 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 273              	.LVL17:
 274              	.L27:
 555:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 275              		.loc 1 555 5 is_stmt 1 view .LVU67
 555:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 276              		.loc 1 555 17 is_stmt 0 view .LVU68
 277 0026 0223     		movs	r3, #2
 278 0028 4371     		strb	r3, [r0, #5]
 558:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 279              		.loc 1 558 5 is_stmt 1 view .LVU69
 558:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 280              		.loc 1 558 17 is_stmt 0 view .LVU70
 281 002a FFF7FEFF 		bl	HAL_GetTick
 282              	.LVL18:
 558:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 283              		.loc 1 558 17 view .LVU71
 284 002e 0746     		mov	r7, r0
 285              	.LVL19:
 561:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     {
ARM GAS  /tmp/ccppX03r.s 			page 17


 286              		.loc 1 561 5 is_stmt 1 view .LVU72
 287              	.L22:
 561:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     {
 288              		.loc 1 561 11 view .LVU73
 561:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     {
 289              		.loc 1 561 12 is_stmt 0 view .LVU74
 290 0030 2368     		ldr	r3, [r4]
 291 0032 5A68     		ldr	r2, [r3, #4]
 561:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     {
 292              		.loc 1 561 11 view .LVU75
 293 0034 12F0010F 		tst	r2, #1
 294 0038 0BD1     		bne	.L28
 563:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****       {
 295              		.loc 1 563 7 is_stmt 1 view .LVU76
 563:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****       {
 296              		.loc 1 563 12 is_stmt 0 view .LVU77
 297 003a FFF7FEFF 		bl	HAL_GetTick
 298              	.LVL20:
 563:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****       {
 299              		.loc 1 563 26 view .LVU78
 300 003e C01B     		subs	r0, r0, r7
 563:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****       {
 301              		.loc 1 563 10 view .LVU79
 302 0040 0228     		cmp	r0, #2
 303 0042 F5D9     		bls	.L22
 565:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****         hrng->ErrorCode = HAL_RNG_ERROR_TIMEOUT;
 304              		.loc 1 565 9 is_stmt 1 view .LVU80
 565:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****         hrng->ErrorCode = HAL_RNG_ERROR_TIMEOUT;
 305              		.loc 1 565 21 is_stmt 0 view .LVU81
 306 0044 0123     		movs	r3, #1
 307 0046 6371     		strb	r3, [r4, #5]
 566:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****         /* Process Unlocked */
 308              		.loc 1 566 9 is_stmt 1 view .LVU82
 566:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****         /* Process Unlocked */
 309              		.loc 1 566 25 is_stmt 0 view .LVU83
 310 0048 0223     		movs	r3, #2
 311 004a A360     		str	r3, [r4, #8]
 568:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****         return HAL_ERROR;
 312              		.loc 1 568 9 is_stmt 1 view .LVU84
 568:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****         return HAL_ERROR;
 313              		.loc 1 568 9 view .LVU85
 314 004c 0023     		movs	r3, #0
 315 004e 2371     		strb	r3, [r4, #4]
 568:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****         return HAL_ERROR;
 316              		.loc 1 568 9 view .LVU86
 569:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****       }
 317              		.loc 1 569 9 view .LVU87
 569:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****       }
 318              		.loc 1 569 16 is_stmt 0 view .LVU88
 319 0050 E7E7     		b	.L20
 320              	.L28:
 574:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     *random32bit = hrng->RandomNumber;
 321              		.loc 1 574 5 is_stmt 1 view .LVU89
 574:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     *random32bit = hrng->RandomNumber;
 322              		.loc 1 574 40 is_stmt 0 view .LVU90
 323 0052 9B68     		ldr	r3, [r3, #8]
 574:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     *random32bit = hrng->RandomNumber;
ARM GAS  /tmp/ccppX03r.s 			page 18


 324              		.loc 1 574 24 view .LVU91
 325 0054 E360     		str	r3, [r4, #12]
 575:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 326              		.loc 1 575 5 is_stmt 1 view .LVU92
 575:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 327              		.loc 1 575 18 is_stmt 0 view .LVU93
 328 0056 3360     		str	r3, [r6]
 577:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   }
 329              		.loc 1 577 5 is_stmt 1 view .LVU94
 577:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   }
 330              		.loc 1 577 17 is_stmt 0 view .LVU95
 331 0058 0123     		movs	r3, #1
 332 005a 6371     		strb	r3, [r4, #5]
 546:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 333              		.loc 1 546 21 view .LVU96
 334 005c 0025     		movs	r5, #0
 335 005e DEE7     		b	.L24
 336              	.LVL21:
 337              	.L25:
 549:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 338              		.loc 1 549 3 view .LVU97
 339 0060 0225     		movs	r5, #2
 340 0062 DEE7     		b	.L20
 341              		.cfi_endproc
 342              	.LFE136:
 344              		.section	.text.HAL_RNG_GenerateRandomNumber_IT,"ax",%progbits
 345              		.align	1
 346              		.global	HAL_RNG_GenerateRandomNumber_IT
 347              		.syntax unified
 348              		.thumb
 349              		.thumb_func
 350              		.fpu fpv4-sp-d16
 352              	HAL_RNG_GenerateRandomNumber_IT:
 353              	.LVL22:
 354              	.LFB137:
 590:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 591:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** /**
 592:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   * @brief  Generates a 32-bit random number in interrupt mode.
 593:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   * @param  hrng pointer to a RNG_HandleTypeDef structure that contains
 594:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   *                the configuration information for RNG.
 595:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   * @retval HAL status
 596:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   */
 597:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** HAL_StatusTypeDef HAL_RNG_GenerateRandomNumber_IT(RNG_HandleTypeDef *hrng)
 598:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** {
 355              		.loc 1 598 1 is_stmt 1 view -0
 356              		.cfi_startproc
 357              		@ args = 0, pretend = 0, frame = 0
 358              		@ frame_needed = 0, uses_anonymous_args = 0
 359              		@ link register save eliminated.
 599:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   HAL_StatusTypeDef status = HAL_OK;
 360              		.loc 1 599 3 view .LVU99
 600:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 601:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   /* Process Locked */
 602:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   __HAL_LOCK(hrng);
 361              		.loc 1 602 3 view .LVU100
 362              		.loc 1 602 3 view .LVU101
 363 0000 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
ARM GAS  /tmp/ccppX03r.s 			page 19


 364 0002 012B     		cmp	r3, #1
 365 0004 14D0     		beq	.L32
 366              		.loc 1 602 3 discriminator 2 view .LVU102
 367 0006 0123     		movs	r3, #1
 368 0008 0371     		strb	r3, [r0, #4]
 369              		.loc 1 602 3 discriminator 2 view .LVU103
 603:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 604:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   /* Check RNG peripheral state */
 605:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   if (hrng->State == HAL_RNG_STATE_READY)
 370              		.loc 1 605 3 discriminator 2 view .LVU104
 371              		.loc 1 605 11 is_stmt 0 discriminator 2 view .LVU105
 372 000a 4379     		ldrb	r3, [r0, #5]	@ zero_extendqisi2
 373 000c DBB2     		uxtb	r3, r3
 374              		.loc 1 605 6 discriminator 2 view .LVU106
 375 000e 012B     		cmp	r3, #1
 376 0010 05D0     		beq	.L33
 606:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   {
 607:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     /* Change RNG peripheral state */
 608:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     hrng->State = HAL_RNG_STATE_BUSY;
 609:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 610:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     /* Enable the RNG Interrupts: Data Ready, Clock error, Seed error */
 611:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     __HAL_RNG_ENABLE_IT(hrng);
 612:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   }
 613:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   else
 614:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   {
 615:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     /* Process Unlocked */
 616:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     __HAL_UNLOCK(hrng);
 377              		.loc 1 616 5 is_stmt 1 view .LVU107
 378              		.loc 1 616 5 view .LVU108
 379 0012 0023     		movs	r3, #0
 380 0014 0371     		strb	r3, [r0, #4]
 381              		.loc 1 616 5 view .LVU109
 617:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 618:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     hrng->ErrorCode = HAL_RNG_ERROR_BUSY;
 382              		.loc 1 618 5 view .LVU110
 383              		.loc 1 618 21 is_stmt 0 view .LVU111
 384 0016 0423     		movs	r3, #4
 385 0018 8360     		str	r3, [r0, #8]
 619:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     status = HAL_ERROR;
 386              		.loc 1 619 5 is_stmt 1 view .LVU112
 387              	.LVL23:
 388              		.loc 1 619 12 is_stmt 0 view .LVU113
 389 001a 0120     		movs	r0, #1
 390              	.LVL24:
 391              		.loc 1 619 12 view .LVU114
 392 001c 7047     		bx	lr
 393              	.LVL25:
 394              	.L33:
 608:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 395              		.loc 1 608 5 is_stmt 1 view .LVU115
 608:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 396              		.loc 1 608 17 is_stmt 0 view .LVU116
 397 001e 0223     		movs	r3, #2
 398 0020 4371     		strb	r3, [r0, #5]
 611:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   }
 399              		.loc 1 611 5 is_stmt 1 view .LVU117
 400 0022 0268     		ldr	r2, [r0]
ARM GAS  /tmp/ccppX03r.s 			page 20


 401 0024 1368     		ldr	r3, [r2]
 402 0026 43F00803 		orr	r3, r3, #8
 403 002a 1360     		str	r3, [r2]
 599:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 404              		.loc 1 599 21 is_stmt 0 view .LVU118
 405 002c 0020     		movs	r0, #0
 406              	.LVL26:
 599:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 407              		.loc 1 599 21 view .LVU119
 408 002e 7047     		bx	lr
 409              	.LVL27:
 410              	.L32:
 602:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 411              		.loc 1 602 3 view .LVU120
 412 0030 0220     		movs	r0, #2
 413              	.LVL28:
 620:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   }
 621:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 622:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   return status;
 623:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** }
 414              		.loc 1 623 1 view .LVU121
 415 0032 7047     		bx	lr
 416              		.cfi_endproc
 417              	.LFE137:
 419              		.section	.text.HAL_RNG_GetRandomNumber,"ax",%progbits
 420              		.align	1
 421              		.global	HAL_RNG_GetRandomNumber
 422              		.syntax unified
 423              		.thumb
 424              		.thumb_func
 425              		.fpu fpv4-sp-d16
 427              	HAL_RNG_GetRandomNumber:
 428              	.LVL29:
 429              	.LFB138:
 624:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 625:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** /**
 626:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   * @brief  Returns generated random number in polling mode (Obsolete)
 627:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   *         Use HAL_RNG_GenerateRandomNumber() API instead.
 628:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   * @param  hrng pointer to a RNG_HandleTypeDef structure that contains
 629:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   *                the configuration information for RNG.
 630:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   * @retval Random value
 631:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   */
 632:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** uint32_t HAL_RNG_GetRandomNumber(RNG_HandleTypeDef *hrng)
 633:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** {
 430              		.loc 1 633 1 is_stmt 1 view -0
 431              		.cfi_startproc
 432              		@ args = 0, pretend = 0, frame = 0
 433              		@ frame_needed = 0, uses_anonymous_args = 0
 434              		.loc 1 633 1 is_stmt 0 view .LVU123
 435 0000 10B5     		push	{r4, lr}
 436              	.LCFI5:
 437              		.cfi_def_cfa_offset 8
 438              		.cfi_offset 4, -8
 439              		.cfi_offset 14, -4
 440 0002 0446     		mov	r4, r0
 634:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   if(HAL_RNG_GenerateRandomNumber(hrng, &(hrng->RandomNumber)) == HAL_OK)
 441              		.loc 1 634 3 is_stmt 1 view .LVU124
ARM GAS  /tmp/ccppX03r.s 			page 21


 442              		.loc 1 634 6 is_stmt 0 view .LVU125
 443 0004 00F10C01 		add	r1, r0, #12
 444 0008 FFF7FEFF 		bl	HAL_RNG_GenerateRandomNumber
 445              	.LVL30:
 446              		.loc 1 634 5 view .LVU126
 447 000c 08B9     		cbnz	r0, .L36
 635:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   {
 636:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     return hrng->RandomNumber;
 448              		.loc 1 636 5 is_stmt 1 view .LVU127
 449              		.loc 1 636 16 is_stmt 0 view .LVU128
 450 000e E068     		ldr	r0, [r4, #12]
 451              	.L34:
 637:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   }
 638:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   else
 639:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   {
 640:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     return 0U;
 641:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   }
 642:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** }
 452              		.loc 1 642 1 view .LVU129
 453 0010 10BD     		pop	{r4, pc}
 454              	.LVL31:
 455              	.L36:
 640:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   }
 456              		.loc 1 640 12 view .LVU130
 457 0012 0020     		movs	r0, #0
 458 0014 FCE7     		b	.L34
 459              		.cfi_endproc
 460              	.LFE138:
 462              		.section	.text.HAL_RNG_GetRandomNumber_IT,"ax",%progbits
 463              		.align	1
 464              		.global	HAL_RNG_GetRandomNumber_IT
 465              		.syntax unified
 466              		.thumb
 467              		.thumb_func
 468              		.fpu fpv4-sp-d16
 470              	HAL_RNG_GetRandomNumber_IT:
 471              	.LVL32:
 472              	.LFB139:
 643:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 644:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** /**
 645:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   * @brief  Returns a 32-bit random number with interrupt enabled (Obsolete),
 646:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   *         Use HAL_RNG_GenerateRandomNumber_IT() API instead.
 647:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   * @param  hrng pointer to a RNG_HandleTypeDef structure that contains
 648:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   *                the configuration information for RNG.
 649:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   * @retval 32-bit random number
 650:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   */
 651:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** uint32_t HAL_RNG_GetRandomNumber_IT(RNG_HandleTypeDef *hrng)
 652:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** {
 473              		.loc 1 652 1 is_stmt 1 view -0
 474              		.cfi_startproc
 475              		@ args = 0, pretend = 0, frame = 0
 476              		@ frame_needed = 0, uses_anonymous_args = 0
 477              		@ link register save eliminated.
 653:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   uint32_t random32bit = 0U;
 478              		.loc 1 653 3 view .LVU132
 654:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 655:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   /* Process locked */
ARM GAS  /tmp/ccppX03r.s 			page 22


 656:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   __HAL_LOCK(hrng);
 479              		.loc 1 656 3 view .LVU133
 480              		.loc 1 656 3 view .LVU134
 481 0000 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 482 0002 012B     		cmp	r3, #1
 483 0004 0AD0     		beq	.L40
 484              		.loc 1 656 3 discriminator 2 view .LVU135
 485 0006 0123     		movs	r3, #1
 486 0008 0371     		strb	r3, [r0, #4]
 487              		.loc 1 656 3 discriminator 2 view .LVU136
 657:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 658:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   /* Change RNG peripheral state */
 659:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   hrng->State = HAL_RNG_STATE_BUSY;
 488              		.loc 1 659 3 discriminator 2 view .LVU137
 489              		.loc 1 659 15 is_stmt 0 discriminator 2 view .LVU138
 490 000a 0223     		movs	r3, #2
 491 000c 4371     		strb	r3, [r0, #5]
 660:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 661:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   /* Get a 32bit Random number */
 662:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   random32bit = hrng->Instance->DR;
 492              		.loc 1 662 3 is_stmt 1 discriminator 2 view .LVU139
 493              		.loc 1 662 21 is_stmt 0 discriminator 2 view .LVU140
 494 000e 0368     		ldr	r3, [r0]
 495              		.loc 1 662 15 discriminator 2 view .LVU141
 496 0010 9868     		ldr	r0, [r3, #8]
 497              	.LVL33:
 663:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 664:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   /* Enable the RNG Interrupts: Data Ready, Clock error, Seed error */
 665:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   __HAL_RNG_ENABLE_IT(hrng);
 498              		.loc 1 665 3 is_stmt 1 discriminator 2 view .LVU142
 499 0012 1A68     		ldr	r2, [r3]
 500 0014 42F00802 		orr	r2, r2, #8
 501 0018 1A60     		str	r2, [r3]
 666:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 667:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   /* Return the 32 bit random number */
 668:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   return random32bit;
 502              		.loc 1 668 3 discriminator 2 view .LVU143
 503              		.loc 1 668 10 is_stmt 0 discriminator 2 view .LVU144
 504 001a 7047     		bx	lr
 505              	.LVL34:
 506              	.L40:
 656:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 507              		.loc 1 656 3 view .LVU145
 508 001c 0220     		movs	r0, #2
 509              	.LVL35:
 669:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** }
 510              		.loc 1 669 1 view .LVU146
 511 001e 7047     		bx	lr
 512              		.cfi_endproc
 513              	.LFE139:
 515              		.section	.text.HAL_RNG_ReadLastRandomNumber,"ax",%progbits
 516              		.align	1
 517              		.global	HAL_RNG_ReadLastRandomNumber
 518              		.syntax unified
 519              		.thumb
 520              		.thumb_func
 521              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccppX03r.s 			page 23


 523              	HAL_RNG_ReadLastRandomNumber:
 524              	.LVL36:
 525              	.LFB141:
 670:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 671:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** /**
 672:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   * @brief  Handles RNG interrupt request.
 673:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   * @note   In the case of a clock error, the RNG is no more able to generate
 674:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   *         random numbers because the PLL48CLK clock is not correct. User has
 675:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   *         to check that the clock controller is correctly configured to provide
 676:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   *         the RNG clock and clear the CEIS bit using __HAL_RNG_CLEAR_IT().
 677:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   *         The clock error has no impact on the previously generated
 678:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   *         random numbers, and the RNG_DR register contents can be used.
 679:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   * @note   In the case of a seed error, the generation of random numbers is
 680:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   *         interrupted as long as the SECS bit is '1'. If a number is
 681:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   *         available in the RNG_DR register, it must not be used because it may
 682:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   *         not have enough entropy. In this case, it is recommended to clear the
 683:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   *         SEIS bit using __HAL_RNG_CLEAR_IT(), then disable and enable
 684:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   *         the RNG peripheral to reinitialize and restart the RNG.
 685:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   * @note   User-written HAL_RNG_ErrorCallback() API is called once whether SEIS
 686:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   *         or CEIS are set.
 687:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   * @param  hrng pointer to a RNG_HandleTypeDef structure that contains
 688:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   *                the configuration information for RNG.
 689:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   * @retval None
 690:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 691:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   */
 692:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** void HAL_RNG_IRQHandler(RNG_HandleTypeDef *hrng)
 693:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** {
 694:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   uint32_t rngclockerror = 0U;
 695:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 696:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   /* RNG clock error interrupt occurred */
 697:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   if (__HAL_RNG_GET_IT(hrng, RNG_IT_CEI) != RESET)
 698:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   {
 699:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     /* Update the error code */
 700:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     hrng->ErrorCode = HAL_RNG_ERROR_SEED;
 701:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     rngclockerror = 1U;
 702:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   }
 703:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   else if (__HAL_RNG_GET_IT(hrng, RNG_IT_SEI) != RESET)
 704:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   {
 705:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     /* Update the error code */
 706:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     hrng->ErrorCode = HAL_RNG_ERROR_CLOCK;
 707:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     rngclockerror = 1U;
 708:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   }
 709:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   else
 710:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   {
 711:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     /* Nothing to do */
 712:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   }
 713:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 714:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   if (rngclockerror == 1U)
 715:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   {
 716:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     /* Change RNG peripheral state */
 717:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     hrng->State = HAL_RNG_STATE_ERROR;
 718:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 719:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** #if (USE_HAL_RNG_REGISTER_CALLBACKS == 1)
 720:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     /* Call registered Error callback */
 721:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     hrng->ErrorCallback(hrng);
 722:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** #else
 723:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     /* Call legacy weak Error callback */
ARM GAS  /tmp/ccppX03r.s 			page 24


 724:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     HAL_RNG_ErrorCallback(hrng);
 725:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** #endif /* USE_HAL_RNG_REGISTER_CALLBACKS */
 726:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 727:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     /* Clear the clock error flag */
 728:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     __HAL_RNG_CLEAR_IT(hrng, RNG_IT_CEI | RNG_IT_SEI);
 729:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   }
 730:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 731:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   /* Check RNG data ready interrupt occurred */
 732:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   if (__HAL_RNG_GET_IT(hrng, RNG_IT_DRDY) != RESET)
 733:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   {
 734:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     /* Generate random number once, so disable the IT */
 735:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     __HAL_RNG_DISABLE_IT(hrng);
 736:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 737:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     /* Get the 32bit Random number (DRDY flag automatically cleared) */
 738:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     hrng->RandomNumber = hrng->Instance->DR;
 739:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 740:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     if (hrng->State != HAL_RNG_STATE_ERROR)
 741:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     {
 742:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****       /* Change RNG peripheral state */
 743:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****       hrng->State = HAL_RNG_STATE_READY;
 744:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****       /* Process Unlocked */
 745:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****       __HAL_UNLOCK(hrng);
 746:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 747:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** #if (USE_HAL_RNG_REGISTER_CALLBACKS == 1)
 748:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****       /* Call registered Data Ready callback */
 749:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****       hrng->ReadyDataCallback(hrng, hrng->RandomNumber);
 750:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** #else
 751:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****       /* Call legacy weak Data Ready callback */
 752:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****       HAL_RNG_ReadyDataCallback(hrng, hrng->RandomNumber);
 753:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** #endif /* USE_HAL_RNG_REGISTER_CALLBACKS */
 754:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     }
 755:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   }
 756:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** }
 757:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 758:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** /**
 759:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   * @brief  Read latest generated random number.
 760:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   * @param  hrng pointer to a RNG_HandleTypeDef structure that contains
 761:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   *                the configuration information for RNG.
 762:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   * @retval random value
 763:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   */
 764:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** uint32_t HAL_RNG_ReadLastRandomNumber(RNG_HandleTypeDef *hrng)
 765:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** {
 526              		.loc 1 765 1 is_stmt 1 view -0
 527              		.cfi_startproc
 528              		@ args = 0, pretend = 0, frame = 0
 529              		@ frame_needed = 0, uses_anonymous_args = 0
 530              		@ link register save eliminated.
 766:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   return (hrng->RandomNumber);
 531              		.loc 1 766 3 view .LVU148
 767:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** }
 532              		.loc 1 767 1 is_stmt 0 view .LVU149
 533 0000 C068     		ldr	r0, [r0, #12]
 534              	.LVL37:
 535              		.loc 1 767 1 view .LVU150
 536 0002 7047     		bx	lr
 537              		.cfi_endproc
 538              	.LFE141:
ARM GAS  /tmp/ccppX03r.s 			page 25


 540              		.section	.text.HAL_RNG_ReadyDataCallback,"ax",%progbits
 541              		.align	1
 542              		.weak	HAL_RNG_ReadyDataCallback
 543              		.syntax unified
 544              		.thumb
 545              		.thumb_func
 546              		.fpu fpv4-sp-d16
 548              	HAL_RNG_ReadyDataCallback:
 549              	.LVL38:
 550              	.LFB142:
 768:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 769:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** /**
 770:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   * @brief  Data Ready callback in non-blocking mode.
 771:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   * @param  hrng pointer to a RNG_HandleTypeDef structure that contains
 772:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   *                the configuration information for RNG.
 773:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   * @param  random32bit generated random number.
 774:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   * @retval None
 775:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   */
 776:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** __weak void HAL_RNG_ReadyDataCallback(RNG_HandleTypeDef *hrng, uint32_t random32bit)
 777:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** {
 551              		.loc 1 777 1 is_stmt 1 view -0
 552              		.cfi_startproc
 553              		@ args = 0, pretend = 0, frame = 0
 554              		@ frame_needed = 0, uses_anonymous_args = 0
 555              		@ link register save eliminated.
 778:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   /* Prevent unused argument(s) compilation warning */
 779:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   UNUSED(hrng);
 556              		.loc 1 779 3 view .LVU152
 780:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   UNUSED(random32bit);
 557              		.loc 1 780 3 view .LVU153
 781:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   /* NOTE : This function should not be modified. When the callback is needed,
 782:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****             function HAL_RNG_ReadyDataCallback must be implemented in the user file.
 783:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****    */
 784:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** }
 558              		.loc 1 784 1 is_stmt 0 view .LVU154
 559 0000 7047     		bx	lr
 560              		.cfi_endproc
 561              	.LFE142:
 563              		.section	.text.HAL_RNG_ErrorCallback,"ax",%progbits
 564              		.align	1
 565              		.weak	HAL_RNG_ErrorCallback
 566              		.syntax unified
 567              		.thumb
 568              		.thumb_func
 569              		.fpu fpv4-sp-d16
 571              	HAL_RNG_ErrorCallback:
 572              	.LVL39:
 573              	.LFB143:
 785:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 786:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** /**
 787:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   * @brief  RNG error callbacks.
 788:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   * @param  hrng pointer to a RNG_HandleTypeDef structure that contains
 789:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   *                the configuration information for RNG.
 790:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   * @retval None
 791:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   */
 792:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** __weak void HAL_RNG_ErrorCallback(RNG_HandleTypeDef *hrng)
 793:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** {
ARM GAS  /tmp/ccppX03r.s 			page 26


 574              		.loc 1 793 1 is_stmt 1 view -0
 575              		.cfi_startproc
 576              		@ args = 0, pretend = 0, frame = 0
 577              		@ frame_needed = 0, uses_anonymous_args = 0
 578              		@ link register save eliminated.
 794:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   /* Prevent unused argument(s) compilation warning */
 795:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   UNUSED(hrng);
 579              		.loc 1 795 3 view .LVU156
 796:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   /* NOTE : This function should not be modified. When the callback is needed,
 797:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****             function HAL_RNG_ErrorCallback must be implemented in the user file.
 798:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****    */
 799:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** }
 580              		.loc 1 799 1 is_stmt 0 view .LVU157
 581 0000 7047     		bx	lr
 582              		.cfi_endproc
 583              	.LFE143:
 585              		.section	.text.HAL_RNG_IRQHandler,"ax",%progbits
 586              		.align	1
 587              		.global	HAL_RNG_IRQHandler
 588              		.syntax unified
 589              		.thumb
 590              		.thumb_func
 591              		.fpu fpv4-sp-d16
 593              	HAL_RNG_IRQHandler:
 594              	.LVL40:
 595              	.LFB140:
 693:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   uint32_t rngclockerror = 0U;
 596              		.loc 1 693 1 is_stmt 1 view -0
 597              		.cfi_startproc
 598              		@ args = 0, pretend = 0, frame = 0
 599              		@ frame_needed = 0, uses_anonymous_args = 0
 693:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   uint32_t rngclockerror = 0U;
 600              		.loc 1 693 1 is_stmt 0 view .LVU159
 601 0000 10B5     		push	{r4, lr}
 602              	.LCFI6:
 603              		.cfi_def_cfa_offset 8
 604              		.cfi_offset 4, -8
 605              		.cfi_offset 14, -4
 606 0002 0446     		mov	r4, r0
 694:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 607              		.loc 1 694 3 is_stmt 1 view .LVU160
 608              	.LVL41:
 697:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   {
 609              		.loc 1 697 3 view .LVU161
 697:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   {
 610              		.loc 1 697 7 is_stmt 0 view .LVU162
 611 0004 0368     		ldr	r3, [r0]
 612 0006 5A68     		ldr	r2, [r3, #4]
 697:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   {
 613              		.loc 1 697 6 view .LVU163
 614 0008 12F0200F 		tst	r2, #32
 615 000c 1BD0     		beq	.L45
 700:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     rngclockerror = 1U;
 616              		.loc 1 700 5 is_stmt 1 view .LVU164
 700:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     rngclockerror = 1U;
 617              		.loc 1 700 21 is_stmt 0 view .LVU165
 618 000e 0823     		movs	r3, #8
ARM GAS  /tmp/ccppX03r.s 			page 27


 619 0010 8360     		str	r3, [r0, #8]
 701:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   }
 620              		.loc 1 701 5 is_stmt 1 view .LVU166
 621              	.LVL42:
 712:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 622              		.loc 1 712 3 view .LVU167
 714:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   {
 623              		.loc 1 714 3 view .LVU168
 624              	.L46:
 717:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 625              		.loc 1 717 5 view .LVU169
 717:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 626              		.loc 1 717 17 is_stmt 0 view .LVU170
 627 0012 0423     		movs	r3, #4
 628 0014 6371     		strb	r3, [r4, #5]
 724:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** #endif /* USE_HAL_RNG_REGISTER_CALLBACKS */
 629              		.loc 1 724 5 is_stmt 1 view .LVU171
 630 0016 2046     		mov	r0, r4
 631              	.LVL43:
 724:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** #endif /* USE_HAL_RNG_REGISTER_CALLBACKS */
 632              		.loc 1 724 5 is_stmt 0 view .LVU172
 633 0018 FFF7FEFF 		bl	HAL_RNG_ErrorCallback
 634              	.LVL44:
 728:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   }
 635              		.loc 1 728 5 is_stmt 1 view .LVU173
 636 001c 2368     		ldr	r3, [r4]
 637 001e 6FF06002 		mvn	r2, #96
 638 0022 5A60     		str	r2, [r3, #4]
 639              	.LVL45:
 640              	.L47:
 732:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   {
 641              		.loc 1 732 3 view .LVU174
 732:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   {
 642              		.loc 1 732 7 is_stmt 0 view .LVU175
 643 0024 2368     		ldr	r3, [r4]
 644 0026 5A68     		ldr	r2, [r3, #4]
 732:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   {
 645              		.loc 1 732 6 view .LVU176
 646 0028 12F0010F 		tst	r2, #1
 647 002c 0AD0     		beq	.L44
 735:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 648              		.loc 1 735 5 is_stmt 1 view .LVU177
 649 002e 1A68     		ldr	r2, [r3]
 650 0030 22F00802 		bic	r2, r2, #8
 651 0034 1A60     		str	r2, [r3]
 738:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 652              		.loc 1 738 5 view .LVU178
 738:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 653              		.loc 1 738 30 is_stmt 0 view .LVU179
 654 0036 2368     		ldr	r3, [r4]
 738:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 655              		.loc 1 738 40 view .LVU180
 656 0038 9968     		ldr	r1, [r3, #8]
 738:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 657              		.loc 1 738 24 view .LVU181
 658 003a E160     		str	r1, [r4, #12]
 740:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     {
ARM GAS  /tmp/ccppX03r.s 			page 28


 659              		.loc 1 740 5 is_stmt 1 view .LVU182
 740:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     {
 660              		.loc 1 740 13 is_stmt 0 view .LVU183
 661 003c 6379     		ldrb	r3, [r4, #5]	@ zero_extendqisi2
 662 003e DBB2     		uxtb	r3, r3
 740:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     {
 663              		.loc 1 740 8 view .LVU184
 664 0040 042B     		cmp	r3, #4
 665 0042 07D1     		bne	.L50
 666              	.L44:
 756:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 667              		.loc 1 756 1 view .LVU185
 668 0044 10BD     		pop	{r4, pc}
 669              	.LVL46:
 670              	.L45:
 703:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   {
 671              		.loc 1 703 8 is_stmt 1 view .LVU186
 703:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   {
 672              		.loc 1 703 12 is_stmt 0 view .LVU187
 673 0046 5B68     		ldr	r3, [r3, #4]
 703:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   {
 674              		.loc 1 703 11 view .LVU188
 675 0048 13F0400F 		tst	r3, #64
 676 004c EAD0     		beq	.L47
 706:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     rngclockerror = 1U;
 677              		.loc 1 706 5 is_stmt 1 view .LVU189
 706:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     rngclockerror = 1U;
 678              		.loc 1 706 21 is_stmt 0 view .LVU190
 679 004e 1023     		movs	r3, #16
 680 0050 8360     		str	r3, [r0, #8]
 707:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   }
 681              		.loc 1 707 5 is_stmt 1 view .LVU191
 682              	.LVL47:
 712:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 683              		.loc 1 712 3 view .LVU192
 714:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   {
 684              		.loc 1 714 3 view .LVU193
 685 0052 DEE7     		b	.L46
 686              	.LVL48:
 687              	.L50:
 743:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****       /* Process Unlocked */
 688              		.loc 1 743 7 view .LVU194
 743:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****       /* Process Unlocked */
 689              		.loc 1 743 19 is_stmt 0 view .LVU195
 690 0054 0123     		movs	r3, #1
 691 0056 6371     		strb	r3, [r4, #5]
 745:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 692              		.loc 1 745 7 is_stmt 1 view .LVU196
 745:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 693              		.loc 1 745 7 view .LVU197
 694 0058 0023     		movs	r3, #0
 695 005a 2371     		strb	r3, [r4, #4]
 745:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 696              		.loc 1 745 7 view .LVU198
 752:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** #endif /* USE_HAL_RNG_REGISTER_CALLBACKS */
 697              		.loc 1 752 7 view .LVU199
 698 005c 2046     		mov	r0, r4
ARM GAS  /tmp/ccppX03r.s 			page 29


 699 005e FFF7FEFF 		bl	HAL_RNG_ReadyDataCallback
 700              	.LVL49:
 756:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 701              		.loc 1 756 1 is_stmt 0 view .LVU200
 702 0062 EFE7     		b	.L44
 703              		.cfi_endproc
 704              	.LFE140:
 706              		.section	.text.HAL_RNG_GetState,"ax",%progbits
 707              		.align	1
 708              		.global	HAL_RNG_GetState
 709              		.syntax unified
 710              		.thumb
 711              		.thumb_func
 712              		.fpu fpv4-sp-d16
 714              	HAL_RNG_GetState:
 715              	.LVL50:
 716              	.LFB144:
 800:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** /**
 801:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   * @}
 802:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   */
 803:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 804:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 805:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** /** @addtogroup RNG_Exported_Functions_Group3
 806:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****  *  @brief   Peripheral State functions
 807:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****  *
 808:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** @verbatim
 809:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****  ===============================================================================
 810:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****                       ##### Peripheral State functions #####
 811:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****  ===============================================================================
 812:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     [..]
 813:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     This subsection permits to get in run-time the status of the peripheral
 814:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****     and the data flow.
 815:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 816:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** @endverbatim
 817:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   * @{
 818:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   */
 819:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 820:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** /**
 821:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   * @brief  Returns the RNG state.
 822:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   * @param  hrng pointer to a RNG_HandleTypeDef structure that contains
 823:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   *                the configuration information for RNG.
 824:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   * @retval HAL state
 825:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   */
 826:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** HAL_RNG_StateTypeDef HAL_RNG_GetState(RNG_HandleTypeDef *hrng)
 827:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** {
 717              		.loc 1 827 1 is_stmt 1 view -0
 718              		.cfi_startproc
 719              		@ args = 0, pretend = 0, frame = 0
 720              		@ frame_needed = 0, uses_anonymous_args = 0
 721              		@ link register save eliminated.
 828:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   return hrng->State;
 722              		.loc 1 828 3 view .LVU202
 723              		.loc 1 828 14 is_stmt 0 view .LVU203
 724 0000 4079     		ldrb	r0, [r0, #5]	@ zero_extendqisi2
 725              	.LVL51:
 829:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** }
 726              		.loc 1 829 1 view .LVU204
ARM GAS  /tmp/ccppX03r.s 			page 30


 727 0002 7047     		bx	lr
 728              		.cfi_endproc
 729              	.LFE144:
 731              		.section	.text.HAL_RNG_GetError,"ax",%progbits
 732              		.align	1
 733              		.global	HAL_RNG_GetError
 734              		.syntax unified
 735              		.thumb
 736              		.thumb_func
 737              		.fpu fpv4-sp-d16
 739              	HAL_RNG_GetError:
 740              	.LVL52:
 741              	.LFB145:
 830:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** 
 831:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** /**
 832:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   * @brief  Return the RNG handle error code.
 833:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   * @param  hrng: pointer to a RNG_HandleTypeDef structure.
 834:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   * @retval RNG Error Code
 835:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** */
 836:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** uint32_t HAL_RNG_GetError(RNG_HandleTypeDef *hrng)
 837:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** {
 742              		.loc 1 837 1 is_stmt 1 view -0
 743              		.cfi_startproc
 744              		@ args = 0, pretend = 0, frame = 0
 745              		@ frame_needed = 0, uses_anonymous_args = 0
 746              		@ link register save eliminated.
 838:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   /* Return RNG Error Code */
 839:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c ****   return hrng->ErrorCode;
 747              		.loc 1 839 3 view .LVU206
 748              		.loc 1 839 14 is_stmt 0 view .LVU207
 749 0000 8068     		ldr	r0, [r0, #8]
 750              	.LVL53:
 840:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rng.c **** }
 751              		.loc 1 840 1 view .LVU208
 752 0002 7047     		bx	lr
 753              		.cfi_endproc
 754              	.LFE145:
 756              		.text
 757              	.Letext0:
 758              		.file 2 "/opt/gcc_arm/gcc-arm-none-eabi-9-2019-q4-major/arm-none-eabi/include/machine/_default_typ
 759              		.file 3 "/opt/gcc_arm/gcc-arm-none-eabi-9-2019-q4-major/arm-none-eabi/include/sys/_stdint.h"
 760              		.file 4 "CORE/core_cm4.h"
 761              		.file 5 "USER/system_stm32f4xx.h"
 762              		.file 6 "USER/stm32f407xx.h"
 763              		.file 7 "USER/stm32f4xx.h"
 764              		.file 8 "HALLIB/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 765              		.file 9 "HALLIB/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rng.h"
 766              		.file 10 "HALLIB/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/ccppX03r.s 			page 31


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_hal_rng.c
     /tmp/ccppX03r.s:18     .text.HAL_RNG_MspInit:0000000000000000 $t
     /tmp/ccppX03r.s:26     .text.HAL_RNG_MspInit:0000000000000000 HAL_RNG_MspInit
     /tmp/ccppX03r.s:42     .text.HAL_RNG_Init:0000000000000000 $t
     /tmp/ccppX03r.s:49     .text.HAL_RNG_Init:0000000000000000 HAL_RNG_Init
     /tmp/ccppX03r.s:119    .text.HAL_RNG_MspDeInit:0000000000000000 $t
     /tmp/ccppX03r.s:126    .text.HAL_RNG_MspDeInit:0000000000000000 HAL_RNG_MspDeInit
     /tmp/ccppX03r.s:141    .text.HAL_RNG_DeInit:0000000000000000 $t
     /tmp/ccppX03r.s:148    .text.HAL_RNG_DeInit:0000000000000000 HAL_RNG_DeInit
     /tmp/ccppX03r.s:207    .text.HAL_RNG_GenerateRandomNumber:0000000000000000 $t
     /tmp/ccppX03r.s:214    .text.HAL_RNG_GenerateRandomNumber:0000000000000000 HAL_RNG_GenerateRandomNumber
     /tmp/ccppX03r.s:345    .text.HAL_RNG_GenerateRandomNumber_IT:0000000000000000 $t
     /tmp/ccppX03r.s:352    .text.HAL_RNG_GenerateRandomNumber_IT:0000000000000000 HAL_RNG_GenerateRandomNumber_IT
     /tmp/ccppX03r.s:420    .text.HAL_RNG_GetRandomNumber:0000000000000000 $t
     /tmp/ccppX03r.s:427    .text.HAL_RNG_GetRandomNumber:0000000000000000 HAL_RNG_GetRandomNumber
     /tmp/ccppX03r.s:463    .text.HAL_RNG_GetRandomNumber_IT:0000000000000000 $t
     /tmp/ccppX03r.s:470    .text.HAL_RNG_GetRandomNumber_IT:0000000000000000 HAL_RNG_GetRandomNumber_IT
     /tmp/ccppX03r.s:516    .text.HAL_RNG_ReadLastRandomNumber:0000000000000000 $t
     /tmp/ccppX03r.s:523    .text.HAL_RNG_ReadLastRandomNumber:0000000000000000 HAL_RNG_ReadLastRandomNumber
     /tmp/ccppX03r.s:541    .text.HAL_RNG_ReadyDataCallback:0000000000000000 $t
     /tmp/ccppX03r.s:548    .text.HAL_RNG_ReadyDataCallback:0000000000000000 HAL_RNG_ReadyDataCallback
     /tmp/ccppX03r.s:564    .text.HAL_RNG_ErrorCallback:0000000000000000 $t
     /tmp/ccppX03r.s:571    .text.HAL_RNG_ErrorCallback:0000000000000000 HAL_RNG_ErrorCallback
     /tmp/ccppX03r.s:586    .text.HAL_RNG_IRQHandler:0000000000000000 $t
     /tmp/ccppX03r.s:593    .text.HAL_RNG_IRQHandler:0000000000000000 HAL_RNG_IRQHandler
     /tmp/ccppX03r.s:707    .text.HAL_RNG_GetState:0000000000000000 $t
     /tmp/ccppX03r.s:714    .text.HAL_RNG_GetState:0000000000000000 HAL_RNG_GetState
     /tmp/ccppX03r.s:732    .text.HAL_RNG_GetError:0000000000000000 $t
     /tmp/ccppX03r.s:739    .text.HAL_RNG_GetError:0000000000000000 HAL_RNG_GetError

UNDEFINED SYMBOLS
HAL_GetTick

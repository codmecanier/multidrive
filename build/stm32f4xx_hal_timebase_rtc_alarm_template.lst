ARM GAS  /tmp/ccvWNxpr.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_hal_timebase_rtc_alarm_template.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_InitTick,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_InitTick
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	HAL_InitTick:
  27              	.LVL0:
  28              	.LFB239:
  29              		.file 1 "stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c"
   1:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** /**
   2:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   ******************************************************************************
   3:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   * @file    stm32f4xx_hal_timebase_rtc_alarm_template.c 
   4:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   * @author  MCD Application Team
   5:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   * @brief   HAL time base based on the hardware RTC_ALARM Template.
   6:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   *
   7:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   *          This file override the native HAL time base functions (defined as weak)
   8:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   *          to use the RTC ALARM for time base generation:
   9:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   *           + Initializes the RTC peripheral to increment the seconds registers each 1ms
  10:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   *           + The alarm is configured to assert an interrupt when the RTC reaches 1ms 
  11:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   *           + HAL_IncTick is called at each Alarm event and the time is reset to 00:00:00
  12:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   *           + HSE (default), LSE or LSI can be selected as RTC clock source
  13:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   *
  14:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   ******************************************************************************
  15:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   * @attention
  16:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   *
  17:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   * Copyright (c) 2017 STMicroelectronics.
  18:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   * All rights reserved.
  19:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   *
  20:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   * This software is licensed under terms that can be found in the LICENSE file
  21:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   * in the root directory of this software component.
  22:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  23:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   *
  24:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   ******************************************************************************
  25:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****  @verbatim
  26:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   ==============================================================================
  27:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****                         ##### How to use this driver #####
  28:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   ==============================================================================
  29:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     [..]
ARM GAS  /tmp/ccvWNxpr.s 			page 2


  30:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     This file must be copied to the application folder and modified as follows:
  31:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     (#) Rename it to 'stm32f4xx_hal_timebase_rtc_alarm.c'
  32:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     (#) Add this file and the RTC HAL drivers to your project and uncomment
  33:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****        HAL_RTC_MODULE_ENABLED define in stm32f4xx_hal_conf.h 
  34:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
  35:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     [..]
  36:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     (@) HAL RTC alarm and HAL RTC wakeup drivers can’t be used with low power modes:
  37:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****         The wake up capability of the RTC may be intrusive in case of prior low power mode
  38:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****         configuration requiring different wake up sources.
  39:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****         Application/Example behavior is no more guaranteed 
  40:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     (@) The stm32f4xx_hal_timebase_tim use is recommended for the Applications/Examples
  41:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****           requiring low power modes
  42:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
  43:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   @endverbatim
  44:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   ******************************************************************************
  45:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   */
  46:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
  47:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** /* Includes ------------------------------------------------------------------*/
  48:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** #include "stm32f4xx_hal.h"
  49:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** /** @addtogroup STM32F4xx_HAL_Driver
  50:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   * @{
  51:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   */
  52:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
  53:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** /** @defgroup HAL_TimeBase_RTC_Alarm_Template  HAL TimeBase RTC Alarm Template
  54:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   * @{
  55:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   */ 
  56:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
  57:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** /* Private typedef -----------------------------------------------------------*/
  58:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** /* Private define ------------------------------------------------------------*/
  59:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
  60:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** /* Uncomment the line below to select the appropriate RTC Clock source for your application: 
  61:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   + RTC_CLOCK_SOURCE_HSE: can be selected for applications requiring timing precision.
  62:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   + RTC_CLOCK_SOURCE_LSE: can be selected for applications with low constraint on timing
  63:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****                           precision.
  64:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   + RTC_CLOCK_SOURCE_LSI: can be selected for applications with low constraint on timing
  65:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****                           precision.
  66:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   */
  67:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** #define RTC_CLOCK_SOURCE_HSE
  68:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** /* #define RTC_CLOCK_SOURCE_LSE */
  69:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** /* #define RTC_CLOCK_SOURCE_LSI */
  70:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
  71:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** #ifdef RTC_CLOCK_SOURCE_HSE
  72:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   #define RTC_ASYNCH_PREDIV       99U
  73:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   #define RTC_SYNCH_PREDIV        9U
  74:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   #define RCC_RTCCLKSOURCE_1MHZ   ((uint32_t)((uint32_t)RCC_BDCR_RTCSEL | (uint32_t)((HSE_VALUE/100
  75:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** #else /* RTC_CLOCK_SOURCE_LSE || RTC_CLOCK_SOURCE_LSI */
  76:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   #define RTC_ASYNCH_PREDIV       0U
  77:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   #define RTC_SYNCH_PREDIV        31U
  78:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** #endif /* RTC_CLOCK_SOURCE_HSE */
  79:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
  80:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** /* Private macro -------------------------------------------------------------*/
  81:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** /* Private variables ---------------------------------------------------------*/
  82:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** RTC_HandleTypeDef        hRTC_Handle;
  83:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** /* Private function prototypes -----------------------------------------------*/
  84:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** void RTC_Alarm_IRQHandler(void);
  85:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** /* Private functions ---------------------------------------------------------*/
  86:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
ARM GAS  /tmp/ccvWNxpr.s 			page 3


  87:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** /**
  88:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   * @brief  This function configures the RTC_ALARMA as a time base source. 
  89:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   *         The time source is configured  to have 1ms time base with a dedicated 
  90:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   *         Tick interrupt priority. 
  91:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   * @note   This function is called  automatically at the beginning of program after
  92:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  93:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   * @param  TickPriority Tick interrupt priority.
  94:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   * @retval HAL status
  95:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   */
  96:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
  97:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** {
  30              		.loc 1 97 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 72
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 97 1 is_stmt 0 view .LVU1
  35 0000 30B5     		push	{r4, r5, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 12
  38              		.cfi_offset 4, -12
  39              		.cfi_offset 5, -8
  40              		.cfi_offset 14, -4
  41 0002 93B0     		sub	sp, sp, #76
  42              	.LCFI1:
  43              		.cfi_def_cfa_offset 88
  44 0004 0546     		mov	r5, r0
  98:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   __IO uint32_t counter = 0U;
  45              		.loc 1 98 3 is_stmt 1 view .LVU2
  46              		.loc 1 98 17 is_stmt 0 view .LVU3
  47 0006 0023     		movs	r3, #0
  48 0008 1193     		str	r3, [sp, #68]
  99:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
 100:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   RCC_OscInitTypeDef        RCC_OscInitStruct;
  49              		.loc 1 100 3 is_stmt 1 view .LVU4
 101:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   RCC_PeriphCLKInitTypeDef  PeriphClkInitStruct;
  50              		.loc 1 101 3 view .LVU5
 102:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   HAL_StatusTypeDef     status;
  51              		.loc 1 102 3 view .LVU6
 103:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
 104:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** #ifdef RTC_CLOCK_SOURCE_LSE
 105:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   /* Configure LSE as RTC clock source */
 106:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_LSE;
 107:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 108:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   RCC_OscInitStruct.LSEState = RCC_LSE_ON;
 109:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   PeriphClkInitStruct.RTCClockSelection = RCC_RTCCLKSOURCE_LSE;
 110:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** #elif defined (RTC_CLOCK_SOURCE_LSI)
 111:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   /* Configure LSI as RTC clock source */
 112:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_LSI;
 113:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 114:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 115:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   PeriphClkInitStruct.RTCClockSelection = RCC_RTCCLKSOURCE_LSI;
 116:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** #elif defined (RTC_CLOCK_SOURCE_HSE)
 117:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   /* Configure HSE as RTC clock source */
 118:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
  52              		.loc 1 118 3 view .LVU7
  53              		.loc 1 118 36 is_stmt 0 view .LVU8
  54 000a 0122     		movs	r2, #1
ARM GAS  /tmp/ccvWNxpr.s 			page 4


  55 000c 0592     		str	r2, [sp, #20]
 119:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
  56              		.loc 1 119 3 is_stmt 1 view .LVU9
  57              		.loc 1 119 34 is_stmt 0 view .LVU10
  58 000e 0B93     		str	r3, [sp, #44]
 120:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  59              		.loc 1 120 3 is_stmt 1 view .LVU11
  60              		.loc 1 120 30 is_stmt 0 view .LVU12
  61 0010 4FF48033 		mov	r3, #65536
  62 0014 0693     		str	r3, [sp, #24]
 121:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   /* Ensure that RTC is clocked by 1MHz */
 122:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   PeriphClkInitStruct.RTCClockSelection = RCC_RTCCLKSOURCE_1MHZ;
  63              		.loc 1 122 3 is_stmt 1 view .LVU13
  64              		.loc 1 122 41 is_stmt 0 view .LVU14
  65 0016 4B4B     		ldr	r3, .L21
  66 0018 0493     		str	r3, [sp, #16]
 123:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** #else
 124:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** #error Please select the RTC Clock source
 125:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** #endif /* RTC_CLOCK_SOURCE_LSE */
 126:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
 127:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   status = HAL_RCC_OscConfig(&RCC_OscInitStruct);
  67              		.loc 1 127 3 is_stmt 1 view .LVU15
  68              		.loc 1 127 12 is_stmt 0 view .LVU16
  69 001a 05A8     		add	r0, sp, #20
  70              	.LVL1:
  71              		.loc 1 127 12 view .LVU17
  72 001c FFF7FEFF 		bl	HAL_RCC_OscConfig
  73              	.LVL2:
 128:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   if (status == HAL_OK)
  74              		.loc 1 128 3 is_stmt 1 view .LVU18
  75              		.loc 1 128 6 is_stmt 0 view .LVU19
  76 0020 0446     		mov	r4, r0
  77 0022 20B3     		cbz	r0, .L17
  78              	.LVL3:
  79              	.L2:
 129:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   {
 130:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_RTC;
 131:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     status = HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct);
 132:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   }
 133:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   if (status == HAL_OK)
  80              		.loc 1 133 3 is_stmt 1 view .LVU20
  81              		.loc 1 133 6 is_stmt 0 view .LVU21
  82 0024 54B3     		cbz	r4, .L18
  83              	.L3:
 134:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   {
 135:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     /* Enable RTC Clock */
 136:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     __HAL_RCC_RTC_ENABLE();
 137:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     /* The time base should be 1ms
 138:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****        Time base = ((RTC_ASYNCH_PREDIV + 1) * (RTC_SYNCH_PREDIV + 1)) / RTC_CLOCK
 139:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****        HSE as RTC clock
 140:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****          Time base = ((99 + 1) * (9 + 1)) / 1MHz
 141:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****                    = 1ms
 142:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****        LSE as RTC clock
 143:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****          Time base = ((31 + 1) * (0 + 1)) / 32.768KHz
 144:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****                    = ~1ms
 145:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****        LSI as RTC clock
 146:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****          Time base = ((31 + 1) * (0 + 1)) / 32KHz
ARM GAS  /tmp/ccvWNxpr.s 			page 5


 147:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****                    = 1ms
 148:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     */
 149:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     hRTC_Handle.Instance = RTC;
 150:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     hRTC_Handle.Init.HourFormat = RTC_HOURFORMAT_24;
 151:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     hRTC_Handle.Init.AsynchPrediv = RTC_ASYNCH_PREDIV;
 152:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     hRTC_Handle.Init.SynchPrediv = RTC_SYNCH_PREDIV;
 153:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     hRTC_Handle.Init.OutPut = RTC_OUTPUT_DISABLE;
 154:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     hRTC_Handle.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 155:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     hRTC_Handle.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 156:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     status = HAL_RTC_Init(&hRTC_Handle);
 157:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   }
 158:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   if (status == HAL_OK)
  84              		.loc 1 158 3 is_stmt 1 view .LVU22
  85              		.loc 1 158 6 is_stmt 0 view .LVU23
  86 0026 002C     		cmp	r4, #0
  87 0028 3BD1     		bne	.L4
 159:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   {
 160:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     /* Disable the write protection for RTC registers */
 161:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     __HAL_RTC_WRITEPROTECTION_DISABLE(&hRTC_Handle);
  88              		.loc 1 161 5 is_stmt 1 view .LVU24
  89              		.loc 1 161 5 view .LVU25
  90 002a 474B     		ldr	r3, .L21+4
  91 002c 1868     		ldr	r0, [r3]
  92 002e CA23     		movs	r3, #202
  93 0030 4362     		str	r3, [r0, #36]
  94              		.loc 1 161 5 view .LVU26
  95 0032 5323     		movs	r3, #83
  96 0034 4362     		str	r3, [r0, #36]
  97              		.loc 1 161 5 view .LVU27
 162:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
 163:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     /* Disable the Alarm A interrupt */
 164:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     __HAL_RTC_ALARMA_DISABLE(&hRTC_Handle);
  98              		.loc 1 164 5 view .LVU28
  99 0036 8368     		ldr	r3, [r0, #8]
 100 0038 23F48073 		bic	r3, r3, #256
 101 003c 8360     		str	r3, [r0, #8]
 165:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
 166:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     /* Clear flag alarm A */
 167:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     __HAL_RTC_ALARM_CLEAR_FLAG(&hRTC_Handle, RTC_FLAG_ALRAF);
 102              		.loc 1 167 5 view .LVU29
 103 003e C368     		ldr	r3, [r0, #12]
 104 0040 DBB2     		uxtb	r3, r3
 105 0042 63F4C073 		orn	r3, r3, #384
 106 0046 C360     		str	r3, [r0, #12]
 168:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
 169:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     counter = 0U;
 107              		.loc 1 169 5 view .LVU30
 108              		.loc 1 169 13 is_stmt 0 view .LVU31
 109 0048 0023     		movs	r3, #0
 110 004a 1193     		str	r3, [sp, #68]
 170:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     /* Wait till RTC ALRAWF flag is set and if Time out is reached exit */
 171:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     while (__HAL_RTC_ALARM_GET_FLAG(&hRTC_Handle, RTC_FLAG_ALRAWF) == RESET)
 111              		.loc 1 171 5 is_stmt 1 view .LVU32
 112              	.LVL4:
 113              	.L5:
 114              		.loc 1 171 11 view .LVU33
 115              		.loc 1 171 12 is_stmt 0 view .LVU34
ARM GAS  /tmp/ccvWNxpr.s 			page 6


 116 004c C368     		ldr	r3, [r0, #12]
 117              		.loc 1 171 11 view .LVU35
 118 004e 13F0010F 		tst	r3, #1
 119 0052 26D1     		bne	.L4
 172:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     {
 173:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****       if (counter++ == (SystemCoreClock / 48U)) /* Timeout = ~ 1s */
 120              		.loc 1 173 7 is_stmt 1 view .LVU36
 121              		.loc 1 173 18 is_stmt 0 view .LVU37
 122 0054 119A     		ldr	r2, [sp, #68]
 123 0056 531C     		adds	r3, r2, #1
 124 0058 1193     		str	r3, [sp, #68]
 125              		.loc 1 173 41 view .LVU38
 126 005a 3C4B     		ldr	r3, .L21+8
 127 005c 1B68     		ldr	r3, [r3]
 128 005e 3C49     		ldr	r1, .L21+12
 129 0060 A1FB0313 		umull	r1, r3, r1, r3
 130              		.loc 1 173 10 view .LVU39
 131 0064 B2EB531F 		cmp	r2, r3, lsr #5
 132 0068 F0D1     		bne	.L5
 174:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****       {
 175:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****         status =  HAL_ERROR;
 133              		.loc 1 175 16 view .LVU40
 134 006a 0124     		movs	r4, #1
 135              	.LVL5:
 136              		.loc 1 175 16 view .LVU41
 137 006c EEE7     		b	.L5
 138              	.LVL6:
 139              	.L17:
 130:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     status = HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct);
 140              		.loc 1 130 5 is_stmt 1 view .LVU42
 130:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     status = HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct);
 141              		.loc 1 130 46 is_stmt 0 view .LVU43
 142 006e 0223     		movs	r3, #2
 143 0070 0193     		str	r3, [sp, #4]
 131:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   }
 144              		.loc 1 131 5 is_stmt 1 view .LVU44
 131:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   }
 145              		.loc 1 131 14 is_stmt 0 view .LVU45
 146 0072 01A8     		add	r0, sp, #4
 147              	.LVL7:
 131:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   }
 148              		.loc 1 131 14 view .LVU46
 149 0074 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 150              	.LVL8:
 151 0078 0446     		mov	r4, r0
 152              	.LVL9:
 131:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   }
 153              		.loc 1 131 14 view .LVU47
 154 007a D3E7     		b	.L2
 155              	.L18:
 136:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     /* The time base should be 1ms
 156              		.loc 1 136 5 is_stmt 1 view .LVU48
 157 007c 354B     		ldr	r3, .L21+16
 158 007e 0122     		movs	r2, #1
 159 0080 1A60     		str	r2, [r3]
 149:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     hRTC_Handle.Init.HourFormat = RTC_HOURFORMAT_24;
 160              		.loc 1 149 5 view .LVU49
ARM GAS  /tmp/ccvWNxpr.s 			page 7


 149:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     hRTC_Handle.Init.HourFormat = RTC_HOURFORMAT_24;
 161              		.loc 1 149 26 is_stmt 0 view .LVU50
 162 0082 3148     		ldr	r0, .L21+4
 163 0084 344B     		ldr	r3, .L21+20
 164 0086 0360     		str	r3, [r0]
 150:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     hRTC_Handle.Init.AsynchPrediv = RTC_ASYNCH_PREDIV;
 165              		.loc 1 150 5 is_stmt 1 view .LVU51
 150:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     hRTC_Handle.Init.AsynchPrediv = RTC_ASYNCH_PREDIV;
 166              		.loc 1 150 33 is_stmt 0 view .LVU52
 167 0088 0023     		movs	r3, #0
 168 008a 4360     		str	r3, [r0, #4]
 151:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     hRTC_Handle.Init.SynchPrediv = RTC_SYNCH_PREDIV;
 169              		.loc 1 151 5 is_stmt 1 view .LVU53
 151:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     hRTC_Handle.Init.SynchPrediv = RTC_SYNCH_PREDIV;
 170              		.loc 1 151 35 is_stmt 0 view .LVU54
 171 008c 6322     		movs	r2, #99
 172 008e 8260     		str	r2, [r0, #8]
 152:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     hRTC_Handle.Init.OutPut = RTC_OUTPUT_DISABLE;
 173              		.loc 1 152 5 is_stmt 1 view .LVU55
 152:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     hRTC_Handle.Init.OutPut = RTC_OUTPUT_DISABLE;
 174              		.loc 1 152 34 is_stmt 0 view .LVU56
 175 0090 0922     		movs	r2, #9
 176 0092 C260     		str	r2, [r0, #12]
 153:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     hRTC_Handle.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 177              		.loc 1 153 5 is_stmt 1 view .LVU57
 153:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     hRTC_Handle.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 178              		.loc 1 153 29 is_stmt 0 view .LVU58
 179 0094 0361     		str	r3, [r0, #16]
 154:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     hRTC_Handle.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 180              		.loc 1 154 5 is_stmt 1 view .LVU59
 154:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     hRTC_Handle.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 181              		.loc 1 154 37 is_stmt 0 view .LVU60
 182 0096 4361     		str	r3, [r0, #20]
 155:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     status = HAL_RTC_Init(&hRTC_Handle);
 183              		.loc 1 155 5 is_stmt 1 view .LVU61
 155:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     status = HAL_RTC_Init(&hRTC_Handle);
 184              		.loc 1 155 33 is_stmt 0 view .LVU62
 185 0098 8361     		str	r3, [r0, #24]
 156:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   }
 186              		.loc 1 156 5 is_stmt 1 view .LVU63
 156:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   }
 187              		.loc 1 156 14 is_stmt 0 view .LVU64
 188 009a FFF7FEFF 		bl	HAL_RTC_Init
 189              	.LVL10:
 190 009e 0446     		mov	r4, r0
 191              	.LVL11:
 156:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   }
 192              		.loc 1 156 14 view .LVU65
 193 00a0 C1E7     		b	.L3
 194              	.L4:
 176:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****       }
 177:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     }
 178:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   }
 179:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   if (status == HAL_OK)
 195              		.loc 1 179 3 is_stmt 1 view .LVU66
 196              		.loc 1 179 6 is_stmt 0 view .LVU67
 197 00a2 002C     		cmp	r4, #0
ARM GAS  /tmp/ccvWNxpr.s 			page 8


 198 00a4 2FD1     		bne	.L8
 180:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   {
 181:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     hRTC_Handle.Instance->ALRMAR = (uint32_t)0x01U;
 199              		.loc 1 181 5 is_stmt 1 view .LVU68
 200              		.loc 1 181 16 is_stmt 0 view .LVU69
 201 00a6 2849     		ldr	r1, .L21+4
 202 00a8 0B68     		ldr	r3, [r1]
 203              		.loc 1 181 34 view .LVU70
 204 00aa 0122     		movs	r2, #1
 205 00ac DA61     		str	r2, [r3, #28]
 182:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
 183:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     /* Configure the Alarm state: Enable Alarm */
 184:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     __HAL_RTC_ALARMA_ENABLE(&hRTC_Handle);
 206              		.loc 1 184 5 is_stmt 1 view .LVU71
 207 00ae 9A68     		ldr	r2, [r3, #8]
 208 00b0 42F48072 		orr	r2, r2, #256
 209 00b4 9A60     		str	r2, [r3, #8]
 185:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     /* Configure the Alarm interrupt */
 186:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     __HAL_RTC_ALARM_ENABLE_IT(&hRTC_Handle, RTC_IT_ALRA);
 210              		.loc 1 186 5 view .LVU72
 211 00b6 9A68     		ldr	r2, [r3, #8]
 212 00b8 42F48052 		orr	r2, r2, #4096
 213 00bc 9A60     		str	r2, [r3, #8]
 187:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
 188:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     /* RTC Alarm Interrupt Configuration: EXTI configuration */
 189:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     __HAL_RTC_ALARM_EXTI_ENABLE_IT();
 214              		.loc 1 189 5 view .LVU73
 215 00be 274B     		ldr	r3, .L21+24
 216 00c0 1A68     		ldr	r2, [r3]
 217 00c2 42F40032 		orr	r2, r2, #131072
 218 00c6 1A60     		str	r2, [r3]
 190:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     __HAL_RTC_ALARM_EXTI_ENABLE_RISING_EDGE();
 219              		.loc 1 190 5 view .LVU74
 220 00c8 9A68     		ldr	r2, [r3, #8]
 221 00ca 42F40032 		orr	r2, r2, #131072
 222 00ce 9A60     		str	r2, [r3, #8]
 191:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
 192:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     /* Check if the Initialization mode is set */
 193:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     if ((hRTC_Handle.Instance->ISR & RTC_ISR_INITF) == (uint32_t)RESET)
 223              		.loc 1 193 5 view .LVU75
 224              		.loc 1 193 21 is_stmt 0 view .LVU76
 225 00d0 0868     		ldr	r0, [r1]
 226              		.loc 1 193 30 view .LVU77
 227 00d2 C368     		ldr	r3, [r0, #12]
 228              		.loc 1 193 8 view .LVU78
 229 00d4 13F0400F 		tst	r3, #64
 230 00d8 15D1     		bne	.L8
 194:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     {
 195:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****       /* Set the Initialization mode */
 196:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****       hRTC_Handle.Instance->ISR = (uint32_t)RTC_INIT_MASK;
 231              		.loc 1 196 7 is_stmt 1 view .LVU79
 232              		.loc 1 196 33 is_stmt 0 view .LVU80
 233 00da 4FF0FF33 		mov	r3, #-1
 234 00de C360     		str	r3, [r0, #12]
 197:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****       counter = 0U;
 235              		.loc 1 197 7 is_stmt 1 view .LVU81
 236              		.loc 1 197 15 is_stmt 0 view .LVU82
ARM GAS  /tmp/ccvWNxpr.s 			page 9


 237 00e0 0023     		movs	r3, #0
 238 00e2 1193     		str	r3, [sp, #68]
 198:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****       while ((hRTC_Handle.Instance->ISR & RTC_ISR_INITF) == (uint32_t)RESET)
 239              		.loc 1 198 7 is_stmt 1 view .LVU83
 240              	.LVL12:
 241              	.L9:
 242              		.loc 1 198 13 view .LVU84
 243              		.loc 1 198 35 is_stmt 0 view .LVU85
 244 00e4 C368     		ldr	r3, [r0, #12]
 245              		.loc 1 198 13 view .LVU86
 246 00e6 13F0400F 		tst	r3, #64
 247 00ea 0CD1     		bne	.L8
 199:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****       {
 200:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****         if (counter++ == (SystemCoreClock / 48U)) /* Timeout = ~ 1s */
 248              		.loc 1 200 9 is_stmt 1 view .LVU87
 249              		.loc 1 200 20 is_stmt 0 view .LVU88
 250 00ec 119A     		ldr	r2, [sp, #68]
 251 00ee 531C     		adds	r3, r2, #1
 252 00f0 1193     		str	r3, [sp, #68]
 253              		.loc 1 200 43 view .LVU89
 254 00f2 164B     		ldr	r3, .L21+8
 255 00f4 1B68     		ldr	r3, [r3]
 256 00f6 1649     		ldr	r1, .L21+12
 257 00f8 A1FB0313 		umull	r1, r3, r1, r3
 258              		.loc 1 200 12 view .LVU90
 259 00fc B2EB531F 		cmp	r2, r3, lsr #5
 260 0100 F0D1     		bne	.L9
 201:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****         {
 202:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****           status = HAL_ERROR;
 261              		.loc 1 202 18 view .LVU91
 262 0102 0124     		movs	r4, #1
 263              	.LVL13:
 264              		.loc 1 202 18 view .LVU92
 265 0104 EEE7     		b	.L9
 266              	.LVL14:
 267              	.L8:
 203:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****         }
 204:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****       }
 205:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     }
 206:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   }
 207:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   if (status == HAL_OK)
 268              		.loc 1 207 3 is_stmt 1 view .LVU93
 269              		.loc 1 207 6 is_stmt 0 view .LVU94
 270 0106 14B1     		cbz	r4, .L19
 271              	.LVL15:
 272              	.L12:
 208:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   {
 209:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     hRTC_Handle.Instance->DR = 0U;
 210:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     hRTC_Handle.Instance->TR = 0U;
 211:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
 212:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     hRTC_Handle.Instance->ISR &= (uint32_t)~RTC_ISR_INIT;
 213:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
 214:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     /* Enable the write protection for RTC registers */
 215:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     __HAL_RTC_WRITEPROTECTION_ENABLE(&hRTC_Handle);
 216:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
 217:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     /* Enable the RTC Alarm Interrupt */
 218:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     HAL_NVIC_EnableIRQ(RTC_Alarm_IRQn);
ARM GAS  /tmp/ccvWNxpr.s 			page 10


 219:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
 220:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     /* Configure the SysTick IRQ priority */
 221:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 222:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     {
 223:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****       HAL_NVIC_SetPriority(RTC_Alarm_IRQn, TickPriority, 0U);
 224:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****       uwTickPrio = TickPriority;
 225:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     }
 226:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     else
 227:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     {
 228:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****       status = HAL_ERROR;
 229:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     }
 230:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
 231:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   }
 232:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   return status;
 273              		.loc 1 232 3 is_stmt 1 view .LVU95
 233:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** }
 274              		.loc 1 233 1 is_stmt 0 view .LVU96
 275 0108 2046     		mov	r0, r4
 276 010a 13B0     		add	sp, sp, #76
 277              	.LCFI2:
 278              		.cfi_remember_state
 279              		.cfi_def_cfa_offset 12
 280              		@ sp needed
 281 010c 30BD     		pop	{r4, r5, pc}
 282              	.LVL16:
 283              	.L19:
 284              	.LCFI3:
 285              		.cfi_restore_state
 209:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     hRTC_Handle.Instance->TR = 0U;
 286              		.loc 1 209 5 is_stmt 1 view .LVU97
 209:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     hRTC_Handle.Instance->TR = 0U;
 287              		.loc 1 209 16 is_stmt 0 view .LVU98
 288 010e 0E4B     		ldr	r3, .L21+4
 289 0110 1A68     		ldr	r2, [r3]
 209:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     hRTC_Handle.Instance->TR = 0U;
 290              		.loc 1 209 30 view .LVU99
 291 0112 0021     		movs	r1, #0
 292 0114 5160     		str	r1, [r2, #4]
 210:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
 293              		.loc 1 210 5 is_stmt 1 view .LVU100
 210:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
 294              		.loc 1 210 30 is_stmt 0 view .LVU101
 295 0116 1160     		str	r1, [r2]
 212:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
 296              		.loc 1 212 5 is_stmt 1 view .LVU102
 212:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
 297              		.loc 1 212 16 is_stmt 0 view .LVU103
 298 0118 1B68     		ldr	r3, [r3]
 212:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
 299              		.loc 1 212 31 view .LVU104
 300 011a DA68     		ldr	r2, [r3, #12]
 301 011c 22F08002 		bic	r2, r2, #128
 302 0120 DA60     		str	r2, [r3, #12]
 215:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
 303              		.loc 1 215 5 is_stmt 1 view .LVU105
 215:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
 304              		.loc 1 215 5 view .LVU106
ARM GAS  /tmp/ccvWNxpr.s 			page 11


 305 0122 FF22     		movs	r2, #255
 306 0124 5A62     		str	r2, [r3, #36]
 215:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
 307              		.loc 1 215 5 view .LVU107
 218:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
 308              		.loc 1 218 5 view .LVU108
 309 0126 2920     		movs	r0, #41
 310 0128 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 311              	.LVL17:
 221:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     {
 312              		.loc 1 221 5 view .LVU109
 221:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     {
 313              		.loc 1 221 8 is_stmt 0 view .LVU110
 314 012c 0F2D     		cmp	r5, #15
 315 012e 01D9     		bls	.L20
 228:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     }
 316              		.loc 1 228 14 view .LVU111
 317 0130 0124     		movs	r4, #1
 318              	.LVL18:
 228:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     }
 319              		.loc 1 228 14 view .LVU112
 320 0132 E9E7     		b	.L12
 321              	.LVL19:
 322              	.L20:
 223:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****       uwTickPrio = TickPriority;
 323              		.loc 1 223 7 is_stmt 1 view .LVU113
 324 0134 0022     		movs	r2, #0
 325 0136 2946     		mov	r1, r5
 326 0138 2920     		movs	r0, #41
 327 013a FFF7FEFF 		bl	HAL_NVIC_SetPriority
 328              	.LVL20:
 224:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     }
 329              		.loc 1 224 7 view .LVU114
 224:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     }
 330              		.loc 1 224 18 is_stmt 0 view .LVU115
 331 013e 084B     		ldr	r3, .L21+28
 332 0140 1D60     		str	r5, [r3]
 333 0142 E1E7     		b	.L12
 334              	.L22:
 335              		.align	2
 336              	.L21:
 337 0144 00031900 		.word	1639168
 338 0148 00000000 		.word	hRTC_Handle
 339 014c 00000000 		.word	SystemCoreClock
 340 0150 ABAAAAAA 		.word	-1431655765
 341 0154 3C0E4742 		.word	1111952956
 342 0158 00280040 		.word	1073752064
 343 015c 003C0140 		.word	1073822720
 344 0160 00000000 		.word	uwTickPrio
 345              		.cfi_endproc
 346              	.LFE239:
 348              		.section	.text.HAL_SuspendTick,"ax",%progbits
 349              		.align	1
 350              		.global	HAL_SuspendTick
 351              		.syntax unified
 352              		.thumb
 353              		.thumb_func
ARM GAS  /tmp/ccvWNxpr.s 			page 12


 354              		.fpu fpv4-sp-d16
 356              	HAL_SuspendTick:
 357              	.LFB240:
 234:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
 235:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** /**
 236:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   * @brief  Suspend Tick increment.
 237:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   * @note   Disable the tick increment by disabling RTC ALARM interrupt.
 238:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   * @retval None
 239:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   */
 240:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** void HAL_SuspendTick(void)
 241:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** {
 358              		.loc 1 241 1 is_stmt 1 view -0
 359              		.cfi_startproc
 360              		@ args = 0, pretend = 0, frame = 0
 361              		@ frame_needed = 0, uses_anonymous_args = 0
 362              		@ link register save eliminated.
 242:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   /* Disable the write protection for RTC registers */
 243:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(&hRTC_Handle);
 363              		.loc 1 243 3 view .LVU117
 364              		.loc 1 243 3 view .LVU118
 365 0000 064B     		ldr	r3, .L24
 366 0002 1B68     		ldr	r3, [r3]
 367 0004 CA22     		movs	r2, #202
 368 0006 5A62     		str	r2, [r3, #36]
 369              		.loc 1 243 3 view .LVU119
 370 0008 5322     		movs	r2, #83
 371 000a 5A62     		str	r2, [r3, #36]
 372              		.loc 1 243 3 view .LVU120
 244:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   /* Disable RTC ALARM update Interrupt */
 245:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   __HAL_RTC_ALARM_DISABLE_IT(&hRTC_Handle, RTC_IT_ALRA);
 373              		.loc 1 245 3 view .LVU121
 374 000c 9A68     		ldr	r2, [r3, #8]
 375 000e 22F48052 		bic	r2, r2, #4096
 376 0012 9A60     		str	r2, [r3, #8]
 246:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   /* Enable the write protection for RTC registers */
 247:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(&hRTC_Handle);
 377              		.loc 1 247 3 view .LVU122
 378              		.loc 1 247 3 view .LVU123
 379 0014 FF22     		movs	r2, #255
 380 0016 5A62     		str	r2, [r3, #36]
 381              		.loc 1 247 3 view .LVU124
 248:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** }
 382              		.loc 1 248 1 is_stmt 0 view .LVU125
 383 0018 7047     		bx	lr
 384              	.L25:
 385 001a 00BF     		.align	2
 386              	.L24:
 387 001c 00000000 		.word	hRTC_Handle
 388              		.cfi_endproc
 389              	.LFE240:
 391              		.section	.text.HAL_ResumeTick,"ax",%progbits
 392              		.align	1
 393              		.global	HAL_ResumeTick
 394              		.syntax unified
 395              		.thumb
 396              		.thumb_func
 397              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccvWNxpr.s 			page 13


 399              	HAL_ResumeTick:
 400              	.LFB241:
 249:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
 250:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** /**
 251:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   * @brief  Resume Tick increment.
 252:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   * @note   Enable the tick increment by Enabling RTC ALARM interrupt.
 253:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   * @retval None
 254:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   */
 255:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** void HAL_ResumeTick(void)
 256:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** {
 401              		.loc 1 256 1 is_stmt 1 view -0
 402              		.cfi_startproc
 403              		@ args = 0, pretend = 0, frame = 0
 404              		@ frame_needed = 0, uses_anonymous_args = 0
 405              		@ link register save eliminated.
 257:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   /* Disable the write protection for RTC registers */
 258:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(&hRTC_Handle);
 406              		.loc 1 258 3 view .LVU127
 407              		.loc 1 258 3 view .LVU128
 408 0000 064B     		ldr	r3, .L27
 409 0002 1B68     		ldr	r3, [r3]
 410 0004 CA22     		movs	r2, #202
 411 0006 5A62     		str	r2, [r3, #36]
 412              		.loc 1 258 3 view .LVU129
 413 0008 5322     		movs	r2, #83
 414 000a 5A62     		str	r2, [r3, #36]
 415              		.loc 1 258 3 view .LVU130
 259:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   /* Enable RTC ALARM Update interrupt */
 260:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   __HAL_RTC_ALARM_ENABLE_IT(&hRTC_Handle, RTC_IT_ALRA);
 416              		.loc 1 260 3 view .LVU131
 417 000c 9A68     		ldr	r2, [r3, #8]
 418 000e 42F48052 		orr	r2, r2, #4096
 419 0012 9A60     		str	r2, [r3, #8]
 261:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   /* Enable the write protection for RTC registers */
 262:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(&hRTC_Handle);
 420              		.loc 1 262 3 view .LVU132
 421              		.loc 1 262 3 view .LVU133
 422 0014 FF22     		movs	r2, #255
 423 0016 5A62     		str	r2, [r3, #36]
 424              		.loc 1 262 3 view .LVU134
 263:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** }
 425              		.loc 1 263 1 is_stmt 0 view .LVU135
 426 0018 7047     		bx	lr
 427              	.L28:
 428 001a 00BF     		.align	2
 429              	.L27:
 430 001c 00000000 		.word	hRTC_Handle
 431              		.cfi_endproc
 432              	.LFE241:
 434              		.section	.text.HAL_RTC_AlarmAEventCallback,"ax",%progbits
 435              		.align	1
 436              		.global	HAL_RTC_AlarmAEventCallback
 437              		.syntax unified
 438              		.thumb
 439              		.thumb_func
 440              		.fpu fpv4-sp-d16
 442              	HAL_RTC_AlarmAEventCallback:
ARM GAS  /tmp/ccvWNxpr.s 			page 14


 443              	.LVL21:
 444              	.LFB242:
 264:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
 265:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** /**
 266:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   * @brief  ALARM A Event Callback in non blocking mode
 267:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   * @note   This function is called  when RTC_ALARM interrupt took place, inside
 268:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   * RTC_ALARM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 269:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   * a global variable "uwTick" used as application time base.
 270:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   * @param  hrtc  RTC handle
 271:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   * @retval None
 272:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   */
 273:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** void HAL_RTC_AlarmAEventCallback(RTC_HandleTypeDef *hrtc)
 274:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** {
 445              		.loc 1 274 1 is_stmt 1 view -0
 446              		.cfi_startproc
 447              		@ args = 0, pretend = 0, frame = 8
 448              		@ frame_needed = 0, uses_anonymous_args = 0
 449              		.loc 1 274 1 is_stmt 0 view .LVU137
 450 0000 10B5     		push	{r4, lr}
 451              	.LCFI4:
 452              		.cfi_def_cfa_offset 8
 453              		.cfi_offset 4, -8
 454              		.cfi_offset 14, -4
 455 0002 82B0     		sub	sp, sp, #8
 456              	.LCFI5:
 457              		.cfi_def_cfa_offset 16
 458 0004 0446     		mov	r4, r0
 275:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   __IO uint32_t counter = 0U;
 459              		.loc 1 275 3 is_stmt 1 view .LVU138
 460              		.loc 1 275 17 is_stmt 0 view .LVU139
 461 0006 0023     		movs	r3, #0
 462 0008 0193     		str	r3, [sp, #4]
 276:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
 277:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   HAL_IncTick();
 463              		.loc 1 277 3 is_stmt 1 view .LVU140
 464 000a FFF7FEFF 		bl	HAL_IncTick
 465              	.LVL22:
 278:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
 279:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 466              		.loc 1 279 3 view .LVU141
 467              		.loc 1 279 3 view .LVU142
 468 000e 2368     		ldr	r3, [r4]
 469 0010 CA22     		movs	r2, #202
 470 0012 5A62     		str	r2, [r3, #36]
 471              		.loc 1 279 3 view .LVU143
 472 0014 2368     		ldr	r3, [r4]
 473 0016 5322     		movs	r2, #83
 474 0018 5A62     		str	r2, [r3, #36]
 475              		.loc 1 279 3 view .LVU144
 280:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
 281:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   /* Set the Initialization mode */
 282:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   hrtc->Instance->ISR = (uint32_t)RTC_INIT_MASK;
 476              		.loc 1 282 3 view .LVU145
 477              		.loc 1 282 7 is_stmt 0 view .LVU146
 478 001a 2368     		ldr	r3, [r4]
 479              		.loc 1 282 23 view .LVU147
 480 001c 4FF0FF32 		mov	r2, #-1
ARM GAS  /tmp/ccvWNxpr.s 			page 15


 481 0020 DA60     		str	r2, [r3, #12]
 283:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
 284:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   while((hrtc->Instance->ISR & RTC_ISR_INITF) == (uint32_t)RESET)
 482              		.loc 1 284 3 is_stmt 1 view .LVU148
 483              	.L30:
 484              		.loc 1 284 8 view .LVU149
 485              		.loc 1 284 14 is_stmt 0 view .LVU150
 486 0022 2168     		ldr	r1, [r4]
 487              		.loc 1 284 24 view .LVU151
 488 0024 CB68     		ldr	r3, [r1, #12]
 489              		.loc 1 284 8 view .LVU152
 490 0026 13F0400F 		tst	r3, #64
 491 002a 0AD1     		bne	.L31
 285:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   {
 286:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     if(counter++ == (SystemCoreClock /48U)) /* Timeout = ~ 1s */
 492              		.loc 1 286 5 is_stmt 1 view .LVU153
 493              		.loc 1 286 15 is_stmt 0 view .LVU154
 494 002c 019A     		ldr	r2, [sp, #4]
 495 002e 531C     		adds	r3, r2, #1
 496 0030 0193     		str	r3, [sp, #4]
 497              		.loc 1 286 38 view .LVU155
 498 0032 0B4B     		ldr	r3, .L34
 499 0034 1B68     		ldr	r3, [r3]
 500 0036 0B48     		ldr	r0, .L34+4
 501 0038 A0FB0303 		umull	r0, r3, r0, r3
 502              		.loc 1 286 7 view .LVU156
 503 003c B2EB531F 		cmp	r2, r3, lsr #5
 504 0040 EFD1     		bne	.L30
 505              	.L31:
 287:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     {
 288:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****       break;
 289:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     }
 290:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   }
 291:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
 292:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   hrtc->Instance->DR = 0U;
 506              		.loc 1 292 3 is_stmt 1 view .LVU157
 507              		.loc 1 292 22 is_stmt 0 view .LVU158
 508 0042 0023     		movs	r3, #0
 509 0044 4B60     		str	r3, [r1, #4]
 293:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   hrtc->Instance->TR = 0U;
 510              		.loc 1 293 3 is_stmt 1 view .LVU159
 511              		.loc 1 293 7 is_stmt 0 view .LVU160
 512 0046 2268     		ldr	r2, [r4]
 513              		.loc 1 293 22 view .LVU161
 514 0048 1360     		str	r3, [r2]
 294:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
 295:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   hrtc->Instance->ISR &= (uint32_t)~RTC_ISR_INIT;
 515              		.loc 1 295 3 is_stmt 1 view .LVU162
 516              		.loc 1 295 7 is_stmt 0 view .LVU163
 517 004a 2268     		ldr	r2, [r4]
 518              		.loc 1 295 23 view .LVU164
 519 004c D368     		ldr	r3, [r2, #12]
 520 004e 23F08003 		bic	r3, r3, #128
 521 0052 D360     		str	r3, [r2, #12]
 296:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
 297:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   /* Enable the write protection for RTC registers */
 298:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
ARM GAS  /tmp/ccvWNxpr.s 			page 16


 522              		.loc 1 298 3 is_stmt 1 view .LVU165
 523              		.loc 1 298 3 view .LVU166
 524 0054 2368     		ldr	r3, [r4]
 525 0056 FF22     		movs	r2, #255
 526 0058 5A62     		str	r2, [r3, #36]
 527              		.loc 1 298 3 view .LVU167
 299:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** }
 528              		.loc 1 299 1 is_stmt 0 view .LVU168
 529 005a 02B0     		add	sp, sp, #8
 530              	.LCFI6:
 531              		.cfi_def_cfa_offset 8
 532              		@ sp needed
 533 005c 10BD     		pop	{r4, pc}
 534              	.LVL23:
 535              	.L35:
 536              		.loc 1 299 1 view .LVU169
 537 005e 00BF     		.align	2
 538              	.L34:
 539 0060 00000000 		.word	SystemCoreClock
 540 0064 ABAAAAAA 		.word	-1431655765
 541              		.cfi_endproc
 542              	.LFE242:
 544              		.section	.text.RTC_Alarm_IRQHandler,"ax",%progbits
 545              		.align	1
 546              		.global	RTC_Alarm_IRQHandler
 547              		.syntax unified
 548              		.thumb
 549              		.thumb_func
 550              		.fpu fpv4-sp-d16
 552              	RTC_Alarm_IRQHandler:
 553              	.LFB243:
 300:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
 301:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** /**
 302:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   * @brief  This function handles RTC ALARM interrupt request.
 303:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   * @retval None
 304:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   */
 305:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** void RTC_Alarm_IRQHandler(void)
 306:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** {
 554              		.loc 1 306 1 is_stmt 1 view -0
 555              		.cfi_startproc
 556              		@ args = 0, pretend = 0, frame = 0
 557              		@ frame_needed = 0, uses_anonymous_args = 0
 558 0000 08B5     		push	{r3, lr}
 559              	.LCFI7:
 560              		.cfi_def_cfa_offset 8
 561              		.cfi_offset 3, -8
 562              		.cfi_offset 14, -4
 307:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   HAL_RTC_AlarmIRQHandler(&hRTC_Handle);
 563              		.loc 1 307 3 view .LVU171
 564 0002 0248     		ldr	r0, .L38
 565 0004 FFF7FEFF 		bl	HAL_RTC_AlarmIRQHandler
 566              	.LVL24:
 308:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** }
 567              		.loc 1 308 1 is_stmt 0 view .LVU172
 568 0008 08BD     		pop	{r3, pc}
 569              	.L39:
 570 000a 00BF     		.align	2
ARM GAS  /tmp/ccvWNxpr.s 			page 17


 571              	.L38:
 572 000c 00000000 		.word	hRTC_Handle
 573              		.cfi_endproc
 574              	.LFE243:
 576              		.comm	hRTC_Handle,32,4
 577              		.text
 578              	.Letext0:
 579              		.file 2 "/opt/gcc_arm/gcc-arm-none-eabi-9-2019-q4-major/arm-none-eabi/include/machine/_default_typ
 580              		.file 3 "/opt/gcc_arm/gcc-arm-none-eabi-9-2019-q4-major/arm-none-eabi/include/sys/_stdint.h"
 581              		.file 4 "CMSIS_5/CMSIS/Core/Include/core_cm4.h"
 582              		.file 5 "cmsis-device-f4/Include/system_stm32f4xx.h"
 583              		.file 6 "cmsis-device-f4/Include/stm32f407xx.h"
 584              		.file 7 "cmsis-device-f4/Include/stm32f4xx.h"
 585              		.file 8 "stm32f4xx-hal-driver/Inc/stm32f4xx_hal_def.h"
 586              		.file 9 "stm32f4xx-hal-driver/Inc/stm32f4xx_hal_rcc_ex.h"
 587              		.file 10 "stm32f4xx-hal-driver/Inc/stm32f4xx_hal_rcc.h"
 588              		.file 11 "stm32f4xx-hal-driver/Inc/stm32f4xx_hal_rtc.h"
 589              		.file 12 "stm32f4xx-hal-driver/Inc/stm32f4xx_hal.h"
 590              		.file 13 "stm32f4xx-hal-driver/Inc/stm32f4xx_hal_cortex.h"
ARM GAS  /tmp/ccvWNxpr.s 			page 18


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_hal_timebase_rtc_alarm_template.c
     /tmp/ccvWNxpr.s:18     .text.HAL_InitTick:0000000000000000 $t
     /tmp/ccvWNxpr.s:26     .text.HAL_InitTick:0000000000000000 HAL_InitTick
     /tmp/ccvWNxpr.s:337    .text.HAL_InitTick:0000000000000144 $d
                            *COM*:0000000000000020 hRTC_Handle
     /tmp/ccvWNxpr.s:349    .text.HAL_SuspendTick:0000000000000000 $t
     /tmp/ccvWNxpr.s:356    .text.HAL_SuspendTick:0000000000000000 HAL_SuspendTick
     /tmp/ccvWNxpr.s:387    .text.HAL_SuspendTick:000000000000001c $d
     /tmp/ccvWNxpr.s:392    .text.HAL_ResumeTick:0000000000000000 $t
     /tmp/ccvWNxpr.s:399    .text.HAL_ResumeTick:0000000000000000 HAL_ResumeTick
     /tmp/ccvWNxpr.s:430    .text.HAL_ResumeTick:000000000000001c $d
     /tmp/ccvWNxpr.s:435    .text.HAL_RTC_AlarmAEventCallback:0000000000000000 $t
     /tmp/ccvWNxpr.s:442    .text.HAL_RTC_AlarmAEventCallback:0000000000000000 HAL_RTC_AlarmAEventCallback
     /tmp/ccvWNxpr.s:539    .text.HAL_RTC_AlarmAEventCallback:0000000000000060 $d
     /tmp/ccvWNxpr.s:545    .text.RTC_Alarm_IRQHandler:0000000000000000 $t
     /tmp/ccvWNxpr.s:552    .text.RTC_Alarm_IRQHandler:0000000000000000 RTC_Alarm_IRQHandler
     /tmp/ccvWNxpr.s:572    .text.RTC_Alarm_IRQHandler:000000000000000c $d

UNDEFINED SYMBOLS
HAL_RCC_OscConfig
HAL_RCCEx_PeriphCLKConfig
HAL_RTC_Init
HAL_NVIC_EnableIRQ
HAL_NVIC_SetPriority
SystemCoreClock
uwTickPrio
HAL_IncTick
HAL_RTC_AlarmIRQHandler

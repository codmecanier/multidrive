ARM GAS  /tmp/ccyjDuq5.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_hal_timebase_rtc_alarm_template.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_InitTick,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_InitTick
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	HAL_InitTick:
  27              	.LVL0:
  28              	.LFB132:
  29              		.file 1 "HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c"
   1:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** /**
   2:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   ******************************************************************************
   3:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   * @file    stm32f4xx_hal_timebase_rtc_alarm_template.c 
   4:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   * @author  MCD Application Team
   5:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   * @brief   HAL time base based on the hardware RTC_ALARM Template.
   6:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   *
   7:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   *          This file override the native HAL time base functions (defined as weak)
   8:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   *          to use the RTC ALARM for time base generation:
   9:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   *           + Intializes the RTC peripheral to increment the seconds registers each 1ms
  10:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   *           + The alarm is configured to assert an interrupt when the RTC reaches 1ms 
  11:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   *           + HAL_IncTick is called at each Alarm event and the time is reset to 00:00:00
  12:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   *           + HSE (default), LSE or LSI can be selected as RTC clock source  
  13:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****  @verbatim
  14:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   ==============================================================================
  15:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****                         ##### How to use this driver #####
  16:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   ==============================================================================
  17:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     [..]
  18:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     This file must be copied to the application folder and modified as follows:
  19:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     (#) Rename it to 'stm32f4xx_hal_timebase_rtc_alarm.c'
  20:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     (#) Add this file and the RTC HAL drivers to your project and uncomment
  21:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****        HAL_RTC_MODULE_ENABLED define in stm32f4xx_hal_conf.h 
  22:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
  23:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     [..]
  24:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     (@) HAL RTC alarm and HAL RTC wakeup drivers can’t be used with low power modes:
  25:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****         The wake up capability of the RTC may be intrusive in case of prior low power mode
  26:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****         configuration requiring different wake up sources.
  27:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****         Application/Example behavior is no more guaranteed 
  28:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     (@) The stm32f4xx_hal_timebase_tim use is recommended for the Applications/Examples
  29:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****           requiring low power modes
ARM GAS  /tmp/ccyjDuq5.s 			page 2


  30:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
  31:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   @endverbatim
  32:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   ******************************************************************************
  33:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   * @attention
  34:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   *
  35:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
  36:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   * All rights reserved.</center></h2>
  37:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   *
  38:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  39:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   * the "License"; You may not use this file except in compliance with the
  40:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   * License. You may obtain a copy of the License at:
  41:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   *                        opensource.org/licenses/BSD-3-Clause
  42:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   *
  43:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   ******************************************************************************
  44:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   */
  45:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
  46:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** /* Includes ------------------------------------------------------------------*/
  47:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** #include "stm32f4xx_hal.h"
  48:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** /** @addtogroup STM32F4xx_HAL_Driver
  49:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   * @{
  50:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   */
  51:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
  52:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** /** @defgroup HAL_TimeBase_RTC_Alarm_Template  HAL TimeBase RTC Alarm Template
  53:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   * @{
  54:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   */ 
  55:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
  56:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** /* Private typedef -----------------------------------------------------------*/
  57:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** /* Private define ------------------------------------------------------------*/
  58:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
  59:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** /* Uncomment the line below to select the appropriate RTC Clock source for your application: 
  60:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   + RTC_CLOCK_SOURCE_HSE: can be selected for applications requiring timing precision.
  61:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   + RTC_CLOCK_SOURCE_LSE: can be selected for applications with low constraint on timing
  62:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****                           precision.
  63:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   + RTC_CLOCK_SOURCE_LSI: can be selected for applications with low constraint on timing
  64:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****                           precision.
  65:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   */
  66:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** #define RTC_CLOCK_SOURCE_HSE
  67:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** /* #define RTC_CLOCK_SOURCE_LSE */
  68:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** /* #define RTC_CLOCK_SOURCE_LSI */
  69:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
  70:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** #ifdef RTC_CLOCK_SOURCE_HSE
  71:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   #define RTC_ASYNCH_PREDIV       99U
  72:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   #define RTC_SYNCH_PREDIV        9U
  73:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   #define RCC_RTCCLKSOURCE_1MHZ   ((uint32_t)((uint32_t)RCC_BDCR_RTCSEL | (uint32_t)((HSE_VALUE/100
  74:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** #else /* RTC_CLOCK_SOURCE_LSE || RTC_CLOCK_SOURCE_LSI */
  75:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   #define RTC_ASYNCH_PREDIV       0U
  76:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   #define RTC_SYNCH_PREDIV        31U
  77:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** #endif /* RTC_CLOCK_SOURCE_HSE */
  78:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
  79:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** /* Private macro -------------------------------------------------------------*/
  80:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** /* Private variables ---------------------------------------------------------*/
  81:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** RTC_HandleTypeDef        hRTC_Handle;
  82:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** /* Private function prototypes -----------------------------------------------*/
  83:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** void RTC_Alarm_IRQHandler(void);
  84:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** /* Private functions ---------------------------------------------------------*/
  85:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
  86:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** /**
ARM GAS  /tmp/ccyjDuq5.s 			page 3


  87:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   * @brief  This function configures the RTC_ALARMA as a time base source. 
  88:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   *         The time source is configured  to have 1ms time base with a dedicated 
  89:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   *         Tick interrupt priority. 
  90:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   * @note   This function is called  automatically at the beginning of program after
  91:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  92:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   * @param  TickPriority Tick interrupt priority.
  93:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   * @retval HAL status
  94:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   */
  95:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** HAL_StatusTypeDef HAL_InitTick (uint32_t TickPriority)
  96:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** {
  30              		.loc 1 96 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 72
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 96 1 is_stmt 0 view .LVU1
  35 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 20
  38              		.cfi_offset 4, -20
  39              		.cfi_offset 5, -16
  40              		.cfi_offset 6, -12
  41              		.cfi_offset 7, -8
  42              		.cfi_offset 14, -4
  43 0002 93B0     		sub	sp, sp, #76
  44              	.LCFI1:
  45              		.cfi_def_cfa_offset 96
  46 0004 0446     		mov	r4, r0
  97:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   __IO uint32_t counter = 0U;
  47              		.loc 1 97 3 is_stmt 1 view .LVU2
  48              		.loc 1 97 17 is_stmt 0 view .LVU3
  49 0006 0023     		movs	r3, #0
  50 0008 1193     		str	r3, [sp, #68]
  98:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
  99:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   RCC_OscInitTypeDef        RCC_OscInitStruct;
  51              		.loc 1 99 3 is_stmt 1 view .LVU4
 100:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   RCC_PeriphCLKInitTypeDef  PeriphClkInitStruct;
  52              		.loc 1 100 3 view .LVU5
 101:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
 102:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** #ifdef RTC_CLOCK_SOURCE_LSE
 103:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   /* Configue LSE as RTC clock soucre */
 104:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_LSE;
 105:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 106:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   RCC_OscInitStruct.LSEState = RCC_LSE_ON;
 107:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   PeriphClkInitStruct.RTCClockSelection = RCC_RTCCLKSOURCE_LSE;
 108:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** #elif defined (RTC_CLOCK_SOURCE_LSI)
 109:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   /* Configue LSI as RTC clock soucre */
 110:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_LSI;
 111:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 112:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 113:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   PeriphClkInitStruct.RTCClockSelection = RCC_RTCCLKSOURCE_LSI;
 114:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** #elif defined (RTC_CLOCK_SOURCE_HSE)
 115:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   /* Configue HSE as RTC clock soucre */
 116:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
  53              		.loc 1 116 3 view .LVU6
  54              		.loc 1 116 36 is_stmt 0 view .LVU7
  55 000a 0122     		movs	r2, #1
  56 000c 0592     		str	r2, [sp, #20]
ARM GAS  /tmp/ccyjDuq5.s 			page 4


 117:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
  57              		.loc 1 117 3 is_stmt 1 view .LVU8
  58              		.loc 1 117 34 is_stmt 0 view .LVU9
  59 000e 0B93     		str	r3, [sp, #44]
 118:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  60              		.loc 1 118 3 is_stmt 1 view .LVU10
  61              		.loc 1 118 30 is_stmt 0 view .LVU11
  62 0010 4FF48033 		mov	r3, #65536
  63 0014 0693     		str	r3, [sp, #24]
 119:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   /* Ensure that RTC is clocked by 1MHz */
 120:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   PeriphClkInitStruct.RTCClockSelection = RCC_RTCCLKSOURCE_1MHZ;
  64              		.loc 1 120 3 is_stmt 1 view .LVU12
  65              		.loc 1 120 41 is_stmt 0 view .LVU13
  66 0016 434B     		ldr	r3, .L16
  67 0018 0493     		str	r3, [sp, #16]
 121:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** #else
 122:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** #error Please select the RTC Clock source
 123:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** #endif /* RTC_CLOCK_SOURCE_LSE */
 124:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
 125:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   if(HAL_RCC_OscConfig(&RCC_OscInitStruct) == HAL_OK)
  68              		.loc 1 125 3 is_stmt 1 view .LVU14
  69              		.loc 1 125 6 is_stmt 0 view .LVU15
  70 001a 05A8     		add	r0, sp, #20
  71              	.LVL1:
  72              		.loc 1 125 6 view .LVU16
  73 001c FFF7FEFF 		bl	HAL_RCC_OscConfig
  74              	.LVL2:
  75              		.loc 1 125 5 view .LVU17
  76 0020 18B1     		cbz	r0, .L13
 126:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   {
 127:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_RTC;
 128:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     if(HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) == HAL_OK)
 129:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     {
 130:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****       /* Enable RTC Clock */
 131:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****       __HAL_RCC_RTC_ENABLE();
 132:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****       /* The time base should be 1ms
 133:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****          Time base = ((RTC_ASYNCH_PREDIV + 1) * (RTC_SYNCH_PREDIV + 1)) / RTC_CLOCK 
 134:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****          HSE as RTC clock 
 135:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****            Time base = ((99 + 1) * (9 + 1)) / 1MHz
 136:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****                      = 1ms
 137:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****          LSE as RTC clock 
 138:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****            Time base = ((31 + 1) * (0 + 1)) / 32.768KHz
 139:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****                      = ~1ms
 140:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****          LSI as RTC clock 
 141:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****            Time base = ((31 + 1) * (0 + 1)) / 32KHz
 142:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****                      = 1ms
 143:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****       */
 144:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****       hRTC_Handle.Instance = RTC;
 145:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****       hRTC_Handle.Init.HourFormat = RTC_HOURFORMAT_24;
 146:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****       hRTC_Handle.Init.AsynchPrediv = RTC_ASYNCH_PREDIV;
 147:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****       hRTC_Handle.Init.SynchPrediv = RTC_SYNCH_PREDIV;
 148:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****       hRTC_Handle.Init.OutPut = RTC_OUTPUT_DISABLE;
 149:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****       hRTC_Handle.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 150:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****       hRTC_Handle.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 151:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****       HAL_RTC_Init(&hRTC_Handle);
 152:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
 153:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****       /* Disable the write protection for RTC registers */
ARM GAS  /tmp/ccyjDuq5.s 			page 5


 154:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****       __HAL_RTC_WRITEPROTECTION_DISABLE(&hRTC_Handle);
 155:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
 156:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****       /* Disable the Alarm A interrupt */
 157:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****       __HAL_RTC_ALARMA_DISABLE(&hRTC_Handle);
 158:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
 159:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****       /* Clear flag alarm A */
 160:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****       __HAL_RTC_ALARM_CLEAR_FLAG(&hRTC_Handle, RTC_FLAG_ALRAF);
 161:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
 162:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****       counter = 0U;
 163:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****       /* Wait till RTC ALRAWF flag is set and if Time out is reached exit */
 164:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****       while(__HAL_RTC_ALARM_GET_FLAG(&hRTC_Handle, RTC_FLAG_ALRAWF) == RESET)
 165:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****       {
 166:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****         if(counter++ == (SystemCoreClock /48U)) /* Timeout = ~ 1s */
 167:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****         {
 168:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****           return HAL_ERROR;
 169:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****         }
 170:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****       }
 171:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
 172:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****       hRTC_Handle.Instance->ALRMAR = (uint32_t)0x01U;
 173:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
 174:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****       /* Configure the Alarm state: Enable Alarm */
 175:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****       __HAL_RTC_ALARMA_ENABLE(&hRTC_Handle);
 176:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****       /* Configure the Alarm interrupt */
 177:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****       __HAL_RTC_ALARM_ENABLE_IT(&hRTC_Handle, RTC_IT_ALRA);
 178:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
 179:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****       /* RTC Alarm Interrupt Configuration: EXTI configuration */
 180:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****       __HAL_RTC_ALARM_EXTI_ENABLE_IT();
 181:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****       __HAL_RTC_ALARM_EXTI_ENABLE_RISING_EDGE();
 182:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
 183:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****       /* Check if the Initialization mode is set */
 184:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****       if((hRTC_Handle.Instance->ISR & RTC_ISR_INITF) == (uint32_t)RESET)
 185:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****       {
 186:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****         /* Set the Initialization mode */
 187:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****         hRTC_Handle.Instance->ISR = (uint32_t)RTC_INIT_MASK;
 188:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****         counter = 0U;
 189:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****         while((hRTC_Handle.Instance->ISR & RTC_ISR_INITF) == (uint32_t)RESET)
 190:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****         {
 191:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****           if(counter++ == (SystemCoreClock /48U)) /* Timeout = ~ 1s */
 192:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****           {
 193:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****             return HAL_ERROR;
 194:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****           }
 195:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****         }
 196:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****       }
 197:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****       hRTC_Handle.Instance->DR = 0U;
 198:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****       hRTC_Handle.Instance->TR = 0U;
 199:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
 200:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****       hRTC_Handle.Instance->ISR &= (uint32_t)~RTC_ISR_INIT;
 201:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
 202:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****       /* Enable the write protection for RTC registers */
 203:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****       __HAL_RTC_WRITEPROTECTION_ENABLE(&hRTC_Handle);
 204:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
 205:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****       HAL_NVIC_SetPriority(RTC_Alarm_IRQn, TickPriority, 0U);
 206:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****       HAL_NVIC_EnableIRQ(RTC_Alarm_IRQn);
 207:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****       return HAL_OK;
 208:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     }
 209:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   }
 210:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   return HAL_ERROR;
ARM GAS  /tmp/ccyjDuq5.s 			page 6


  77              		.loc 1 210 10 view .LVU18
  78 0022 0125     		movs	r5, #1
  79              	.L2:
 211:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** }
  80              		.loc 1 211 1 view .LVU19
  81 0024 2846     		mov	r0, r5
  82 0026 13B0     		add	sp, sp, #76
  83              	.LCFI2:
  84              		.cfi_remember_state
  85              		.cfi_def_cfa_offset 20
  86              		@ sp needed
  87 0028 F0BD     		pop	{r4, r5, r6, r7, pc}
  88              	.LVL3:
  89              	.L13:
  90              	.LCFI3:
  91              		.cfi_restore_state
 127:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     if(HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) == HAL_OK)
  92              		.loc 1 127 5 is_stmt 1 view .LVU20
 127:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     if(HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) == HAL_OK)
  93              		.loc 1 127 46 is_stmt 0 view .LVU21
  94 002a 0223     		movs	r3, #2
  95 002c 0193     		str	r3, [sp, #4]
 128:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     {
  96              		.loc 1 128 5 is_stmt 1 view .LVU22
 128:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     {
  97              		.loc 1 128 8 is_stmt 0 view .LVU23
  98 002e 01A8     		add	r0, sp, #4
  99 0030 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 100              	.LVL4:
 128:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     {
 101              		.loc 1 128 7 view .LVU24
 102 0034 0546     		mov	r5, r0
 103 0036 08B1     		cbz	r0, .L14
 210:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** }
 104              		.loc 1 210 10 view .LVU25
 105 0038 0125     		movs	r5, #1
 106 003a F3E7     		b	.L2
 107              	.L14:
 131:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****       /* The time base should be 1ms
 108              		.loc 1 131 7 is_stmt 1 view .LVU26
 109 003c 3A4B     		ldr	r3, .L16+4
 110 003e 0122     		movs	r2, #1
 111 0040 1A60     		str	r2, [r3]
 144:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****       hRTC_Handle.Init.HourFormat = RTC_HOURFORMAT_24;
 112              		.loc 1 144 7 view .LVU27
 144:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****       hRTC_Handle.Init.HourFormat = RTC_HOURFORMAT_24;
 113              		.loc 1 144 28 is_stmt 0 view .LVU28
 114 0042 3A4E     		ldr	r6, .L16+8
 115 0044 3A4B     		ldr	r3, .L16+12
 116 0046 3360     		str	r3, [r6]
 145:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****       hRTC_Handle.Init.AsynchPrediv = RTC_ASYNCH_PREDIV;
 117              		.loc 1 145 7 is_stmt 1 view .LVU29
 145:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****       hRTC_Handle.Init.AsynchPrediv = RTC_ASYNCH_PREDIV;
 118              		.loc 1 145 35 is_stmt 0 view .LVU30
 119 0048 0027     		movs	r7, #0
 120 004a 7760     		str	r7, [r6, #4]
 146:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****       hRTC_Handle.Init.SynchPrediv = RTC_SYNCH_PREDIV;
ARM GAS  /tmp/ccyjDuq5.s 			page 7


 121              		.loc 1 146 7 is_stmt 1 view .LVU31
 146:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****       hRTC_Handle.Init.SynchPrediv = RTC_SYNCH_PREDIV;
 122              		.loc 1 146 37 is_stmt 0 view .LVU32
 123 004c 6323     		movs	r3, #99
 124 004e B360     		str	r3, [r6, #8]
 147:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****       hRTC_Handle.Init.OutPut = RTC_OUTPUT_DISABLE;
 125              		.loc 1 147 7 is_stmt 1 view .LVU33
 147:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****       hRTC_Handle.Init.OutPut = RTC_OUTPUT_DISABLE;
 126              		.loc 1 147 36 is_stmt 0 view .LVU34
 127 0050 0923     		movs	r3, #9
 128 0052 F360     		str	r3, [r6, #12]
 148:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****       hRTC_Handle.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 129              		.loc 1 148 7 is_stmt 1 view .LVU35
 148:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****       hRTC_Handle.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 130              		.loc 1 148 31 is_stmt 0 view .LVU36
 131 0054 3761     		str	r7, [r6, #16]
 149:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****       hRTC_Handle.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 132              		.loc 1 149 7 is_stmt 1 view .LVU37
 149:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****       hRTC_Handle.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 133              		.loc 1 149 39 is_stmt 0 view .LVU38
 134 0056 7761     		str	r7, [r6, #20]
 150:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****       HAL_RTC_Init(&hRTC_Handle);
 135              		.loc 1 150 7 is_stmt 1 view .LVU39
 150:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****       HAL_RTC_Init(&hRTC_Handle);
 136              		.loc 1 150 35 is_stmt 0 view .LVU40
 137 0058 B761     		str	r7, [r6, #24]
 151:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
 138              		.loc 1 151 7 is_stmt 1 view .LVU41
 139 005a 3046     		mov	r0, r6
 140 005c FFF7FEFF 		bl	HAL_RTC_Init
 141              	.LVL5:
 154:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
 142              		.loc 1 154 7 view .LVU42
 154:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
 143              		.loc 1 154 7 view .LVU43
 144 0060 3168     		ldr	r1, [r6]
 145 0062 CA23     		movs	r3, #202
 146 0064 4B62     		str	r3, [r1, #36]
 154:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
 147              		.loc 1 154 7 view .LVU44
 148 0066 5323     		movs	r3, #83
 149 0068 4B62     		str	r3, [r1, #36]
 154:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
 150              		.loc 1 154 7 view .LVU45
 157:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
 151              		.loc 1 157 7 view .LVU46
 152 006a 8B68     		ldr	r3, [r1, #8]
 153 006c 23F48073 		bic	r3, r3, #256
 154 0070 8B60     		str	r3, [r1, #8]
 160:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
 155              		.loc 1 160 7 view .LVU47
 156 0072 CB68     		ldr	r3, [r1, #12]
 157 0074 DBB2     		uxtb	r3, r3
 158 0076 63F4C073 		orn	r3, r3, #384
 159 007a CB60     		str	r3, [r1, #12]
 162:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****       /* Wait till RTC ALRAWF flag is set and if Time out is reached exit */
 160              		.loc 1 162 7 view .LVU48
ARM GAS  /tmp/ccyjDuq5.s 			page 8


 162:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****       /* Wait till RTC ALRAWF flag is set and if Time out is reached exit */
 161              		.loc 1 162 15 is_stmt 0 view .LVU49
 162 007c 1197     		str	r7, [sp, #68]
 164:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****       {
 163              		.loc 1 164 7 is_stmt 1 view .LVU50
 164              	.L3:
 164:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****       {
 165              		.loc 1 164 12 view .LVU51
 164:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****       {
 166              		.loc 1 164 13 is_stmt 0 view .LVU52
 167 007e CB68     		ldr	r3, [r1, #12]
 164:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****       {
 168              		.loc 1 164 12 view .LVU53
 169 0080 13F0010F 		tst	r3, #1
 170 0084 0CD1     		bne	.L15
 166:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****         {
 171              		.loc 1 166 9 is_stmt 1 view .LVU54
 166:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****         {
 172              		.loc 1 166 19 is_stmt 0 view .LVU55
 173 0086 119A     		ldr	r2, [sp, #68]
 174 0088 531C     		adds	r3, r2, #1
 175 008a 1193     		str	r3, [sp, #68]
 166:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****         {
 176              		.loc 1 166 42 view .LVU56
 177 008c 294B     		ldr	r3, .L16+16
 178 008e 1B68     		ldr	r3, [r3]
 179 0090 2948     		ldr	r0, .L16+20
 180 0092 A0FB0303 		umull	r0, r3, r0, r3
 166:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****         {
 181              		.loc 1 166 11 view .LVU57
 182 0096 B2EB531F 		cmp	r2, r3, lsr #5
 183 009a F0D1     		bne	.L3
 168:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****         }
 184              		.loc 1 168 18 view .LVU58
 185 009c 0125     		movs	r5, #1
 186 009e C1E7     		b	.L2
 187              	.L15:
 172:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
 188              		.loc 1 172 7 is_stmt 1 view .LVU59
 172:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
 189              		.loc 1 172 36 is_stmt 0 view .LVU60
 190 00a0 0123     		movs	r3, #1
 191 00a2 CB61     		str	r3, [r1, #28]
 175:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****       /* Configure the Alarm interrupt */
 192              		.loc 1 175 7 is_stmt 1 view .LVU61
 193 00a4 8B68     		ldr	r3, [r1, #8]
 194 00a6 43F48073 		orr	r3, r3, #256
 195 00aa 8B60     		str	r3, [r1, #8]
 177:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
 196              		.loc 1 177 7 view .LVU62
 197 00ac 8B68     		ldr	r3, [r1, #8]
 198 00ae 43F48053 		orr	r3, r3, #4096
 199 00b2 8B60     		str	r3, [r1, #8]
 180:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****       __HAL_RTC_ALARM_EXTI_ENABLE_RISING_EDGE();
 200              		.loc 1 180 7 view .LVU63
 201 00b4 214B     		ldr	r3, .L16+24
 202 00b6 1A68     		ldr	r2, [r3]
ARM GAS  /tmp/ccyjDuq5.s 			page 9


 203 00b8 42F40032 		orr	r2, r2, #131072
 204 00bc 1A60     		str	r2, [r3]
 181:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
 205              		.loc 1 181 7 view .LVU64
 206 00be 9A68     		ldr	r2, [r3, #8]
 207 00c0 42F40032 		orr	r2, r2, #131072
 208 00c4 9A60     		str	r2, [r3, #8]
 184:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****       {
 209              		.loc 1 184 7 view .LVU65
 184:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****       {
 210              		.loc 1 184 22 is_stmt 0 view .LVU66
 211 00c6 194B     		ldr	r3, .L16+8
 212 00c8 1868     		ldr	r0, [r3]
 184:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****       {
 213              		.loc 1 184 31 view .LVU67
 214 00ca C368     		ldr	r3, [r0, #12]
 184:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****       {
 215              		.loc 1 184 9 view .LVU68
 216 00cc 13F0400F 		tst	r3, #64
 217 00d0 15D1     		bne	.L5
 187:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****         counter = 0U;
 218              		.loc 1 187 9 is_stmt 1 view .LVU69
 187:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****         counter = 0U;
 219              		.loc 1 187 35 is_stmt 0 view .LVU70
 220 00d2 4FF0FF33 		mov	r3, #-1
 221 00d6 C360     		str	r3, [r0, #12]
 188:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****         while((hRTC_Handle.Instance->ISR & RTC_ISR_INITF) == (uint32_t)RESET)
 222              		.loc 1 188 9 is_stmt 1 view .LVU71
 188:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****         while((hRTC_Handle.Instance->ISR & RTC_ISR_INITF) == (uint32_t)RESET)
 223              		.loc 1 188 17 is_stmt 0 view .LVU72
 224 00d8 0023     		movs	r3, #0
 225 00da 1193     		str	r3, [sp, #68]
 189:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****         {
 226              		.loc 1 189 9 is_stmt 1 view .LVU73
 227              	.L6:
 189:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****         {
 228              		.loc 1 189 14 view .LVU74
 189:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****         {
 229              		.loc 1 189 36 is_stmt 0 view .LVU75
 230 00dc C368     		ldr	r3, [r0, #12]
 189:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****         {
 231              		.loc 1 189 14 view .LVU76
 232 00de 13F0400F 		tst	r3, #64
 233 00e2 0CD1     		bne	.L5
 191:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****           {
 234              		.loc 1 191 11 is_stmt 1 view .LVU77
 191:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****           {
 235              		.loc 1 191 21 is_stmt 0 view .LVU78
 236 00e4 119A     		ldr	r2, [sp, #68]
 237 00e6 531C     		adds	r3, r2, #1
 238 00e8 1193     		str	r3, [sp, #68]
 191:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****           {
 239              		.loc 1 191 44 view .LVU79
 240 00ea 124B     		ldr	r3, .L16+16
 241 00ec 1B68     		ldr	r3, [r3]
 242 00ee 1249     		ldr	r1, .L16+20
 243 00f0 A1FB0313 		umull	r1, r3, r1, r3
ARM GAS  /tmp/ccyjDuq5.s 			page 10


 191:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****           {
 244              		.loc 1 191 13 view .LVU80
 245 00f4 B2EB531F 		cmp	r2, r3, lsr #5
 246 00f8 F0D1     		bne	.L6
 193:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****           }
 247              		.loc 1 193 20 view .LVU81
 248 00fa 0125     		movs	r5, #1
 249 00fc 92E7     		b	.L2
 250              	.L5:
 197:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****       hRTC_Handle.Instance->TR = 0U;
 251              		.loc 1 197 7 is_stmt 1 view .LVU82
 197:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****       hRTC_Handle.Instance->TR = 0U;
 252              		.loc 1 197 32 is_stmt 0 view .LVU83
 253 00fe 0022     		movs	r2, #0
 254 0100 4260     		str	r2, [r0, #4]
 198:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
 255              		.loc 1 198 7 is_stmt 1 view .LVU84
 198:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
 256              		.loc 1 198 32 is_stmt 0 view .LVU85
 257 0102 0260     		str	r2, [r0]
 200:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
 258              		.loc 1 200 7 is_stmt 1 view .LVU86
 200:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
 259              		.loc 1 200 18 is_stmt 0 view .LVU87
 260 0104 094B     		ldr	r3, .L16+8
 261 0106 1B68     		ldr	r3, [r3]
 200:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
 262              		.loc 1 200 33 view .LVU88
 263 0108 D968     		ldr	r1, [r3, #12]
 264 010a 21F08001 		bic	r1, r1, #128
 265 010e D960     		str	r1, [r3, #12]
 203:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
 266              		.loc 1 203 7 is_stmt 1 view .LVU89
 203:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
 267              		.loc 1 203 7 view .LVU90
 268 0110 FF21     		movs	r1, #255
 269 0112 5962     		str	r1, [r3, #36]
 203:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
 270              		.loc 1 203 7 view .LVU91
 205:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****       HAL_NVIC_EnableIRQ(RTC_Alarm_IRQn);
 271              		.loc 1 205 7 view .LVU92
 272 0114 2146     		mov	r1, r4
 273 0116 2920     		movs	r0, #41
 274 0118 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 275              	.LVL6:
 206:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****       return HAL_OK;
 276              		.loc 1 206 7 view .LVU93
 277 011c 2920     		movs	r0, #41
 278 011e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 279              	.LVL7:
 207:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     }
 280              		.loc 1 207 7 view .LVU94
 207:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     }
 281              		.loc 1 207 14 is_stmt 0 view .LVU95
 282 0122 7FE7     		b	.L2
 283              	.L17:
 284              		.align	2
ARM GAS  /tmp/ccyjDuq5.s 			page 11


 285              	.L16:
 286 0124 00030800 		.word	525056
 287 0128 3C0E4742 		.word	1111952956
 288 012c 00000000 		.word	hRTC_Handle
 289 0130 00280040 		.word	1073752064
 290 0134 00000000 		.word	SystemCoreClock
 291 0138 ABAAAAAA 		.word	-1431655765
 292 013c 003C0140 		.word	1073822720
 293              		.cfi_endproc
 294              	.LFE132:
 296              		.section	.text.HAL_SuspendTick,"ax",%progbits
 297              		.align	1
 298              		.global	HAL_SuspendTick
 299              		.syntax unified
 300              		.thumb
 301              		.thumb_func
 302              		.fpu fpv4-sp-d16
 304              	HAL_SuspendTick:
 305              	.LFB133:
 212:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
 213:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** /**
 214:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   * @brief  Suspend Tick increment.
 215:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   * @note   Disable the tick increment by disabling RTC ALARM interrupt.
 216:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   * @retval None
 217:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   */
 218:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** void HAL_SuspendTick(void)
 219:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** {
 306              		.loc 1 219 1 is_stmt 1 view -0
 307              		.cfi_startproc
 308              		@ args = 0, pretend = 0, frame = 0
 309              		@ frame_needed = 0, uses_anonymous_args = 0
 310              		@ link register save eliminated.
 220:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   /* Disable the write protection for RTC registers */
 221:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(&hRTC_Handle);
 311              		.loc 1 221 3 view .LVU97
 312              		.loc 1 221 3 view .LVU98
 313 0000 064B     		ldr	r3, .L19
 314 0002 1B68     		ldr	r3, [r3]
 315 0004 CA22     		movs	r2, #202
 316 0006 5A62     		str	r2, [r3, #36]
 317              		.loc 1 221 3 view .LVU99
 318 0008 5322     		movs	r2, #83
 319 000a 5A62     		str	r2, [r3, #36]
 320              		.loc 1 221 3 view .LVU100
 222:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   /* Disable RTC ALARM update Interrupt */
 223:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   __HAL_RTC_ALARM_DISABLE_IT(&hRTC_Handle, RTC_IT_ALRA);
 321              		.loc 1 223 3 view .LVU101
 322 000c 9A68     		ldr	r2, [r3, #8]
 323 000e 22F48052 		bic	r2, r2, #4096
 324 0012 9A60     		str	r2, [r3, #8]
 224:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   /* Enable the write protection for RTC registers */
 225:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(&hRTC_Handle);
 325              		.loc 1 225 3 view .LVU102
 326              		.loc 1 225 3 view .LVU103
 327 0014 FF22     		movs	r2, #255
 328 0016 5A62     		str	r2, [r3, #36]
 329              		.loc 1 225 3 view .LVU104
ARM GAS  /tmp/ccyjDuq5.s 			page 12


 226:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** }
 330              		.loc 1 226 1 is_stmt 0 view .LVU105
 331 0018 7047     		bx	lr
 332              	.L20:
 333 001a 00BF     		.align	2
 334              	.L19:
 335 001c 00000000 		.word	hRTC_Handle
 336              		.cfi_endproc
 337              	.LFE133:
 339              		.section	.text.HAL_ResumeTick,"ax",%progbits
 340              		.align	1
 341              		.global	HAL_ResumeTick
 342              		.syntax unified
 343              		.thumb
 344              		.thumb_func
 345              		.fpu fpv4-sp-d16
 347              	HAL_ResumeTick:
 348              	.LFB134:
 227:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
 228:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** /**
 229:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   * @brief  Resume Tick increment.
 230:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   * @note   Enable the tick increment by Enabling RTC ALARM interrupt.
 231:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   * @retval None
 232:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   */
 233:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** void HAL_ResumeTick(void)
 234:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** {
 349              		.loc 1 234 1 is_stmt 1 view -0
 350              		.cfi_startproc
 351              		@ args = 0, pretend = 0, frame = 0
 352              		@ frame_needed = 0, uses_anonymous_args = 0
 353              		@ link register save eliminated.
 235:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   /* Disable the write protection for RTC registers */
 236:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(&hRTC_Handle);
 354              		.loc 1 236 3 view .LVU107
 355              		.loc 1 236 3 view .LVU108
 356 0000 064B     		ldr	r3, .L22
 357 0002 1B68     		ldr	r3, [r3]
 358 0004 CA22     		movs	r2, #202
 359 0006 5A62     		str	r2, [r3, #36]
 360              		.loc 1 236 3 view .LVU109
 361 0008 5322     		movs	r2, #83
 362 000a 5A62     		str	r2, [r3, #36]
 363              		.loc 1 236 3 view .LVU110
 237:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   /* Enable RTC ALARM Update interrupt */
 238:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   __HAL_RTC_ALARM_ENABLE_IT(&hRTC_Handle, RTC_IT_ALRA);
 364              		.loc 1 238 3 view .LVU111
 365 000c 9A68     		ldr	r2, [r3, #8]
 366 000e 42F48052 		orr	r2, r2, #4096
 367 0012 9A60     		str	r2, [r3, #8]
 239:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   /* Enable the write protection for RTC registers */
 240:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(&hRTC_Handle);
 368              		.loc 1 240 3 view .LVU112
 369              		.loc 1 240 3 view .LVU113
 370 0014 FF22     		movs	r2, #255
 371 0016 5A62     		str	r2, [r3, #36]
 372              		.loc 1 240 3 view .LVU114
 241:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** }
ARM GAS  /tmp/ccyjDuq5.s 			page 13


 373              		.loc 1 241 1 is_stmt 0 view .LVU115
 374 0018 7047     		bx	lr
 375              	.L23:
 376 001a 00BF     		.align	2
 377              	.L22:
 378 001c 00000000 		.word	hRTC_Handle
 379              		.cfi_endproc
 380              	.LFE134:
 382              		.section	.text.HAL_RTC_AlarmAEventCallback,"ax",%progbits
 383              		.align	1
 384              		.global	HAL_RTC_AlarmAEventCallback
 385              		.syntax unified
 386              		.thumb
 387              		.thumb_func
 388              		.fpu fpv4-sp-d16
 390              	HAL_RTC_AlarmAEventCallback:
 391              	.LVL8:
 392              	.LFB135:
 242:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
 243:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** /**
 244:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   * @brief  ALARM A Event Callback in non blocking mode
 245:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   * @note   This function is called  when RTC_ALARM interrupt took place, inside
 246:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   * RTC_ALARM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 247:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   * a global variable "uwTick" used as application time base.
 248:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   * @param  hrtc  RTC handle
 249:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   * @retval None
 250:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   */
 251:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** void HAL_RTC_AlarmAEventCallback(RTC_HandleTypeDef *hrtc)
 252:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** {
 393              		.loc 1 252 1 is_stmt 1 view -0
 394              		.cfi_startproc
 395              		@ args = 0, pretend = 0, frame = 8
 396              		@ frame_needed = 0, uses_anonymous_args = 0
 397              		.loc 1 252 1 is_stmt 0 view .LVU117
 398 0000 10B5     		push	{r4, lr}
 399              	.LCFI4:
 400              		.cfi_def_cfa_offset 8
 401              		.cfi_offset 4, -8
 402              		.cfi_offset 14, -4
 403 0002 82B0     		sub	sp, sp, #8
 404              	.LCFI5:
 405              		.cfi_def_cfa_offset 16
 406 0004 0446     		mov	r4, r0
 253:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   __IO uint32_t counter = 0U;
 407              		.loc 1 253 3 is_stmt 1 view .LVU118
 408              		.loc 1 253 17 is_stmt 0 view .LVU119
 409 0006 0023     		movs	r3, #0
 410 0008 0193     		str	r3, [sp, #4]
 254:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
 255:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   HAL_IncTick();
 411              		.loc 1 255 3 is_stmt 1 view .LVU120
 412 000a FFF7FEFF 		bl	HAL_IncTick
 413              	.LVL9:
 256:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
 257:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 414              		.loc 1 257 3 view .LVU121
 415              		.loc 1 257 3 view .LVU122
ARM GAS  /tmp/ccyjDuq5.s 			page 14


 416 000e 2368     		ldr	r3, [r4]
 417 0010 CA22     		movs	r2, #202
 418 0012 5A62     		str	r2, [r3, #36]
 419              		.loc 1 257 3 view .LVU123
 420 0014 2368     		ldr	r3, [r4]
 421 0016 5322     		movs	r2, #83
 422 0018 5A62     		str	r2, [r3, #36]
 423              		.loc 1 257 3 view .LVU124
 258:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
 259:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   /* Set the Initialization mode */
 260:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   hrtc->Instance->ISR = (uint32_t)RTC_INIT_MASK;
 424              		.loc 1 260 3 view .LVU125
 425              		.loc 1 260 7 is_stmt 0 view .LVU126
 426 001a 2368     		ldr	r3, [r4]
 427              		.loc 1 260 23 view .LVU127
 428 001c 4FF0FF32 		mov	r2, #-1
 429 0020 DA60     		str	r2, [r3, #12]
 261:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
 262:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   while((hrtc->Instance->ISR & RTC_ISR_INITF) == (uint32_t)RESET)
 430              		.loc 1 262 3 is_stmt 1 view .LVU128
 431              	.L25:
 432              		.loc 1 262 8 view .LVU129
 433              		.loc 1 262 14 is_stmt 0 view .LVU130
 434 0022 2168     		ldr	r1, [r4]
 435              		.loc 1 262 24 view .LVU131
 436 0024 CB68     		ldr	r3, [r1, #12]
 437              		.loc 1 262 8 view .LVU132
 438 0026 13F0400F 		tst	r3, #64
 439 002a 0AD1     		bne	.L26
 263:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   {
 264:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     if(counter++ == (SystemCoreClock /48U)) /* Timeout = ~ 1s */
 440              		.loc 1 264 5 is_stmt 1 view .LVU133
 441              		.loc 1 264 15 is_stmt 0 view .LVU134
 442 002c 019A     		ldr	r2, [sp, #4]
 443 002e 531C     		adds	r3, r2, #1
 444 0030 0193     		str	r3, [sp, #4]
 445              		.loc 1 264 38 view .LVU135
 446 0032 0B4B     		ldr	r3, .L29
 447 0034 1B68     		ldr	r3, [r3]
 448 0036 0B48     		ldr	r0, .L29+4
 449 0038 A0FB0303 		umull	r0, r3, r0, r3
 450              		.loc 1 264 7 view .LVU136
 451 003c B2EB531F 		cmp	r2, r3, lsr #5
 452 0040 EFD1     		bne	.L25
 453              	.L26:
 265:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     {
 266:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****       break;
 267:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****     }
 268:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   }
 269:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
 270:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   hrtc->Instance->DR = 0U;
 454              		.loc 1 270 3 is_stmt 1 view .LVU137
 455              		.loc 1 270 22 is_stmt 0 view .LVU138
 456 0042 0023     		movs	r3, #0
 457 0044 4B60     		str	r3, [r1, #4]
 271:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   hrtc->Instance->TR = 0U;
 458              		.loc 1 271 3 is_stmt 1 view .LVU139
ARM GAS  /tmp/ccyjDuq5.s 			page 15


 459              		.loc 1 271 7 is_stmt 0 view .LVU140
 460 0046 2268     		ldr	r2, [r4]
 461              		.loc 1 271 22 view .LVU141
 462 0048 1360     		str	r3, [r2]
 272:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
 273:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   hrtc->Instance->ISR &= (uint32_t)~RTC_ISR_INIT;
 463              		.loc 1 273 3 is_stmt 1 view .LVU142
 464              		.loc 1 273 7 is_stmt 0 view .LVU143
 465 004a 2268     		ldr	r2, [r4]
 466              		.loc 1 273 23 view .LVU144
 467 004c D368     		ldr	r3, [r2, #12]
 468 004e 23F08003 		bic	r3, r3, #128
 469 0052 D360     		str	r3, [r2, #12]
 274:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
 275:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   /* Enable the write protection for RTC registers */
 276:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 470              		.loc 1 276 3 is_stmt 1 view .LVU145
 471              		.loc 1 276 3 view .LVU146
 472 0054 2368     		ldr	r3, [r4]
 473 0056 FF22     		movs	r2, #255
 474 0058 5A62     		str	r2, [r3, #36]
 475              		.loc 1 276 3 view .LVU147
 277:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** }
 476              		.loc 1 277 1 is_stmt 0 view .LVU148
 477 005a 02B0     		add	sp, sp, #8
 478              	.LCFI6:
 479              		.cfi_def_cfa_offset 8
 480              		@ sp needed
 481 005c 10BD     		pop	{r4, pc}
 482              	.LVL10:
 483              	.L30:
 484              		.loc 1 277 1 view .LVU149
 485 005e 00BF     		.align	2
 486              	.L29:
 487 0060 00000000 		.word	SystemCoreClock
 488 0064 ABAAAAAA 		.word	-1431655765
 489              		.cfi_endproc
 490              	.LFE135:
 492              		.section	.text.RTC_Alarm_IRQHandler,"ax",%progbits
 493              		.align	1
 494              		.global	RTC_Alarm_IRQHandler
 495              		.syntax unified
 496              		.thumb
 497              		.thumb_func
 498              		.fpu fpv4-sp-d16
 500              	RTC_Alarm_IRQHandler:
 501              	.LFB136:
 278:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** 
 279:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** /**
 280:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   * @brief  This function handles RTC ALARM interrupt request.
 281:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   * @retval None
 282:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   */
 283:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** void RTC_Alarm_IRQHandler(void)
 284:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** {
 502              		.loc 1 284 1 is_stmt 1 view -0
 503              		.cfi_startproc
 504              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccyjDuq5.s 			page 16


 505              		@ frame_needed = 0, uses_anonymous_args = 0
 506 0000 08B5     		push	{r3, lr}
 507              	.LCFI7:
 508              		.cfi_def_cfa_offset 8
 509              		.cfi_offset 3, -8
 510              		.cfi_offset 14, -4
 285:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c ****   HAL_RTC_AlarmIRQHandler(&hRTC_Handle);
 511              		.loc 1 285 3 view .LVU151
 512 0002 0248     		ldr	r0, .L33
 513 0004 FFF7FEFF 		bl	HAL_RTC_AlarmIRQHandler
 514              	.LVL11:
 286:HALLIB/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_timebase_rtc_alarm_template.c **** }
 515              		.loc 1 286 1 is_stmt 0 view .LVU152
 516 0008 08BD     		pop	{r3, pc}
 517              	.L34:
 518 000a 00BF     		.align	2
 519              	.L33:
 520 000c 00000000 		.word	hRTC_Handle
 521              		.cfi_endproc
 522              	.LFE136:
 524              		.comm	hRTC_Handle,32,4
 525              		.text
 526              	.Letext0:
 527              		.file 2 "/opt/gcc_arm/gcc-arm-none-eabi-9-2019-q4-major/arm-none-eabi/include/machine/_default_typ
 528              		.file 3 "/opt/gcc_arm/gcc-arm-none-eabi-9-2019-q4-major/arm-none-eabi/include/sys/_stdint.h"
 529              		.file 4 "CORE/core_cm4.h"
 530              		.file 5 "./system_stm32f4xx.h"
 531              		.file 6 "./stm32f407xx.h"
 532              		.file 7 "./stm32f4xx.h"
 533              		.file 8 "HALLIB/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 534              		.file 9 "HALLIB/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 535              		.file 10 "HALLIB/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 536              		.file 11 "HALLIB/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rtc.h"
 537              		.file 12 "HALLIB/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 538              		.file 13 "HALLIB/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
ARM GAS  /tmp/ccyjDuq5.s 			page 17


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_hal_timebase_rtc_alarm_template.c
     /tmp/ccyjDuq5.s:18     .text.HAL_InitTick:0000000000000000 $t
     /tmp/ccyjDuq5.s:26     .text.HAL_InitTick:0000000000000000 HAL_InitTick
     /tmp/ccyjDuq5.s:286    .text.HAL_InitTick:0000000000000124 $d
                            *COM*:0000000000000020 hRTC_Handle
     /tmp/ccyjDuq5.s:297    .text.HAL_SuspendTick:0000000000000000 $t
     /tmp/ccyjDuq5.s:304    .text.HAL_SuspendTick:0000000000000000 HAL_SuspendTick
     /tmp/ccyjDuq5.s:335    .text.HAL_SuspendTick:000000000000001c $d
     /tmp/ccyjDuq5.s:340    .text.HAL_ResumeTick:0000000000000000 $t
     /tmp/ccyjDuq5.s:347    .text.HAL_ResumeTick:0000000000000000 HAL_ResumeTick
     /tmp/ccyjDuq5.s:378    .text.HAL_ResumeTick:000000000000001c $d
     /tmp/ccyjDuq5.s:383    .text.HAL_RTC_AlarmAEventCallback:0000000000000000 $t
     /tmp/ccyjDuq5.s:390    .text.HAL_RTC_AlarmAEventCallback:0000000000000000 HAL_RTC_AlarmAEventCallback
     /tmp/ccyjDuq5.s:487    .text.HAL_RTC_AlarmAEventCallback:0000000000000060 $d
     /tmp/ccyjDuq5.s:493    .text.RTC_Alarm_IRQHandler:0000000000000000 $t
     /tmp/ccyjDuq5.s:500    .text.RTC_Alarm_IRQHandler:0000000000000000 RTC_Alarm_IRQHandler
     /tmp/ccyjDuq5.s:520    .text.RTC_Alarm_IRQHandler:000000000000000c $d

UNDEFINED SYMBOLS
HAL_RCC_OscConfig
HAL_RCCEx_PeriphCLKConfig
HAL_RTC_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
SystemCoreClock
HAL_IncTick
HAL_RTC_AlarmIRQHandler

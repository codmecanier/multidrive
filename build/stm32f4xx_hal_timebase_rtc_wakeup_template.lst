ARM GAS  /tmp/ccPHacM1.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_hal_timebase_rtc_wakeup_template.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_InitTick,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_InitTick
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	HAL_InitTick:
  27              	.LVL0:
  28              	.LFB239:
  29              		.file 1 "stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c"
   1:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** /**
   2:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   ******************************************************************************
   3:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   * @file    stm32f4xx_hal_timebase_rtc_wakeup_template.c 
   4:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   * @author  MCD Application Team
   5:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   * @brief   HAL time base based on the hardware RTC_WAKEUP Template.
   6:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   *    
   7:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   *          This file overrides the native HAL time base functions (defined as weak)
   8:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   *          to use the RTC WAKEUP for the time base generation:
   9:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   *           + Initializes the RTC peripheral and configures the wakeup timer to be
  10:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   *             incremented each 1ms
  11:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   *           + The wakeup feature is configured to assert an interrupt each 1ms 
  12:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   *           + HAL_IncTick is called inside the HAL_RTCEx_WakeUpTimerEventCallback
  13:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   *           + HSE (default), LSE or LSI can be selected as RTC clock source
  14:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   *
  15:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   ******************************************************************************
  16:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   * @attention
  17:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   *
  18:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   * Copyright (c) 2017 STMicroelectronics.
  19:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   * All rights reserved.
  20:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   *
  21:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   * This software is licensed under terms that can be found in the LICENSE file
  22:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   * in the root directory of this software component.
  23:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  24:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   *
  25:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   ******************************************************************************
  26:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****  @verbatim
  27:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   ==============================================================================
  28:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****                         ##### How to use this driver #####
  29:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   ==============================================================================
ARM GAS  /tmp/ccPHacM1.s 			page 2


  30:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****     [..]
  31:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****     This file must be copied to the application folder and modified as follows:
  32:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****     (#) Rename it to 'stm32f4xx_hal_timebase_rtc_wakeup.c'
  33:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****     (#) Add this file and the RTC HAL drivers to your project and uncomment
  34:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****        HAL_RTC_MODULE_ENABLED define in stm32f4xx_hal_conf.h 
  35:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** 
  36:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****     [..]
  37:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****     (@) HAL RTC alarm and HAL RTC wakeup drivers can’t be used with low power modes:
  38:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****         The wake up capability of the RTC may be intrusive in case of prior low power mode
  39:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****         configuration requiring different wake up sources.
  40:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****         Application/Example behavior is no more guaranteed 
  41:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****     (@) The stm32f4xx_hal_timebase_tim use is recommended for the Applications/Examples
  42:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****           requiring low power modes
  43:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** 
  44:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   @endverbatim
  45:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   ******************************************************************************
  46:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   */
  47:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** 
  48:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** /* Includes ------------------------------------------------------------------*/
  49:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** #include "stm32f4xx_hal.h"
  50:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** /** @addtogroup STM32F4xx_HAL_Driver
  51:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   * @{
  52:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   */
  53:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** 
  54:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** /** @defgroup HAL_TimeBase_RTC_WakeUp_Template  HAL TimeBase RTC WakeUp Template
  55:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   * @{
  56:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   */ 
  57:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** 
  58:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** /* Private typedef -----------------------------------------------------------*/
  59:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** /* Private define ------------------------------------------------------------*/
  60:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** 
  61:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** /* Uncomment the line below to select the appropriate RTC Clock source for your application: 
  62:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   + RTC_CLOCK_SOURCE_HSE: can be selected for applications requiring timing precision.
  63:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   + RTC_CLOCK_SOURCE_LSE: can be selected for applications with low constraint on timing
  64:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****                           precision.
  65:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   + RTC_CLOCK_SOURCE_LSI: can be selected for applications with low constraint on timing
  66:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****                           precision.
  67:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   */
  68:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** #define RTC_CLOCK_SOURCE_HSE
  69:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** /* #define RTC_CLOCK_SOURCE_LSE */
  70:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** /* #define RTC_CLOCK_SOURCE_LSI */
  71:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** 
  72:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** #ifdef RTC_CLOCK_SOURCE_HSE
  73:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   #define RTC_ASYNCH_PREDIV       99U
  74:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   #define RTC_SYNCH_PREDIV        9U
  75:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   #define RCC_RTCCLKSOURCE_1MHZ   ((uint32_t)((uint32_t)RCC_BDCR_RTCSEL | (uint32_t)((HSE_VALUE/100
  76:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** #else /* RTC_CLOCK_SOURCE_LSE || RTC_CLOCK_SOURCE_LSI */
  77:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   #define RTC_ASYNCH_PREDIV       0U
  78:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   #define RTC_SYNCH_PREDIV        31U
  79:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** #endif /* RTC_CLOCK_SOURCE_HSE */
  80:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** 
  81:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** /* Private macro -------------------------------------------------------------*/
  82:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** /* Private variables ---------------------------------------------------------*/
  83:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** RTC_HandleTypeDef        hRTC_Handle;
  84:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** 
  85:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** /* Private function prototypes -----------------------------------------------*/
  86:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** void RTC_WKUP_IRQHandler(void);
ARM GAS  /tmp/ccPHacM1.s 			page 3


  87:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** 
  88:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** /* Private functions ---------------------------------------------------------*/
  89:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** 
  90:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** /**
  91:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   * @brief  This function configures the RTC_WKUP as a time base source. 
  92:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   *         The time source is configured  to have 1ms time base with a dedicated 
  93:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   *         Tick interrupt priority. 
  94:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   *         Wakeup Time base = ((RTC_ASYNCH_PREDIV + 1) * (RTC_SYNCH_PREDIV + 1)) / RTC_CLOCK 
  95:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****                              = 1ms
  96:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   *         Wakeup Time = WakeupTimebase * WakeUpCounter (0 + 1) 
  97:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****                         = 1 ms
  98:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   * @note   This function is called  automatically at the beginning of program after
  99:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig(). 
 100:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   * @param  TickPriority Tick interrupt priority.
 101:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   * @retval HAL status
 102:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   */
 103:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** HAL_StatusTypeDef HAL_InitTick (uint32_t TickPriority)
 104:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** {
  30              		.loc 1 104 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 72
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 104 1 is_stmt 0 view .LVU1
  35 0000 30B5     		push	{r4, r5, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 12
  38              		.cfi_offset 4, -12
  39              		.cfi_offset 5, -8
  40              		.cfi_offset 14, -4
  41 0002 93B0     		sub	sp, sp, #76
  42              	.LCFI1:
  43              		.cfi_def_cfa_offset 88
  44 0004 0546     		mov	r5, r0
 105:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   __IO uint32_t counter = 0U;
  45              		.loc 1 105 3 is_stmt 1 view .LVU2
  46              		.loc 1 105 17 is_stmt 0 view .LVU3
  47 0006 0023     		movs	r3, #0
  48 0008 1193     		str	r3, [sp, #68]
 106:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** 
 107:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   RCC_OscInitTypeDef        RCC_OscInitStruct;
  49              		.loc 1 107 3 is_stmt 1 view .LVU4
 108:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   RCC_PeriphCLKInitTypeDef  PeriphClkInitStruct;
  50              		.loc 1 108 3 view .LVU5
 109:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   HAL_StatusTypeDef     status;
  51              		.loc 1 109 3 view .LVU6
 110:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** 
 111:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** #ifdef RTC_CLOCK_SOURCE_LSE
 112:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   /* Configure LSE as RTC clock source */
 113:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_LSE;
 114:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 115:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   RCC_OscInitStruct.LSEState = RCC_LSE_ON;
 116:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   PeriphClkInitStruct.RTCClockSelection = RCC_RTCCLKSOURCE_LSE;
 117:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** #elif defined (RTC_CLOCK_SOURCE_LSI)
 118:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   /* Configure LSI as RTC clock source */
 119:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_LSI;
 120:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 121:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
ARM GAS  /tmp/ccPHacM1.s 			page 4


 122:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   PeriphClkInitStruct.RTCClockSelection = RCC_RTCCLKSOURCE_LSI;
 123:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** #elif defined (RTC_CLOCK_SOURCE_HSE)
 124:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   /* Configure HSE as RTC clock source */
 125:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
  52              		.loc 1 125 3 view .LVU7
  53              		.loc 1 125 36 is_stmt 0 view .LVU8
  54 000a 0122     		movs	r2, #1
  55 000c 0592     		str	r2, [sp, #20]
 126:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
  56              		.loc 1 126 3 is_stmt 1 view .LVU9
  57              		.loc 1 126 34 is_stmt 0 view .LVU10
  58 000e 0B93     		str	r3, [sp, #44]
 127:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  59              		.loc 1 127 3 is_stmt 1 view .LVU11
  60              		.loc 1 127 30 is_stmt 0 view .LVU12
  61 0010 4FF48033 		mov	r3, #65536
  62 0014 0693     		str	r3, [sp, #24]
 128:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   /* Ensure that RTC is clocked by 1MHz */
 129:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   PeriphClkInitStruct.RTCClockSelection = RCC_RTCCLKSOURCE_1MHZ;
  63              		.loc 1 129 3 is_stmt 1 view .LVU13
  64              		.loc 1 129 41 is_stmt 0 view .LVU14
  65 0016 404B     		ldr	r3, .L16
  66 0018 0493     		str	r3, [sp, #16]
 130:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** #else
 131:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** #error Please select the RTC Clock source
 132:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** #endif /* RTC_CLOCK_SOURCE_LSE */
 133:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** 
 134:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   status = HAL_RCC_OscConfig(&RCC_OscInitStruct);
  67              		.loc 1 134 3 is_stmt 1 view .LVU15
  68              		.loc 1 134 12 is_stmt 0 view .LVU16
  69 001a 05A8     		add	r0, sp, #20
  70              	.LVL1:
  71              		.loc 1 134 12 view .LVU17
  72 001c FFF7FEFF 		bl	HAL_RCC_OscConfig
  73              	.LVL2:
 135:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   if (status == HAL_OK)
  74              		.loc 1 135 3 is_stmt 1 view .LVU18
  75              		.loc 1 135 6 is_stmt 0 view .LVU19
  76 0020 0446     		mov	r4, r0
  77 0022 08B3     		cbz	r0, .L12
  78              	.LVL3:
  79              	.L2:
 136:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   {
 137:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****     PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_RTC;
 138:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****     status = HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct);
 139:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   }
 140:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   if (status == HAL_OK)
  80              		.loc 1 140 3 is_stmt 1 view .LVU20
  81              		.loc 1 140 6 is_stmt 0 view .LVU21
  82 0024 3CB3     		cbz	r4, .L13
  83              	.L3:
 141:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   {
 142:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****     /* Enable RTC Clock */
 143:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****     __HAL_RCC_RTC_ENABLE();
 144:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****     /* The time base should be 1ms
 145:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****        Time base = ((RTC_ASYNCH_PREDIV + 1) * (RTC_SYNCH_PREDIV + 1)) / RTC_CLOCK
 146:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****        HSE as RTC clock
ARM GAS  /tmp/ccPHacM1.s 			page 5


 147:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****          Time base = ((99 + 1) * (9 + 1)) / 1Mhz
 148:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****                    = 1ms
 149:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****        LSE as RTC clock
 150:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****          Time base = ((31 + 1) * (0 + 1)) / 32.768Khz
 151:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****                    = ~1ms
 152:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****        LSI as RTC clock
 153:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****          Time base = ((31 + 1) * (0 + 1)) / 32Khz
 154:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****                    = 1ms
 155:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****     */
 156:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****     hRTC_Handle.Instance = RTC;
 157:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****     hRTC_Handle.Init.HourFormat = RTC_HOURFORMAT_24;
 158:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****     hRTC_Handle.Init.AsynchPrediv = RTC_ASYNCH_PREDIV;
 159:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****     hRTC_Handle.Init.SynchPrediv = RTC_SYNCH_PREDIV;
 160:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****     hRTC_Handle.Init.OutPut = RTC_OUTPUT_DISABLE;
 161:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****     hRTC_Handle.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 162:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****     hRTC_Handle.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 163:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****     status = HAL_RTC_Init(&hRTC_Handle);
 164:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   }
 165:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   if (status == HAL_OK)
  84              		.loc 1 165 3 is_stmt 1 view .LVU22
  85              		.loc 1 165 6 is_stmt 0 view .LVU23
  86 0026 002C     		cmp	r4, #0
  87 0028 38D1     		bne	.L4
 166:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   {
 167:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****     /* Disable the write protection for RTC registers */
 168:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****     __HAL_RTC_WRITEPROTECTION_DISABLE(&hRTC_Handle);
  88              		.loc 1 168 5 is_stmt 1 view .LVU24
  89              		.loc 1 168 5 view .LVU25
  90 002a 3C4B     		ldr	r3, .L16+4
  91 002c 1868     		ldr	r0, [r3]
  92 002e CA23     		movs	r3, #202
  93 0030 4362     		str	r3, [r0, #36]
  94              		.loc 1 168 5 view .LVU26
  95 0032 5323     		movs	r3, #83
  96 0034 4362     		str	r3, [r0, #36]
  97              		.loc 1 168 5 view .LVU27
 169:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** 
 170:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****     /* Disable the Wake-up Timer */
 171:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****     __HAL_RTC_WAKEUPTIMER_DISABLE(&hRTC_Handle);
  98              		.loc 1 171 5 view .LVU28
  99 0036 8368     		ldr	r3, [r0, #8]
 100 0038 23F48063 		bic	r3, r3, #1024
 101 003c 8360     		str	r3, [r0, #8]
 172:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** 
 173:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****     /* In case of interrupt mode is used, the interrupt source must disabled */ 
 174:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****     __HAL_RTC_WAKEUPTIMER_DISABLE_IT(&hRTC_Handle, RTC_IT_WUT);
 102              		.loc 1 174 5 view .LVU29
 103 003e 8368     		ldr	r3, [r0, #8]
 104 0040 23F48043 		bic	r3, r3, #16384
 105 0044 8360     		str	r3, [r0, #8]
 175:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** 
 176:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****     /* Wait till RTC WUTWF flag is set  */
 177:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****     while (__HAL_RTC_WAKEUPTIMER_GET_FLAG(&hRTC_Handle, RTC_FLAG_WUTWF) == RESET)
 106              		.loc 1 177 5 view .LVU30
 107              	.LVL4:
 108              	.L5:
 109              		.loc 1 177 11 view .LVU31
ARM GAS  /tmp/ccPHacM1.s 			page 6


 110              		.loc 1 177 12 is_stmt 0 view .LVU32
 111 0046 C368     		ldr	r3, [r0, #12]
 112              		.loc 1 177 11 view .LVU33
 113 0048 13F0040F 		tst	r3, #4
 114 004c 26D1     		bne	.L4
 178:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****     {
 179:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****       if (counter++ == (SystemCoreClock / 48U))
 115              		.loc 1 179 7 is_stmt 1 view .LVU34
 116              		.loc 1 179 18 is_stmt 0 view .LVU35
 117 004e 119A     		ldr	r2, [sp, #68]
 118 0050 531C     		adds	r3, r2, #1
 119 0052 1193     		str	r3, [sp, #68]
 120              		.loc 1 179 41 view .LVU36
 121 0054 324B     		ldr	r3, .L16+8
 122 0056 1B68     		ldr	r3, [r3]
 123 0058 3249     		ldr	r1, .L16+12
 124 005a A1FB0313 		umull	r1, r3, r1, r3
 125              		.loc 1 179 10 view .LVU37
 126 005e B2EB531F 		cmp	r2, r3, lsr #5
 127 0062 F0D1     		bne	.L5
 180:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****       {
 181:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****         status = HAL_ERROR;
 128              		.loc 1 181 16 view .LVU38
 129 0064 0124     		movs	r4, #1
 130              	.LVL5:
 131              		.loc 1 181 16 view .LVU39
 132 0066 EEE7     		b	.L5
 133              	.LVL6:
 134              	.L12:
 137:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****     status = HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct);
 135              		.loc 1 137 5 is_stmt 1 view .LVU40
 137:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****     status = HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct);
 136              		.loc 1 137 46 is_stmt 0 view .LVU41
 137 0068 0223     		movs	r3, #2
 138 006a 0193     		str	r3, [sp, #4]
 138:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   }
 139              		.loc 1 138 5 is_stmt 1 view .LVU42
 138:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   }
 140              		.loc 1 138 14 is_stmt 0 view .LVU43
 141 006c 01A8     		add	r0, sp, #4
 142              	.LVL7:
 138:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   }
 143              		.loc 1 138 14 view .LVU44
 144 006e FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 145              	.LVL8:
 146 0072 0446     		mov	r4, r0
 147              	.LVL9:
 138:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   }
 148              		.loc 1 138 14 view .LVU45
 149 0074 D6E7     		b	.L2
 150              	.L13:
 143:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****     /* The time base should be 1ms
 151              		.loc 1 143 5 is_stmt 1 view .LVU46
 152 0076 2C4B     		ldr	r3, .L16+16
 153 0078 0122     		movs	r2, #1
 154 007a 1A60     		str	r2, [r3]
 156:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****     hRTC_Handle.Init.HourFormat = RTC_HOURFORMAT_24;
ARM GAS  /tmp/ccPHacM1.s 			page 7


 155              		.loc 1 156 5 view .LVU47
 156:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****     hRTC_Handle.Init.HourFormat = RTC_HOURFORMAT_24;
 156              		.loc 1 156 26 is_stmt 0 view .LVU48
 157 007c 2748     		ldr	r0, .L16+4
 158 007e 2B4B     		ldr	r3, .L16+20
 159 0080 0360     		str	r3, [r0]
 157:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****     hRTC_Handle.Init.AsynchPrediv = RTC_ASYNCH_PREDIV;
 160              		.loc 1 157 5 is_stmt 1 view .LVU49
 157:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****     hRTC_Handle.Init.AsynchPrediv = RTC_ASYNCH_PREDIV;
 161              		.loc 1 157 33 is_stmt 0 view .LVU50
 162 0082 0023     		movs	r3, #0
 163 0084 4360     		str	r3, [r0, #4]
 158:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****     hRTC_Handle.Init.SynchPrediv = RTC_SYNCH_PREDIV;
 164              		.loc 1 158 5 is_stmt 1 view .LVU51
 158:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****     hRTC_Handle.Init.SynchPrediv = RTC_SYNCH_PREDIV;
 165              		.loc 1 158 35 is_stmt 0 view .LVU52
 166 0086 6322     		movs	r2, #99
 167 0088 8260     		str	r2, [r0, #8]
 159:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****     hRTC_Handle.Init.OutPut = RTC_OUTPUT_DISABLE;
 168              		.loc 1 159 5 is_stmt 1 view .LVU53
 159:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****     hRTC_Handle.Init.OutPut = RTC_OUTPUT_DISABLE;
 169              		.loc 1 159 34 is_stmt 0 view .LVU54
 170 008a 0922     		movs	r2, #9
 171 008c C260     		str	r2, [r0, #12]
 160:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****     hRTC_Handle.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 172              		.loc 1 160 5 is_stmt 1 view .LVU55
 160:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****     hRTC_Handle.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 173              		.loc 1 160 29 is_stmt 0 view .LVU56
 174 008e 0361     		str	r3, [r0, #16]
 161:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****     hRTC_Handle.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 175              		.loc 1 161 5 is_stmt 1 view .LVU57
 161:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****     hRTC_Handle.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 176              		.loc 1 161 37 is_stmt 0 view .LVU58
 177 0090 4361     		str	r3, [r0, #20]
 162:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****     status = HAL_RTC_Init(&hRTC_Handle);
 178              		.loc 1 162 5 is_stmt 1 view .LVU59
 162:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****     status = HAL_RTC_Init(&hRTC_Handle);
 179              		.loc 1 162 33 is_stmt 0 view .LVU60
 180 0092 8361     		str	r3, [r0, #24]
 163:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   }
 181              		.loc 1 163 5 is_stmt 1 view .LVU61
 163:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   }
 182              		.loc 1 163 14 is_stmt 0 view .LVU62
 183 0094 FFF7FEFF 		bl	HAL_RTC_Init
 184              	.LVL10:
 185 0098 0446     		mov	r4, r0
 186              	.LVL11:
 163:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   }
 187              		.loc 1 163 14 view .LVU63
 188 009a C4E7     		b	.L3
 189              	.L4:
 182:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****       }
 183:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****     }
 184:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   }
 185:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   if (status == HAL_OK)
 190              		.loc 1 185 3 is_stmt 1 view .LVU64
 191              		.loc 1 185 6 is_stmt 0 view .LVU65
ARM GAS  /tmp/ccPHacM1.s 			page 8


 192 009c 14B1     		cbz	r4, .L14
 193              	.LVL12:
 194              	.L8:
 186:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   {
 187:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****     /* Clear PWR wake up Flag */
 188:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****     __HAL_PWR_CLEAR_FLAG(PWR_FLAG_WU);
 189:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** 
 190:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****     /* Clear RTC Wake Up timer Flag */
 191:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****     __HAL_RTC_WAKEUPTIMER_CLEAR_FLAG(&hRTC_Handle, RTC_FLAG_WUTF);
 192:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** 
 193:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****     /* Configure the Wake-up Timer counter */
 194:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****     hRTC_Handle.Instance->WUTR = 0U;
 195:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** 
 196:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****     /* Clear the Wake-up Timer clock source bits in CR register */
 197:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****     hRTC_Handle.Instance->CR &= (uint32_t)~RTC_CR_WUCKSEL;
 198:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** 
 199:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****     /* Configure the clock source */
 200:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****     hRTC_Handle.Instance->CR |= (uint32_t)RTC_WAKEUPCLOCK_CK_SPRE_16BITS;
 201:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** 
 202:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****     /* RTC WakeUpTimer Interrupt Configuration: EXTI configuration */
 203:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****     __HAL_RTC_WAKEUPTIMER_EXTI_ENABLE_IT();
 204:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** 
 205:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****     __HAL_RTC_WAKEUPTIMER_EXTI_ENABLE_RISING_EDGE();
 206:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** 
 207:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****     /* Configure the Interrupt in the RTC_CR register */
 208:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****     __HAL_RTC_WAKEUPTIMER_ENABLE_IT(&hRTC_Handle,RTC_IT_WUT);
 209:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** 
 210:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****     /* Enable the Wake-up Timer */
 211:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****     __HAL_RTC_WAKEUPTIMER_ENABLE(&hRTC_Handle);
 212:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** 
 213:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****     /* Enable the write protection for RTC registers */
 214:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****     __HAL_RTC_WRITEPROTECTION_ENABLE(&hRTC_Handle);
 215:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** 
 216:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****     /* Enable the RTC global Interrupt */
 217:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****     HAL_NVIC_EnableIRQ(RTC_WKUP_IRQn);
 218:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** 
 219:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****     /* Configure the SysTick IRQ priority */
 220:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****     if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 221:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****     {
 222:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****       HAL_NVIC_SetPriority(RTC_WKUP_IRQn, TickPriority, 0U);
 223:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****       uwTickPrio = TickPriority;
 224:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****     }
 225:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****     else
 226:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****     {
 227:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****       status = HAL_ERROR;
 228:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****     }
 229:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   }
 230:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   return status;
 195              		.loc 1 230 3 is_stmt 1 view .LVU66
 231:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** }
 196              		.loc 1 231 1 is_stmt 0 view .LVU67
 197 009e 2046     		mov	r0, r4
 198 00a0 13B0     		add	sp, sp, #76
 199              	.LCFI2:
 200              		.cfi_remember_state
 201              		.cfi_def_cfa_offset 12
 202              		@ sp needed
ARM GAS  /tmp/ccPHacM1.s 			page 9


 203 00a2 30BD     		pop	{r4, r5, pc}
 204              	.LVL13:
 205              	.L14:
 206              	.LCFI3:
 207              		.cfi_restore_state
 188:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** 
 208              		.loc 1 188 5 is_stmt 1 view .LVU68
 209 00a4 224A     		ldr	r2, .L16+24
 210 00a6 1368     		ldr	r3, [r2]
 211 00a8 43F00403 		orr	r3, r3, #4
 212 00ac 1360     		str	r3, [r2]
 191:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** 
 213              		.loc 1 191 5 view .LVU69
 214 00ae 1B49     		ldr	r1, .L16+4
 215 00b0 0B68     		ldr	r3, [r1]
 216 00b2 DA68     		ldr	r2, [r3, #12]
 217 00b4 D2B2     		uxtb	r2, r2
 218 00b6 62F49062 		orn	r2, r2, #1152
 219 00ba DA60     		str	r2, [r3, #12]
 194:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** 
 220              		.loc 1 194 5 view .LVU70
 194:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** 
 221              		.loc 1 194 32 is_stmt 0 view .LVU71
 222 00bc 0022     		movs	r2, #0
 223 00be 5A61     		str	r2, [r3, #20]
 197:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** 
 224              		.loc 1 197 5 is_stmt 1 view .LVU72
 197:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** 
 225              		.loc 1 197 30 is_stmt 0 view .LVU73
 226 00c0 9A68     		ldr	r2, [r3, #8]
 227 00c2 22F00702 		bic	r2, r2, #7
 228 00c6 9A60     		str	r2, [r3, #8]
 200:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** 
 229              		.loc 1 200 5 is_stmt 1 view .LVU74
 200:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** 
 230              		.loc 1 200 30 is_stmt 0 view .LVU75
 231 00c8 9A68     		ldr	r2, [r3, #8]
 232 00ca 42F00402 		orr	r2, r2, #4
 233 00ce 9A60     		str	r2, [r3, #8]
 203:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** 
 234              		.loc 1 203 5 is_stmt 1 view .LVU76
 235 00d0 184B     		ldr	r3, .L16+28
 236 00d2 1A68     		ldr	r2, [r3]
 237 00d4 42F48002 		orr	r2, r2, #4194304
 238 00d8 1A60     		str	r2, [r3]
 205:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** 
 239              		.loc 1 205 5 view .LVU77
 240 00da 9A68     		ldr	r2, [r3, #8]
 241 00dc 42F48002 		orr	r2, r2, #4194304
 242 00e0 9A60     		str	r2, [r3, #8]
 208:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** 
 243              		.loc 1 208 5 view .LVU78
 244 00e2 0B68     		ldr	r3, [r1]
 245 00e4 9A68     		ldr	r2, [r3, #8]
 246 00e6 42F48042 		orr	r2, r2, #16384
 247 00ea 9A60     		str	r2, [r3, #8]
 211:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** 
ARM GAS  /tmp/ccPHacM1.s 			page 10


 248              		.loc 1 211 5 view .LVU79
 249 00ec 9A68     		ldr	r2, [r3, #8]
 250 00ee 42F48062 		orr	r2, r2, #1024
 251 00f2 9A60     		str	r2, [r3, #8]
 214:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** 
 252              		.loc 1 214 5 view .LVU80
 214:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** 
 253              		.loc 1 214 5 view .LVU81
 254 00f4 FF22     		movs	r2, #255
 255 00f6 5A62     		str	r2, [r3, #36]
 214:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** 
 256              		.loc 1 214 5 view .LVU82
 217:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** 
 257              		.loc 1 217 5 view .LVU83
 258 00f8 0320     		movs	r0, #3
 259 00fa FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 260              	.LVL14:
 220:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****     {
 261              		.loc 1 220 5 view .LVU84
 220:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****     {
 262              		.loc 1 220 8 is_stmt 0 view .LVU85
 263 00fe 0F2D     		cmp	r5, #15
 264 0100 01D9     		bls	.L15
 227:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****     }
 265              		.loc 1 227 14 view .LVU86
 266 0102 0124     		movs	r4, #1
 267              	.LVL15:
 227:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****     }
 268              		.loc 1 227 14 view .LVU87
 269 0104 CBE7     		b	.L8
 270              	.LVL16:
 271              	.L15:
 222:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****       uwTickPrio = TickPriority;
 272              		.loc 1 222 7 is_stmt 1 view .LVU88
 273 0106 0022     		movs	r2, #0
 274 0108 2946     		mov	r1, r5
 275 010a 0320     		movs	r0, #3
 276 010c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 277              	.LVL17:
 223:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****     }
 278              		.loc 1 223 7 view .LVU89
 223:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****     }
 279              		.loc 1 223 18 is_stmt 0 view .LVU90
 280 0110 094B     		ldr	r3, .L16+32
 281 0112 1D60     		str	r5, [r3]
 282 0114 C3E7     		b	.L8
 283              	.L17:
 284 0116 00BF     		.align	2
 285              	.L16:
 286 0118 00031900 		.word	1639168
 287 011c 00000000 		.word	hRTC_Handle
 288 0120 00000000 		.word	SystemCoreClock
 289 0124 ABAAAAAA 		.word	-1431655765
 290 0128 3C0E4742 		.word	1111952956
 291 012c 00280040 		.word	1073752064
 292 0130 00700040 		.word	1073770496
 293 0134 003C0140 		.word	1073822720
ARM GAS  /tmp/ccPHacM1.s 			page 11


 294 0138 00000000 		.word	uwTickPrio
 295              		.cfi_endproc
 296              	.LFE239:
 298              		.section	.text.HAL_SuspendTick,"ax",%progbits
 299              		.align	1
 300              		.global	HAL_SuspendTick
 301              		.syntax unified
 302              		.thumb
 303              		.thumb_func
 304              		.fpu fpv4-sp-d16
 306              	HAL_SuspendTick:
 307              	.LFB240:
 232:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** 
 233:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** /**
 234:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   * @brief  Suspend Tick increment.
 235:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   * @note   Disable the tick increment by disabling RTC_WKUP interrupt.
 236:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   * @retval None
 237:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   */
 238:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** void HAL_SuspendTick(void)
 239:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** {
 308              		.loc 1 239 1 is_stmt 1 view -0
 309              		.cfi_startproc
 310              		@ args = 0, pretend = 0, frame = 0
 311              		@ frame_needed = 0, uses_anonymous_args = 0
 312              		@ link register save eliminated.
 240:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   /* Disable the write protection for RTC registers */
 241:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(&hRTC_Handle);
 313              		.loc 1 241 3 view .LVU92
 314              		.loc 1 241 3 view .LVU93
 315 0000 064B     		ldr	r3, .L19
 316 0002 1B68     		ldr	r3, [r3]
 317 0004 CA22     		movs	r2, #202
 318 0006 5A62     		str	r2, [r3, #36]
 319              		.loc 1 241 3 view .LVU94
 320 0008 5322     		movs	r2, #83
 321 000a 5A62     		str	r2, [r3, #36]
 322              		.loc 1 241 3 view .LVU95
 242:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   /* Disable WAKE UP TIMER Interrupt */
 243:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   __HAL_RTC_WAKEUPTIMER_DISABLE_IT(&hRTC_Handle, RTC_IT_WUT);
 323              		.loc 1 243 3 view .LVU96
 324 000c 9A68     		ldr	r2, [r3, #8]
 325 000e 22F48042 		bic	r2, r2, #16384
 326 0012 9A60     		str	r2, [r3, #8]
 244:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   /* Enable the write protection for RTC registers */
 245:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(&hRTC_Handle);
 327              		.loc 1 245 3 view .LVU97
 328              		.loc 1 245 3 view .LVU98
 329 0014 FF22     		movs	r2, #255
 330 0016 5A62     		str	r2, [r3, #36]
 331              		.loc 1 245 3 view .LVU99
 246:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** }
 332              		.loc 1 246 1 is_stmt 0 view .LVU100
 333 0018 7047     		bx	lr
 334              	.L20:
 335 001a 00BF     		.align	2
 336              	.L19:
 337 001c 00000000 		.word	hRTC_Handle
ARM GAS  /tmp/ccPHacM1.s 			page 12


 338              		.cfi_endproc
 339              	.LFE240:
 341              		.section	.text.HAL_ResumeTick,"ax",%progbits
 342              		.align	1
 343              		.global	HAL_ResumeTick
 344              		.syntax unified
 345              		.thumb
 346              		.thumb_func
 347              		.fpu fpv4-sp-d16
 349              	HAL_ResumeTick:
 350              	.LFB241:
 247:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** 
 248:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** /**
 249:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   * @brief  Resume Tick increment.
 250:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   * @note   Enable the tick increment by Enabling RTC_WKUP interrupt.
 251:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   * @retval None
 252:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   */
 253:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** void HAL_ResumeTick(void)
 254:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** {
 351              		.loc 1 254 1 is_stmt 1 view -0
 352              		.cfi_startproc
 353              		@ args = 0, pretend = 0, frame = 0
 354              		@ frame_needed = 0, uses_anonymous_args = 0
 355              		@ link register save eliminated.
 255:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   /* Disable the write protection for RTC registers */
 256:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(&hRTC_Handle);
 356              		.loc 1 256 3 view .LVU102
 357              		.loc 1 256 3 view .LVU103
 358 0000 064B     		ldr	r3, .L22
 359 0002 1B68     		ldr	r3, [r3]
 360 0004 CA22     		movs	r2, #202
 361 0006 5A62     		str	r2, [r3, #36]
 362              		.loc 1 256 3 view .LVU104
 363 0008 5322     		movs	r2, #83
 364 000a 5A62     		str	r2, [r3, #36]
 365              		.loc 1 256 3 view .LVU105
 257:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   /* Enable  WAKE UP TIMER  interrupt */
 258:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   __HAL_RTC_WAKEUPTIMER_ENABLE_IT(&hRTC_Handle, RTC_IT_WUT);
 366              		.loc 1 258 3 view .LVU106
 367 000c 9A68     		ldr	r2, [r3, #8]
 368 000e 42F48042 		orr	r2, r2, #16384
 369 0012 9A60     		str	r2, [r3, #8]
 259:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   /* Enable the write protection for RTC registers */
 260:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(&hRTC_Handle);
 370              		.loc 1 260 3 view .LVU107
 371              		.loc 1 260 3 view .LVU108
 372 0014 FF22     		movs	r2, #255
 373 0016 5A62     		str	r2, [r3, #36]
 374              		.loc 1 260 3 view .LVU109
 261:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** }
 375              		.loc 1 261 1 is_stmt 0 view .LVU110
 376 0018 7047     		bx	lr
 377              	.L23:
 378 001a 00BF     		.align	2
 379              	.L22:
 380 001c 00000000 		.word	hRTC_Handle
 381              		.cfi_endproc
ARM GAS  /tmp/ccPHacM1.s 			page 13


 382              	.LFE241:
 384              		.section	.text.HAL_RTCEx_WakeUpTimerEventCallback,"ax",%progbits
 385              		.align	1
 386              		.global	HAL_RTCEx_WakeUpTimerEventCallback
 387              		.syntax unified
 388              		.thumb
 389              		.thumb_func
 390              		.fpu fpv4-sp-d16
 392              	HAL_RTCEx_WakeUpTimerEventCallback:
 393              	.LVL18:
 394              	.LFB242:
 262:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** 
 263:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** /**
 264:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   * @brief  Wake Up Timer Event Callback in non blocking mode
 265:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   * @note   This function is called  when RTC_WKUP interrupt took place, inside
 266:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   * RTC_WKUP_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 267:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   * a global variable "uwTick" used as application time base.
 268:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   * @param  hrtc  RTC handle
 269:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   * @retval None
 270:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   */
 271:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** void HAL_RTCEx_WakeUpTimerEventCallback(RTC_HandleTypeDef *hrtc)
 272:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** {
 395              		.loc 1 272 1 is_stmt 1 view -0
 396              		.cfi_startproc
 397              		@ args = 0, pretend = 0, frame = 0
 398              		@ frame_needed = 0, uses_anonymous_args = 0
 399              		.loc 1 272 1 is_stmt 0 view .LVU112
 400 0000 08B5     		push	{r3, lr}
 401              	.LCFI4:
 402              		.cfi_def_cfa_offset 8
 403              		.cfi_offset 3, -8
 404              		.cfi_offset 14, -4
 273:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   HAL_IncTick();
 405              		.loc 1 273 3 is_stmt 1 view .LVU113
 406 0002 FFF7FEFF 		bl	HAL_IncTick
 407              	.LVL19:
 274:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** }
 408              		.loc 1 274 1 is_stmt 0 view .LVU114
 409 0006 08BD     		pop	{r3, pc}
 410              		.cfi_endproc
 411              	.LFE242:
 413              		.section	.text.RTC_WKUP_IRQHandler,"ax",%progbits
 414              		.align	1
 415              		.global	RTC_WKUP_IRQHandler
 416              		.syntax unified
 417              		.thumb
 418              		.thumb_func
 419              		.fpu fpv4-sp-d16
 421              	RTC_WKUP_IRQHandler:
 422              	.LFB243:
 275:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** 
 276:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** /**
 277:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   * @brief  This function handles  WAKE UP TIMER  interrupt request.
 278:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   * @retval None
 279:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   */
 280:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** void RTC_WKUP_IRQHandler(void)
 281:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** {
ARM GAS  /tmp/ccPHacM1.s 			page 14


 423              		.loc 1 281 1 is_stmt 1 view -0
 424              		.cfi_startproc
 425              		@ args = 0, pretend = 0, frame = 0
 426              		@ frame_needed = 0, uses_anonymous_args = 0
 427 0000 08B5     		push	{r3, lr}
 428              	.LCFI5:
 429              		.cfi_def_cfa_offset 8
 430              		.cfi_offset 3, -8
 431              		.cfi_offset 14, -4
 282:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c ****   HAL_RTCEx_WakeUpTimerIRQHandler(&hRTC_Handle);
 432              		.loc 1 282 3 view .LVU116
 433 0002 0248     		ldr	r0, .L28
 434 0004 FFF7FEFF 		bl	HAL_RTCEx_WakeUpTimerIRQHandler
 435              	.LVL20:
 283:stm32f4xx-hal-driver/Src/stm32f4xx_hal_timebase_rtc_wakeup_template.c **** }
 436              		.loc 1 283 1 is_stmt 0 view .LVU117
 437 0008 08BD     		pop	{r3, pc}
 438              	.L29:
 439 000a 00BF     		.align	2
 440              	.L28:
 441 000c 00000000 		.word	hRTC_Handle
 442              		.cfi_endproc
 443              	.LFE243:
 445              		.comm	hRTC_Handle,32,4
 446              		.text
 447              	.Letext0:
 448              		.file 2 "/opt/gcc_arm/gcc-arm-none-eabi-9-2019-q4-major/arm-none-eabi/include/machine/_default_typ
 449              		.file 3 "/opt/gcc_arm/gcc-arm-none-eabi-9-2019-q4-major/arm-none-eabi/include/sys/_stdint.h"
 450              		.file 4 "CMSIS_5/CMSIS/Core/Include/core_cm4.h"
 451              		.file 5 "cmsis-device-f4/Include/system_stm32f4xx.h"
 452              		.file 6 "cmsis-device-f4/Include/stm32f407xx.h"
 453              		.file 7 "cmsis-device-f4/Include/stm32f4xx.h"
 454              		.file 8 "stm32f4xx-hal-driver/Inc/stm32f4xx_hal_def.h"
 455              		.file 9 "stm32f4xx-hal-driver/Inc/stm32f4xx_hal_rcc_ex.h"
 456              		.file 10 "stm32f4xx-hal-driver/Inc/stm32f4xx_hal_rcc.h"
 457              		.file 11 "stm32f4xx-hal-driver/Inc/stm32f4xx_hal_rtc.h"
 458              		.file 12 "stm32f4xx-hal-driver/Inc/stm32f4xx_hal.h"
 459              		.file 13 "stm32f4xx-hal-driver/Inc/stm32f4xx_hal_rtc_ex.h"
 460              		.file 14 "stm32f4xx-hal-driver/Inc/stm32f4xx_hal_cortex.h"
ARM GAS  /tmp/ccPHacM1.s 			page 15


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_hal_timebase_rtc_wakeup_template.c
     /tmp/ccPHacM1.s:18     .text.HAL_InitTick:0000000000000000 $t
     /tmp/ccPHacM1.s:26     .text.HAL_InitTick:0000000000000000 HAL_InitTick
     /tmp/ccPHacM1.s:286    .text.HAL_InitTick:0000000000000118 $d
                            *COM*:0000000000000020 hRTC_Handle
     /tmp/ccPHacM1.s:299    .text.HAL_SuspendTick:0000000000000000 $t
     /tmp/ccPHacM1.s:306    .text.HAL_SuspendTick:0000000000000000 HAL_SuspendTick
     /tmp/ccPHacM1.s:337    .text.HAL_SuspendTick:000000000000001c $d
     /tmp/ccPHacM1.s:342    .text.HAL_ResumeTick:0000000000000000 $t
     /tmp/ccPHacM1.s:349    .text.HAL_ResumeTick:0000000000000000 HAL_ResumeTick
     /tmp/ccPHacM1.s:380    .text.HAL_ResumeTick:000000000000001c $d
     /tmp/ccPHacM1.s:385    .text.HAL_RTCEx_WakeUpTimerEventCallback:0000000000000000 $t
     /tmp/ccPHacM1.s:392    .text.HAL_RTCEx_WakeUpTimerEventCallback:0000000000000000 HAL_RTCEx_WakeUpTimerEventCallback
     /tmp/ccPHacM1.s:414    .text.RTC_WKUP_IRQHandler:0000000000000000 $t
     /tmp/ccPHacM1.s:421    .text.RTC_WKUP_IRQHandler:0000000000000000 RTC_WKUP_IRQHandler
     /tmp/ccPHacM1.s:441    .text.RTC_WKUP_IRQHandler:000000000000000c $d

UNDEFINED SYMBOLS
HAL_RCC_OscConfig
HAL_RCCEx_PeriphCLKConfig
HAL_RTC_Init
HAL_NVIC_EnableIRQ
HAL_NVIC_SetPriority
SystemCoreClock
uwTickPrio
HAL_IncTick
HAL_RTCEx_WakeUpTimerIRQHandler

ARM GAS  /tmp/ccFtgh7I.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NMI_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	NMI_Handler
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	NMI_Handler:
  27              	.LFB239:
  28              		.file 1 "stm32f4xx_it.c"
   1:stm32f4xx_it.c **** 
   2:stm32f4xx_it.c **** #include "main.h"
   3:stm32f4xx_it.c **** #include "stm32f4xx_it.h"
   4:stm32f4xx_it.c **** 
   5:stm32f4xx_it.c **** /* External variables */
   6:stm32f4xx_it.c **** extern TIM_HandleTypeDef htim_tx;
   7:stm32f4xx_it.c **** extern TIM_HandleTypeDef htim_rx;
   8:stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_tx;
   9:stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_rx;
  10:stm32f4xx_it.c **** 
  11:stm32f4xx_it.c **** /******************************************************************************/
  12:stm32f4xx_it.c **** /*           Cortex-M4 Processor Interruption and Exception Handlers          */ 
  13:stm32f4xx_it.c **** /******************************************************************************/
  14:stm32f4xx_it.c **** /**
  15:stm32f4xx_it.c ****   * @brief This function handles Non maskable interrupt.
  16:stm32f4xx_it.c ****   */
  17:stm32f4xx_it.c **** void NMI_Handler(void)
  18:stm32f4xx_it.c **** {
  29              		.loc 1 18 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  19:stm32f4xx_it.c **** 
  20:stm32f4xx_it.c **** }
  34              		.loc 1 20 1 view .LVU1
  35 0000 7047     		bx	lr
  36              		.cfi_endproc
  37              	.LFE239:
  39              		.section	.text.HardFault_Handler,"ax",%progbits
ARM GAS  /tmp/ccFtgh7I.s 			page 2


  40              		.align	1
  41              		.global	HardFault_Handler
  42              		.syntax unified
  43              		.thumb
  44              		.thumb_func
  45              		.fpu fpv4-sp-d16
  47              	HardFault_Handler:
  48              	.LFB240:
  21:stm32f4xx_it.c **** 
  22:stm32f4xx_it.c **** /**
  23:stm32f4xx_it.c ****   * @brief This function handles Hard fault interrupt.
  24:stm32f4xx_it.c ****   */
  25:stm32f4xx_it.c **** void HardFault_Handler(void)
  26:stm32f4xx_it.c **** {
  49              		.loc 1 26 1 view -0
  50              		.cfi_startproc
  51              		@ Volatile: function does not return.
  52              		@ args = 0, pretend = 0, frame = 0
  53              		@ frame_needed = 0, uses_anonymous_args = 0
  54              		@ link register save eliminated.
  55              	.L3:
  27:stm32f4xx_it.c ****   while (1)
  56              		.loc 1 27 3 discriminator 1 view .LVU3
  28:stm32f4xx_it.c ****   {
  29:stm32f4xx_it.c ****   }
  57              		.loc 1 29 3 discriminator 1 view .LVU4
  27:stm32f4xx_it.c ****   while (1)
  58              		.loc 1 27 9 discriminator 1 view .LVU5
  59 0000 FEE7     		b	.L3
  60              		.cfi_endproc
  61              	.LFE240:
  63              		.section	.text.MemManage_Handler,"ax",%progbits
  64              		.align	1
  65              		.global	MemManage_Handler
  66              		.syntax unified
  67              		.thumb
  68              		.thumb_func
  69              		.fpu fpv4-sp-d16
  71              	MemManage_Handler:
  72              	.LFB241:
  30:stm32f4xx_it.c **** }
  31:stm32f4xx_it.c **** 
  32:stm32f4xx_it.c **** /**
  33:stm32f4xx_it.c ****   * @brief This function handles Memory management fault.
  34:stm32f4xx_it.c ****   */
  35:stm32f4xx_it.c **** void MemManage_Handler(void)
  36:stm32f4xx_it.c **** {
  73              		.loc 1 36 1 view -0
  74              		.cfi_startproc
  75              		@ Volatile: function does not return.
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78              		@ link register save eliminated.
  79              	.L5:
  37:stm32f4xx_it.c ****   while (1)
  80              		.loc 1 37 3 discriminator 1 view .LVU7
  38:stm32f4xx_it.c ****   {
ARM GAS  /tmp/ccFtgh7I.s 			page 3


  39:stm32f4xx_it.c ****   }
  81              		.loc 1 39 3 discriminator 1 view .LVU8
  37:stm32f4xx_it.c ****   while (1)
  82              		.loc 1 37 9 discriminator 1 view .LVU9
  83 0000 FEE7     		b	.L5
  84              		.cfi_endproc
  85              	.LFE241:
  87              		.section	.text.BusFault_Handler,"ax",%progbits
  88              		.align	1
  89              		.global	BusFault_Handler
  90              		.syntax unified
  91              		.thumb
  92              		.thumb_func
  93              		.fpu fpv4-sp-d16
  95              	BusFault_Handler:
  96              	.LFB242:
  40:stm32f4xx_it.c **** }
  41:stm32f4xx_it.c **** 
  42:stm32f4xx_it.c **** /**
  43:stm32f4xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
  44:stm32f4xx_it.c ****   */
  45:stm32f4xx_it.c **** void BusFault_Handler(void)
  46:stm32f4xx_it.c **** {
  97              		.loc 1 46 1 view -0
  98              		.cfi_startproc
  99              		@ Volatile: function does not return.
 100              		@ args = 0, pretend = 0, frame = 0
 101              		@ frame_needed = 0, uses_anonymous_args = 0
 102              		@ link register save eliminated.
 103              	.L7:
  47:stm32f4xx_it.c ****   while (1)
 104              		.loc 1 47 3 discriminator 1 view .LVU11
  48:stm32f4xx_it.c ****   {
  49:stm32f4xx_it.c ****   }
 105              		.loc 1 49 3 discriminator 1 view .LVU12
  47:stm32f4xx_it.c ****   while (1)
 106              		.loc 1 47 9 discriminator 1 view .LVU13
 107 0000 FEE7     		b	.L7
 108              		.cfi_endproc
 109              	.LFE242:
 111              		.section	.text.UsageFault_Handler,"ax",%progbits
 112              		.align	1
 113              		.global	UsageFault_Handler
 114              		.syntax unified
 115              		.thumb
 116              		.thumb_func
 117              		.fpu fpv4-sp-d16
 119              	UsageFault_Handler:
 120              	.LFB243:
  50:stm32f4xx_it.c **** }
  51:stm32f4xx_it.c **** 
  52:stm32f4xx_it.c **** /**
  53:stm32f4xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
  54:stm32f4xx_it.c ****   */
  55:stm32f4xx_it.c **** void UsageFault_Handler(void)
  56:stm32f4xx_it.c **** {
 121              		.loc 1 56 1 view -0
ARM GAS  /tmp/ccFtgh7I.s 			page 4


 122              		.cfi_startproc
 123              		@ Volatile: function does not return.
 124              		@ args = 0, pretend = 0, frame = 0
 125              		@ frame_needed = 0, uses_anonymous_args = 0
 126              		@ link register save eliminated.
 127              	.L9:
  57:stm32f4xx_it.c ****   while (1)
 128              		.loc 1 57 3 discriminator 1 view .LVU15
  58:stm32f4xx_it.c ****   {
  59:stm32f4xx_it.c ****   }
 129              		.loc 1 59 3 discriminator 1 view .LVU16
  57:stm32f4xx_it.c ****   while (1)
 130              		.loc 1 57 9 discriminator 1 view .LVU17
 131 0000 FEE7     		b	.L9
 132              		.cfi_endproc
 133              	.LFE243:
 135              		.section	.text.SVC_Handler,"ax",%progbits
 136              		.align	1
 137              		.global	SVC_Handler
 138              		.syntax unified
 139              		.thumb
 140              		.thumb_func
 141              		.fpu fpv4-sp-d16
 143              	SVC_Handler:
 144              	.LFB244:
  60:stm32f4xx_it.c **** }
  61:stm32f4xx_it.c **** 
  62:stm32f4xx_it.c **** /**
  63:stm32f4xx_it.c ****   * @brief This function handles System service call via SWI instruction.
  64:stm32f4xx_it.c ****   */
  65:stm32f4xx_it.c **** void SVC_Handler(void)
  66:stm32f4xx_it.c **** {
 145              		.loc 1 66 1 view -0
 146              		.cfi_startproc
 147              		@ args = 0, pretend = 0, frame = 0
 148              		@ frame_needed = 0, uses_anonymous_args = 0
 149              		@ link register save eliminated.
  67:stm32f4xx_it.c **** 
  68:stm32f4xx_it.c **** }
 150              		.loc 1 68 1 view .LVU19
 151 0000 7047     		bx	lr
 152              		.cfi_endproc
 153              	.LFE244:
 155              		.section	.text.DebugMon_Handler,"ax",%progbits
 156              		.align	1
 157              		.global	DebugMon_Handler
 158              		.syntax unified
 159              		.thumb
 160              		.thumb_func
 161              		.fpu fpv4-sp-d16
 163              	DebugMon_Handler:
 164              	.LFB245:
  69:stm32f4xx_it.c **** 
  70:stm32f4xx_it.c **** /**
  71:stm32f4xx_it.c ****   * @brief This function handles Debug monitor.
  72:stm32f4xx_it.c ****   */
  73:stm32f4xx_it.c **** void DebugMon_Handler(void)
ARM GAS  /tmp/ccFtgh7I.s 			page 5


  74:stm32f4xx_it.c **** {
 165              		.loc 1 74 1 view -0
 166              		.cfi_startproc
 167              		@ args = 0, pretend = 0, frame = 0
 168              		@ frame_needed = 0, uses_anonymous_args = 0
 169              		@ link register save eliminated.
  75:stm32f4xx_it.c **** 
  76:stm32f4xx_it.c **** }
 170              		.loc 1 76 1 view .LVU21
 171 0000 7047     		bx	lr
 172              		.cfi_endproc
 173              	.LFE245:
 175              		.section	.text.PendSV_Handler,"ax",%progbits
 176              		.align	1
 177              		.global	PendSV_Handler
 178              		.syntax unified
 179              		.thumb
 180              		.thumb_func
 181              		.fpu fpv4-sp-d16
 183              	PendSV_Handler:
 184              	.LFB246:
  77:stm32f4xx_it.c **** 
  78:stm32f4xx_it.c **** /**
  79:stm32f4xx_it.c ****   * @brief This function handles Pendable request for system service.
  80:stm32f4xx_it.c ****   */
  81:stm32f4xx_it.c **** void PendSV_Handler(void)
  82:stm32f4xx_it.c **** {
 185              		.loc 1 82 1 view -0
 186              		.cfi_startproc
 187              		@ args = 0, pretend = 0, frame = 0
 188              		@ frame_needed = 0, uses_anonymous_args = 0
 189              		@ link register save eliminated.
  83:stm32f4xx_it.c **** 
  84:stm32f4xx_it.c **** }
 190              		.loc 1 84 1 view .LVU23
 191 0000 7047     		bx	lr
 192              		.cfi_endproc
 193              	.LFE246:
 195              		.section	.text.SysTick_Handler,"ax",%progbits
 196              		.align	1
 197              		.global	SysTick_Handler
 198              		.syntax unified
 199              		.thumb
 200              		.thumb_func
 201              		.fpu fpv4-sp-d16
 203              	SysTick_Handler:
 204              	.LFB247:
  85:stm32f4xx_it.c **** 
  86:stm32f4xx_it.c **** /**
  87:stm32f4xx_it.c ****   * @brief This function handles System tick timer.
  88:stm32f4xx_it.c ****   */
  89:stm32f4xx_it.c **** void SysTick_Handler(void)
  90:stm32f4xx_it.c **** {
 205              		.loc 1 90 1 view -0
 206              		.cfi_startproc
 207              		@ args = 0, pretend = 0, frame = 0
 208              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccFtgh7I.s 			page 6


 209 0000 08B5     		push	{r3, lr}
 210              	.LCFI0:
 211              		.cfi_def_cfa_offset 8
 212              		.cfi_offset 3, -8
 213              		.cfi_offset 14, -4
  91:stm32f4xx_it.c ****   HAL_IncTick();
 214              		.loc 1 91 3 view .LVU25
 215 0002 FFF7FEFF 		bl	HAL_IncTick
 216              	.LVL0:
  92:stm32f4xx_it.c **** }
 217              		.loc 1 92 1 is_stmt 0 view .LVU26
 218 0006 08BD     		pop	{r3, pc}
 219              		.cfi_endproc
 220              	.LFE247:
 222              		.section	.text.DMA1_Stream7_IRQHandler,"ax",%progbits
 223              		.align	1
 224              		.global	DMA1_Stream7_IRQHandler
 225              		.syntax unified
 226              		.thumb
 227              		.thumb_func
 228              		.fpu fpv4-sp-d16
 230              	DMA1_Stream7_IRQHandler:
 231              	.LFB248:
  93:stm32f4xx_it.c **** 
  94:stm32f4xx_it.c **** /******************************************************************************/
  95:stm32f4xx_it.c **** /* STM32F4xx Peripheral Interrupt Handlers                                    */
  96:stm32f4xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
  97:stm32f4xx_it.c **** /* For the available peripheral interrupt handler names,                      */
  98:stm32f4xx_it.c **** /* please refer to the startup file (startup_stm32f4xx.s).                    */
  99:stm32f4xx_it.c **** /******************************************************************************/
 100:stm32f4xx_it.c **** 
 101:stm32f4xx_it.c **** /**
 102:stm32f4xx_it.c ****   * @brief This function handles DMA1 stream7 global interrupt.
 103:stm32f4xx_it.c ****   */
 104:stm32f4xx_it.c **** void DMA1_Stream7_IRQHandler(void)
 105:stm32f4xx_it.c **** {
 232              		.loc 1 105 1 is_stmt 1 view -0
 233              		.cfi_startproc
 234              		@ args = 0, pretend = 0, frame = 0
 235              		@ frame_needed = 0, uses_anonymous_args = 0
 236 0000 08B5     		push	{r3, lr}
 237              	.LCFI1:
 238              		.cfi_def_cfa_offset 8
 239              		.cfi_offset 3, -8
 240              		.cfi_offset 14, -4
 106:stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_rx);
 241              		.loc 1 106 3 view .LVU28
 242 0002 0248     		ldr	r0, .L17
 243 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 244              	.LVL1:
 107:stm32f4xx_it.c **** }
 245              		.loc 1 107 1 is_stmt 0 view .LVU29
 246 0008 08BD     		pop	{r3, pc}
 247              	.L18:
 248 000a 00BF     		.align	2
 249              	.L17:
 250 000c 00000000 		.word	hdma_rx
ARM GAS  /tmp/ccFtgh7I.s 			page 7


 251              		.cfi_endproc
 252              	.LFE248:
 254              		.section	.text.DMA2_Stream1_IRQHandler,"ax",%progbits
 255              		.align	1
 256              		.global	DMA2_Stream1_IRQHandler
 257              		.syntax unified
 258              		.thumb
 259              		.thumb_func
 260              		.fpu fpv4-sp-d16
 262              	DMA2_Stream1_IRQHandler:
 263              	.LFB249:
 108:stm32f4xx_it.c **** 
 109:stm32f4xx_it.c **** /**
 110:stm32f4xx_it.c ****   * @brief This function handles DMA2 stream1 global interrupt.
 111:stm32f4xx_it.c ****   */
 112:stm32f4xx_it.c **** void DMA2_Stream1_IRQHandler(void)
 113:stm32f4xx_it.c **** {
 264              		.loc 1 113 1 is_stmt 1 view -0
 265              		.cfi_startproc
 266              		@ args = 0, pretend = 0, frame = 0
 267              		@ frame_needed = 0, uses_anonymous_args = 0
 268 0000 08B5     		push	{r3, lr}
 269              	.LCFI2:
 270              		.cfi_def_cfa_offset 8
 271              		.cfi_offset 3, -8
 272              		.cfi_offset 14, -4
 114:stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_tx);
 273              		.loc 1 114 3 view .LVU31
 274 0002 0248     		ldr	r0, .L21
 275 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 276              	.LVL2:
 115:stm32f4xx_it.c **** }
 277              		.loc 1 115 1 is_stmt 0 view .LVU32
 278 0008 08BD     		pop	{r3, pc}
 279              	.L22:
 280 000a 00BF     		.align	2
 281              	.L21:
 282 000c 00000000 		.word	hdma_tx
 283              		.cfi_endproc
 284              	.LFE249:
 286              		.section	.text.TIM8_UP_TIM13_IRQHandler,"ax",%progbits
 287              		.align	1
 288              		.global	TIM8_UP_TIM13_IRQHandler
 289              		.syntax unified
 290              		.thumb
 291              		.thumb_func
 292              		.fpu fpv4-sp-d16
 294              	TIM8_UP_TIM13_IRQHandler:
 295              	.LFB250:
 116:stm32f4xx_it.c **** 
 117:stm32f4xx_it.c **** /**
 118:stm32f4xx_it.c ****   * @brief This function handles TIM8 update interrupt and TIM13 global interrupt.
 119:stm32f4xx_it.c ****   */
 120:stm32f4xx_it.c **** void TIM8_UP_TIM13_IRQHandler(void)
 121:stm32f4xx_it.c **** {
 296              		.loc 1 121 1 is_stmt 1 view -0
 297              		.cfi_startproc
ARM GAS  /tmp/ccFtgh7I.s 			page 8


 298              		@ args = 0, pretend = 0, frame = 0
 299              		@ frame_needed = 0, uses_anonymous_args = 0
 300 0000 08B5     		push	{r3, lr}
 301              	.LCFI3:
 302              		.cfi_def_cfa_offset 8
 303              		.cfi_offset 3, -8
 304              		.cfi_offset 14, -4
 122:stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim_tx);
 305              		.loc 1 122 3 view .LVU34
 306 0002 0248     		ldr	r0, .L25
 307 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 308              	.LVL3:
 123:stm32f4xx_it.c **** }
 309              		.loc 1 123 1 is_stmt 0 view .LVU35
 310 0008 08BD     		pop	{r3, pc}
 311              	.L26:
 312 000a 00BF     		.align	2
 313              	.L25:
 314 000c 00000000 		.word	htim_tx
 315              		.cfi_endproc
 316              	.LFE250:
 318              		.section	.text.TIM2_IRQHandler,"ax",%progbits
 319              		.align	1
 320              		.global	TIM2_IRQHandler
 321              		.syntax unified
 322              		.thumb
 323              		.thumb_func
 324              		.fpu fpv4-sp-d16
 326              	TIM2_IRQHandler:
 327              	.LFB251:
 124:stm32f4xx_it.c **** 
 125:stm32f4xx_it.c **** /**
 126:stm32f4xx_it.c ****   * @brief This function handles TIM2 global interrupt.
 127:stm32f4xx_it.c ****   */
 128:stm32f4xx_it.c **** void TIM2_IRQHandler(void)
 129:stm32f4xx_it.c **** {
 328              		.loc 1 129 1 is_stmt 1 view -0
 329              		.cfi_startproc
 330              		@ args = 0, pretend = 0, frame = 0
 331              		@ frame_needed = 0, uses_anonymous_args = 0
 332 0000 08B5     		push	{r3, lr}
 333              	.LCFI4:
 334              		.cfi_def_cfa_offset 8
 335              		.cfi_offset 3, -8
 336              		.cfi_offset 14, -4
 130:stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim_rx);
 337              		.loc 1 130 3 view .LVU37
 338 0002 0248     		ldr	r0, .L29
 339 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 340              	.LVL4:
 131:stm32f4xx_it.c **** }
 341              		.loc 1 131 1 is_stmt 0 view .LVU38
 342 0008 08BD     		pop	{r3, pc}
 343              	.L30:
 344 000a 00BF     		.align	2
 345              	.L29:
 346 000c 00000000 		.word	htim_rx
ARM GAS  /tmp/ccFtgh7I.s 			page 9


 347              		.cfi_endproc
 348              	.LFE251:
 350              		.text
 351              	.Letext0:
 352              		.file 2 "/opt/gcc_arm/gcc-arm-none-eabi-9-2019-q4-major/arm-none-eabi/include/machine/_default_typ
 353              		.file 3 "/opt/gcc_arm/gcc-arm-none-eabi-9-2019-q4-major/arm-none-eabi/include/sys/_stdint.h"
 354              		.file 4 "CMSIS_5/CMSIS/Core/Include/core_cm4.h"
 355              		.file 5 "cmsis-device-f4/Include/system_stm32f4xx.h"
 356              		.file 6 "cmsis-device-f4/Include/stm32f407xx.h"
 357              		.file 7 "stm32f4xx-hal-driver/Inc/stm32f4xx_hal_def.h"
 358              		.file 8 "stm32f4xx-hal-driver/Inc/stm32f4xx_hal_dma.h"
 359              		.file 9 "stm32f4xx-hal-driver/Inc/stm32f4xx_hal_tim.h"
 360              		.file 10 "stm32f4xx-hal-driver/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/ccFtgh7I.s 			page 10


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_it.c
     /tmp/ccFtgh7I.s:18     .text.NMI_Handler:0000000000000000 $t
     /tmp/ccFtgh7I.s:26     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/ccFtgh7I.s:40     .text.HardFault_Handler:0000000000000000 $t
     /tmp/ccFtgh7I.s:47     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/ccFtgh7I.s:64     .text.MemManage_Handler:0000000000000000 $t
     /tmp/ccFtgh7I.s:71     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/ccFtgh7I.s:88     .text.BusFault_Handler:0000000000000000 $t
     /tmp/ccFtgh7I.s:95     .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/ccFtgh7I.s:112    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/ccFtgh7I.s:119    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/ccFtgh7I.s:136    .text.SVC_Handler:0000000000000000 $t
     /tmp/ccFtgh7I.s:143    .text.SVC_Handler:0000000000000000 SVC_Handler
     /tmp/ccFtgh7I.s:156    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/ccFtgh7I.s:163    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/ccFtgh7I.s:176    .text.PendSV_Handler:0000000000000000 $t
     /tmp/ccFtgh7I.s:183    .text.PendSV_Handler:0000000000000000 PendSV_Handler
     /tmp/ccFtgh7I.s:196    .text.SysTick_Handler:0000000000000000 $t
     /tmp/ccFtgh7I.s:203    .text.SysTick_Handler:0000000000000000 SysTick_Handler
     /tmp/ccFtgh7I.s:223    .text.DMA1_Stream7_IRQHandler:0000000000000000 $t
     /tmp/ccFtgh7I.s:230    .text.DMA1_Stream7_IRQHandler:0000000000000000 DMA1_Stream7_IRQHandler
     /tmp/ccFtgh7I.s:250    .text.DMA1_Stream7_IRQHandler:000000000000000c $d
     /tmp/ccFtgh7I.s:255    .text.DMA2_Stream1_IRQHandler:0000000000000000 $t
     /tmp/ccFtgh7I.s:262    .text.DMA2_Stream1_IRQHandler:0000000000000000 DMA2_Stream1_IRQHandler
     /tmp/ccFtgh7I.s:282    .text.DMA2_Stream1_IRQHandler:000000000000000c $d
     /tmp/ccFtgh7I.s:287    .text.TIM8_UP_TIM13_IRQHandler:0000000000000000 $t
     /tmp/ccFtgh7I.s:294    .text.TIM8_UP_TIM13_IRQHandler:0000000000000000 TIM8_UP_TIM13_IRQHandler
     /tmp/ccFtgh7I.s:314    .text.TIM8_UP_TIM13_IRQHandler:000000000000000c $d
     /tmp/ccFtgh7I.s:319    .text.TIM2_IRQHandler:0000000000000000 $t
     /tmp/ccFtgh7I.s:326    .text.TIM2_IRQHandler:0000000000000000 TIM2_IRQHandler
     /tmp/ccFtgh7I.s:346    .text.TIM2_IRQHandler:000000000000000c $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_DMA_IRQHandler
hdma_rx
hdma_tx
HAL_TIM_IRQHandler
htim_tx
htim_rx
